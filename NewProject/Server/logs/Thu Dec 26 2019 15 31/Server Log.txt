Start LogStart Log 
 Player 2 15:50:46 $MATCH:  
 Player 1 15:50:47 $MATCH:  
 Player 1 15:50:47 $START_GAME:  
 Player 2 15:50:47 $MOVE_TO_TABLE:  
 Player 1 15:50:47 $MOVE_TO_TABLE:  
 Player 1 15:51:00 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 15:51:00 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 15:51:00 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":274,"itemCardId":275} 
 Player 2 15:51:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:51:00 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 
 Player 2 15:51:00 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[16,138,117,59,90,27,55,69,118,102,54,22,46,13,136,48,29,76,133,115,96,124,38,23,39,114,127,121,31,88,112,56,139,116,51,135,41,26,140,125,34,109,28,71,25,122,85,63,94,64,67,141,62,19,21,8,66,106,126,44,36,79,128,99,130,7,14,32,97,43,137,82,60,58,100,129,132,103,108,35,104,87,134,131,52,73,113,86,10,95,65,17,24,30,11,92,61,81,68,15,101,91,107,123,72,20,33,120,105,74,84,77,75,143,50,18,111,89,47,142,53,93,49,98,37,57,80,45,70,83,110,78,119,9,42,12,40]} 
 Player 2 15:51:01 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[240,209,225,252,257,243,239,255,214,224,222,237,219,251,227,213,215,247,248,212,232,208,238,220,256,233,235,229,217,258,245,228,211,242,218,234,207,206,250,216,236,210,253,259,244,230,246,249,231,254,221,241,226,223]} 
 Player 2 15:51:01 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[178,187,149,179,196,183,197,168,166,159,198,153,173,184,202,190,147,151,199,164,169,161,182,175,154,191,195,193,157,180,155,150,200,174,176,192,160,171,186,172,167,152,170,185,158,203,189,201,177,148,163,181,165,194,146,162,156,188]} 
 Player 2 15:51:01 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:51:01 $FLIP_CARD:  
{"cardId":188} 
 Player 2 15:51:01 $ADD_STORE_CARD:  
{"cardId":188} 
 Player 2 15:51:01 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:51:01 $FLIP_CARD:  
{"cardId":156} 
 Player 2 15:51:01 $ADD_STORE_CARD:  
{"cardId":156} 
 Player 2 15:51:01 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:51:01 $FLIP_CARD:  
{"cardId":223} 
 Player 2 15:51:01 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":223} 
 Player 2 15:51:01 $NEW_MONSTER_ON_PLACE:  
{"cardId":223,"monsterPlaceId":1} 
 Player 2 15:51:01 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:51:01 $FLIP_CARD:  
{"cardId":226} 
 Player 2 15:51:01 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":226} 
 Player 2 15:51:01 $NEW_MONSTER_ON_PLACE:  
{"cardId":226,"monsterPlaceId":2} 
 Player 2 15:51:01 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:51:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 15:51:01 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:51:01 $MOVE_CARD:  
{"moveIndex":1,"cardId":40,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:51:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":275}],"result":true,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 15:51:01 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":40,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:51:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":40} 
 Player 2 15:51:01 $FLIP_CARD:  
{"cardId":40} 
 Player 2 15:51:01 $FLIP_CARD:  
{"cardId":40} 
 Player 2 15:51:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":40} 
 Player 2 15:51:01 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:51:01 $MOVE_CARD:  
{"moveIndex":2,"cardId":12,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:51:02 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":12,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:51:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":12} 
 Player 2 15:51:02 $FLIP_CARD:  
{"cardId":12} 
 Player 2 15:51:02 $FLIP_CARD:  
{"cardId":12} 
 Player 2 15:51:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":12} 
 Player 2 15:51:02 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:51:02 $MOVE_CARD:  
{"moveIndex":3,"cardId":42,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:51:02 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":42,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:51:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":42} 
 Player 2 15:51:02 $FLIP_CARD:  
{"cardId":42} 
 Player 2 15:51:02 $FLIP_CARD:  
{"cardId":42} 
 Player 2 15:51:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":42} 
 Player 2 15:51:02 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:51:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 15:51:02 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:51:02 $MOVE_CARD:  
{"moveIndex":4,"cardId":9,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:51:02 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":9,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:51:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":9} 
 Player 2 15:51:02 $FLIP_CARD:  
{"cardId":9} 
 Player 2 15:51:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":9} 
 Player 2 15:51:02 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:51:02 $MOVE_CARD:  
{"moveIndex":5,"cardId":119,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:51:03 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":119,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:51:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":119} 
 Player 2 15:51:03 $FLIP_CARD:  
{"cardId":119} 
 Player 2 15:51:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":119} 
 Player 2 15:51:03 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:51:03 $MOVE_CARD:  
{"moveIndex":6,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:51:03 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":78,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:51:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":78} 
 Player 2 15:51:03 $FLIP_CARD:  
{"cardId":78} 
 Player 2 15:51:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":78} 
 Player 2 15:51:03 $GAME_HAS_STARTED:  
 Player 2 15:51:03 $SET_TURN:  
{"playerId":1} 
 Player 2 15:51:03 $START_TURN:  
{"playerId":1} 
 Player 2 15:51:03 $UPDATE_ACTIONS:  
 Player 1 15:51:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:51:03 $NEXT_STACK_ID:  
 Player 1 15:51:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:51:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:51:03 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 
 Player 1 15:51:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 15:51:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 15:51:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:51:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 
 Player 1 15:51:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 15:51:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 15:51:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:51:03 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 15:51:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 15:51:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 15:51:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 15:51:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:51:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:51:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 15:51:04 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 15:51:04 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 15:51:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 15:51:04 $DRAW_CARD:  
{"deckType":1} 
 Player 1 15:51:04 $MOVE_CARD:  
{"moveIndex":7,"cardId":110,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 15:51:04 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":110,"flipIfFlipped":false,"playerId":1} 
 Player 1 15:51:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":110} 
 Player 1 15:51:04 $FLIP_CARD:  
{"cardId":110} 
 Player 1 15:51:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":110} 
 Player 1 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:51:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 
 Player 1 15:51:04 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 15:51:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:51:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 
 Player 1 15:51:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 15:51:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 15:51:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 15:51:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:51:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 15:51:04 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 15:51:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 15:51:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:51:04 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 15:51:04 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 15:51:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 15:51:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:51:04 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 15:51:06 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 15:51:07 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 15:52:06 $MATCH:  
 Player 1 15:52:07 $MATCH:  
 Player 1 15:52:08 $START_GAME:  
 Player 1 15:52:08 $MOVE_TO_TABLE:  
 Player 2 15:52:08 $MOVE_TO_TABLE:  
 Player 2 15:52:15 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 15:52:15 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 15:52:15 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 
 Player 2 15:52:15 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 
 Player 1 15:52:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:52:15 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[177,175,178,198,194,195,168,163,181,152,183,176,162,186,179,189,192,156,167,157,173,188,146,147,199,190,187,171,202,184,149,201,203,200,170,185,197,153,151,196,191,159,160,164,158,165,148,172,193,150,169,166,174,155,154,180,161,182]} 
 Player 2 15:52:18 $EDEN_CHOSEN:  
{"cardId":175,"playerId":2} 
 Player 2 15:52:18 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[177,178,198,194,195,168,163,181,152,183,176,162,186,179,189,192,156,167,157,173,188,146,147,199,190,187,171,202,184,149,201,203,200,170,185,197,153,151,196,191,159,160,164,158,165,148,172,193,150,169,166,174,155,154,180,161,182]} 
 Player 2 15:52:18 $FLIP_CARD:  
{"cardId":175} 
 Player 2 15:52:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":175}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:52:19 $REGISTER_PASSIVE_ITEM:  
{"cardId":175} 
 Player 2 15:52:19 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":266,"itemCardId":175} 
 Player 2 15:52:19 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[15,116,87,19,8,64,120,62,90,60,142,13,122,11,9,25,118,44,54,80,93,75,28,126,104,18,99,27,141,139,10,33,68,46,106,124,123,136,140,138,30,96,50,107,128,95,12,91,49,109,131,31,52,70,105,115,84,66,129,20,74,65,41,94,134,112,29,40,21,42,119,100,130,111,132,32,77,51,61,72,76,89,73,103,56,59,117,53,63,101,82,23,16,79,47,137,34,127,39,108,92,97,55,67,7,24,85,43,14,83,143,26,22,36,125,58,48,69,57,121,102,113,37,135,38,88,71,81,133,98,35,17,45,114,86,110,78]} 
 Player 2 15:52:19 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[206,249,218,225,240,232,252,222,226,251,257,259,208,207,236,250,253,245,248,229,219,255,244,241,221,213,223,238,235,258,239,214,209,256,210,233,220,212,254,224,234,227,228,231,216,247,237,242,217,230,246,211,215,243]} 
 Player 2 15:52:19 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[180,186,185,177,191,164,159,183,189,148,192,156,199,168,149,195,196,169,179,152,151,187,184,181,193,146,172,155,176,197,174,171,201,153,163,190,161,162,203,200,160,158,150,173,157,202,154,167,198,178,166,170,188,147,182,194,165]} 
 Player 2 15:52:19 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:52:19 $FLIP_CARD:  
{"cardId":165} 
 Player 2 15:52:19 $ADD_STORE_CARD:  
{"cardId":165} 
 Player 2 15:52:19 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:52:19 $FLIP_CARD:  
{"cardId":194} 
 Player 2 15:52:19 $ADD_STORE_CARD:  
{"cardId":194} 
 Player 2 15:52:19 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:52:19 $FLIP_CARD:  
{"cardId":243} 
 Player 2 15:52:19 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":243} 
 Player 2 15:52:19 $NEW_MONSTER_ON_PLACE:  
{"cardId":243,"monsterPlaceId":1} 
 Player 2 15:52:19 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:52:19 $FLIP_CARD:  
{"cardId":215} 
 Player 2 15:52:19 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":215} 
 Player 2 15:52:19 $NEW_MONSTER_ON_PLACE:  
{"cardId":215,"monsterPlaceId":2} 
 Player 2 15:52:19 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:52:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 15:52:19 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:52:19 $MOVE_CARD:  
{"moveIndex":1,"cardId":78,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:52:19 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":78,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:52:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":78} 
 Player 2 15:52:19 $FLIP_CARD:  
{"cardId":78} 
 Player 2 15:52:19 $FLIP_CARD:  
{"cardId":78} 
 Player 2 15:52:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":78} 
 Player 2 15:52:19 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:52:19 $MOVE_CARD:  
{"moveIndex":2,"cardId":110,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:52:20 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":110,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:52:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":110} 
 Player 2 15:52:20 $FLIP_CARD:  
{"cardId":110} 
 Player 2 15:52:20 $FLIP_CARD:  
{"cardId":110} 
 Player 2 15:52:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":110} 
 Player 2 15:52:20 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:52:20 $MOVE_CARD:  
{"moveIndex":3,"cardId":86,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:52:20 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":86,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:52:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":86} 
 Player 2 15:52:20 $FLIP_CARD:  
{"cardId":86} 
 Player 2 15:52:20 $FLIP_CARD:  
{"cardId":86} 
 Player 2 15:52:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":86} 
 Player 2 15:52:20 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:52:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 15:52:20 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:52:20 $MOVE_CARD:  
{"moveIndex":4,"cardId":114,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:52:20 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":114,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:52:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":114} 
 Player 2 15:52:20 $FLIP_CARD:  
{"cardId":114} 
 Player 2 15:52:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":114} 
 Player 2 15:52:21 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:52:21 $MOVE_CARD:  
{"moveIndex":5,"cardId":45,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:52:21 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":45,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:52:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":45} 
 Player 2 15:52:21 $FLIP_CARD:  
{"cardId":45} 
 Player 2 15:52:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":45} 
 Player 2 15:52:21 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:52:21 $MOVE_CARD:  
{"moveIndex":6,"cardId":17,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:52:21 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":17,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:52:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":17} 
 Player 2 15:52:21 $FLIP_CARD:  
{"cardId":17} 
 Player 2 15:52:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":17} 
 Player 2 15:52:21 $GAME_HAS_STARTED:  
 Player 2 15:52:21 $SET_TURN:  
{"playerId":2} 
 Player 2 15:52:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:52:21 $NEXT_STACK_ID:  
 Player 2 15:52:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:52:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:52:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 15:52:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 15:52:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:52:21 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 15:52:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:52:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 15:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 15:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:52:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:52:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 15:52:22 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:52:22 $MOVE_CARD:  
{"moveIndex":7,"cardId":35,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:52:22 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":35,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:52:22 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":35} 
 Player 2 15:52:22 $FLIP_CARD:  
{"cardId":35} 
 Player 2 15:52:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":35} 
 Player 2 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:52:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:52:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 15:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:52:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:52:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 15:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 15:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 15:52:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:52:23 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 15:52:23 $UPDATE_ACTIONS:  
 Player 2 15:52:24 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 15:52:25 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 15:52:54 $MATCH:  
 Player 1 15:52:55 $MATCH:  
 Player 1 15:52:56 $START_GAME:  
 Player 1 15:52:56 $MOVE_TO_TABLE:  
 Player 2 15:52:56 $MOVE_TO_TABLE:  
 Player 1 15:53:03 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 15:53:03 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 15:53:03 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 
 Player 1 15:53:03 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[165,194,176,177,183,182,191,147,181,163,151,148,196,180,166,161,162,192,149,184,155,146,171,158,154,198,150,179,157,178,200,189,190,203,174,195,187,160,153,170,159,186,201,167,156,164,185,168,152,173,169,175,202,193,188,197,199,172]} 
 Player 1 15:53:06 $EDEN_CHOSEN:  
{"cardId":194,"playerId":2} 
 Player 2 15:53:06 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[165,176,177,183,182,191,147,181,163,151,148,196,180,166,161,162,192,149,184,155,146,171,158,154,198,150,179,157,178,200,189,190,203,174,195,187,160,153,170,159,186,201,167,156,164,185,168,152,173,169,175,202,193,188,197,199,172]} 
 Player 2 15:53:06 $FLIP_CARD:  
{"cardId":194} 
 Player 2 15:53:06 $REGISTER_PASSIVE_ITEM:  
{"cardId":194} 
 Player 2 15:53:06 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":266,"itemCardId":194} 
 Player 2 15:53:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:53:06 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":272,"itemCardId":273} 
 Player 2 15:53:06 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[56,15,66,108,75,27,134,105,96,102,36,123,25,135,40,53,62,103,76,60,30,54,97,65,141,95,132,140,39,118,8,93,28,68,14,63,131,21,116,115,74,121,99,89,139,50,16,104,80,17,128,109,23,112,133,59,107,19,137,43,126,48,143,85,38,24,122,46,94,120,114,73,100,33,29,42,13,67,142,32,78,64,117,82,92,34,26,18,136,79,9,69,41,101,72,10,81,124,37,138,58,111,31,70,110,129,127,83,11,45,113,22,20,86,87,88,91,57,44,61,7,125,77,12,106,55,52,71,51,35,90,119,84,47,130,98,49]} 
 Player 2 15:53:06 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[258,230,257,216,240,245,224,234,227,211,247,208,210,251,222,215,221,218,239,255,233,228,209,232,212,242,223,256,207,235,231,220,248,238,226,214,250,237,243,249,252,236,206,246,259,229,219,217,213,253,241,225,244,254]} 
 Player 2 15:53:06 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[164,169,170,176,195,175,180,186,191,167,188,189,147,177,187,148,182,149,185,174,193,198,150,200,151,157,161,203,196,179,178,146,163,154,199,156,168,190,181,158,201,162,152,166,153,202,192,172,155,173,197,184,171,160,165,159,183]} 
 Player 2 15:53:06 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:53:06 $FLIP_CARD:  
{"cardId":183} 
 Player 2 15:53:06 $ADD_STORE_CARD:  
{"cardId":183} 
 Player 2 15:53:06 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:53:06 $FLIP_CARD:  
{"cardId":159} 
 Player 2 15:53:06 $ADD_STORE_CARD:  
{"cardId":159} 
 Player 2 15:53:06 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:53:06 $FLIP_CARD:  
{"cardId":254} 
 Player 2 15:53:06 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":254} 
 Player 2 15:53:06 $NEW_MONSTER_ON_PLACE:  
{"cardId":254,"monsterPlaceId":1} 
 Player 2 15:53:06 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:53:06 $FLIP_CARD:  
{"cardId":244} 
 Player 2 15:53:06 $REGISTER_PASSIVE_ITEM:  
{"cardId":244} 
 Player 2 15:53:06 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":244} 
 Player 2 15:53:06 $NEW_MONSTER_ON_PLACE:  
{"cardId":244,"monsterPlaceId":2} 
 Player 2 15:53:07 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:53:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 15:53:07 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:53:07 $MOVE_CARD:  
{"moveIndex":1,"cardId":49,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:53:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 15:53:07 $NEXT_STACK_ID:  
 Player 1 15:53:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:53:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil effect GainStats<GainStats>"} 
 Player 1 15:53:07 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":194,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":194,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:53:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add ActivatePassiveEffect 1 "}} 
 Player 1 15:53:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil effect GainStats<GainStats>"} 
 Player 1 15:53:07 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 15:53:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil effect GainStats<GainStats>"} 
 Player 1 15:53:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":194,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":194,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:53:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding ActivatePassiveEffect 1"},"childOfId":0} 
 Player 1 15:53:07 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 15:53:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Resolve ActivatePassiveEffect 1 "}} 
 Player 1 15:53:07 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":194,"particleType":6} 
 Player 2 15:53:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:53:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:53:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil "} 
 Player 2 15:53:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil "} 
 Player 1 15:53:07 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":49,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:53:07 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":49} 
 Player 2 15:53:07 $FLIP_CARD:  
{"cardId":49} 
 Player 2 15:53:07 $FLIP_CARD:  
{"cardId":49} 
 Player 2 15:53:07 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":49} 
 Player 2 15:53:07 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:53:07 $MOVE_CARD:  
{"moveIndex":2,"cardId":98,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:53:07 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":98,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:53:07 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":98} 
 Player 2 15:53:07 $FLIP_CARD:  
{"cardId":98} 
 Player 2 15:53:07 $FLIP_CARD:  
{"cardId":98} 
 Player 2 15:53:07 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":98} 
 Player 2 15:53:07 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:53:07 $MOVE_CARD:  
{"moveIndex":3,"cardId":130,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:53:08 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":130,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:53:08 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":130} 
 Player 2 15:53:08 $FLIP_CARD:  
{"cardId":130} 
 Player 2 15:53:08 $FLIP_CARD:  
{"cardId":130} 
 Player 2 15:53:08 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":130} 
 Player 2 15:53:08 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:53:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 15:53:08 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:53:08 $MOVE_CARD:  
{"moveIndex":4,"cardId":47,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:53:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":194,"particleType":6} 
 Player 1 15:53:08 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  
{"playerId":1,"bonusToGain":1,"isTemp":false} 
 Player 1 15:53:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 15:53:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil effect GainStats<GainStats>"} 
 Player 1 15:53:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":194,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:53:08 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 15:53:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Remove After Resolve ActivatePassiveEffect 1  "}} 
 Player 1 15:53:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:53:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":194,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 15:53:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Response Remove After Resolve ActivatePassiveEffect 1"},"childOfId":3} 
 Player 1 15:53:08 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 15:53:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Stack Was Emptied "}} 
 Player 1 15:53:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:53:08 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 15:53:08 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 
 Player 1 15:53:08 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":47,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:53:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil "} 
 Player 2 15:53:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil "} 
 Player 2 15:53:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil "} 
 Player 2 15:53:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Synthoil "} 
 Player 2 15:53:09 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":47} 
 Player 2 15:53:09 $FLIP_CARD:  
{"cardId":47} 
 Player 2 15:53:09 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":47} 
 Player 2 15:53:09 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:53:09 $MOVE_CARD:  
{"moveIndex":5,"cardId":84,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:53:09 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":84,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:53:09 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":84} 
 Player 2 15:53:09 $FLIP_CARD:  
{"cardId":84} 
 Player 2 15:53:09 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":84} 
 Player 2 15:53:09 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:53:09 $MOVE_CARD:  
{"moveIndex":6,"cardId":119,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:53:09 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":119,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:53:09 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":119} 
 Player 2 15:53:09 $FLIP_CARD:  
{"cardId":119} 
 Player 2 15:53:09 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":119} 
 Player 2 15:53:09 $GAME_HAS_STARTED:  
 Player 2 15:53:09 $SET_TURN:  
{"playerId":2} 
 Player 2 15:53:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:53:09 $NEXT_STACK_ID:  
 Player 2 15:53:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:53:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:53:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 15:53:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 2 "}} 
 Player 2 15:53:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:53:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 15:53:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 2"},"childOfId":0} 
 Player 2 15:53:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 15:53:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 15:53:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 15:53:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:53:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:53:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 1 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 15:53:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 2 "}} 
 Player 2 15:53:10 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:53:10 $MOVE_CARD:  
{"moveIndex":7,"cardId":90,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:53:10 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":90,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:53:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":90} 
 Player 2 15:53:10 $FLIP_CARD:  
{"cardId":90} 
 Player 2 15:53:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":90} 
 Player 2 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:53:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 15:53:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 2  "}} 
 Player 2 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:53:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 15:53:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":5} 
 Player 2 15:53:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 15:53:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:53:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:53:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 15:53:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 15:53:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 15:53:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 15:53:10 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 15:53:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 15:53:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:53:11 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 15:53:11 $UPDATE_ACTIONS:  
 Player 1 15:53:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 15:53:12 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 15:53:13 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 15:53:59 $NEXT_STACK_ID:  
 Player 2 15:53:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:53:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 2 15:53:59 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 15:53:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 3 "}} 
 Player 2 15:53:59 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":84} 
 Player 2 15:53:59 $MOVE_CARD:  
{"moveIndex":8,"cardId":84,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 15:53:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:53:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:54:00 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":84,"flipIfFlipped":true,"playerId":2} 
 Player 2 15:54:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:00 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 2 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 2 15:54:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 15:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":10} 
 Player 2 15:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 15:54:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:00 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 2 15:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 15:54:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:54:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 1 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 1 15:54:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 15:54:00 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 2 15:54:00 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 15:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 2 15:54:00 $NEXT_STACK_ID:  
 Player 2 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 2 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 2 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 2 15:54:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"stackEffectToLock":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 15:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Add RollDiceStackEffect 4 "}} 
 Player 2 15:54:00 $ROLL_DICE:  
{"playerId":2} 
 Player 1 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 1 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 1 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 1 15:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 2 15:54:02 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 
 Player 2 15:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 rolled 3"} 
 Player 2 15:54:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:02 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 15:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 rolled 3"} 
 Player 2 15:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 rolled 3"} 
 Player 2 15:54:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"stackEffectToLock":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 15:54:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Adding RollDiceStackEffect 4"},"childOfId":15} 
 Player 2 15:54:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 15:54:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:02 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 2 15:54:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 15:54:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:54:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 15:54:02 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 2 15:54:03 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 2 15:54:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Resolve RollDiceStackEffect 4 "}} 
 Player 2 15:54:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 
 Player 2 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 rolled 3"} 
 Player 2 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 rolled 3"} 
 Player 2 15:54:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"stackEffectToLock":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 15:54:03 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 2 15:54:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Remove After Resolve RollDiceStackEffect 4  "}} 
 Player 2 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 2 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 2 15:54:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":272,"stackEffectToLock":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 15:54:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Remove After Resolve RollDiceStackEffect 4"},"childOfId":20} 
 Player 2 15:54:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 15:54:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:54:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 roll a dice"} 
 Player 1 15:54:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 15:54:03 $ACTION_MASSAGE_REMOVE:  
{"id":22} 
 Player 2 15:54:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 15:54:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:03 $ACTION_MASSAGE_REMOVE:  
{"id":23} 
 Player 2 15:54:03 $ACTION_MASSAGE_REMOVE:  
{"id":21} 
 Player 2 15:54:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 2 15:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage"} 
 Player 2 15:54:03 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":84,"particleType":6} 
 Player 2 15:54:05 $DISABLE_PARTICLE_EFFECT:  
{"cardId":84,"particleType":6} 
 Player 2 15:54:05 $PLAYER_GET_HIT:  
{"playerId":1,"damage":3,"damageDealerId":272} 
 Player 2 15:54:05 $NEXT_STACK_ID:  
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage"} 
 Player 2 15:54:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die"} 
 Player 2 15:54:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"playerToDieCardId":266,"stackEffectType":15,"killerId":272}} 
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die"} 
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die"} 
 Player 2 15:54:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},{"entityId":5,"creatorCardId":266,"playerToDieCardId":266,"stackEffectType":15,"killerId":272}]} 
 Player 2 15:54:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 15:54:05 $PLAYER_GET_HIT:  
{"playerId":2,"damage":3,"damageDealerId":272} 
 Player 2 15:54:05 $NEXT_STACK_ID:  
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die"} 
 Player 2 15:54:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 2 15:54:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":272}} 
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 2 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 2 15:54:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8},{"entityId":5,"creatorCardId":266,"playerToDieCardId":266,"stackEffectType":15,"killerId":272},{"entityId":6,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":272}]} 
 Player 2 15:54:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 15:54:05 $MOVE_CARD:  
{"moveIndex":9,"cardId":84,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 1 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune "} 
 Player 1 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 
 Player 1 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 
 Player 1 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 
 Player 1 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 
 Player 1 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 1 is about to die"} 
 Player 1 15:54:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 1 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 2 is about to die"} 
 Player 2 15:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":20} 
 Player 1 15:54:06 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":84,"flipIfFlipped":true,"playerId":2} 
 Player 2 15:54:06 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":84} 
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune: DealDamage \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 2 15:54:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 15:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die"} 
 Player 2 15:54:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":272,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":84,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 15:54:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":27} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 15:54:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:54:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Blank Rune  \n2:Player 1 is about to die \n3:Player 2 is about to die"} 
 Player 1 15:54:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 15:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":28} 
 Player 2 15:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":26} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve PlayerDeath 6 "}} 
 Player 2 15:54:06 $NEXT_STACK_ID:  
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die"} 
 Player 2 15:54:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 15:54:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":272,"playerToPayCardId":272,"stackEffectType":16}} 
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 15:54:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":266,"playerToDieCardId":266,"stackEffectType":15,"killerId":272},{"entityId":6,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":272},{"entityId":7,"creatorCardId":272,"playerToPayCardId":272,"stackEffectType":16}]} 
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 2 15:54:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":272}} 
 Player 2 15:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":29} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve PlayerDeath 6  "}} 
 Player 2 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 15:54:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":272,"playerToDieCardId":272,"stackEffectType":15,"killerId":272}} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve PlayerDeath 6"},"childOfId":30} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 15:54:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 15:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":32} 
 Player 2 15:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 15:54:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 15:54:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 15:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 
 Player 1 15:54:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 15:54:07 $ACTION_MASSAGE_REMOVE:  
{"id":33} 
 Player 2 15:54:07 $ACTION_MASSAGE_REMOVE:  
{"id":31} 
 Player 2 15:54:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve PlayerDeathPenalties 7 "}} 
 Player 2 15:54:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Player 2 pays Penalties"}} 
 Player 2 15:54:09 $ACTION_MASSAGE_REMOVE:  
{"id":25} 
 Player 2 15:54:09 $ACTION_MASSAGE_REMOVE:  
{"id":30} 
 Player 2 15:57:18 $MATCH:  
 Player 1 15:57:18 $MATCH:  
 Player 1 15:57:19 $START_GAME:  
 Player 1 15:57:19 $MOVE_TO_TABLE:  
 Player 2 15:57:19 $MOVE_TO_TABLE:  
 Player 2 15:57:27 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 15:57:27 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 15:57:27 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":264,"itemCardId":267} 
 Player 2 15:57:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:57:27 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":268,"itemCardId":269} 
 Player 2 15:57:27 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[111,62,10,85,112,100,48,114,12,24,38,60,103,28,39,105,65,74,36,41,82,22,33,139,16,86,133,75,104,107,79,17,11,93,92,126,89,73,102,87,128,52,120,30,96,51,69,53,31,91,37,118,110,64,140,34,26,122,27,80,115,132,32,113,77,123,124,143,42,40,129,125,84,71,56,21,45,116,54,23,50,49,106,7,68,72,94,14,66,95,135,76,109,97,61,101,142,25,108,46,20,119,15,121,130,19,141,63,8,13,88,138,43,59,78,136,137,98,67,55,9,29,47,70,90,81,35,134,57,99,58,127,117,83,44,18,131]} 
 Player 2 15:57:27 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[243,214,209,249,210,212,227,236,207,253,240,218,211,245,259,224,241,257,226,235,222,239,247,206,229,252,256,250,251,234,255,237,220,248,221,225,215,246,244,231,232,216,230,238,254,258,233,213,219,242,217,208,223,228]} 
 Player 2 15:57:27 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[180,156,157,190,178,179,161,173,167,165,176,192,193,199,154,172,201,195,185,203,151,189,177,196,147,186,194,163,184,174,160,197,198,187,159,175,148,155,188,146,168,162,183,169,158,152,166,191,200,150,182,171,170,202,181,149,164,153]} 
 Player 2 15:57:27 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:57:27 $FLIP_CARD:  
{"cardId":153} 
 Player 2 15:57:27 $ADD_STORE_CARD:  
{"cardId":153} 
 Player 2 15:57:27 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:57:27 $FLIP_CARD:  
{"cardId":164} 
 Player 2 15:57:27 $ADD_STORE_CARD:  
{"cardId":164} 
 Player 2 15:57:27 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:57:27 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":228} 
 Player 2 15:57:27 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:57:27 $FLIP_CARD:  
{"cardId":223} 
 Player 2 15:57:27 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":223} 
 Player 2 15:57:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":223,"monsterPlaceId":1} 
 Player 2 15:57:27 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:57:27 $FLIP_CARD:  
{"cardId":208} 
 Player 2 15:57:27 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":208} 
 Player 2 15:57:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":208,"monsterPlaceId":2} 
 Player 2 15:57:27 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:57:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 15:57:27 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:57:27 $MOVE_CARD:  
{"moveIndex":1,"cardId":131,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:57:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":267}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 15:57:28 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":131,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:57:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":131} 
 Player 2 15:57:28 $FLIP_CARD:  
{"cardId":131} 
 Player 2 15:57:28 $FLIP_CARD:  
{"cardId":131} 
 Player 2 15:57:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":131} 
 Player 2 15:57:28 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:57:28 $MOVE_CARD:  
{"moveIndex":2,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:57:28 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":18,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:57:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":18} 
 Player 2 15:57:28 $FLIP_CARD:  
{"cardId":18} 
 Player 2 15:57:28 $FLIP_CARD:  
{"cardId":18} 
 Player 2 15:57:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":18} 
 Player 2 15:57:28 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:57:28 $MOVE_CARD:  
{"moveIndex":3,"cardId":44,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:57:28 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":44,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:57:29 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":44} 
 Player 2 15:57:29 $FLIP_CARD:  
{"cardId":44} 
 Player 2 15:57:29 $FLIP_CARD:  
{"cardId":44} 
 Player 2 15:57:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":44} 
 Player 2 15:57:29 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:57:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 15:57:29 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:57:29 $MOVE_CARD:  
{"moveIndex":4,"cardId":83,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:57:29 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":83,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:57:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":83} 
 Player 2 15:57:29 $FLIP_CARD:  
{"cardId":83} 
 Player 2 15:57:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":83} 
 Player 2 15:57:29 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:57:29 $MOVE_CARD:  
{"moveIndex":5,"cardId":117,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:57:29 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":117,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:57:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":117} 
 Player 2 15:57:29 $FLIP_CARD:  
{"cardId":117} 
 Player 2 15:57:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":117} 
 Player 2 15:57:30 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:57:30 $MOVE_CARD:  
{"moveIndex":6,"cardId":127,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:57:30 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":127,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:57:30 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":127} 
 Player 2 15:57:30 $FLIP_CARD:  
{"cardId":127} 
 Player 2 15:57:30 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":127} 
 Player 2 15:57:30 $GAME_HAS_STARTED:  
 Player 2 15:57:30 $SET_TURN:  
{"playerId":1} 
 Player 2 15:57:30 $START_TURN:  
{"playerId":1} 
 Player 2 15:57:30 $UPDATE_ACTIONS:  
 Player 1 15:57:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:57:30 $NEXT_STACK_ID:  
 Player 1 15:57:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:57:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:57:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 15:57:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 15:57:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:57:30 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 15:57:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:57:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 15:57:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 15:57:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 15:57:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:57:30 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 15:57:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 15:57:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 15:57:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 15:57:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:57:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:57:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:57:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:57:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 15:57:30 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 15:57:30 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 15:57:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 15:57:30 $DRAW_CARD:  
{"deckType":1} 
 Player 1 15:57:30 $MOVE_CARD:  
{"moveIndex":7,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 15:57:31 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":58,"flipIfFlipped":false,"playerId":1} 
 Player 1 15:57:31 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":58} 
 Player 1 15:57:31 $FLIP_CARD:  
{"cardId":58} 
 Player 1 15:57:31 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":58} 
 Player 1 15:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:57:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 15:57:31 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 15:57:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 15:57:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:57:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 1 15:57:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 15:57:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 15:57:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 15:57:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 15:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:57:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:57:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 15:57:31 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 15:57:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 15:57:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:57:31 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 15:57:31 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 15:57:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 15:57:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:57:31 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 15:57:33 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 15:57:34 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 15:58:52 $MATCH:  
 Player 1 15:58:53 $MATCH:  
 Player 1 15:58:53 $START_GAME:  
 Player 2 15:58:53 $MOVE_TO_TABLE:  
 Player 1 15:58:53 $MOVE_TO_TABLE:  
 Player 1 15:59:01 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 15:59:01 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 15:59:01 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":260,"itemCardId":261} 
 Player 2 15:59:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:59:01 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 
 Player 2 15:59:01 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[88,68,136,72,120,92,9,38,34,81,62,104,98,112,139,71,44,12,101,57,61,56,113,95,20,23,115,114,143,39,124,142,83,8,84,47,42,131,10,75,7,127,86,108,106,26,122,78,125,49,19,13,102,138,53,40,99,73,105,64,96,22,17,37,29,134,41,31,55,140,60,91,24,59,43,50,33,14,11,16,94,70,74,130,116,132,129,76,85,97,103,45,111,52,135,89,110,93,90,36,80,69,32,100,28,25,66,123,141,133,48,63,58,117,35,21,109,18,107,30,46,51,82,15,77,67,119,65,27,121,128,79,54,137,126,87,118]} 
 Player 2 15:59:01 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[254,255,249,259,211,235,234,251,220,222,256,209,252,218,243,248,221,228,217,247,230,232,244,214,223,231,212,213,219,226,210,233,245,225,229,240,208,258,236,250,242,224,239,216,237,227,253,257,207,238,215,206,246,241]} 
 Player 2 15:59:01 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[201,187,163,154,180,159,171,153,179,170,183,147,166,175,156,146,176,167,195,182,198,202,165,191,168,173,194,150,184,185,203,192,172,200,152,193,169,189,190,155,178,177,197,161,164,158,157,149,174,199,196,148,181,151,186,160,188,162]} 
 Player 2 15:59:01 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:59:01 $FLIP_CARD:  
{"cardId":162} 
 Player 2 15:59:01 $ADD_STORE_CARD:  
{"cardId":162} 
 Player 2 15:59:01 $DRAW_CARD:  
{"deckType":5} 
 Player 2 15:59:01 $FLIP_CARD:  
{"cardId":188} 
 Player 2 15:59:01 $ADD_STORE_CARD:  
{"cardId":188} 
 Player 2 15:59:01 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:59:01 $FLIP_CARD:  
{"cardId":241} 
 Player 2 15:59:01 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":241} 
 Player 2 15:59:01 $NEW_MONSTER_ON_PLACE:  
{"cardId":241,"monsterPlaceId":1} 
 Player 2 15:59:01 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:59:01 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":246} 
 Player 2 15:59:01 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:59:01 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":206} 
 Player 2 15:59:01 $DRAW_CARD:  
{"deckType":2} 
 Player 2 15:59:01 $FLIP_CARD:  
{"cardId":215} 
 Player 2 15:59:01 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":215} 
 Player 2 15:59:01 $NEW_MONSTER_ON_PLACE:  
{"cardId":215,"monsterPlaceId":2} 
 Player 2 15:59:01 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:59:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 15:59:01 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:59:01 $MOVE_CARD:  
{"moveIndex":1,"cardId":118,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:59:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":261}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 15:59:02 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":118,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:59:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":118} 
 Player 2 15:59:02 $FLIP_CARD:  
{"cardId":118} 
 Player 2 15:59:02 $FLIP_CARD:  
{"cardId":118} 
 Player 2 15:59:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":118} 
 Player 2 15:59:02 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:59:02 $MOVE_CARD:  
{"moveIndex":2,"cardId":87,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:59:02 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":87,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:59:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":87} 
 Player 2 15:59:02 $FLIP_CARD:  
{"cardId":87} 
 Player 2 15:59:02 $FLIP_CARD:  
{"cardId":87} 
 Player 2 15:59:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":87} 
 Player 2 15:59:02 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:59:02 $MOVE_CARD:  
{"moveIndex":3,"cardId":126,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:59:03 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":126,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:59:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":126} 
 Player 2 15:59:03 $FLIP_CARD:  
{"cardId":126} 
 Player 2 15:59:03 $FLIP_CARD:  
{"cardId":126} 
 Player 2 15:59:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":126} 
 Player 2 15:59:03 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 15:59:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 15:59:03 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:59:03 $MOVE_CARD:  
{"moveIndex":4,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:59:03 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":137,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:59:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":137} 
 Player 2 15:59:03 $FLIP_CARD:  
{"cardId":137} 
 Player 2 15:59:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":137} 
 Player 2 15:59:03 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:59:03 $MOVE_CARD:  
{"moveIndex":5,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:59:04 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":54,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:59:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":54} 
 Player 2 15:59:04 $FLIP_CARD:  
{"cardId":54} 
 Player 2 15:59:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":54} 
 Player 2 15:59:04 $DRAW_CARD:  
{"deckType":1} 
 Player 2 15:59:04 $MOVE_CARD:  
{"moveIndex":6,"cardId":79,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 15:59:04 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":79,"flipIfFlipped":false,"playerId":2} 
 Player 2 15:59:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":79} 
 Player 2 15:59:04 $FLIP_CARD:  
{"cardId":79} 
 Player 2 15:59:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":79} 
 Player 2 15:59:04 $GAME_HAS_STARTED:  
 Player 2 15:59:04 $SET_TURN:  
{"playerId":1} 
 Player 2 15:59:04 $START_TURN:  
{"playerId":1} 
 Player 2 15:59:04 $UPDATE_ACTIONS:  
 Player 1 15:59:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:59:04 $NEXT_STACK_ID:  
 Player 1 15:59:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:59:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:59:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 15:59:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 15:59:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:59:04 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 15:59:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:59:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 15:59:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 15:59:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 15:59:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:59:04 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 15:59:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 15:59:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 15:59:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 15:59:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:59:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 15:59:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:59:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:59:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 15:59:04 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 15:59:04 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 15:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 15:59:05 $DRAW_CARD:  
{"deckType":1} 
 Player 1 15:59:05 $MOVE_CARD:  
{"moveIndex":7,"cardId":128,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 15:59:05 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":128,"flipIfFlipped":false,"playerId":1} 
 Player 1 15:59:05 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":128} 
 Player 1 15:59:05 $FLIP_CARD:  
{"cardId":128} 
 Player 1 15:59:05 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":128} 
 Player 1 15:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 15:59:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 15:59:05 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 15:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 15:59:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:59:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 15:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 15:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 15:59:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 15:59:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 15:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:59:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 15:59:05 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 15:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 15:59:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 15:59:05 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 15:59:05 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 15:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 15:59:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 15:59:05 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 15:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 15:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:00:00 $MATCH:  
 Player 1 16:00:01 $MATCH:  
 Player 1 16:00:01 $START_GAME:  
 Player 1 16:00:01 $MOVE_TO_TABLE:  
 Player 2 16:00:01 $MOVE_TO_TABLE:  
 Player 1 16:00:08 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:00:08 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 16:00:08 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":272,"itemCardId":273} 
 Player 2 16:00:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:00:08 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":268,"itemCardId":269} 
 Player 2 16:00:08 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[93,106,86,97,102,85,30,80,130,7,40,123,88,62,44,126,32,59,113,51,21,20,120,14,74,101,13,34,47,29,121,76,70,11,41,91,71,37,127,118,132,128,115,137,43,114,57,60,77,19,61,63,58,52,90,67,119,72,82,78,24,73,98,124,36,107,50,94,122,45,69,10,100,35,103,54,141,33,136,22,89,105,125,56,12,140,79,46,131,9,92,8,139,96,53,117,87,27,55,39,99,28,38,143,64,48,116,84,133,42,49,142,23,81,111,68,83,135,112,16,15,104,109,129,138,95,31,108,66,134,17,65,25,26,110,18,75]} 
 Player 2 16:00:08 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[250,237,226,232,225,208,211,220,257,217,246,244,248,235,239,210,213,251,224,214,219,236,228,242,215,206,252,256,222,247,216,238,249,227,221,212,259,255,254,258,229,231,218,241,253,207,243,209,234,245,230,240,223,233]} 
 Player 2 16:00:08 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[164,151,196,187,170,148,153,163,190,188,197,180,184,183,201,146,202,185,176,195,154,150,172,166,186,178,158,182,191,200,167,157,173,168,161,192,194,152,171,203,159,175,165,149,189,160,199,174,181,169,193,155,179,147,162,156,198,177]} 
 Player 2 16:00:08 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:00:08 $FLIP_CARD:  
{"cardId":177} 
 Player 2 16:00:08 $ADD_STORE_CARD:  
{"cardId":177} 
 Player 2 16:00:08 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:00:08 $FLIP_CARD:  
{"cardId":198} 
 Player 2 16:00:08 $ADD_STORE_CARD:  
{"cardId":198} 
 Player 2 16:00:08 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:00:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":233} 
 Player 2 16:00:08 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:00:08 $FLIP_CARD:  
{"cardId":223} 
 Player 2 16:00:08 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":223} 
 Player 2 16:00:08 $NEW_MONSTER_ON_PLACE:  
{"cardId":223,"monsterPlaceId":1} 
 Player 2 16:00:08 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:00:08 $FLIP_CARD:  
{"cardId":240} 
 Player 2 16:00:08 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":240} 
 Player 2 16:00:08 $NEW_MONSTER_ON_PLACE:  
{"cardId":240,"monsterPlaceId":2} 
 Player 2 16:00:09 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:00:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:00:09 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:00:09 $MOVE_CARD:  
{"moveIndex":1,"cardId":75,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:00:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:00:09 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":75,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:00:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":75} 
 Player 2 16:00:09 $FLIP_CARD:  
{"cardId":75} 
 Player 2 16:00:09 $FLIP_CARD:  
{"cardId":75} 
 Player 2 16:00:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":75} 
 Player 2 16:00:09 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:00:09 $MOVE_CARD:  
{"moveIndex":2,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:00:09 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":18,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:00:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":18} 
 Player 2 16:00:09 $FLIP_CARD:  
{"cardId":18} 
 Player 2 16:00:09 $FLIP_CARD:  
{"cardId":18} 
 Player 2 16:00:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":18} 
 Player 2 16:00:09 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:00:09 $MOVE_CARD:  
{"moveIndex":3,"cardId":110,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:00:10 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":110,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:00:10 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":110} 
 Player 2 16:00:10 $FLIP_CARD:  
{"cardId":110} 
 Player 2 16:00:10 $FLIP_CARD:  
{"cardId":110} 
 Player 2 16:00:10 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":110} 
 Player 2 16:00:10 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:00:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:00:10 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:00:10 $MOVE_CARD:  
{"moveIndex":4,"cardId":26,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:00:10 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":26,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:00:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":26} 
 Player 2 16:00:10 $FLIP_CARD:  
{"cardId":26} 
 Player 2 16:00:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":26} 
 Player 2 16:00:10 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:00:10 $MOVE_CARD:  
{"moveIndex":5,"cardId":25,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:00:11 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":25,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:00:11 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":25} 
 Player 2 16:00:11 $FLIP_CARD:  
{"cardId":25} 
 Player 2 16:00:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":25} 
 Player 2 16:00:11 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:00:11 $MOVE_CARD:  
{"moveIndex":6,"cardId":65,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:00:11 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":65,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:00:11 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":65} 
 Player 2 16:00:11 $FLIP_CARD:  
{"cardId":65} 
 Player 2 16:00:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":65} 
 Player 2 16:00:11 $GAME_HAS_STARTED:  
 Player 2 16:00:11 $SET_TURN:  
{"playerId":1} 
 Player 2 16:00:11 $START_TURN:  
{"playerId":1} 
 Player 2 16:00:11 $UPDATE_ACTIONS:  
 Player 1 16:00:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:00:11 $NEXT_STACK_ID:  
 Player 1 16:00:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:00:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:00:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 1 16:00:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 16:00:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:00:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 16:00:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:00:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 1 16:00:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 16:00:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 16:00:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:00:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 16:00:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 16:00:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:00:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:00:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:00:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:00:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:00:12 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 16:00:12 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 16:00:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 16:00:12 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:00:12 $MOVE_CARD:  
{"moveIndex":7,"cardId":17,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:00:12 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":17,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:00:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":17} 
 Player 1 16:00:12 $FLIP_CARD:  
{"cardId":17} 
 Player 1 16:00:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":17} 
 Player 1 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:00:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 1 16:00:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 16:00:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:00:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 1 16:00:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 16:00:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 16:00:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:00:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:00:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:00:12 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 16:00:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 16:00:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:00:12 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 16:00:12 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 16:00:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 16:00:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:00:12 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:00:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 16:00:15 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:02:26 $MATCH:  
 Player 1 16:02:27 $MATCH:  
 Player 1 16:02:27 $START_GAME:  
 Player 1 16:02:27 $MOVE_TO_TABLE:  
 Player 2 16:02:27 $MOVE_TO_TABLE:  
 Player 2 16:02:34 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 16:02:35 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:02:35 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 
 Player 1 16:02:35 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[154,172,200,162,165,164,153,175,201,184,147,177,171,176,155,168,157,195,183,202,169,146,170,174,148,186,179,190,193,196,149,158,198,159,166,191,156,180,187,178,199,160,150,173,161,182,194,181,163,192,167,185,151,203,188,152,189,197]} 
 Player 1 16:02:38 $EDEN_CHOSEN:  
{"cardId":172,"playerId":2} 
 Player 2 16:02:38 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[154,200,162,165,164,153,175,201,184,147,177,171,176,155,168,157,195,183,202,169,146,170,174,148,186,179,190,193,196,149,158,198,159,166,191,156,180,187,178,199,160,150,173,161,182,194,181,163,192,167,185,151,203,188,152,189,197]} 
 Player 2 16:02:38 $FLIP_CARD:  
{"cardId":172} 
 Player 2 16:02:38 $REGISTER_PASSIVE_ITEM:  
{"cardId":172} 
 Player 2 16:02:38 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":266,"itemCardId":172} 
 Player 2 16:02:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:02:38 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":276,"itemCardId":277} 
 Player 2 16:02:38 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[38,110,52,26,79,29,62,120,132,70,58,111,69,137,22,103,130,56,90,141,48,95,121,31,97,129,93,25,138,119,19,24,42,50,133,27,18,77,81,80,51,11,108,139,75,84,32,20,55,128,134,72,59,91,33,57,13,76,85,86,109,63,61,30,67,10,87,54,96,117,65,104,47,127,89,135,66,123,73,140,34,124,143,98,102,36,37,100,122,45,74,126,14,28,17,12,60,113,107,105,46,35,15,88,136,39,43,64,9,116,68,16,115,101,78,21,82,71,40,118,99,53,131,23,106,142,44,125,41,49,92,112,114,8,83,7,94]} 
 Player 2 16:02:38 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[206,216,228,211,250,208,259,225,245,232,240,238,244,254,234,209,253,257,220,230,214,235,237,212,215,239,242,222,229,207,231,219,226,248,241,217,233,227,247,258,223,218,236,224,252,213,251,210,256,249,221,246,243,255]} 
 Player 2 16:02:38 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[151,170,184,149,192,194,152,164,197,198,146,159,203,186,181,177,168,199,173,188,193,148,158,174,165,187,161,175,182,166,167,154,191,147,160,189,162,163,171,183,156,185,190,157,196,176,180,200,179,169,178,150,195,201,153,202,155]} 
 Player 2 16:02:38 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:02:38 $FLIP_CARD:  
{"cardId":155} 
 Player 2 16:02:38 $ADD_STORE_CARD:  
{"cardId":155} 
 Player 2 16:02:38 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:02:38 $FLIP_CARD:  
{"cardId":202} 
 Player 2 16:02:38 $ADD_STORE_CARD:  
{"cardId":202} 
 Player 2 16:02:38 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:02:38 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":255} 
 Player 2 16:02:38 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:02:39 $FLIP_CARD:  
{"cardId":243} 
 Player 2 16:02:39 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":243} 
 Player 2 16:02:39 $NEW_MONSTER_ON_PLACE:  
{"cardId":243,"monsterPlaceId":1} 
 Player 2 16:02:39 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:02:39 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":246} 
 Player 2 16:02:39 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:02:39 $FLIP_CARD:  
{"cardId":221} 
 Player 2 16:02:39 $REGISTER_PASSIVE_ITEM:  
{"cardId":221} 
 Player 2 16:02:39 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":221} 
 Player 2 16:02:39 $NEW_MONSTER_ON_PLACE:  
{"cardId":221,"monsterPlaceId":2} 
 Player 2 16:02:39 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:02:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:02:39 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:02:39 $MOVE_CARD:  
{"moveIndex":1,"cardId":94,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:02:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":172}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:02:39 $NEXT_STACK_ID:  
 Player 1 16:02:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard effect GainStats<GainStats>"} 
 Player 1 16:02:39 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":1,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 16:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add ActivatePassiveEffect 1 "}} 
 Player 1 16:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard effect GainStats<GainStats>"} 
 Player 1 16:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 16:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard effect GainStats<GainStats>"} 
 Player 1 16:02:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[266],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":1,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 16:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding ActivatePassiveEffect 1"},"childOfId":0} 
 Player 1 16:02:39 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 16:02:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Resolve ActivatePassiveEffect 1 "}} 
 Player 1 16:02:39 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":172,"particleType":6} 
 Player 2 16:02:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:02:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard "} 
 Player 2 16:02:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard "} 
 Player 1 16:02:39 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":94,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:02:39 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":94} 
 Player 2 16:02:39 $FLIP_CARD:  
{"cardId":94} 
 Player 2 16:02:39 $FLIP_CARD:  
{"cardId":94} 
 Player 2 16:02:39 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":94} 
 Player 2 16:02:39 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:02:39 $MOVE_CARD:  
{"moveIndex":2,"cardId":7,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:02:40 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":7,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:02:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":7} 
 Player 2 16:02:40 $FLIP_CARD:  
{"cardId":7} 
 Player 2 16:02:40 $FLIP_CARD:  
{"cardId":7} 
 Player 2 16:02:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":7} 
 Player 2 16:02:40 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:02:40 $MOVE_CARD:  
{"moveIndex":3,"cardId":83,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:02:40 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":83,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:02:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":83} 
 Player 2 16:02:40 $FLIP_CARD:  
{"cardId":83} 
 Player 2 16:02:40 $FLIP_CARD:  
{"cardId":83} 
 Player 2 16:02:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":83} 
 Player 2 16:02:40 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:02:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:02:40 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:02:40 $MOVE_CARD:  
{"moveIndex":4,"cardId":8,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:02:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":172,"particleType":6} 
 Player 1 16:02:40 $PLAYER_GAIN_HP:  
{"playerId":1,"hpToGain":2,"isTemp":false} 
 Player 1 16:02:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":172}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard effect GainStats<GainStats>"} 
 Player 1 16:02:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[266],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":1,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 16:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 16:02:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Remove After Resolve ActivatePassiveEffect 1  "}} 
 Player 1 16:02:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:02:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[266],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":1,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":true,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 16:02:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Response Remove After Resolve ActivatePassiveEffect 1"},"childOfId":3} 
 Player 1 16:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 16:02:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Stack Was Emptied "}} 
 Player 1 16:02:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 16:02:41 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 
 Player 1 16:02:41 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":8,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:02:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard "} 
 Player 2 16:02:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard "} 
 Player 2 16:02:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard "} 
 Player 2 16:02:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Lard "} 
 Player 2 16:02:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":8} 
 Player 2 16:02:41 $FLIP_CARD:  
{"cardId":8} 
 Player 2 16:02:41 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":8} 
 Player 2 16:02:41 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:02:41 $MOVE_CARD:  
{"moveIndex":5,"cardId":114,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:02:41 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":114,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:02:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":114} 
 Player 2 16:02:41 $FLIP_CARD:  
{"cardId":114} 
 Player 2 16:02:41 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":114} 
 Player 2 16:02:41 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:02:41 $MOVE_CARD:  
{"moveIndex":6,"cardId":112,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:02:41 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":112,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:02:41 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":112} 
 Player 2 16:02:41 $FLIP_CARD:  
{"cardId":112} 
 Player 2 16:02:42 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":112} 
 Player 2 16:02:42 $GAME_HAS_STARTED:  
 Player 2 16:02:42 $SET_TURN:  
{"playerId":1} 
 Player 2 16:02:42 $START_TURN:  
{"playerId":1} 
 Player 2 16:02:42 $UPDATE_ACTIONS:  
 Player 1 16:02:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:02:42 $NEXT_STACK_ID:  
 Player 1 16:02:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:02:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:02:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 16:02:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Add StartTurnLoot 2 "}} 
 Player 1 16:02:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:02:42 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 16:02:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:02:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 16:02:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Response Adding StartTurnLoot 2"},"childOfId":6} 
 Player 1 16:02:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":6} 
 Player 1 16:02:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:02:42 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 16:02:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Wait For Response From Player 2 "},"childOfId":6} 
 Player 1 16:02:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:02:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 1 16:02:42 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:02:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:02:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:02:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:02:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:02:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:02:42 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 16:02:42 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 16:02:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Resolve StartTurnLoot 2 "}} 
 Player 1 16:02:42 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:02:42 $MOVE_CARD:  
{"moveIndex":7,"cardId":92,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:02:42 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":92,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:02:42 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":92} 
 Player 1 16:02:43 $FLIP_CARD:  
{"cardId":92} 
 Player 1 16:02:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":92} 
 Player 1 16:02:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:02:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 16:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 1 16:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Remove After Resolve StartTurnLoot 2  "}} 
 Player 1 16:02:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:02:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 16:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":11} 
 Player 1 16:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":11} 
 Player 1 16:02:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:02:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:02:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:02:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:02:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:02:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:02:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 1 16:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Wait For Response From Player 1 "},"childOfId":11} 
 Player 1 16:02:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 1 16:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 1 16:02:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Stack Was Emptied "}} 
 Player 1 16:02:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 1 16:02:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 16:02:44 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 1 16:02:45 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 16:04:25 $MATCH:  
 Player 1 16:04:26 $MATCH:  
 Player 1 16:04:27 $START_GAME:  
 Player 1 16:04:27 $MOVE_TO_TABLE:  
 Player 2 16:04:27 $MOVE_TO_TABLE:  
 Player 1 16:04:34 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:04:34 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 16:04:34 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":270,"itemCardId":271} 
 Player 2 16:04:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:04:34 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":272,"itemCardId":273} 
 Player 2 16:04:34 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[79,8,120,16,82,108,111,95,54,131,26,121,78,70,65,105,132,127,37,9,22,36,20,51,135,68,12,102,94,33,104,80,139,75,98,67,73,52,109,32,130,92,53,77,76,55,69,60,10,41,29,86,114,133,49,96,35,45,123,44,118,21,119,137,61,40,116,107,99,56,7,38,138,128,48,87,30,113,140,13,39,63,129,31,59,141,122,72,83,125,112,17,19,88,57,90,106,25,62,74,91,136,15,97,134,24,64,27,89,47,81,124,101,46,142,34,23,43,115,11,103,58,93,110,100,66,117,85,84,28,18,143,42,14,71,50,126]} 
 Player 2 16:04:34 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[243,253,242,256,213,259,206,244,245,233,226,231,229,237,216,255,240,249,209,222,235,225,250,214,212,232,219,234,236,208,207,218,258,224,217,223,254,230,247,221,211,248,215,220,241,257,239,252,210,238,227,246,251,228]} 
 Player 2 16:04:34 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[162,154,159,151,158,169,192,183,203,180,173,152,189,147,166,160,148,190,177,174,156,187,191,182,165,172,202,157,185,161,178,195,163,171,199,188,176,201,164,155,146,193,184,168,194,149,175,170,200,197,179,150,181,153,186,167,198,196]} 
 Player 2 16:04:34 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:04:34 $FLIP_CARD:  
{"cardId":196} 
 Player 2 16:04:34 $ADD_STORE_CARD:  
{"cardId":196} 
 Player 2 16:04:34 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:04:34 $FLIP_CARD:  
{"cardId":198} 
 Player 2 16:04:34 $ADD_STORE_CARD:  
{"cardId":198} 
 Player 2 16:04:34 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:04:34 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":228} 
 Player 2 16:04:34 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:04:34 $FLIP_CARD:  
{"cardId":251} 
 Player 2 16:04:34 $REGISTER_PASSIVE_ITEM:  
{"cardId":251} 
 Player 2 16:04:34 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":251} 
 Player 2 16:04:34 $NEW_MONSTER_ON_PLACE:  
{"cardId":251,"monsterPlaceId":1} 
 Player 2 16:04:34 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:04:34 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":246} 
 Player 2 16:04:34 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:04:34 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":227} 
 Player 2 16:04:34 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:04:35 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":238} 
 Player 2 16:04:35 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:04:35 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":210} 
 Player 2 16:04:35 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:04:35 $FLIP_CARD:  
{"cardId":252} 
 Player 2 16:04:35 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":252} 
 Player 2 16:04:35 $NEW_MONSTER_ON_PLACE:  
{"cardId":252,"monsterPlaceId":2} 
 Player 2 16:04:35 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:04:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:04:35 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:04:35 $MOVE_CARD:  
{"moveIndex":1,"cardId":126,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:04:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:04:35 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":126,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:04:35 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":126} 
 Player 2 16:04:35 $FLIP_CARD:  
{"cardId":126} 
 Player 2 16:04:35 $FLIP_CARD:  
{"cardId":126} 
 Player 2 16:04:35 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":126} 
 Player 2 16:04:35 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:04:35 $MOVE_CARD:  
{"moveIndex":2,"cardId":50,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:04:35 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":50,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:04:35 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":50} 
 Player 2 16:04:36 $FLIP_CARD:  
{"cardId":50} 
 Player 2 16:04:36 $FLIP_CARD:  
{"cardId":50} 
 Player 2 16:04:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":50} 
 Player 2 16:04:36 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:04:36 $MOVE_CARD:  
{"moveIndex":3,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:04:36 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":71,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:04:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":71} 
 Player 2 16:04:36 $FLIP_CARD:  
{"cardId":71} 
 Player 2 16:04:36 $FLIP_CARD:  
{"cardId":71} 
 Player 2 16:04:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":71} 
 Player 2 16:04:36 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:04:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:04:36 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:04:36 $MOVE_CARD:  
{"moveIndex":4,"cardId":14,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:04:36 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":14,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:04:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":14} 
 Player 2 16:04:36 $FLIP_CARD:  
{"cardId":14} 
 Player 2 16:04:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":14} 
 Player 2 16:04:36 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:04:36 $MOVE_CARD:  
{"moveIndex":5,"cardId":42,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:04:37 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":42,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:04:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":42} 
 Player 2 16:04:37 $FLIP_CARD:  
{"cardId":42} 
 Player 2 16:04:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":42} 
 Player 2 16:04:37 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:04:37 $MOVE_CARD:  
{"moveIndex":6,"cardId":143,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:04:37 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":143,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:04:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":143} 
 Player 2 16:04:37 $FLIP_CARD:  
{"cardId":143} 
 Player 2 16:04:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":143} 
 Player 2 16:04:37 $GAME_HAS_STARTED:  
 Player 2 16:04:37 $SET_TURN:  
{"playerId":2} 
 Player 2 16:04:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:04:37 $NEXT_STACK_ID:  
 Player 2 16:04:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:04:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 16:04:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 16:04:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:04:38 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 16:04:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:04:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 16:04:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 16:04:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:04:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:04:38 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 16:04:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:04:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:04:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:04:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:04:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:04:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:04:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:04:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:04:38 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 16:04:38 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 16:04:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 16:04:38 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:04:38 $MOVE_CARD:  
{"moveIndex":7,"cardId":18,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:04:38 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":18,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:04:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":18} 
 Player 2 16:04:38 $FLIP_CARD:  
{"cardId":18} 
 Player 2 16:04:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":18} 
 Player 2 16:04:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:04:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 16:04:38 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 16:04:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 16:04:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:04:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":272,"turnPlayerCardId":272,"stackEffectType":13}} 
 Player 2 16:04:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 16:04:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:04:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:04:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:04:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:04:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:04:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:04:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:04:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:04:39 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 16:04:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:04:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:04:39 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 16:04:39 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 16:04:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:04:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:04:39 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:04:39 $UPDATE_ACTIONS:  
 Player 2 16:04:40 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 16:04:41 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:06:11 $MATCH:  
 Player 1 16:06:12 $MATCH:  
 Player 1 16:06:12 $START_GAME:  
 Player 1 16:06:12 $MOVE_TO_TABLE:  
 Player 2 16:06:12 $MOVE_TO_TABLE:  
 Player 2 16:06:19 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 16:06:19 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:06:19 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":272,"itemCardId":273} 
 Player 2 16:06:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":267}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:06:19 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":264,"itemCardId":267} 
 Player 2 16:06:19 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[31,68,67,57,131,138,24,93,51,75,92,114,63,25,15,50,7,106,120,39,129,22,118,98,91,18,54,62,14,55,80,125,81,123,34,127,115,44,69,139,65,121,73,96,12,11,29,19,79,49,122,109,103,9,90,21,38,66,70,45,20,119,111,59,108,23,117,135,26,43,8,41,83,130,99,33,133,48,56,76,42,71,77,82,74,30,105,78,128,116,61,134,52,84,60,140,110,10,113,47,89,13,36,97,17,87,53,137,35,16,141,37,86,102,28,32,136,27,85,46,101,88,40,112,126,142,64,143,94,132,100,107,72,95,58,104,124]} 
 Player 2 16:06:19 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[235,217,210,220,245,252,241,206,242,254,248,232,257,218,212,239,219,258,229,237,231,233,243,230,224,238,247,234,227,246,223,256,228,251,250,225,211,216,240,222,259,208,249,215,236,255,213,226,214,207,244,209,221,253]} 
 Player 2 16:06:19 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[150,177,170,201,178,149,156,195,171,154,188,182,174,162,163,198,194,165,166,184,152,164,199,187,181,160,169,190,151,185,203,148,176,158,179,192,191,173,175,168,189,153,197,183,167,146,172,159,196,193,155,202,180,161,157,147,186,200]} 
 Player 2 16:06:19 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:06:19 $FLIP_CARD:  
{"cardId":200} 
 Player 2 16:06:19 $ADD_STORE_CARD:  
{"cardId":200} 
 Player 2 16:06:19 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:06:19 $FLIP_CARD:  
{"cardId":186} 
 Player 2 16:06:19 $ADD_STORE_CARD:  
{"cardId":186} 
 Player 2 16:06:19 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:06:19 $FLIP_CARD:  
{"cardId":253} 
 Player 2 16:06:19 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":253} 
 Player 2 16:06:19 $NEW_MONSTER_ON_PLACE:  
{"cardId":253,"monsterPlaceId":1} 
 Player 2 16:06:19 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:06:19 $FLIP_CARD:  
{"cardId":221} 
 Player 2 16:06:19 $REGISTER_PASSIVE_ITEM:  
{"cardId":221} 
 Player 2 16:06:20 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":221} 
 Player 2 16:06:20 $NEW_MONSTER_ON_PLACE:  
{"cardId":221,"monsterPlaceId":2} 
 Player 2 16:06:20 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:06:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:06:20 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:06:20 $MOVE_CARD:  
{"moveIndex":1,"cardId":124,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:06:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:06:20 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":124,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:06:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":124} 
 Player 2 16:06:20 $FLIP_CARD:  
{"cardId":124} 
 Player 2 16:06:20 $FLIP_CARD:  
{"cardId":124} 
 Player 2 16:06:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":124} 
 Player 2 16:06:20 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:06:20 $MOVE_CARD:  
{"moveIndex":2,"cardId":104,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:06:20 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":104,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:06:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":104} 
 Player 2 16:06:20 $FLIP_CARD:  
{"cardId":104} 
 Player 2 16:06:20 $FLIP_CARD:  
{"cardId":104} 
 Player 2 16:06:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":104} 
 Player 2 16:06:20 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:06:20 $MOVE_CARD:  
{"moveIndex":3,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:06:21 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":58,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:06:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":58} 
 Player 2 16:06:21 $FLIP_CARD:  
{"cardId":58} 
 Player 2 16:06:21 $FLIP_CARD:  
{"cardId":58} 
 Player 2 16:06:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":58} 
 Player 2 16:06:21 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:06:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:06:21 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:06:21 $MOVE_CARD:  
{"moveIndex":4,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:06:21 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":95,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:06:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":95} 
 Player 2 16:06:21 $FLIP_CARD:  
{"cardId":95} 
 Player 2 16:06:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":95} 
 Player 2 16:06:21 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:06:21 $MOVE_CARD:  
{"moveIndex":5,"cardId":72,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:06:22 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":72,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:06:22 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":72} 
 Player 2 16:06:22 $FLIP_CARD:  
{"cardId":72} 
 Player 2 16:06:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":72} 
 Player 2 16:06:22 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:06:22 $MOVE_CARD:  
{"moveIndex":6,"cardId":107,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:06:22 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":107,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:06:22 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":107} 
 Player 2 16:06:22 $FLIP_CARD:  
{"cardId":107} 
 Player 2 16:06:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":107} 
 Player 2 16:06:22 $GAME_HAS_STARTED:  
 Player 2 16:06:22 $SET_TURN:  
{"playerId":2} 
 Player 2 16:06:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:06:22 $NEXT_STACK_ID:  
 Player 2 16:06:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:06:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:06:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 2 16:06:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 16:06:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:06:22 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 16:06:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:06:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 2 16:06:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 16:06:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:06:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:06:22 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 16:06:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:06:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:06:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:06:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:06:23 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 16:06:23 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 16:06:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 16:06:23 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:06:23 $MOVE_CARD:  
{"moveIndex":7,"cardId":100,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:06:23 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":100,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:06:23 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":100} 
 Player 2 16:06:23 $FLIP_CARD:  
{"cardId":100} 
 Player 2 16:06:23 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":100} 
 Player 2 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:06:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 2 16:06:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 16:06:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:06:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 2 16:06:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 16:06:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:06:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:06:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:06:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:06:23 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 16:06:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:06:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:06:23 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 16:06:23 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 16:06:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:06:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:06:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:06:24 $UPDATE_ACTIONS:  
 Player 2 16:06:25 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 16:06:26 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:06:57 $NEXT_STACK_ID:  
 Player 2 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 2 16:06:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 16:06:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 16:06:57 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":72} 
 Player 2 16:06:57 $MOVE_CARD:  
{"moveIndex":8,"cardId":72,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:06:57 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":72,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 16:06:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:06:57 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 2 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 16:06:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":72,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:06:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 16:06:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 16:06:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 1 16:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 2 16:06:59 $NEXT_STACK_ID:  
 Player 2 16:06:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 16:06:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Sleight Of Hand"} 
 Player 2 16:06:59 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 16:06:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Add ActivateItem 3 "}} 
 Player 1 16:06:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 1 16:06:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 2 16:07:02 $USE_ITEM:  
{"cardId":267} 
 Player 2 16:07:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:07:02 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 2 16:07:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Sleight Of Hand"} 
 Player 2 16:07:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:07:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Response Adding ActivateItem 3"},"childOfId":13} 
 Player 2 16:07:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Wait For Response From Player 2 "},"childOfId":13} 
 Player 2 16:07:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:07:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Sleight Of Hand"} 
 Player 1 16:07:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Sleight Of Hand"} 
 Player 2 16:07:06 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:07:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Wait For Response From Player 1 "},"childOfId":13} 
 Player 2 16:07:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:07:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:07:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:07:06 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 2 16:07:06 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 2 16:07:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Resolve ActivateItem 3 "}} 
 Player 2 16:07:06 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 
 Player 2 16:07:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":267,"particleType":6} 
 Player 2 16:07:16 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":161} 
 Player 2 16:07:16 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":147} 
 Player 2 16:07:16 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":157} 
 Player 2 16:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Sleight Of Hand"} 
 Player 2 16:07:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:07:16 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 2 16:07:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 2 16:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 16:07:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":264,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:07:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":18} 
 Player 2 16:07:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Wait For Response From Player 1 "},"childOfId":18} 
 Player 2 16:07:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:07:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Sleight Of Hand"} 
 Player 1 16:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Sleight Of Hand"} 
 Player 1 16:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Sleight Of Hand"} 
 Player 1 16:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Sleight Of Hand"} 
 Player 1 16:07:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:07:16 $ACTION_MASSAGE_REMOVE:  
{"id":20} 
 Player 2 16:07:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Wait For Response From Player 2 "},"childOfId":18} 
 Player 2 16:07:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:07:19 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 2 16:07:25 $ACTION_MASSAGE_REMOVE:  
{"id":21} 
 Player 2 16:07:25 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 2 16:07:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 16:07:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 16:07:25 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":72,"particleType":6} 
 Player 2 16:07:27 $DISABLE_PARTICLE_EFFECT:  
{"cardId":72,"particleType":6} 
 Player 2 16:07:27 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":4} 
 Player 2 16:07:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 16:07:27 $MOVE_CARD:  
{"moveIndex":9,"cardId":72,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:07:27 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":72,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:07:27 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":72} 
 Player 2 16:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 
 Player 2 16:07:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:07:27 $ACTION_MASSAGE_REMOVE:  
{"id":22} 
 Player 2 16:07:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 16:07:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:07:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":264,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:07:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":23} 
 Player 2 16:07:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Wait For Response From Player 2 "},"childOfId":23} 
 Player 2 16:07:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 1 16:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 1 16:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 1 16:07:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 
 Player 2 16:07:30 $ACTION_MASSAGE_REMOVE:  
{"id":23} 
 Player 2 16:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":25} 
 Player 2 16:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Wait For Response From Player 1 "},"childOfId":23} 
 Player 2 16:07:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:07:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:07:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":26} 
 Player 2 16:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":24} 
 Player 2 16:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Stack Was Emptied "}} 
 Player 2 16:07:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 16:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 2 16:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 2 16:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 16:07:33 $ACTION_MASSAGE_REMOVE:  
{"id":27} 
 Player 2 16:07:54 $NEXT_STACK_ID:  
 Player 2 16:07:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 16:07:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 16:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Add DeclareAttack 4 "}} 
 Player 2 16:07:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:07:54 $ACTION_MASSAGE_REMOVE:  
{"id":28} 
 Player 2 16:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 16:07:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 16:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Response Adding DeclareAttack 4"},"childOfId":28} 
 Player 2 16:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Wait For Response From Player 2 "},"childOfId":28} 
 Player 2 16:07:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:07:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:07:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 16:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 16:08:09 $ACTION_MASSAGE_REMOVE:  
{"id":30} 
 Player 2 16:08:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Wait For Response From Player 1 "},"childOfId":28} 
 Player 2 16:08:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:08:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:08:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:08:10 $ACTION_MASSAGE_REMOVE:  
{"id":31} 
 Player 2 16:08:10 $ACTION_MASSAGE_REMOVE:  
{"id":29} 
 Player 2 16:08:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Resolve DeclareAttack 4 "}} 
 Player 2 16:08:10 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":221,"particleType":5} 
 Player 2 16:08:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 
 Player 2 16:08:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 16:08:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 16:08:10 $ACTION_MASSAGE_REMOVE:  
{"id":32} 
 Player 2 16:08:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Remove After Resolve DeclareAttack 4  "}} 
 Player 2 16:08:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:08:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":264,"attackingPlayerCardId":264,"idOfCardBeingAttacked":221,"stackEffectType":4}} 
 Player 2 16:08:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":33} 
 Player 2 16:08:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Wait For Response From Player 1 "},"childOfId":33} 
 Player 2 16:08:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:08:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:08:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 16:08:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 16:08:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 16:08:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 1 16:08:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:08:10 $ACTION_MASSAGE_REMOVE:  
{"id":35} 
 Player 2 16:08:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Wait For Response From Player 2 "},"childOfId":33} 
 Player 2 16:08:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:08:13 $ACTION_MASSAGE_REMOVE:  
{"id":33} 
 Player 2 16:08:25 $ACTION_MASSAGE_REMOVE:  
{"id":36} 
 Player 2 16:08:25 $ACTION_MASSAGE_REMOVE:  
{"id":34} 
 Player 2 16:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Stack Was Emptied "}} 
 Player 2 16:08:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:08:25 $ACTION_MASSAGE_REMOVE:  
{"id":37} 
 Player 2 16:08:27 $ACTION_MASSAGE_REMOVE:  
{"id":37} 
 Player 2 16:08:38 $MATCH:  
 Player 1 16:08:39 $MATCH:  
 Player 1 16:08:39 $START_GAME:  
 Player 2 16:08:39 $MOVE_TO_TABLE:  
 Player 1 16:08:39 $MOVE_TO_TABLE:  
 Player 1 16:08:47 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:08:47 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 16:08:47 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 
 Player 1 16:08:47 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[172,162,177,196,156,167,174,153,193,190,179,169,199,170,176,194,191,201,183,171,200,192,166,159,148,168,184,173,164,149,188,150,152,189,182,147,195,163,160,185,158,154,186,181,202,165,180,178,155,157,151,187,175,197,198,203,161,146]} 
 Player 1 16:08:51 $EDEN_CHOSEN:  
{"cardId":162,"playerId":2} 
 Player 2 16:08:51 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[172,177,196,156,167,174,153,193,190,179,169,199,170,176,194,191,201,183,171,200,192,166,159,148,168,184,173,164,149,188,150,152,189,182,147,195,163,160,185,158,154,186,181,202,165,180,178,155,157,151,187,175,197,198,203,161,146]} 
 Player 2 16:08:51 $FLIP_CARD:  
{"cardId":162} 
 Player 2 16:08:51 $REGISTER_PASSIVE_ITEM:  
{"cardId":162} 
 Player 2 16:08:51 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":266,"itemCardId":162} 
 Player 2 16:08:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:08:51 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":270,"itemCardId":271} 
 Player 2 16:08:52 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[138,88,80,47,82,117,92,46,143,91,9,54,136,119,16,39,83,18,90,30,48,141,63,114,77,60,55,105,103,112,106,41,139,45,49,131,36,58,11,17,109,108,10,122,13,85,14,73,21,140,69,135,75,118,25,110,67,51,23,79,42,7,20,28,95,35,53,129,59,52,72,81,64,115,102,98,15,71,56,113,76,61,126,32,19,22,62,29,142,74,33,40,86,65,37,125,34,84,57,44,132,124,8,68,27,38,70,128,127,101,123,87,116,121,66,133,137,43,31,26,12,96,94,89,50,107,100,24,120,93,97,104,78,111,130,134,99]} 
 Player 2 16:08:52 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[230,254,212,243,208,236,235,211,258,247,244,224,225,220,248,233,240,221,252,242,239,257,229,241,217,232,256,214,206,245,207,246,234,259,227,210,222,255,226,251,238,209,228,223,249,213,231,253,218,250,219,237,215,216]} 
 Player 2 16:08:52 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[197,187,149,191,166,173,183,151,195,163,193,158,198,174,157,203,161,185,152,184,176,146,199,154,168,175,192,189,178,153,160,169,147,172,148,194,179,200,201,159,171,156,182,164,202,170,177,180,155,165,196,188,181,186,167,150,190]} 
 Player 2 16:08:52 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:08:52 $FLIP_CARD:  
{"cardId":190} 
 Player 2 16:08:52 $ADD_STORE_CARD:  
{"cardId":190} 
 Player 2 16:08:52 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:08:52 $FLIP_CARD:  
{"cardId":150} 
 Player 2 16:08:52 $ADD_STORE_CARD:  
{"cardId":150} 
 Player 2 16:08:52 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:08:52 $FLIP_CARD:  
{"cardId":216} 
 Player 2 16:08:52 $REGISTER_PASSIVE_ITEM:  
{"cardId":216} 
 Player 2 16:08:52 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":216} 
 Player 2 16:08:52 $NEW_MONSTER_ON_PLACE:  
{"cardId":216,"monsterPlaceId":1} 
 Player 2 16:08:52 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:08:52 $FLIP_CARD:  
{"cardId":215} 
 Player 2 16:08:52 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":215} 
 Player 2 16:08:52 $NEW_MONSTER_ON_PLACE:  
{"cardId":215,"monsterPlaceId":2} 
 Player 2 16:08:52 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:08:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:08:52 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:08:52 $MOVE_CARD:  
{"moveIndex":1,"cardId":99,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:08:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":162}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:08:52 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":99,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:08:52 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":99} 
 Player 2 16:08:52 $FLIP_CARD:  
{"cardId":99} 
 Player 2 16:08:52 $FLIP_CARD:  
{"cardId":99} 
 Player 2 16:08:52 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":99} 
 Player 2 16:08:52 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:08:52 $MOVE_CARD:  
{"moveIndex":2,"cardId":134,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:08:53 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":134,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:08:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":134} 
 Player 2 16:08:53 $FLIP_CARD:  
{"cardId":134} 
 Player 2 16:08:53 $FLIP_CARD:  
{"cardId":134} 
 Player 2 16:08:53 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 
 Player 2 16:08:53 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:08:53 $MOVE_CARD:  
{"moveIndex":3,"cardId":130,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:08:53 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":130,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:08:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":130} 
 Player 2 16:08:53 $FLIP_CARD:  
{"cardId":130} 
 Player 2 16:08:53 $FLIP_CARD:  
{"cardId":130} 
 Player 2 16:08:53 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":130} 
 Player 2 16:08:53 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:08:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:08:53 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:08:53 $MOVE_CARD:  
{"moveIndex":4,"cardId":111,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:08:54 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":111,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:08:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":111} 
 Player 2 16:08:54 $FLIP_CARD:  
{"cardId":111} 
 Player 2 16:08:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":111} 
 Player 2 16:08:54 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:08:54 $MOVE_CARD:  
{"moveIndex":5,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:08:54 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":78,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:08:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":78} 
 Player 2 16:08:54 $FLIP_CARD:  
{"cardId":78} 
 Player 2 16:08:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":78} 
 Player 2 16:08:54 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:08:54 $MOVE_CARD:  
{"moveIndex":6,"cardId":104,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:08:54 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":104,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:08:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":104} 
 Player 2 16:08:54 $FLIP_CARD:  
{"cardId":104} 
 Player 2 16:08:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":104} 
 Player 2 16:08:54 $GAME_HAS_STARTED:  
 Player 2 16:08:54 $SET_TURN:  
{"playerId":2} 
 Player 2 16:08:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:08:55 $NEXT_STACK_ID:  
 Player 2 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:08:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 2 16:08:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 16:08:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:08:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:08:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 2 16:08:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 16:08:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:08:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:08:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 16:08:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:08:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:08:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:08:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:08:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 16:08:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 16:08:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 16:08:55 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:08:55 $MOVE_CARD:  
{"moveIndex":7,"cardId":97,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:08:55 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":97,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:08:55 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":97} 
 Player 2 16:08:55 $FLIP_CARD:  
{"cardId":97} 
 Player 2 16:08:55 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":97} 
 Player 2 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:08:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 2 16:08:55 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 16:08:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 16:08:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:08:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 2 16:08:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 16:08:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:08:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:08:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:08:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:08:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:08:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:08:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:08:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:08:56 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 16:08:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:08:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:08:56 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 16:08:56 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 16:08:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:08:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:08:56 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:08:56 $UPDATE_ACTIONS:  
 Player 2 16:08:57 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 16:08:58 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:09:13 $NEXT_STACK_ID:  
 Player 2 16:09:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:09:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 
 Player 2 16:09:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 16:09:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 16:09:13 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":97} 
 Player 2 16:09:13 $MOVE_CARD:  
{"moveIndex":8,"cardId":97,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:09:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:09:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:09:14 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":97,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 
 Player 2 16:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 
 Player 2 16:09:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 2 16:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 
 Player 2 16:09:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":97,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:09:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 16:09:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 16:09:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 2 16:09:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 16:09:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:09:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 
 Player 1 16:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 
 Player 1 16:09:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 2 16:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 16:09:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 16:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 
 Player 2 16:09:14 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":97,"particleType":6} 
 Player 2 16:09:16 $DISABLE_PARTICLE_EFFECT:  
{"cardId":97,"particleType":6} 
 Player 2 16:09:16 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":97,"effectIndex":{"type":3,"index":0},"conditionData":[null]} 
 Player 2 16:09:16 $MOVE_CARD:  
{"moveIndex":9,"cardId":97,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:09:16 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":97,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:09:17 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":97} 
 Player 2 16:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 
 Player 2 16:09:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:09:17 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 2 16:09:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 16:09:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:09:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:09:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 16:09:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 16:09:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:09:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 
 Player 1 16:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 
 Player 1 16:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 
 Player 1 16:09:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 
 Player 1 16:09:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:09:17 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 2 16:09:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 16:09:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:09:17 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 2 16:09:17 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 2 16:09:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 16:09:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:09:17 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:09:18 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 2 16:09:20 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:10:16 $NEXT_STACK_ID:  
 Player 2 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 2 16:10:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":216,"stackEffectType":4}} 
 Player 2 16:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 
 Player 2 16:10:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:10:16 $ACTION_MASSAGE_REMOVE:  
{"id":20} 
 Player 2 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 2 16:10:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":216,"stackEffectType":4}} 
 Player 2 16:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 
 Player 2 16:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 16:10:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:10:16 $ACTION_MASSAGE_REMOVE:  
{"id":22} 
 Player 2 16:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 16:10:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:10:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 1 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 1 16:10:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:10:16 $ACTION_MASSAGE_REMOVE:  
{"id":23} 
 Player 2 16:10:16 $ACTION_MASSAGE_REMOVE:  
{"id":21} 
 Player 2 16:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 
 Player 2 16:10:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":216,"particleType":5} 
 Player 2 16:10:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 
 Player 2 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 2 16:10:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":216,"stackEffectType":4}} 
 Player 2 16:10:16 $ACTION_MASSAGE_REMOVE:  
{"id":24} 
 Player 2 16:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 
 Player 2 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":270,"attackingPlayerCardId":270,"idOfCardBeingAttacked":216,"stackEffectType":4}} 
 Player 2 16:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 
 Player 2 16:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 16:10:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:10:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 1 16:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 1 16:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 1 16:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Fatty"} 
 Player 1 16:10:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:10:17 $ACTION_MASSAGE_REMOVE:  
{"id":27} 
 Player 2 16:10:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 16:10:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:10:17 $ACTION_MASSAGE_REMOVE:  
{"id":28} 
 Player 2 16:10:17 $ACTION_MASSAGE_REMOVE:  
{"id":26} 
 Player 2 16:10:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 2 16:10:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:17 $ACTION_MASSAGE_REMOVE:  
{"id":25} 
 Player 2 16:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":29} 
 Player 2 16:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":25} 
 Player 2 16:10:26 $NEXT_STACK_ID:  
 Player 2 16:10:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 2 16:10:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 16:10:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add ActivateItem 4 "}} 
 Player 1 16:10:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:10:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:31 $USE_ITEM:  
{"cardId":271} 
 Player 2 16:10:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:10:31 $ACTION_MASSAGE_REMOVE:  
{"id":30} 
 Player 2 16:10:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 2 16:10:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:10:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding ActivateItem 4"},"childOfId":30} 
 Player 2 16:10:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 16:10:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:10:31 $ACTION_MASSAGE_REMOVE:  
{"id":32} 
 Player 2 16:10:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 16:10:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:10:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:10:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 16:10:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 16:10:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:10:32 $ACTION_MASSAGE_REMOVE:  
{"id":33} 
 Player 2 16:10:32 $ACTION_MASSAGE_REMOVE:  
{"id":31} 
 Player 2 16:10:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve ActivateItem 4 "}} 
 Player 2 16:10:32 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":271,"particleType":6} 
 Player 2 16:10:34 $DISABLE_PARTICLE_EFFECT:  
{"cardId":271,"particleType":6} 
 Player 2 16:10:45 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":104} 
 Player 2 16:10:45 $MOVE_CARD:  
{"moveIndex":10,"cardId":104,"placeID":1,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 
 Player 1 16:10:46 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":104,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:10:46 $FLIP_CARD:  
{"cardId":104} 
 Player 2 16:10:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":104} 
 Player 2 16:10:46 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":130} 
 Player 2 16:10:46 $MOVE_CARD:  
{"moveIndex":11,"cardId":130,"placeID":2,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 
 Player 1 16:10:46 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":130,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:10:46 $FLIP_CARD:  
{"cardId":130} 
 Player 2 16:10:46 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":130} 
 Player 2 16:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 2 16:10:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:10:46 $ACTION_MASSAGE_REMOVE:  
{"id":34} 
 Player 2 16:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve ActivateItem 4  "}} 
 Player 2 16:10:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":271,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":35} 
 Player 2 16:10:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 16:10:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:10:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 16:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 16:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 16:10:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 16:10:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:10:46 $ACTION_MASSAGE_REMOVE:  
{"id":37} 
 Player 2 16:10:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 16:10:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":38} 
 Player 2 16:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":36} 
 Player 2 16:10:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 2 16:10:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:47 $ACTION_MASSAGE_REMOVE:  
{"id":35} 
 Player 2 16:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":39} 
 Player 2 16:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":35} 
 Player 2 16:10:55 $NEXT_STACK_ID:  
 Player 2 16:10:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 
 Player 2 16:10:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 16:10:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add ActivateItem 5 "}} 
 Player 1 16:10:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:10:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:10:56 $USE_ITEM:  
{"cardId":270} 
 Player 2 16:10:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:10:56 $ACTION_MASSAGE_REMOVE:  
{"id":40} 
 Player 2 16:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 
 Player 2 16:10:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:10:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding ActivateItem 5"},"childOfId":40} 
 Player 2 16:10:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 16:10:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:10:56 $ACTION_MASSAGE_REMOVE:  
{"id":42} 
 Player 2 16:10:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 16:10:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:10:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 
 Player 1 16:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 
 Player 1 16:10:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:10:56 $ACTION_MASSAGE_REMOVE:  
{"id":43} 
 Player 2 16:10:56 $ACTION_MASSAGE_REMOVE:  
{"id":41} 
 Player 2 16:10:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve ActivateItem 5 "}} 
 Player 2 16:10:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":6} 
 Player 2 16:10:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":6} 
 Player 2 16:10:58 $NEXT_STACK_ID:  
 Player 2 16:10:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 
 Player 2 16:10:58 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":130} 
 Player 2 16:10:58 $MOVE_CARD:  
{"moveIndex":12,"cardId":130,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:10:59 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":130,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:10:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats \n2:Player 2 activated Lilith"} 
 Player 2 16:10:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats \n2:Player 2 activated Lilith"} 
 Player 2 16:11:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats \n2:Player 2 activated Lilith"} 
 Player 2 16:11:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":130,"lootPlayerId":2,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":130,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats \n2:Player 2 activated Lilith"} 
 Player 2 16:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats \n2:Player 2 activated Lilith"} 
 Player 2 16:11:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":130,"lootPlayerId":2,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":130,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":5,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 16:11:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats \n2:Player 2 activated Lilith"} 
 Player 2 16:11:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:11:02 $ACTION_MASSAGE_REMOVE:  
{"id":44} 
 Player 2 16:11:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve ActivateItem 5  "}} 
 Player 2 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats"} 
 Player 2 16:11:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":270,"hasLockingStackEffect":false,"itemToPlayCardId":270,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:11:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve ActivateItem 5"},"childOfId":45} 
 Player 2 16:11:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 2 16:11:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:02 $ACTION_MASSAGE_REMOVE:  
{"id":47} 
 Player 2 16:11:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 2 16:11:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Lilith"} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot "} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot "} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot "} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot "} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot  \n2:Player 2 activated Lilith"} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot  \n2:Player 2 activated Lilith"} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot  \n2:Player 2 activated Lilith"} 
 Player 1 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot  \n2:Player 2 activated Lilith"} 
 Player 1 16:11:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:02 $ACTION_MASSAGE_REMOVE:  
{"id":48} 
 Player 2 16:11:02 $ACTION_MASSAGE_REMOVE:  
{"id":46} 
 Player 2 16:11:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve PlayLootCardStackEffect 6 "}} 
 Player 2 16:11:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats"} 
 Player 2 16:11:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":130,"particleType":6} 
 Player 2 16:11:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":130,"particleType":6} 
 Player 2 16:11:04 $PLAYER_GAIN_HP:  
{"playerId":2,"hpToGain":1,"isTemp":true} 
 Player 2 16:11:04 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":1,"isTemp":true} 
 Player 2 16:11:04 $MOVE_CARD:  
{"moveIndex":13,"cardId":130,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:11:04 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":130,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:11:04 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":130} 
 Player 2 16:11:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot: GainStats"} 
 Player 2 16:11:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":130,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:11:04 $ACTION_MASSAGE_REMOVE:  
{"id":49} 
 Player 2 16:11:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve PlayLootCardStackEffect 6  "}} 
 Player 2 16:11:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":130,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:11:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve PlayLootCardStackEffect 6"},"childOfId":50} 
 Player 2 16:11:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 2 16:11:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 2 16:11:05 $ACTION_MASSAGE_REMOVE:  
{"id":45} 
 Player 1 16:11:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot "} 
 Player 1 16:11:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot "} 
 Player 1 16:11:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot "} 
 Player 1 16:11:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Chariot "} 
 Player 1 16:11:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:05 $ACTION_MASSAGE_REMOVE:  
{"id":52} 
 Player 2 16:11:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 2 16:11:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:05 $ACTION_MASSAGE_REMOVE:  
{"id":53} 
 Player 2 16:11:05 $ACTION_MASSAGE_REMOVE:  
{"id":51} 
 Player 2 16:11:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Stack Was Emptied "}} 
 Player 2 16:11:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:05 $ACTION_MASSAGE_REMOVE:  
{"id":45} 
 Player 2 16:11:06 $NEXT_STACK_ID:  
 Player 2 16:11:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 2 16:11:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 2 16:11:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add AttackRoll 7 "}} 
 Player 2 16:11:06 $ROLL_DICE:  
{"playerId":2} 
 Player 1 16:11:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:06 $ACTION_MASSAGE_REMOVE:  
{"id":54} 
 Player 2 16:11:07 $ACTION_MASSAGE_REMOVE:  
{"id":50} 
 Player 2 16:11:07 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 
 Player 2 16:11:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":55} 
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding AttackRoll 7"},"childOfId":55} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Player 2 16:11:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":57} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Player 2 16:11:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":58} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":56} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve AttackRoll 7 "}} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Added 0 to original roll"}} 
 Player 2 16:11:08 $NEXT_STACK_ID:  
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}]} 
 Player 2 16:11:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":5,"originStackId":7},"isAfterActivation":true,"index":5} 
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 4 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":59} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Remove After Resolve AttackRoll 7  "}} 
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 2 16:11:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":270,"numberRolled":4,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":61} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":61} 
 Player 2 16:11:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":63} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":61} 
 Player 2 16:11:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":64} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":62} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve CombatDamage 8 "}} 
 Player 2 16:11:08 $MONSTER_GET_DAMAGED:  
{"cardId":216,"hpLeft":2,"damageDealerId":270} 
 Player 2 16:11:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":216,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 16:11:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":4},{"type":0,"number":270},{"type":0,"number":216}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":7,"originStackId":8},"isAfterActivation":true,"index":7} 
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 2 16:11:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:11:08 $ACTION_MASSAGE_REMOVE:  
{"id":65} 
 Player 2 16:11:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Remove After Resolve CombatDamage 8  "}} 
 Player 2 16:11:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":66} 
 Player 2 16:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 2 16:11:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":68} 
 Player 2 16:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 2 16:11:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":69} 
 Player 2 16:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":67} 
 Player 2 16:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Stack Was Emptied "}} 
 Player 2 16:11:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":59} 
 Player 2 16:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":61} 
 Player 2 16:11:10 $NEXT_STACK_ID:  
 Player 2 16:11:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 2 16:11:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":270,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 2 16:11:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Add AttackRoll 9 "}} 
 Player 2 16:11:10 $ROLL_DICE:  
{"playerId":2} 
 Player 2 16:11:10 $ACTION_MASSAGE_REMOVE:  
{"id":70} 
 Player 1 16:11:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":60} 
 Player 2 16:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":61} 
 Player 2 16:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":66} 
 Player 2 16:11:13 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 
 Player 2 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:13 $ACTION_MASSAGE_REMOVE:  
{"id":71} 
 Player 2 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 2 16:11:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Adding AttackRoll 9"},"childOfId":71} 
 Player 2 16:11:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 
 Player 2 16:11:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:13 $ACTION_MASSAGE_REMOVE:  
{"id":73} 
 Player 2 16:11:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 
 Player 2 16:11:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:13 $ACTION_MASSAGE_REMOVE:  
{"id":74} 
 Player 2 16:11:13 $ACTION_MASSAGE_REMOVE:  
{"id":72} 
 Player 2 16:11:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Resolve AttackRoll 9 "}} 
 Player 2 16:11:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Added 0 to original roll"}} 
 Player 2 16:11:13 $NEXT_STACK_ID:  
 Player 2 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:13 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":9,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}]} 
 Player 2 16:11:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":8,"originStackId":9},"isAfterActivation":true,"index":8} 
 Player 2 16:11:13 $NEXT_STACK_ID:  
 Player 2 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster> \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 2 16:11:13 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":216,"hasLockingStackEffect":false,"cardActivatorId":216,"cardWithEffectId":216,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":216,"cardId":216,"effctType":0},"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 16:11:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Add ActivatePassiveEffect 11 "}} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 2 16:11:16 $ACTION_MASSAGE_REMOVE:  
{"id":76} 
 Player 2 16:11:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster> \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 2 16:11:21 $ACTION_MASSAGE_REMOVE:  
{"id":77} 
 Player 2 16:11:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster> \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 2 16:11:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270,78],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":216,"effectCardPlayer":216},"entityId":11,"creatorCardId":216,"hasLockingStackEffect":false,"cardActivatorId":216,"cardWithEffectId":216,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":216,"cardId":216,"effctType":0},"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:11:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Adding ActivatePassiveEffect 11"},"childOfId":77} 
 Player 2 16:11:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 2 16:11:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:21 $ACTION_MASSAGE_REMOVE:  
{"id":79} 
 Player 2 16:11:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 
 Player 2 16:11:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 1 16:11:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 1 16:11:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:21 $ACTION_MASSAGE_REMOVE:  
{"id":80} 
 Player 2 16:11:21 $ACTION_MASSAGE_REMOVE:  
{"id":78} 
 Player 2 16:11:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve ActivatePassiveEffect 11 "}} 
 Player 2 16:11:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":216,"particleType":6} 
 Player 2 16:11:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":216,"particleType":6} 
 Player 2 16:11:23 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":78} 
 Player 2 16:11:23 $MOVE_CARD:  
{"moveIndex":14,"cardId":78,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:11:23 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":78,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:11:23 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":78} 
 Player 2 16:11:23 $DISCARD_LOOT:  
{"playerId":2,"cardId":78} 
 Player 2 16:11:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":false,"index":8,"originStackId":9},"isAfterActivation":true,"index":8} 
 Player 2 16:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster> \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 2 16:11:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270,78],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":216,"effectCardPlayer":216},"entityId":11,"creatorCardId":216,"hasLockingStackEffect":false,"cardActivatorId":216,"cardWithEffectId":216,"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:11:23 $ACTION_MASSAGE_REMOVE:  
{"id":81} 
 Player 2 16:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Remove After Resolve ActivatePassiveEffect 11  "}} 
 Player 2 16:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270,78],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":216,"effectCardPlayer":216},"entityId":11,"creatorCardId":216,"hasLockingStackEffect":false,"cardActivatorId":216,"cardWithEffectId":216,"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Response Remove After Resolve ActivatePassiveEffect 11"},"childOfId":82} 
 Player 2 16:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":82} 
 Player 2 16:11:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 1 16:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 1 16:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 1 16:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster> \n3:Activate Cursed Fatty "} 
 Player 1 16:11:23 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:23 $ACTION_MASSAGE_REMOVE:  
{"id":84} 
 Player 2 16:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":82} 
 Player 2 16:11:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:23 $ACTION_MASSAGE_REMOVE:  
{"id":85} 
 Player 2 16:11:23 $ACTION_MASSAGE_REMOVE:  
{"id":83} 
 Player 2 16:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Resolve AttackRoll 9 "}} 
 Player 2 16:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 2 16:11:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 2 16:11:24 $ACTION_MASSAGE_REMOVE:  
{"id":75} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Remove After Resolve AttackRoll 9  "}} 
 Player 2 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 2 16:11:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":270,"numberRolled":5,"rollingPlayerCardId":270,"stackEffectType":2,"attackedMonsterCardId":216}} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Response Remove After Resolve AttackRoll 9"},"childOfId":87} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 2 "},"childOfId":87} 
 Player 2 16:11:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:24 $ACTION_MASSAGE_REMOVE:  
{"id":89} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":87} 
 Player 2 16:11:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:Player 2 is rolling against Cursed Fatty<Monster>"} 
 Player 1 16:11:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:24 $ACTION_MASSAGE_REMOVE:  
{"id":90} 
 Player 2 16:11:24 $ACTION_MASSAGE_REMOVE:  
{"id":88} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Resolve CombatDamage 10 "}} 
 Player 2 16:11:24 $MONSTER_GET_DAMAGED:  
{"cardId":216,"hpLeft":0,"damageDealerId":270} 
 Player 2 16:11:24 $NEXT_STACK_ID:  
 Player 2 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 2 16:11:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by Lilith"} 
 Player 2 16:11:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}} 
 Player 2 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by Lilith"} 
 Player 2 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by Lilith"} 
 Player 2 16:11:24 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}]} 
 Player 2 16:11:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":270}],"result":null,"preventMethod":false,"methodScopeId":216,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 
 Player 2 16:11:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":5},{"type":0,"number":270},{"type":0,"number":216}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":10,"originStackId":10},"isAfterActivation":true,"index":10} 
 Player 2 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by Lilith"} 
 Player 2 16:11:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:11:24 $ACTION_MASSAGE_REMOVE:  
{"id":91} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Remove After Resolve CombatDamage 10  "}} 
 Player 2 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 
 Player 2 16:11:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":270,"entityToDoDamageCardId":270,"entityToTakeDamageCardId":216,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Response Remove After Resolve CombatDamage 10"},"childOfId":92} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":92} 
 Player 2 16:11:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:24 $ACTION_MASSAGE_REMOVE:  
{"id":94} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":92} 
 Player 2 16:11:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by undefined"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by undefined"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by undefined"} 
 Player 1 16:11:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Fatty \n2:[object Object] killed by undefined"} 
 Player 1 16:11:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:24 $ACTION_MASSAGE_REMOVE:  
{"id":95} 
 Player 2 16:11:24 $ACTION_MASSAGE_REMOVE:  
{"id":93} 
 Player 2 16:11:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Resolve MonsterDeath 12 "}} 
 Player 2 16:11:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":216,"particleType":5} 
 Player 2 16:11:24 $CANCEL_ATTACK:  
 Player 2 16:11:25 $NEXT_STACK_ID:  
 Player 2 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Lilith"} 
 Player 2 16:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 2 16:11:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":270,"monsterCardWithRewardId":216,"playerCardIdToReward":270,"stackEffectType":7}} 
 Player 2 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 2 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 2 16:11:25 $REPLACE_STACK:  
{"currentStack":[{"entityId":13,"creatorCardId":270,"monsterCardWithRewardId":216,"playerCardIdToReward":270,"stackEffectType":7},{"entityId":12,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}]} 
 Player 2 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:[object Object] killed by Lilith"} 
 Player 2 16:11:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}} 
 Player 2 16:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":96} 
 Player 2 16:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Remove After Resolve MonsterDeath 12  "}} 
 Player 2 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward"} 
 Player 2 16:11:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":270,"monsterToDieCardId":216,"stackEffectType":5,"killerId":270}} 
 Player 2 16:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Response Remove After Resolve MonsterDeath 12"},"childOfId":97} 
 Player 2 16:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":97} 
 Player 2 16:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":99} 
 Player 2 16:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":97} 
 Player 2 16:11:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 16:11:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 16:11:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":100} 
 Player 2 16:11:25 $ACTION_MASSAGE_REMOVE:  
{"id":98} 
 Player 2 16:11:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Resolve MonsterRewardStackEffect 13 "}} 
 Player 2 16:11:25 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:11:25 $MOVE_CARD:  
{"moveIndex":15,"cardId":93,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:11:25 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":93,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:11:25 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":93} 
 Player 2 16:11:25 $FLIP_CARD:  
{"cardId":93} 
 Player 2 16:11:25 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":93} 
 Player 2 16:11:25 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:11:26 $MOVE_CARD:  
{"moveIndex":16,"cardId":120,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:11:26 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":120,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:11:26 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":120} 
 Player 2 16:11:26 $FLIP_CARD:  
{"cardId":120} 
 Player 2 16:11:26 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":120} 
 Player 2 16:11:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:26 $ACTION_MASSAGE_REMOVE:  
{"id":75} 
 Player 2 16:11:26 $ACTION_MASSAGE_REMOVE:  
{"id":82} 
 Player 2 16:11:26 $ACTION_MASSAGE_REMOVE:  
{"id":87} 
 Player 2 16:11:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Fizzle MonsterRewardStackEffect 13"}} 
 Player 2 16:11:26 $MOVE_CARD:  
{"moveIndex":17,"cardId":216,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 16:11:26 $ACTION_MASSAGE_REMOVE:  
{"id":82} 
 Player 1 16:11:26 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":216,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:11:26 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":216} 
 Player 2 16:11:26 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":216} 
 Player 2 16:11:26 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":216} 
 Player 2 16:11:26 $NEXT_STACK_ID:  
 Player 2 16:11:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 
 Player 2 16:11:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":270,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 16:11:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Add RefillEmptySlot 14 "}} 
 Player 2 16:11:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":103} 
 Player 2 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 
 Player 2 16:11:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":270,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Response Adding RefillEmptySlot 14"},"childOfId":103} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 2 "},"childOfId":103} 
 Player 2 16:11:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":105} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":103} 
 Player 2 16:11:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":87} 
 Player 1 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward"} 
 Player 1 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward"} 
 Player 1 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 16:11:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":106} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":104} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Resolve RefillEmptySlot 14 "}} 
 Player 2 16:11:27 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:11:27 $FLIP_CARD:  
{"cardId":237} 
 Player 2 16:11:27 $REGISTER_PASSIVE_ITEM:  
{"cardId":237} 
 Player 2 16:11:27 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":237} 
 Player 2 16:11:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":237,"monsterPlaceId":1} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":107} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Remove After Resolve RefillEmptySlot 14  "}} 
 Player 2 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":270,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Response Remove After Resolve RefillEmptySlot 14"},"childOfId":108} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 1 "},"childOfId":108} 
 Player 2 16:11:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:11:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":92} 
 Player 1 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Cursed Fatty<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 16:11:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":110} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":108} 
 Player 2 16:11:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":111} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":109} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Stack Was Emptied "}} 
 Player 2 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":75} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":82} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":101} 
 Player 2 16:11:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Stack Was Emptied "}} 
 Player 2 16:11:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":113} 
 Player 2 16:11:27 $ACTION_MASSAGE_REMOVE:  
{"id":97} 
 Player 2 16:11:29 $ACTION_MASSAGE_REMOVE:  
{"id":112} 
 Player 2 16:11:29 $ACTION_MASSAGE_REMOVE:  
{"id":113} 
 Player 2 16:11:29 $ACTION_MASSAGE_REMOVE:  
{"id":102} 
 Player 2 16:11:30 $ACTION_MASSAGE_REMOVE:  
{"id":108} 
 Player 2 16:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:32 $REPLACE_STACK:  
{"currentStack":[]} 
 Player 2 16:11:32 $END_TURN:  
 Player 2 16:11:32 $SET_TURN:  
{"playerId":1} 
 Player 2 16:11:32 $START_TURN:  
{"playerId":1} 
 Player 1 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:11:32 $NEXT_STACK_ID:  
 Player 1 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:11:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 16:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 15 "}} 
 Player 1 16:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:11:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 16:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 15"},"childOfId":0} 
 Player 1 16:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 16:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 16:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 16:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:11:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:11:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 16:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 16:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 15 "}} 
 Player 1 16:11:32 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:11:32 $MOVE_CARD:  
{"moveIndex":18,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:11:33 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":24,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:11:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":24} 
 Player 1 16:11:33 $FLIP_CARD:  
{"cardId":24} 
 Player 1 16:11:33 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":24} 
 Player 1 16:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:11:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 16:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 16:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 15  "}} 
 Player 1 16:11:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 1 16:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 15"},"childOfId":5} 
 Player 1 16:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 16:11:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:11:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:11:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 16:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 16:11:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 16:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 16:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 16:11:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:11:35 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 16:11:36 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:11:41 $NEXT_STACK_ID:  
 Player 1 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 1 16:11:41 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 16:11:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 16 "}} 
 Player 1 16:11:41 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":134} 
 Player 1 16:11:41 $MOVE_CARD:  
{"moveIndex":19,"cardId":134,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:11:41 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:11:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:11:41 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 1 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:11:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:11:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 16"},"childOfId":10} 
 Player 1 16:11:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 16:11:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:11:41 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 1 16:11:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 16:11:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:11:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:11:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:11:41 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 1 16:11:41 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 1 16:11:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 16 "}} 
 Player 1 16:11:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:11:41 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 16:11:43 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 16:11:43 $LOG_ERROR:  
{} 
 Player 1 16:11:43 $LOG_ERROR:  
//////Error From Player 1////
 {}
////// 
 Player 1 16:11:43 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:11:43 $MOVE_CARD:  
{"moveIndex":20,"cardId":100,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:11:44 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":100,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:11:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":100} 
 Player 1 16:11:44 $FLIP_CARD:  
{"cardId":100} 
 Player 1 16:11:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":100} 
 Player 1 16:11:44 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:11:44 $MOVE_CARD:  
{"moveIndex":21,"cardId":107,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:11:45 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":107,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:11:45 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":107} 
 Player 1 16:11:45 $FLIP_CARD:  
{"cardId":107} 
 Player 1 16:11:45 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":107} 
 Player 1 16:11:45 $MOVE_CARD:  
{"moveIndex":22,"cardId":134,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 16:11:45 $MOVE_CARD_END:  
{"moveIndex":22,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:11:45 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":134} 
 Player 1 16:11:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:11:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:11:45 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 1 16:11:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 16  "}} 
 Player 1 16:11:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 16"},"childOfId":15} 
 Player 1 16:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 16:11:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:11:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:11:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:11:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:11:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:11:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:11:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:11:46 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 1 16:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 16:11:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:11:46 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 1 16:11:46 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 1 16:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 16:11:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:11:47 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 1 16:11:48 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 1 16:11:48 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:20:31 $MATCH:  
 Player 1 16:20:31 $MATCH:  
 Player 1 16:20:32 $START_GAME:  
 Player 2 16:20:32 $MOVE_TO_TABLE:  
 Player 1 16:20:32 $MOVE_TO_TABLE:  
 Player 2 16:20:39 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 16:20:39 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:20:39 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 
 Player 1 16:20:39 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[161,159,147,166,178,189,151,160,191,177,148,172,175,164,165,169,176,197,193,173,190,184,198,167,202,182,162,154,194,170,149,201,146,174,163,185,150,186,183,153,188,156,203,196,179,152,192,187,180,158,181,195,171,155,200,168,157,199]} 
 Player 1 16:20:43 $EDEN_CHOSEN:  
{"cardId":159,"playerId":2} 
 Player 2 16:20:43 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[161,147,166,178,189,151,160,191,177,148,172,175,164,165,169,176,197,193,173,190,184,198,167,202,182,162,154,194,170,149,201,146,174,163,185,150,186,183,153,188,156,203,196,179,152,192,187,180,158,181,195,171,155,200,168,157,199]} 
 Player 2 16:20:43 $FLIP_CARD:  
{"cardId":159} 
 Player 2 16:20:43 $REGISTER_PASSIVE_ITEM:  
{"cardId":159} 
 Player 2 16:20:43 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":266,"itemCardId":159} 
 Player 2 16:20:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:20:43 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":270,"itemCardId":271} 
 Player 2 16:20:43 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[35,86,53,23,124,140,129,47,89,132,56,104,40,136,117,70,108,42,85,44,13,58,99,120,61,45,16,57,37,68,95,107,59,20,8,48,93,141,135,67,21,14,62,74,10,90,36,112,46,43,134,142,34,22,12,125,11,75,103,133,66,24,87,84,64,98,32,65,83,31,106,102,60,50,18,17,101,139,96,130,121,76,94,72,126,110,29,77,41,73,143,15,131,92,82,105,137,123,138,111,81,19,115,33,97,127,114,128,25,119,79,30,39,9,113,28,69,88,100,71,49,27,54,63,38,7,78,26,116,122,109,80,118,51,91,52,55]} 
 Player 2 16:20:43 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[252,237,257,209,231,242,238,215,212,259,251,226,254,230,233,210,249,217,218,255,247,220,225,239,258,240,214,256,224,241,246,213,232,227,207,208,228,248,245,234,221,216,243,236,229,235,223,250,219,211,222,253,206,244]} 
 Player 2 16:20:43 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[173,181,154,184,153,196,179,163,146,201,170,194,177,176,149,169,158,147,199,186,200,160,156,175,189,188,171,162,174,190,203,185,152,157,166,187,172,198,178,168,151,202,155,183,182,164,197,191,192,148,167,195,180,161,150,193,165]} 
 Player 2 16:20:43 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:20:43 $FLIP_CARD:  
{"cardId":165} 
 Player 2 16:20:43 $ADD_STORE_CARD:  
{"cardId":165} 
 Player 2 16:20:43 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:20:43 $FLIP_CARD:  
{"cardId":193} 
 Player 2 16:20:43 $ADD_STORE_CARD:  
{"cardId":193} 
 Player 2 16:20:43 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:20:43 $FLIP_CARD:  
{"cardId":244} 
 Player 2 16:20:43 $REGISTER_PASSIVE_ITEM:  
{"cardId":244} 
 Player 2 16:20:43 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":244} 
 Player 2 16:20:43 $NEW_MONSTER_ON_PLACE:  
{"cardId":244,"monsterPlaceId":1} 
 Player 2 16:20:43 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:20:43 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":206} 
 Player 2 16:20:43 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:20:43 $FLIP_CARD:  
{"cardId":253} 
 Player 2 16:20:43 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":253} 
 Player 2 16:20:43 $NEW_MONSTER_ON_PLACE:  
{"cardId":253,"monsterPlaceId":2} 
 Player 2 16:20:43 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:20:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:20:43 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:43 $MOVE_CARD:  
{"moveIndex":1,"cardId":55,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":159}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:20:44 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":55,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:20:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":55} 
 Player 2 16:20:44 $FLIP_CARD:  
{"cardId":55} 
 Player 2 16:20:44 $FLIP_CARD:  
{"cardId":55} 
 Player 2 16:20:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":55} 
 Player 2 16:20:44 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:44 $MOVE_CARD:  
{"moveIndex":2,"cardId":52,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:44 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":52,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:20:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":52} 
 Player 2 16:20:44 $FLIP_CARD:  
{"cardId":52} 
 Player 2 16:20:44 $FLIP_CARD:  
{"cardId":52} 
 Player 2 16:20:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":52} 
 Player 2 16:20:44 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:44 $MOVE_CARD:  
{"moveIndex":3,"cardId":91,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:45 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":91,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:20:45 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":91} 
 Player 2 16:20:45 $FLIP_CARD:  
{"cardId":91} 
 Player 2 16:20:45 $FLIP_CARD:  
{"cardId":91} 
 Player 2 16:20:45 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":91} 
 Player 2 16:20:45 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:20:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:20:45 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:45 $MOVE_CARD:  
{"moveIndex":4,"cardId":51,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:45 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":51,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:20:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":51} 
 Player 2 16:20:45 $FLIP_CARD:  
{"cardId":51} 
 Player 2 16:20:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":51} 
 Player 2 16:20:45 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:45 $MOVE_CARD:  
{"moveIndex":5,"cardId":118,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:46 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":118,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:20:46 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":118} 
 Player 2 16:20:46 $FLIP_CARD:  
{"cardId":118} 
 Player 2 16:20:46 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":118} 
 Player 2 16:20:46 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:46 $MOVE_CARD:  
{"moveIndex":6,"cardId":80,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:46 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":80,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:20:46 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":80} 
 Player 2 16:20:46 $FLIP_CARD:  
{"cardId":80} 
 Player 2 16:20:46 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":80} 
 Player 2 16:20:46 $GAME_HAS_STARTED:  
 Player 2 16:20:46 $SET_TURN:  
{"playerId":2} 
 Player 2 16:20:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:20:46 $NEXT_STACK_ID:  
 Player 2 16:20:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:20:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:20:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 2 16:20:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 16:20:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:20:46 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 16:20:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:20:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 2 16:20:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 16:20:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:20:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:20:46 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 16:20:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:20:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:20:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:20:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:20:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:20:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:20:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:20:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:20:46 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 16:20:46 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 16:20:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 16:20:46 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:46 $MOVE_CARD:  
{"moveIndex":7,"cardId":109,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:47 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":109,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:20:47 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":109} 
 Player 2 16:20:47 $FLIP_CARD:  
{"cardId":109} 
 Player 2 16:20:47 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":109} 
 Player 2 16:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:20:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 2 16:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 16:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 16:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:20:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":270,"turnPlayerCardId":270,"stackEffectType":13}} 
 Player 2 16:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 16:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:20:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:20:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:20:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 16:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:20:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 16:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 16:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:20:47 $UPDATE_ACTIONS:  
 Player 2 16:20:49 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 16:20:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:20:52 $MOVE_CARD:  
{"moveIndex":8,"cardId":134,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:52 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":134,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:20:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":134} 
 Player 2 16:20:56 $NEXT_STACK_ID:  
 Player 2 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 2 16:20:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 16:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 16:20:56 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":134} 
 Player 2 16:20:56 $MOVE_CARD:  
{"moveIndex":9,"cardId":134,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:20:56 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":134,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:20:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:20:56 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 2 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:20:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 16:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 16:20:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:20:56 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 2 16:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 16:20:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:20:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:20:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:20:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:20:57 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 2 16:20:57 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 16:20:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 16:20:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:20:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 2 16:20:59 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 2 16:20:59 $LOG_ERROR:  
{} 
 Player 2 16:20:59 $LOG_ERROR:  
//////Error From Player 2////
 {}
////// 
 Player 2 16:20:59 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:59 $MOVE_CARD:  
{"moveIndex":10,"cardId":122,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:20:59 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":122,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:20:59 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":122} 
 Player 2 16:20:59 $FLIP_CARD:  
{"cardId":122} 
 Player 2 16:20:59 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":122} 
 Player 2 16:20:59 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:20:59 $MOVE_CARD:  
{"moveIndex":11,"cardId":116,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:21:00 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":116,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:21:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":116} 
 Player 2 16:21:00 $FLIP_CARD:  
{"cardId":116} 
 Player 2 16:21:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":116} 
 Player 2 16:21:00 $MOVE_CARD:  
{"moveIndex":12,"cardId":134,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:21:00 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":134,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:21:01 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":134} 
 Player 2 16:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:21:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:21:01 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 2 16:21:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 16:21:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:21:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":270,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:21:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 16:21:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 16:21:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:21:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:21:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:21:02 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 2 16:21:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 16:21:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:21:02 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 2 16:21:02 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 2 16:21:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 16:21:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:21:02 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:21:03 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 2 16:21:04 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:24:58 $MATCH:  
 Player 1 16:24:59 $MATCH:  
 Player 1 16:24:59 $START_GAME:  
 Player 1 16:24:59 $MOVE_TO_TABLE:  
 Player 2 16:24:59 $MOVE_TO_TABLE:  
 Player 1 16:25:08 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:25:08 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 16:25:08 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":268,"itemCardId":269} 
 Player 2 16:25:08 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 
 Player 1 16:25:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:25:08 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[148,176,181,160,172,149,154,153,179,174,165,170,196,185,151,173,175,164,184,203,152,195,194,178,157,156,193,187,177,146,159,168,155,201,183,167,188,186,199,182,166,171,202,163,162,192,191,180,158,150,147,169,200,198,197,190,161,189]} 
 Player 2 16:36:02 $MATCH:  
 Player 1 16:36:03 $MATCH:  
 Player 1 16:36:03 $START_GAME:  
 Player 2 16:36:03 $MOVE_TO_TABLE:  
 Player 1 16:36:03 $MOVE_TO_TABLE:  
 Player 2 16:36:10 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 16:36:10 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:36:10 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 
 Player 2 16:36:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:36:10 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":268,"itemCardId":269} 
 Player 2 16:36:10 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[65,81,44,36,111,110,102,60,86,43,50,91,87,58,51,121,18,124,82,25,28,69,138,108,79,77,141,118,95,107,15,83,75,84,130,63,38,116,48,109,33,17,122,66,22,8,99,72,119,98,37,19,126,62,78,128,52,59,133,140,74,14,100,85,9,55,68,70,142,73,94,23,139,7,93,129,56,29,136,24,113,97,11,27,20,103,53,132,49,112,125,120,123,57,143,31,106,41,101,32,134,92,10,114,61,12,96,16,54,46,13,40,64,42,21,35,137,71,26,30,88,131,76,34,127,47,90,115,117,105,135,39,45,67,89,80,104]} 
 Player 2 16:36:10 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[259,248,210,235,220,213,251,216,228,225,226,230,254,219,215,231,253,250,206,233,245,217,257,212,224,218,223,244,246,232,247,229,214,207,236,227,252,241,211,208,255,249,240,234,221,243,239,237,242,256,258,238,209,222]} 
 Player 2 16:36:10 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[189,155,160,193,150,192,190,195,162,184,152,198,164,183,169,194,186,172,166,181,196,175,187,148,180,178,173,153,176,161,147,146,149,177,202,159,156,151,171,182,165,158,197,163,188,168,201,174,170,203,185,154,191,199,179,157,167,200]} 
 Player 2 16:36:10 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:36:10 $FLIP_CARD:  
{"cardId":200} 
 Player 2 16:36:10 $ADD_STORE_CARD:  
{"cardId":200} 
 Player 2 16:36:10 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:36:10 $FLIP_CARD:  
{"cardId":167} 
 Player 2 16:36:10 $ADD_STORE_CARD:  
{"cardId":167} 
 Player 2 16:36:10 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:36:10 $FLIP_CARD:  
{"cardId":222} 
 Player 2 16:36:10 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":222} 
 Player 2 16:36:10 $NEW_MONSTER_ON_PLACE:  
{"cardId":222,"monsterPlaceId":1} 
 Player 2 16:36:10 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:36:10 $FLIP_CARD:  
{"cardId":209} 
 Player 2 16:36:11 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":209} 
 Player 2 16:36:11 $NEW_MONSTER_ON_PLACE:  
{"cardId":209,"monsterPlaceId":2} 
 Player 2 16:36:11 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:36:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:36:11 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:36:11 $MOVE_CARD:  
{"moveIndex":1,"cardId":104,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:36:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:36:11 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":104,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:36:11 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":104} 
 Player 2 16:36:11 $FLIP_CARD:  
{"cardId":104} 
 Player 2 16:36:11 $FLIP_CARD:  
{"cardId":104} 
 Player 2 16:36:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":104} 
 Player 2 16:36:11 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:36:11 $MOVE_CARD:  
{"moveIndex":2,"cardId":80,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:36:11 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":80,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:36:11 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":80} 
 Player 2 16:36:11 $FLIP_CARD:  
{"cardId":80} 
 Player 2 16:36:11 $FLIP_CARD:  
{"cardId":80} 
 Player 2 16:36:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":80} 
 Player 2 16:36:11 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:36:12 $MOVE_CARD:  
{"moveIndex":3,"cardId":89,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:36:12 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":89,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:36:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":89} 
 Player 2 16:36:12 $FLIP_CARD:  
{"cardId":89} 
 Player 2 16:36:12 $FLIP_CARD:  
{"cardId":89} 
 Player 2 16:36:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":89} 
 Player 2 16:36:12 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:36:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:36:12 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:36:12 $MOVE_CARD:  
{"moveIndex":4,"cardId":67,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:36:12 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":67,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:36:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":67} 
 Player 2 16:36:12 $FLIP_CARD:  
{"cardId":67} 
 Player 2 16:36:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":67} 
 Player 2 16:36:12 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:36:12 $MOVE_CARD:  
{"moveIndex":5,"cardId":45,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:36:13 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":45,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:36:13 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":45} 
 Player 2 16:36:13 $FLIP_CARD:  
{"cardId":45} 
 Player 2 16:36:13 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":45} 
 Player 2 16:36:13 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:36:13 $MOVE_CARD:  
{"moveIndex":6,"cardId":39,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:36:13 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":39,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:36:13 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":39} 
 Player 2 16:36:13 $FLIP_CARD:  
{"cardId":39} 
 Player 2 16:36:13 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":39} 
 Player 2 16:36:13 $GAME_HAS_STARTED:  
 Player 2 16:36:13 $SET_TURN:  
{"playerId":1} 
 Player 2 16:36:13 $START_TURN:  
{"playerId":1} 
 Player 2 16:36:13 $UPDATE_ACTIONS:  
 Player 1 16:36:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:36:13 $NEXT_STACK_ID:  
 Player 1 16:36:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:36:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:36:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 1 16:36:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 16:36:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:36:13 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 16:36:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:36:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 1 16:36:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 16:36:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 16:36:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:36:13 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 16:36:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 16:36:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:36:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:36:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 16:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 16:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 16:36:14 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:36:14 $MOVE_CARD:  
{"moveIndex":7,"cardId":135,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:36:14 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":135,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:36:14 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":135} 
 Player 1 16:36:14 $FLIP_CARD:  
{"cardId":135} 
 Player 1 16:36:14 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":135} 
 Player 1 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:36:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 1 16:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 16:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:36:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 1 16:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 16:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 16:36:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:36:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:36:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 16:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 16:36:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 16:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 16:36:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 16:36:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:36:14 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:36:15 $MOVE_CARD:  
{"moveIndex":8,"cardId":134,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 2 16:36:16 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:36:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 
 Player 1 16:36:16 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 16:36:17 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:36:18 $NEXT_STACK_ID:  
 Player 1 16:36:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:36:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 1 16:36:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 16:36:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 1 16:36:18 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":134} 
 Player 1 16:36:18 $MOVE_CARD:  
{"moveIndex":9,"cardId":134,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 16:36:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:36:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:36:19 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:36:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:36:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:36:19 $LOG_ERROR:  
{} 
 Player 1 16:36:19 $LOG_ERROR:  
//////Error From Player 1////
 {}
////// 
 Player 1 16:36:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:36:19 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 1 16:36:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:36:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:36:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 1 16:36:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 16:36:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:36:19 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 1 16:36:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 16:36:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:36:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:36:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:36:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:36:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:36:20 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 1 16:36:20 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 1 16:36:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 1 16:36:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:36:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 16:36:22 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 16:36:22 $LOG_ERROR:  
{} 
 Player 1 16:36:22 $LOG_ERROR:  
//////Error From Player 1////
 {}
////// 
 Player 1 16:36:22 $LOG_ERROR:  
{} 
 Player 1 16:36:22 $LOG_ERROR:  
//////Error From Player 1////
 {}
////// 
 Player 1 16:36:22 $MOVE_CARD:  
{"moveIndex":10,"cardId":134,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 16:36:22 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:36:23 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":134} 
 Player 1 16:36:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:36:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:36:23 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 1 16:36:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 1 16:36:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:36:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:36:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 1 16:36:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 16:36:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:36:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:36:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:36:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:36:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:36:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:36:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:36:24 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 1 16:36:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 16:36:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:36:24 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 1 16:36:24 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 1 16:36:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 16:36:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:36:24 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 1 16:36:25 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 1 16:36:26 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:44:33 $MATCH:  
 Player 1 16:44:34 $MATCH:  
 Player 1 16:44:34 $START_GAME:  
 Player 2 16:44:34 $MOVE_TO_TABLE:  
 Player 1 16:44:34 $MOVE_TO_TABLE:  
 Player 2 16:44:42 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 16:44:42 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:44:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 
 Player 2 16:44:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":271}],"result":true,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:44:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":270,"itemCardId":271} 
 Player 2 16:44:42 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[89,83,25,96,126,53,31,140,36,105,113,39,24,104,77,112,118,110,48,30,15,20,127,32,98,130,13,128,34,23,78,79,33,21,95,111,116,37,141,103,66,134,115,75,100,51,119,136,55,123,42,54,82,97,91,108,22,58,132,14,64,81,120,18,10,45,27,94,65,109,87,131,133,90,101,93,84,88,139,106,19,73,41,49,69,68,26,71,122,44,38,16,50,86,17,137,80,35,46,117,59,107,61,67,57,47,60,70,76,129,74,125,114,28,11,7,85,135,29,143,9,138,121,8,92,43,56,72,124,142,99,12,52,63,40,62,102]} 
 Player 2 16:44:42 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[209,218,231,241,212,233,236,239,258,244,252,259,251,211,253,237,224,256,222,255,208,243,229,216,257,217,210,230,228,249,220,214,247,248,215,227,223,254,207,235,240,238,206,221,246,245,213,225,226,234,219,242,250,232]} 
 Player 2 16:44:42 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[178,168,158,185,193,166,196,184,191,192,150,198,163,201,160,151,159,183,203,190,156,155,148,147,195,187,169,165,180,186,200,197,182,181,152,161,176,177,153,173,188,174,170,146,202,162,154,149,199,189,167,175,194,171,179,164,172,157]} 
 Player 2 16:44:42 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:44:42 $FLIP_CARD:  
{"cardId":157} 
 Player 2 16:44:42 $ADD_STORE_CARD:  
{"cardId":157} 
 Player 2 16:44:42 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:44:42 $FLIP_CARD:  
{"cardId":172} 
 Player 2 16:44:42 $ADD_STORE_CARD:  
{"cardId":172} 
 Player 2 16:44:42 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:44:42 $FLIP_CARD:  
{"cardId":232} 
 Player 2 16:44:42 $REGISTER_PASSIVE_ITEM:  
{"cardId":232} 
 Player 2 16:44:42 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":232} 
 Player 2 16:44:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":232,"monsterPlaceId":1} 
 Player 2 16:44:42 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:44:42 $FLIP_CARD:  
{"cardId":250} 
 Player 2 16:44:42 $REGISTER_PASSIVE_ITEM:  
{"cardId":250} 
 Player 2 16:44:42 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":250} 
 Player 2 16:44:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":250,"monsterPlaceId":2} 
 Player 2 16:44:42 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:44:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:44:42 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:44:42 $MOVE_CARD:  
{"moveIndex":1,"cardId":102,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:44:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:44:43 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":102,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:44:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":102} 
 Player 2 16:44:43 $FLIP_CARD:  
{"cardId":102} 
 Player 2 16:44:43 $FLIP_CARD:  
{"cardId":102} 
 Player 2 16:44:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":102} 
 Player 2 16:44:43 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:44:43 $MOVE_CARD:  
{"moveIndex":2,"cardId":62,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:44:43 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":62,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:44:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":62} 
 Player 2 16:44:43 $FLIP_CARD:  
{"cardId":62} 
 Player 2 16:44:43 $FLIP_CARD:  
{"cardId":62} 
 Player 2 16:44:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":62} 
 Player 2 16:44:43 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:44:43 $MOVE_CARD:  
{"moveIndex":3,"cardId":40,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:44:44 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":40,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:44:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":40} 
 Player 2 16:44:44 $FLIP_CARD:  
{"cardId":40} 
 Player 2 16:44:44 $FLIP_CARD:  
{"cardId":40} 
 Player 2 16:44:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":40} 
 Player 2 16:44:44 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:44:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:44:44 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:44:44 $MOVE_CARD:  
{"moveIndex":4,"cardId":63,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:44:44 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":63,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:44:44 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":63} 
 Player 2 16:44:44 $FLIP_CARD:  
{"cardId":63} 
 Player 2 16:44:44 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":63} 
 Player 2 16:44:44 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:44:44 $MOVE_CARD:  
{"moveIndex":5,"cardId":52,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:44:44 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":52,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:44:44 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":52} 
 Player 2 16:44:45 $FLIP_CARD:  
{"cardId":52} 
 Player 2 16:44:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":52} 
 Player 2 16:44:45 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:44:45 $MOVE_CARD:  
{"moveIndex":6,"cardId":12,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:44:45 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":12,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:44:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":12} 
 Player 2 16:44:45 $FLIP_CARD:  
{"cardId":12} 
 Player 2 16:44:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":12} 
 Player 2 16:44:45 $GAME_HAS_STARTED:  
 Player 2 16:44:45 $SET_TURN:  
{"playerId":1} 
 Player 2 16:44:45 $START_TURN:  
{"playerId":1} 
 Player 2 16:44:45 $UPDATE_ACTIONS:  
 Player 1 16:44:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:44:45 $NEXT_STACK_ID:  
 Player 1 16:44:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:44:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:44:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 1 16:44:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 16:44:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 16:44:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:44:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 1 16:44:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 16:44:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 16:44:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 16:44:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 16:44:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:44:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:44:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:44:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:44:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:44:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:44:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 16:44:45 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 16:44:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 16:44:46 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:44:46 $MOVE_CARD:  
{"moveIndex":7,"cardId":99,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:44:46 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":99,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:44:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":99} 
 Player 1 16:44:46 $FLIP_CARD:  
{"cardId":99} 
 Player 1 16:44:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":99} 
 Player 1 16:44:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:44:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 1 16:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 16:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 16:44:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:44:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 
 Player 1 16:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 16:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 16:44:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:44:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:44:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:44:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:44:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:44:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:44:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 16:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 16:44:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 16:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 16:44:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 16:44:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:44:46 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:44:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 16:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:44:54 $MOVE_CARD:  
{"moveIndex":8,"cardId":134,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 2 16:44:54 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:44:54 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 
 Player 1 16:44:58 $NEXT_STACK_ID:  
 Player 1 16:44:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 1 16:44:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 16:44:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 1 16:44:58 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":134} 
 Player 1 16:44:58 $MOVE_CARD:  
{"moveIndex":9,"cardId":134,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 16:44:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:44:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:44:58 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:44:58 $LOG_ERROR:  
{} 
 Player 1 16:44:58 $LOG_ERROR:  
//////Error From Player 1////
 {}
////// 
 Player 1 16:44:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:44:58 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 1 16:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:44:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:44:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 1 16:44:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 16:44:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:44:59 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 1 16:44:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 16:44:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:44:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:44:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:44:59 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 1 16:44:59 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 1 16:44:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 1 16:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:44:59 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 16:45:01 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 16:45:01 $LOG_ERROR:  
{} 
 Player 1 16:45:01 $LOG_ERROR:  
//////Error From Player 1////
 {}
////// 
 Player 1 16:45:01 $LOG_ERROR:  
{} 
 Player 1 16:45:01 $LOG_ERROR:  
//////Error From Player 1////
 {}
////// 
 Player 1 16:45:01 $MOVE_CARD:  
{"moveIndex":10,"cardId":134,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 16:45:02 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:45:02 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":134} 
 Player 1 16:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:45:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 1 16:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 1 16:45:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:45:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":276,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 1 16:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 16:45:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:45:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:45:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 1 16:45:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 16:45:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 1 16:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 1 16:45:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 16:45:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 1 16:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 1 16:45:05 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:45:49 $MATCH:  
 Player 1 16:45:49 $MATCH:  
 Player 1 16:45:50 $START_GAME:  
 Player 2 16:45:50 $MOVE_TO_TABLE:  
 Player 1 16:45:50 $MOVE_TO_TABLE:  
 Player 2 16:45:57 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 16:45:57 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:45:57 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 
 Player 2 16:45:57 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 
 Player 1 16:45:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:45:57 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[200,192,167,154,168,181,202,149,157,166,155,184,198,179,153,203,161,188,160,180,186,178,201,187,165,152,191,174,171,177,185,169,162,183,194,147,172,150,164,199,163,175,193,146,158,190,159,182,197,156,196,170,176,195,173,189,151,148]} 
 Player 2 16:46:01 $EDEN_CHOSEN:  
{"cardId":167,"playerId":2} 
 Player 2 16:46:01 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[200,192,154,168,181,202,149,157,166,155,184,198,179,153,203,161,188,160,180,186,178,201,187,165,152,191,174,171,177,185,169,162,183,194,147,172,150,164,199,163,175,193,146,158,190,159,182,197,156,196,170,176,195,173,189,151,148]} 
 Player 2 16:46:01 $FLIP_CARD:  
{"cardId":167} 
 Player 2 16:46:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":167}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:46:02 $REGISTER_PASSIVE_ITEM:  
{"cardId":167} 
 Player 2 16:46:02 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":266,"itemCardId":167} 
 Player 2 16:46:02 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[16,76,52,14,17,19,137,110,15,62,104,63,143,34,31,124,90,21,59,123,106,75,49,61,88,22,67,135,13,134,54,9,107,103,142,86,40,141,121,78,89,108,11,114,71,35,116,129,39,117,37,138,97,68,140,132,98,139,36,91,7,65,105,128,47,41,50,38,33,112,113,20,42,101,118,48,8,69,94,119,60,57,32,115,93,120,127,81,45,79,111,55,43,23,83,87,82,26,77,66,53,12,84,136,24,125,92,18,122,64,100,56,29,25,70,74,51,73,10,126,130,44,72,28,102,85,133,95,46,96,58,109,80,99,27,30,131]} 
 Player 2 16:46:02 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[244,257,249,216,246,258,209,206,225,235,245,237,231,247,240,221,236,253,224,242,233,212,239,213,243,250,251,234,254,222,207,208,232,241,248,220,215,252,218,217,228,259,227,219,255,230,214,210,226,211,238,229,256,223]} 
 Player 2 16:46:02 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[165,192,196,199,163,159,182,161,185,173,178,202,180,183,175,184,156,198,190,203,200,181,146,164,155,166,170,147,162,152,186,149,197,195,174,179,157,189,160,171,148,151,188,187,154,150,194,153,193,191,168,176,158,201,177,172,169]} 
 Player 2 16:46:02 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:46:02 $FLIP_CARD:  
{"cardId":169} 
 Player 2 16:46:02 $ADD_STORE_CARD:  
{"cardId":169} 
 Player 2 16:46:02 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:46:02 $FLIP_CARD:  
{"cardId":172} 
 Player 2 16:46:02 $ADD_STORE_CARD:  
{"cardId":172} 
 Player 2 16:46:02 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:46:02 $FLIP_CARD:  
{"cardId":223} 
 Player 2 16:46:02 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":223} 
 Player 2 16:46:02 $NEW_MONSTER_ON_PLACE:  
{"cardId":223,"monsterPlaceId":1} 
 Player 2 16:46:02 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:46:02 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":256} 
 Player 2 16:46:02 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:46:02 $FLIP_CARD:  
{"cardId":229} 
 Player 2 16:46:02 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 
 Player 2 16:46:02 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":229} 
 Player 2 16:46:02 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":2} 
 Player 2 16:46:02 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:46:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:46:02 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:46:02 $MOVE_CARD:  
{"moveIndex":1,"cardId":131,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:46:02 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":131,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:46:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":131} 
 Player 2 16:46:02 $FLIP_CARD:  
{"cardId":131} 
 Player 2 16:46:02 $FLIP_CARD:  
{"cardId":131} 
 Player 2 16:46:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":131} 
 Player 2 16:46:02 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:46:02 $MOVE_CARD:  
{"moveIndex":2,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:46:03 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":30,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:46:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":30} 
 Player 2 16:46:03 $FLIP_CARD:  
{"cardId":30} 
 Player 2 16:46:03 $FLIP_CARD:  
{"cardId":30} 
 Player 2 16:46:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":30} 
 Player 2 16:46:03 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:46:03 $MOVE_CARD:  
{"moveIndex":3,"cardId":27,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:46:03 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":27,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:46:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":27} 
 Player 2 16:46:03 $FLIP_CARD:  
{"cardId":27} 
 Player 2 16:46:03 $FLIP_CARD:  
{"cardId":27} 
 Player 2 16:46:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":27} 
 Player 2 16:46:03 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:46:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:46:03 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:46:03 $MOVE_CARD:  
{"moveIndex":4,"cardId":99,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:46:04 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":99,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:46:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":99} 
 Player 2 16:46:04 $FLIP_CARD:  
{"cardId":99} 
 Player 2 16:46:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":99} 
 Player 2 16:46:04 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:46:04 $MOVE_CARD:  
{"moveIndex":5,"cardId":80,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:46:04 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":80,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:46:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":80} 
 Player 2 16:46:04 $FLIP_CARD:  
{"cardId":80} 
 Player 2 16:46:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":80} 
 Player 2 16:46:04 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:46:04 $MOVE_CARD:  
{"moveIndex":6,"cardId":109,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:46:05 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":109,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:46:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":109} 
 Player 2 16:46:05 $FLIP_CARD:  
{"cardId":109} 
 Player 2 16:46:05 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":109} 
 Player 2 16:46:05 $GAME_HAS_STARTED:  
 Player 2 16:46:05 $SET_TURN:  
{"playerId":2} 
 Player 2 16:46:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:46:05 $NEXT_STACK_ID:  
 Player 2 16:46:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:46:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:46:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 16:46:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 16:46:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:46:05 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 16:46:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:46:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 16:46:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 16:46:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:46:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:46:05 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 16:46:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:46:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:46:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:46:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:46:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:46:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:46:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:46:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:46:05 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 16:46:05 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 16:46:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 16:46:05 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:46:05 $MOVE_CARD:  
{"moveIndex":7,"cardId":58,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:46:05 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":58,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:46:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":58} 
 Player 2 16:46:06 $FLIP_CARD:  
{"cardId":58} 
 Player 2 16:46:06 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":58} 
 Player 2 16:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:46:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 16:46:06 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 16:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 16:46:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:46:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 16:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 16:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:46:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:46:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:46:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:46:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:46:06 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 16:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:46:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:46:06 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 16:46:06 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 16:46:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:46:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:46:06 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:46:06 $UPDATE_ACTIONS:  
 Player 2 16:46:07 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 16:46:08 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:46:11 $MOVE_CARD:  
{"moveIndex":8,"cardId":134,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 1 16:46:12 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":134,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:46:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":134} 
 Player 2 16:46:16 $NEXT_STACK_ID:  
 Player 2 16:46:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 2 16:46:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 16:46:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 16:46:17 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":134} 
 Player 2 16:46:17 $MOVE_CARD:  
{"moveIndex":9,"cardId":134,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:46:17 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":134,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:46:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 2 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:46:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:46:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 16:46:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 16:46:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 2 16:46:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 16:46:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:46:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:46:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 2 16:46:17 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 16:46:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 16:46:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:46:17 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 2 16:46:19 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 2 16:47:49 $MATCH:  
 Player 1 16:47:50 $MATCH:  
 Player 1 16:47:50 $START_GAME:  
 Player 2 16:47:50 $MOVE_TO_TABLE:  
 Player 1 16:47:50 $MOVE_TO_TABLE:  
 Player 2 16:47:57 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 16:47:57 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:47:57 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 
 Player 2 16:47:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":261}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:47:57 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":260,"itemCardId":261} 
 Player 2 16:47:57 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[44,109,23,110,70,65,68,22,108,141,119,59,133,78,122,137,35,118,87,95,24,20,36,39,71,131,45,29,73,16,106,98,140,120,37,12,30,74,40,60,64,11,14,66,105,126,86,69,142,103,94,33,13,7,89,82,26,10,138,72,90,42,129,48,113,101,53,18,88,91,76,47,25,55,41,96,114,100,51,139,43,130,61,57,136,80,38,49,67,97,54,79,125,28,115,63,56,46,52,83,116,84,27,104,21,92,117,8,81,135,124,102,107,128,31,9,17,111,121,132,93,127,50,123,32,99,77,62,15,85,143,58,19,112,134,34,75]} 
 Player 2 16:47:57 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[236,234,225,217,237,258,242,233,241,230,244,246,226,211,221,223,229,257,209,215,219,256,259,238,208,248,239,231,245,228,235,213,222,212,216,232,224,227,207,251,254,206,218,220,240,252,255,247,250,243,214,210,253,249]} 
 Player 2 16:47:57 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[182,164,178,200,151,153,195,181,197,157,161,194,198,196,173,185,163,149,154,201,150,191,179,159,155,162,188,168,175,169,192,183,176,160,172,148,156,187,147,202,190,158,186,203,199,189,193,167,171,166,152,170,165,174,180,184,177,146]} 
 Player 2 16:47:57 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:47:57 $FLIP_CARD:  
{"cardId":146} 
 Player 2 16:47:57 $ADD_STORE_CARD:  
{"cardId":146} 
 Player 2 16:47:57 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:47:57 $FLIP_CARD:  
{"cardId":177} 
 Player 2 16:47:57 $ADD_STORE_CARD:  
{"cardId":177} 
 Player 2 16:47:57 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:47:57 $FLIP_CARD:  
{"cardId":249} 
 Player 2 16:47:57 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":249} 
 Player 2 16:47:57 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":1} 
 Player 2 16:47:57 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:47:57 $FLIP_CARD:  
{"cardId":253} 
 Player 2 16:47:57 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":253} 
 Player 2 16:47:57 $NEW_MONSTER_ON_PLACE:  
{"cardId":253,"monsterPlaceId":2} 
 Player 2 16:47:57 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:47:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:47:58 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:47:58 $MOVE_CARD:  
{"moveIndex":1,"cardId":75,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:47:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 16:47:58 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":75,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:47:58 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":75} 
 Player 2 16:47:58 $FLIP_CARD:  
{"cardId":75} 
 Player 2 16:47:58 $FLIP_CARD:  
{"cardId":75} 
 Player 2 16:47:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":75} 
 Player 2 16:47:58 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:47:58 $MOVE_CARD:  
{"moveIndex":2,"cardId":34,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:47:58 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":34,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:47:58 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":34} 
 Player 2 16:47:58 $FLIP_CARD:  
{"cardId":34} 
 Player 2 16:47:58 $FLIP_CARD:  
{"cardId":34} 
 Player 2 16:47:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":34} 
 Player 2 16:47:58 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:47:58 $MOVE_CARD:  
{"moveIndex":3,"cardId":134,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:47:59 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":134,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:47:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":134} 
 Player 2 16:47:59 $FLIP_CARD:  
{"cardId":134} 
 Player 2 16:47:59 $FLIP_CARD:  
{"cardId":134} 
 Player 2 16:47:59 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 
 Player 2 16:47:59 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:47:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:47:59 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:47:59 $MOVE_CARD:  
{"moveIndex":4,"cardId":112,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:47:59 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":112,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:47:59 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":112} 
 Player 2 16:47:59 $FLIP_CARD:  
{"cardId":112} 
 Player 2 16:47:59 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":112} 
 Player 2 16:47:59 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:47:59 $MOVE_CARD:  
{"moveIndex":5,"cardId":19,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:48:00 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":19,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:48:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":19} 
 Player 2 16:48:00 $FLIP_CARD:  
{"cardId":19} 
 Player 2 16:48:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":19} 
 Player 2 16:48:00 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:48:00 $MOVE_CARD:  
{"moveIndex":6,"cardId":58,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:48:00 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":58,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:48:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":58} 
 Player 2 16:48:00 $FLIP_CARD:  
{"cardId":58} 
 Player 2 16:48:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":58} 
 Player 2 16:48:00 $GAME_HAS_STARTED:  
 Player 2 16:48:00 $SET_TURN:  
{"playerId":2} 
 Player 2 16:48:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:48:00 $NEXT_STACK_ID:  
 Player 2 16:48:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:48:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:48:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 2 16:48:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 16:48:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:48:00 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 16:48:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:48:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 2 16:48:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 16:48:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:48:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:48:00 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 16:48:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:48:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:48:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:48:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:48:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:48:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:48:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:48:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:48:00 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 16:48:00 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 16:48:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 16:48:00 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:48:00 $MOVE_CARD:  
{"moveIndex":7,"cardId":143,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:48:01 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":143,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:48:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":143} 
 Player 2 16:48:01 $FLIP_CARD:  
{"cardId":143} 
 Player 2 16:48:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":143} 
 Player 2 16:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:48:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 2 16:48:01 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 16:48:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 16:48:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:48:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 2 16:48:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 16:48:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:48:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:48:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:48:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:48:01 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 16:48:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:48:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:48:01 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 16:48:01 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 16:48:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:48:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:48:01 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:48:01 $UPDATE_ACTIONS:  
 Player 2 16:48:03 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 16:48:04 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:48:13 $MOVE_CARD:  
{"moveIndex":8,"cardId":134,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 1 16:48:14 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":134,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:48:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":134} 
 Player 2 16:48:17 $NEXT_STACK_ID:  
 Player 2 16:48:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:48:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 2 16:48:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 16:48:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 16:48:17 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":134} 
 Player 2 16:48:17 $MOVE_CARD:  
{"moveIndex":9,"cardId":134,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:48:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:48:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:48:18 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":134,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:48:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:48:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:48:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:48:18 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 2 16:48:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:48:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:48:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 16:48:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 16:48:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:48:18 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 2 16:48:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 16:48:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:48:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:48:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:48:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man "} 
 Player 1 16:48:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:48:18 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 2 16:48:18 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 16:48:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 16:48:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Hanged Man: ChainEffects"} 
 Player 2 16:48:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 2 16:48:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 2 16:48:56 $MATCH:  
 Player 1 16:48:57 $MATCH:  
 Player 1 16:48:57 $START_GAME:  
 Player 2 16:48:57 $MOVE_TO_TABLE:  
 Player 1 16:48:57 $MOVE_TO_TABLE:  
 Player 2 16:49:05 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 16:49:05 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 16:49:05 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":260,"itemCardId":261} 
 Player 2 16:49:05 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 
 Player 1 16:49:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":261}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:49:05 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[150,170,179,192,188,146,155,169,201,191,147,202,165,164,175,178,186,187,198,195,180,181,160,156,163,184,177,185,149,152,148,171,161,182,197,173,157,162,167,166,194,154,190,172,174,200,176,168,183,196,203,193,199,153,159,158,151,189]} 
 Player 2 16:49:11 $EDEN_CHOSEN:  
{"cardId":179,"playerId":2} 
 Player 2 16:49:11 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[150,170,192,188,146,155,169,201,191,147,202,165,164,175,178,186,187,198,195,180,181,160,156,163,184,177,185,149,152,148,171,161,182,197,173,157,162,167,166,194,154,190,172,174,200,176,168,183,196,203,193,199,153,159,158,151,189]} 
 Player 2 16:49:11 $FLIP_CARD:  
{"cardId":179} 
 Player 2 16:49:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":179}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:49:11 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":266,"itemCardId":179} 
 Player 2 16:49:11 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[33,126,63,91,36,64,96,123,26,12,137,82,20,21,60,79,32,71,102,88,58,106,120,93,109,132,34,40,129,37,136,24,42,73,104,57,66,77,111,119,115,27,81,128,92,52,31,75,15,95,87,51,10,16,139,43,76,13,41,141,18,116,83,22,89,47,112,69,131,49,86,134,46,17,125,105,101,121,85,84,70,100,67,68,74,48,142,124,98,50,59,72,118,107,61,97,11,19,35,39,135,113,114,94,7,140,30,117,45,65,143,122,130,108,8,55,23,56,90,133,110,99,53,62,29,78,80,138,54,14,9,103,38,127,28,25,44]} 
 Player 2 16:49:11 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[238,215,243,218,256,252,206,211,226,248,227,234,222,228,213,208,230,219,216,207,251,229,250,214,221,220,259,240,235,223,247,242,212,257,231,253,258,246,245,224,236,217,209,210,249,233,239,255,232,244,241,254,237,225]} 
 Player 2 16:49:11 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[158,167,173,202,151,160,153,183,150,174,155,147,196,190,164,146,176,198,195,172,191,157,177,170,181,186,165,161,152,154,200,159,169,192,187,188,182,184,199,203,194,156,148,149,163,197,166,193,189,178,168,162,175,171,201,180,185]} 
 Player 2 16:49:11 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:49:11 $FLIP_CARD:  
{"cardId":185} 
 Player 2 16:49:11 $ADD_STORE_CARD:  
{"cardId":185} 
 Player 2 16:49:11 $DRAW_CARD:  
{"deckType":5} 
 Player 2 16:49:11 $FLIP_CARD:  
{"cardId":180} 
 Player 2 16:49:11 $ADD_STORE_CARD:  
{"cardId":180} 
 Player 2 16:49:11 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:49:11 $FLIP_CARD:  
{"cardId":225} 
 Player 2 16:49:11 $REGISTER_PASSIVE_ITEM:  
{"cardId":225} 
 Player 2 16:49:11 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":225} 
 Player 2 16:49:11 $NEW_MONSTER_ON_PLACE:  
{"cardId":225,"monsterPlaceId":1} 
 Player 2 16:49:11 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:49:11 $FLIP_CARD:  
{"cardId":237} 
 Player 2 16:49:11 $REGISTER_PASSIVE_ITEM:  
{"cardId":237} 
 Player 2 16:49:11 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":237} 
 Player 2 16:49:11 $NEW_MONSTER_ON_PLACE:  
{"cardId":237,"monsterPlaceId":2} 
 Player 2 16:49:11 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:49:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:49:11 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:49:11 $MOVE_CARD:  
{"moveIndex":1,"cardId":44,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:49:12 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":44,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:49:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":44} 
 Player 2 16:49:12 $FLIP_CARD:  
{"cardId":44} 
 Player 2 16:49:12 $FLIP_CARD:  
{"cardId":44} 
 Player 2 16:49:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":44} 
 Player 2 16:49:12 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:49:12 $MOVE_CARD:  
{"moveIndex":2,"cardId":25,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:49:12 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":25,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:49:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":25} 
 Player 2 16:49:12 $FLIP_CARD:  
{"cardId":25} 
 Player 2 16:49:12 $FLIP_CARD:  
{"cardId":25} 
 Player 2 16:49:12 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":25} 
 Player 2 16:49:12 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:49:12 $MOVE_CARD:  
{"moveIndex":3,"cardId":28,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:49:12 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":28,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:49:12 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":28} 
 Player 2 16:49:13 $FLIP_CARD:  
{"cardId":28} 
 Player 2 16:49:13 $FLIP_CARD:  
{"cardId":28} 
 Player 2 16:49:13 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":28} 
 Player 2 16:49:13 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 16:49:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:49:13 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:49:13 $MOVE_CARD:  
{"moveIndex":4,"cardId":127,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:49:13 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":127,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:49:13 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":127} 
 Player 2 16:49:13 $FLIP_CARD:  
{"cardId":127} 
 Player 2 16:49:13 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":127} 
 Player 2 16:49:13 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:49:13 $MOVE_CARD:  
{"moveIndex":5,"cardId":38,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:49:13 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":38,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:49:13 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":38} 
 Player 2 16:49:13 $FLIP_CARD:  
{"cardId":38} 
 Player 2 16:49:13 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":38} 
 Player 2 16:49:13 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:49:13 $MOVE_CARD:  
{"moveIndex":6,"cardId":103,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:49:14 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":103,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:49:14 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":103} 
 Player 2 16:49:14 $FLIP_CARD:  
{"cardId":103} 
 Player 2 16:49:14 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":103} 
 Player 2 16:49:14 $GAME_HAS_STARTED:  
 Player 2 16:49:14 $SET_TURN:  
{"playerId":1} 
 Player 2 16:49:14 $START_TURN:  
{"playerId":1} 
 Player 2 16:49:14 $UPDATE_ACTIONS:  
 Player 1 16:49:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:49:14 $NEXT_STACK_ID:  
 Player 1 16:49:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:49:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 16:49:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 16:49:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:49:14 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 16:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:49:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 16:49:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 16:49:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 16:49:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:49:14 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 16:49:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 16:49:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:49:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:49:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:49:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:49:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:49:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:49:14 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 16:49:14 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 16:49:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 16:49:14 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:49:14 $MOVE_CARD:  
{"moveIndex":7,"cardId":9,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:49:15 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":9,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:49:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":9} 
 Player 1 16:49:15 $FLIP_CARD:  
{"cardId":9} 
 Player 1 16:49:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":9} 
 Player 1 16:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:49:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 16:49:15 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 16:49:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 16:49:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:49:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 16:49:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 16:49:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 16:49:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:49:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:49:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:49:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:49:15 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 16:49:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 16:49:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:49:15 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 16:49:15 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 16:49:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 16:49:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:49:15 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:49:16 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 16:49:18 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 16:49:29 $MOVE_CARD:  
{"moveIndex":8,"cardId":134,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 2 16:49:29 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:49:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 
 Player 1 16:49:32 $NEXT_STACK_ID:  
 Player 1 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 1 16:49:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 16:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 1 16:49:32 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":134} 
 Player 1 16:49:32 $MOVE_CARD:  
{"moveIndex":9,"cardId":134,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:49:32 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:49:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:49:32 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 1 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:49:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 1 16:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 16:49:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:49:32 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 1 16:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 16:49:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:49:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:49:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:49:32 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 1 16:49:32 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 1 16:49:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 1 16:49:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:49:32 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 16:49:34 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 16:49:47 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:49:47 $MOVE_CARD:  
{"moveIndex":10,"cardId":14,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:49:47 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":14,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:49:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":14} 
 Player 1 16:49:47 $FLIP_CARD:  
{"cardId":14} 
 Player 1 16:49:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":14} 
 Player 1 16:49:47 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:49:47 $MOVE_CARD:  
{"moveIndex":11,"cardId":54,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:49:48 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":54,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:49:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":54} 
 Player 1 16:49:48 $FLIP_CARD:  
{"cardId":54} 
 Player 1 16:49:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":54} 
 Player 1 16:49:48 $MOVE_CARD:  
{"moveIndex":12,"cardId":134,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 16:49:48 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 16:49:48 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":134} 
 Player 1 16:49:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 16:49:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:49:48 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 1 16:49:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 1 16:49:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:49:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":260,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 16:49:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 1 16:49:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 16:49:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:49:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:49:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:49:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:49:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:49:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 16:49:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:49:48 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 1 16:49:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 16:49:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:49:48 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 1 16:49:48 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 1 16:49:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 16:49:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:49:48 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 1 16:49:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 1 16:49:51 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 1 16:50:06 $NEXT_STACK_ID:  
 Player 1 16:50:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 16:50:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 16:50:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 
 Player 1 16:50:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:50:06 $ACTION_MASSAGE_REMOVE:  
{"id":20} 
 Player 1 16:50:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 16:50:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":0,"stackEffectType":4}} 
 Player 1 16:50:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 
 Player 1 16:50:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 16:50:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:50:06 $ACTION_MASSAGE_REMOVE:  
{"id":22} 
 Player 1 16:50:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 16:50:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:50:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:50:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 16:50:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 16:50:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:50:06 $ACTION_MASSAGE_REMOVE:  
{"id":23} 
 Player 1 16:50:06 $ACTION_MASSAGE_REMOVE:  
{"id":21} 
 Player 1 16:50:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 
 Player 1 16:50:06 $DRAW_CARD:  
{"deckType":2} 
 Player 1 16:50:06 $SHOW_CARD_PREVIEW:  
{"cardToShowId":254,"playerId":1} 
 Player 1 16:50:10 $FLIP_CARD:  
{"cardId":254} 
 Player 1 16:50:10 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":254} 
 Player 1 16:50:10 $NEW_MONSTER_ON_PLACE:  
{"cardId":254,"monsterPlaceId":2} 
 Player 1 16:50:11 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":254,"particleType":5} 
 Player 1 16:50:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 
 Player 1 16:50:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 1 16:50:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":254,"stackEffectType":4}} 
 Player 1 16:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":24} 
 Player 1 16:50:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 
 Player 1 16:50:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":260,"attackingPlayerCardId":260,"idOfCardBeingAttacked":254,"stackEffectType":4}} 
 Player 1 16:50:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 
 Player 1 16:50:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 1 16:50:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:50:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:50:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 16:50:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on TopBlankCard"} 
 Player 2 16:50:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 
 Player 2 16:50:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 
 Player 2 16:50:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":27} 
 Player 1 16:50:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 1 16:50:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":28} 
 Player 1 16:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":26} 
 Player 1 16:50:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 1 16:50:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":25} 
 Player 1 16:50:12 $ACTION_MASSAGE_REMOVE:  
{"id":29} 
 Player 1 16:50:13 $ACTION_MASSAGE_REMOVE:  
{"id":25} 
 Player 1 16:50:17 $NEXT_STACK_ID:  
 Player 1 16:50:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 1 16:50:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":261,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 16:50:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add ActivateItem 4 "}} 
 Player 1 16:50:17 $USE_ITEM:  
{"cardId":261} 
 Player 1 16:50:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:50:17 $ACTION_MASSAGE_REMOVE:  
{"id":30} 
 Player 1 16:50:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 1 16:50:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":261,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:50:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding ActivateItem 4"},"childOfId":30} 
 Player 1 16:50:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 1 16:50:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:50:17 $ACTION_MASSAGE_REMOVE:  
{"id":32} 
 Player 1 16:50:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 1 16:50:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:50:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:50:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 2 16:50:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 2 16:50:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:50:18 $ACTION_MASSAGE_REMOVE:  
{"id":33} 
 Player 1 16:50:18 $ACTION_MASSAGE_REMOVE:  
{"id":31} 
 Player 1 16:50:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve ActivateItem 4 "}} 
 Player 1 16:50:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":261,"particleType":6} 
 Player 1 16:50:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":261,"particleType":6} 
 Player 1 16:50:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":254,"particleType":5} 
 Player 1 16:50:20 $CANCEL_ATTACK:  
 Player 1 16:50:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 1 16:50:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":261,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:50:20 $ACTION_MASSAGE_REMOVE:  
{"id":34} 
 Player 1 16:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve ActivateItem 4  "}} 
 Player 1 16:50:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":260,"hasLockingStackEffect":false,"itemToPlayCardId":261,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 16:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":35} 
 Player 1 16:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 1 16:50:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:50:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:50:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 2 16:50:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 2 16:50:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 2 16:50:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lord Of The Pit"} 
 Player 2 16:50:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:50:20 $ACTION_MASSAGE_REMOVE:  
{"id":37} 
 Player 1 16:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 1 16:50:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:50:20 $ACTION_MASSAGE_REMOVE:  
{"id":38} 
 Player 1 16:50:20 $ACTION_MASSAGE_REMOVE:  
{"id":36} 
 Player 1 16:50:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 1 16:50:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:20 $ACTION_MASSAGE_REMOVE:  
{"id":35} 
 Player 1 16:50:21 $ACTION_MASSAGE_REMOVE:  
{"id":39} 
 Player 1 16:50:23 $ACTION_MASSAGE_REMOVE:  
{"id":35} 
 Player 1 16:50:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:50:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:23 $REPLACE_STACK:  
{"currentStack":[]} 
 Player 1 16:50:23 $END_TURN:  
 Player 1 16:50:23 $SET_TURN:  
{"playerId":2} 
 Player 1 16:50:23 $START_TURN:  
{"playerId":2} 
 Player 2 16:50:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:23 $NEXT_STACK_ID:  
 Player 2 16:50:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:50:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 16:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 5 "}} 
 Player 2 16:50:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 16:50:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:50:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 16:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 5"},"childOfId":0} 
 Player 2 16:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:50:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:23 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 16:50:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:50:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:50:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:50:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 16:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 16:50:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 5 "}} 
 Player 2 16:50:24 $DRAW_CARD:  
{"deckType":1} 
 Player 2 16:50:24 $MOVE_CARD:  
{"moveIndex":13,"cardId":138,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 16:50:24 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":138,"flipIfFlipped":false,"playerId":2} 
 Player 2 16:50:24 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":138} 
 Player 2 16:50:24 $FLIP_CARD:  
{"cardId":138} 
 Player 2 16:50:24 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":138} 
 Player 2 16:50:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:50:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 16:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 16:50:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 5  "}} 
 Player 2 16:50:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 16:50:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 5"},"childOfId":5} 
 Player 2 16:50:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:50:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:50:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:50:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:50:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 16:50:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 16:50:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:50:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 16:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 16:50:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:50:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:50:26 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 16:50:27 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 16:50:27 $NEXT_STACK_ID:  
 Player 2 16:50:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 2 16:50:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 16:50:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 6 "}} 
 Player 2 16:50:27 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":103} 
 Player 2 16:50:27 $MOVE_CARD:  
{"moveIndex":14,"cardId":103,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:50:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:28 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":103,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:50:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 
 Player 2 16:50:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 
 Player 2 16:50:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:30 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 2 16:50:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 
 Player 2 16:50:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":103,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:50:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 6"},"childOfId":10} 
 Player 2 16:50:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 16:50:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:30 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 2 16:50:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 16:50:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 16:50:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 16:50:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:30 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 2 16:50:30 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 2 16:50:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 6 "}} 
 Player 2 16:50:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 
 Player 2 16:50:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":103,"particleType":6} 
 Player 2 16:50:32 $DISABLE_PARTICLE_EFFECT:  
{"cardId":103,"particleType":6} 
 Player 2 16:50:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":225,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 16:50:32 $NEXT_STACK_ID:  
 Player 2 16:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 
 Player 2 16:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Activate Fistula effect GainStats<GainStats>"} 
 Player 2 16:50:32 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":225,"hasLockingStackEffect":false,"cardActivatorId":225,"cardWithEffectId":225,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":225,"cardId":225,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 16:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Add ActivatePassiveEffect 7 "}} 
 Player 2 16:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Activate Fistula effect GainStats<GainStats>"} 
 Player 2 16:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 2 16:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Activate Fistula effect GainStats<GainStats>"} 
 Player 2 16:50:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[225],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":225,"effectCardPlayer":225},"entityId":7,"creatorCardId":225,"hasLockingStackEffect":false,"cardActivatorId":225,"cardWithEffectId":225,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":225,"cardId":225,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":15} 
 Player 2 16:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 16:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 16:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 16:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Activate Fistula "} 
 Player 1 16:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Activate Fistula "} 
 Player 1 16:50:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 2 16:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 16:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 2 16:50:33 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 2 16:50:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Resolve ActivatePassiveEffect 7 "}} 
 Player 2 16:50:33 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":225,"particleType":6} 
 Player 2 16:50:34 $DISABLE_PARTICLE_EFFECT:  
{"cardId":225,"particleType":6} 
 Player 2 16:50:34 $MONSTER_GAIN_ROLL_BONUS:  
{"cardId":225,"bonusToGain":1} 
 Player 2 16:50:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":225,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 16:50:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage \n2:Activate Fistula effect GainStats<GainStats>"} 
 Player 2 16:50:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[225],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":225,"effectCardPlayer":225},"entityId":7,"creatorCardId":225,"hasLockingStackEffect":false,"cardActivatorId":225,"cardWithEffectId":225,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:50:35 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 
 Player 2 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 
 Player 2 16:50:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[225],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":225,"effectCardPlayer":225},"entityId":7,"creatorCardId":225,"hasLockingStackEffect":false,"cardActivatorId":225,"cardWithEffectId":225,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":20} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 16:50:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:35 $ACTION_MASSAGE_REMOVE:  
{"id":22} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 16:50:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Activate Fistula "} 
 Player 1 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Activate Fistula "} 
 Player 1 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Activate Fistula "} 
 Player 1 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb  \n2:Activate Fistula "} 
 Player 1 16:50:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:35 $ACTION_MASSAGE_REMOVE:  
{"id":23} 
 Player 2 16:50:35 $ACTION_MASSAGE_REMOVE:  
{"id":21} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 6 "}} 
 Player 2 16:50:35 $MONSTER_GET_DAMAGED:  
{"cardId":225,"hpLeft":1,"damageDealerId":266} 
 Player 2 16:50:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":225,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:50:35 $MOVE_CARD:  
{"moveIndex":15,"cardId":103,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 1 16:50:35 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":103,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:50:35 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":103} 
 Player 2 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb: DealDamage"} 
 Player 2 16:50:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:50:35 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 6  "}} 
 Player 2 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":266,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":103,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 6"},"childOfId":25} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 16:50:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 16:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 16:50:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:35 $ACTION_MASSAGE_REMOVE:  
{"id":27} 
 Player 2 16:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 16:50:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:36 $ACTION_MASSAGE_REMOVE:  
{"id":28} 
 Player 2 16:50:36 $ACTION_MASSAGE_REMOVE:  
{"id":26} 
 Player 2 16:50:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 2 16:50:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:36 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 2 16:50:36 $ACTION_MASSAGE_REMOVE:  
{"id":20} 
 Player 2 16:50:37 $ACTION_MASSAGE_REMOVE:  
{"id":29} 
 Player 2 16:50:37 $NEXT_STACK_ID:  
 Player 2 16:50:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 2 16:50:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":179,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 16:50:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add ActivateItem 8 "}} 
 Player 1 16:50:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:50:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:37 $ACTION_MASSAGE_REMOVE:  
{"id":20} 
 Player 2 16:50:38 $ACTION_MASSAGE_REMOVE:  
{"id":25} 
 Player 2 16:50:39 $USE_ITEM:  
{"cardId":179} 
 Player 2 16:50:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:39 $ACTION_MASSAGE_REMOVE:  
{"id":30} 
 Player 2 16:50:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 2 16:50:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":179,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding ActivateItem 8"},"childOfId":30} 
 Player 2 16:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 16:50:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:39 $ACTION_MASSAGE_REMOVE:  
{"id":32} 
 Player 2 16:50:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 16:50:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 1 16:50:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 1 16:50:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:40 $ACTION_MASSAGE_REMOVE:  
{"id":33} 
 Player 2 16:50:40 $ACTION_MASSAGE_REMOVE:  
{"id":31} 
 Player 2 16:50:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve ActivateItem 8 "}} 
 Player 2 16:50:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":179,"particleType":6} 
 Player 2 16:50:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":179,"particleType":6} 
 Player 2 16:50:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":225,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 16:50:42 $NEXT_STACK_ID:  
 Player 2 16:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 2 16:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula effect GainStats<GainStats>"} 
 Player 2 16:50:42 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":225,"hasLockingStackEffect":false,"cardActivatorId":225,"cardWithEffectId":225,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":225,"cardId":225,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 16:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add ActivatePassiveEffect 9 "}} 
 Player 2 16:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula effect GainStats<GainStats>"} 
 Player 2 16:50:42 $ACTION_MASSAGE_REMOVE:  
{"id":35} 
 Player 2 16:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula effect GainStats<GainStats>"} 
 Player 2 16:50:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[225],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":225,"effectCardPlayer":225},"entityId":9,"creatorCardId":225,"hasLockingStackEffect":false,"cardActivatorId":225,"cardWithEffectId":225,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":225,"cardId":225,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":35} 
 Player 2 16:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 16:50:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 1 16:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 1 16:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula "} 
 Player 1 16:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula "} 
 Player 1 16:50:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:42 $ACTION_MASSAGE_REMOVE:  
{"id":37} 
 Player 2 16:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 16:50:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:42 $ACTION_MASSAGE_REMOVE:  
{"id":38} 
 Player 2 16:50:42 $ACTION_MASSAGE_REMOVE:  
{"id":36} 
 Player 2 16:50:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve ActivatePassiveEffect 9 "}} 
 Player 2 16:50:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":225,"particleType":6} 
 Player 2 16:50:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":225,"particleType":6} 
 Player 2 16:50:44 $MONSTER_GAIN_ROLL_BONUS:  
{"cardId":225,"bonusToGain":1} 
 Player 2 16:50:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":225,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula effect GainStats<GainStats>"} 
 Player 2 16:50:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[225],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":225,"effectCardPlayer":225},"entityId":9,"creatorCardId":225,"hasLockingStackEffect":false,"cardActivatorId":225,"cardWithEffectId":225,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:50:44 $ACTION_MASSAGE_REMOVE:  
{"id":39} 
 Player 2 16:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 
 Player 2 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 2 16:50:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[225],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":225,"effectCardPlayer":225},"entityId":9,"creatorCardId":225,"hasLockingStackEffect":false,"cardActivatorId":225,"cardWithEffectId":225,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":40} 
 Player 2 16:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 16:50:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:44 $ACTION_MASSAGE_REMOVE:  
{"id":42} 
 Player 2 16:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 16:50:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula "} 
 Player 1 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula "} 
 Player 1 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula "} 
 Player 1 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:Activate Fistula "} 
 Player 1 16:50:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:44 $ACTION_MASSAGE_REMOVE:  
{"id":43} 
 Player 2 16:50:44 $ACTION_MASSAGE_REMOVE:  
{"id":41} 
 Player 2 16:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve ActivateItem 8 "}} 
 Player 2 16:50:44 $MONSTER_GET_DAMAGED:  
{"cardId":225,"hpLeft":0,"damageDealerId":266} 
 Player 2 16:50:44 $NEXT_STACK_ID:  
 Player 2 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 2 16:50:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:[object Object] killed by Eden"} 
 Player 2 16:50:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":266,"monsterToDieCardId":225,"stackEffectType":5,"killerId":266}} 
 Player 2 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:[object Object] killed by Eden"} 
 Player 2 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:[object Object] killed by Eden"} 
 Player 2 16:50:44 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":179,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":10,"creatorCardId":266,"monsterToDieCardId":225,"stackEffectType":5,"killerId":266}]} 
 Player 2 16:50:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":225,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:[object Object] killed by Eden"} 
 Player 2 16:50:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":179,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:50:44 $ACTION_MASSAGE_REMOVE:  
{"id":34} 
 Player 2 16:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve ActivateItem 8  "}} 
 Player 2 16:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Eden"} 
 Player 2 16:50:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":266,"hasLockingStackEffect":false,"itemToPlayCardId":179,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve ActivateItem 8"},"childOfId":45} 
 Player 2 16:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 2 16:50:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":47} 
 Player 2 16:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 2 16:50:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Mr Boom \n2:[object Object] killed by undefined"} 
 Player 1 16:50:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":48} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":46} 
 Player 2 16:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve MonsterDeath 10 "}} 
 Player 2 16:50:45 $NEXT_STACK_ID:  
 Player 2 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Eden"} 
 Player 2 16:50:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:[object Object] killed by Eden"} 
 Player 2 16:50:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":266,"monsterCardWithRewardId":225,"playerCardIdToReward":266,"stackEffectType":7}} 
 Player 2 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:[object Object] killed by Eden"} 
 Player 2 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:[object Object] killed by Eden"} 
 Player 2 16:50:45 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":266,"monsterCardWithRewardId":225,"playerCardIdToReward":266,"stackEffectType":7},{"entityId":10,"creatorCardId":266,"monsterToDieCardId":225,"stackEffectType":5,"killerId":266}]} 
 Player 2 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:[object Object] killed by Eden"} 
 Player 2 16:50:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":266,"monsterToDieCardId":225,"stackEffectType":5,"killerId":266}} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":49} 
 Player 2 16:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve MonsterDeath 10  "}} 
 Player 2 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward"} 
 Player 2 16:50:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":266,"monsterToDieCardId":225,"stackEffectType":5,"killerId":266}} 
 Player 2 16:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve MonsterDeath 10"},"childOfId":50} 
 Player 2 16:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 2 16:50:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":52} 
 Player 2 16:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 2 16:50:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:[object Object] killed by undefined"} 
 Player 1 16:50:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":53} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":51} 
 Player 2 16:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve MonsterRewardStackEffect 11 "}} 
 Player 2 16:50:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":34} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":40} 
 Player 2 16:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":45} 
 Player 2 16:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Fizzle MonsterRewardStackEffect 11"}} 
 Player 2 16:50:45 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":7} 
 Player 2 16:50:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":7}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 16:50:45 $MOVE_CARD:  
{"moveIndex":16,"cardId":225,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 
 Player 1 16:50:46 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":225,"flipIfFlipped":true,"playerId":2} 
 Player 2 16:50:46 $GET_SOUL:  
{"playerId":2,"cardId":225} 
 Player 2 16:50:46 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":225} 
 Player 2 16:50:46 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":225} 
 Player 2 16:50:46 $NEXT_STACK_ID:  
 Player 2 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 
 Player 2 16:50:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":266,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Add RefillEmptySlot 12 "}} 
 Player 2 16:50:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":56} 
 Player 2 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 
 Player 2 16:50:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":266,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Adding RefillEmptySlot 12"},"childOfId":56} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 
 Player 2 16:50:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":58} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 2 16:50:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward"} 
 Player 1 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward"} 
 Player 1 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 16:50:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":59} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":57} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve RefillEmptySlot 12 "}} 
 Player 2 16:50:46 $DRAW_CARD:  
{"deckType":2} 
 Player 2 16:50:46 $FLIP_CARD:  
{"cardId":241} 
 Player 2 16:50:46 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":241} 
 Player 2 16:50:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":241,"monsterPlaceId":1} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":60} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Remove After Resolve RefillEmptySlot 12  "}} 
 Player 2 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":266,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Remove After Resolve RefillEmptySlot 12"},"childOfId":61} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 
 Player 2 16:50:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 16:50:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fistula<Monster> reward \n2:Refill holder1 slot"} 
 Player 1 16:50:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":63} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 
 Player 2 16:50:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":64} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":62} 
 Player 2 16:50:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Stack Was Emptied "}} 
 Player 2 16:50:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":34} 
 Player 2 16:50:46 $ACTION_MASSAGE_REMOVE:  
{"id":40} 
 Player 2 16:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":55} 
 Player 2 16:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":54} 
 Player 2 16:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Stack Was Emptied "}} 
 Player 2 16:50:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":34} 
 Player 2 16:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":40} 
 Player 2 16:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":45} 
 Player 2 16:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":50} 
 Player 2 16:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":65} 
 Player 2 16:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":66} 
 Player 2 16:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":55} 
 Player 2 16:50:49 $ACTION_MASSAGE_REMOVE:  
{"id":61} 
 Player 2 16:51:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 16:51:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:51:13 $REPLACE_STACK:  
{"currentStack":[]} 
 Player 2 16:51:13 $END_TURN:  
 Player 2 16:51:13 $SET_TURN:  
{"playerId":1} 
 Player 2 16:51:13 $START_TURN:  
{"playerId":1} 
 Player 1 16:51:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:51:13 $RECHARGE_ITEM:  
{"cardId":261} 
 Player 1 16:51:13 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":261} 
 Player 1 16:51:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:51:13 $NEXT_STACK_ID:  
 Player 1 16:51:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:51:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:51:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 16:51:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add StartTurnLoot 13 "}} 
 Player 1 16:51:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:51:13 $ACTION_MASSAGE_REMOVE:  
{"id":40} 
 Player 1 16:51:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:51:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 16:51:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding StartTurnLoot 13"},"childOfId":40} 
 Player 1 16:51:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 1 16:51:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:51:14 $ACTION_MASSAGE_REMOVE:  
{"id":42} 
 Player 1 16:51:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 1 16:51:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:51:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:51:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:51:14 $ACTION_MASSAGE_REMOVE:  
{"id":43} 
 Player 1 16:51:14 $ACTION_MASSAGE_REMOVE:  
{"id":41} 
 Player 1 16:51:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve StartTurnLoot 13 "}} 
 Player 1 16:51:14 $DRAW_CARD:  
{"deckType":1} 
 Player 1 16:51:14 $MOVE_CARD:  
{"moveIndex":17,"cardId":80,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 16:51:14 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":80,"flipIfFlipped":false,"playerId":1} 
 Player 1 16:51:14 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":80} 
 Player 1 16:51:14 $FLIP_CARD:  
{"cardId":80} 
 Player 1 16:51:14 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":80} 
 Player 1 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 16:51:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 16:51:14 $ACTION_MASSAGE_REMOVE:  
{"id":44} 
 Player 1 16:51:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve StartTurnLoot 13  "}} 
 Player 1 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:51:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 16:51:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve StartTurnLoot 13"},"childOfId":45} 
 Player 1 16:51:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 1 16:51:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 16:51:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 16:51:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 16:51:14 $ACTION_MASSAGE_REMOVE:  
{"id":47} 
 Player 1 16:51:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 1 16:51:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 16:51:14 $ACTION_MASSAGE_REMOVE:  
{"id":48} 
 Player 1 16:51:14 $ACTION_MASSAGE_REMOVE:  
{"id":46} 
 Player 1 16:51:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Stack Was Emptied "}} 
 Player 1 16:51:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 16:51:15 $ACTION_MASSAGE_REMOVE:  
{"id":45} 
 Player 1 16:51:16 $ACTION_MASSAGE_REMOVE:  
{"id":49} 
 Player 1 16:51:17 $ACTION_MASSAGE_REMOVE:  
{"id":45} 
 Player 2 17:11:14 $MATCH:  
 Player 1 17:11:14 $MATCH:  
 Player 1 17:11:15 $START_GAME:  
 Player 1 17:11:15 $MOVE_TO_TABLE:  
 Player 2 17:11:15 $MOVE_TO_TABLE:  
 Player 2 17:11:20 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 17:11:20 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 17:11:20 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":268,"itemCardId":269} 
 Player 2 17:11:20 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 
 Player 1 17:11:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 17:11:20 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[161,193,195,167,162,177,152,178,186,154,203,166,146,183,151,198,180,148,163,201,184,199,194,172,164,171,158,197,173,196,149,153,147,192,160,185,187,179,150,202,168,170,159,155,165,200,174,169,190,156,188,175,176,189,191,182,181,157]} 
 Player 2 17:11:24 $EDEN_CHOSEN:  
{"cardId":195,"playerId":2} 
 Player 2 17:11:25 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[161,193,167,162,177,152,178,186,154,203,166,146,183,151,198,180,148,163,201,184,199,194,172,164,171,158,197,173,196,149,153,147,192,160,185,187,179,150,202,168,170,159,155,165,200,174,169,190,156,188,175,176,189,191,182,181,157]} 
 Player 2 17:11:25 $FLIP_CARD:  
{"cardId":195} 
 Player 2 17:11:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":195}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 17:11:25 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":266,"itemCardId":195} 
 Player 2 17:11:25 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[80,112,10,133,71,38,93,102,122,109,134,87,69,76,49,55,34,115,31,117,79,36,94,61,141,95,98,53,21,107,20,86,82,52,29,125,70,12,90,56,132,37,8,68,131,72,143,23,73,119,28,128,114,47,67,41,121,18,30,99,27,63,7,39,111,74,77,64,35,16,137,11,106,44,26,118,97,91,50,142,57,43,103,138,88,48,101,51,25,59,84,113,140,108,139,42,15,110,116,60,85,126,22,62,120,136,9,17,104,92,65,33,13,130,78,45,81,105,123,100,129,32,135,127,46,24,75,83,89,124,40,96,54,14,66,19,58]} 
 Player 2 17:11:25 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[243,234,223,239,241,206,257,228,220,224,237,242,247,226,254,256,244,230,258,238,259,213,219,245,235,236,208,251,214,216,255,252,210,232,246,229,240,215,248,218,221,217,212,253,225,233,250,231,211,222,249,209,207,227]} 
 Player 2 17:11:25 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[149,183,185,197,146,153,156,152,164,147,189,178,188,176,202,170,163,175,177,159,191,174,166,172,186,190,165,194,173,168,199,181,151,160,192,198,161,158,155,150,169,203,182,157,200,193,171,148,162,179,201,167,187,154,184,196,180]} 
 Player 2 17:11:25 $DRAW_CARD:  
{"deckType":5} 
 Player 2 17:11:25 $FLIP_CARD:  
{"cardId":180} 
 Player 2 17:11:25 $ADD_STORE_CARD:  
{"cardId":180} 
 Player 2 17:11:25 $DRAW_CARD:  
{"deckType":5} 
 Player 2 17:11:25 $FLIP_CARD:  
{"cardId":196} 
 Player 2 17:11:25 $ADD_STORE_CARD:  
{"cardId":196} 
 Player 2 17:11:25 $DRAW_CARD:  
{"deckType":2} 
 Player 2 17:11:25 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":227} 
 Player 2 17:11:25 $DRAW_CARD:  
{"deckType":2} 
 Player 2 17:11:25 $FLIP_CARD:  
{"cardId":207} 
 Player 2 17:11:25 $REGISTER_PASSIVE_ITEM:  
{"cardId":207} 
 Player 2 17:11:25 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":207} 
 Player 2 17:11:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":207,"monsterPlaceId":1} 
 Player 2 17:11:25 $DRAW_CARD:  
{"deckType":2} 
 Player 2 17:11:25 $FLIP_CARD:  
{"cardId":209} 
 Player 2 17:11:25 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":209} 
 Player 2 17:11:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":209,"monsterPlaceId":2} 
 Player 2 17:11:25 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 17:11:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 17:11:25 $DRAW_CARD:  
{"deckType":1} 
 Player 2 17:11:25 $MOVE_CARD:  
{"moveIndex":1,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 17:11:25 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":58,"flipIfFlipped":false,"playerId":2} 
 Player 2 17:11:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":58} 
 Player 2 17:11:25 $FLIP_CARD:  
{"cardId":58} 
 Player 2 17:11:25 $FLIP_CARD:  
{"cardId":58} 
 Player 2 17:11:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":58} 
 Player 2 17:11:25 $DRAW_CARD:  
{"deckType":1} 
 Player 2 17:11:25 $MOVE_CARD:  
{"moveIndex":2,"cardId":19,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 17:11:26 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":19,"flipIfFlipped":false,"playerId":2} 
 Player 2 17:11:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":19} 
 Player 2 17:11:26 $FLIP_CARD:  
{"cardId":19} 
 Player 2 17:11:26 $FLIP_CARD:  
{"cardId":19} 
 Player 2 17:11:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":19} 
 Player 2 17:11:26 $DRAW_CARD:  
{"deckType":1} 
 Player 2 17:11:26 $MOVE_CARD:  
{"moveIndex":3,"cardId":66,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 17:11:26 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":66,"flipIfFlipped":false,"playerId":2} 
 Player 2 17:11:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":66} 
 Player 2 17:11:26 $FLIP_CARD:  
{"cardId":66} 
 Player 2 17:11:26 $FLIP_CARD:  
{"cardId":66} 
 Player 2 17:11:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":66} 
 Player 2 17:11:26 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 17:11:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 17:11:26 $DRAW_CARD:  
{"deckType":1} 
 Player 2 17:11:26 $MOVE_CARD:  
{"moveIndex":4,"cardId":14,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 17:11:27 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":14,"flipIfFlipped":false,"playerId":2} 
 Player 2 17:11:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":14} 
 Player 2 17:11:27 $FLIP_CARD:  
{"cardId":14} 
 Player 2 17:11:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":14} 
 Player 2 17:11:27 $DRAW_CARD:  
{"deckType":1} 
 Player 2 17:11:27 $MOVE_CARD:  
{"moveIndex":5,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 17:11:27 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":54,"flipIfFlipped":false,"playerId":2} 
 Player 2 17:11:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":54} 
 Player 2 17:11:27 $FLIP_CARD:  
{"cardId":54} 
 Player 2 17:11:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":54} 
 Player 2 17:11:27 $DRAW_CARD:  
{"deckType":1} 
 Player 2 17:11:27 $MOVE_CARD:  
{"moveIndex":6,"cardId":96,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 17:11:27 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":96,"flipIfFlipped":false,"playerId":2} 
 Player 2 17:11:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":96} 
 Player 2 17:11:27 $FLIP_CARD:  
{"cardId":96} 
 Player 2 17:11:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":96} 
 Player 2 17:11:27 $GAME_HAS_STARTED:  
 Player 2 17:11:27 $SET_TURN:  
{"playerId":2} 
 Player 2 17:11:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 17:11:27 $NEXT_STACK_ID:  
 Player 2 17:11:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 17:11:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 17:11:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 17:11:28 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 17:11:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 17:11:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 17:11:28 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 17:11:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 17:11:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 17:11:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 17:11:28 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 17:11:28 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 17:11:28 $DRAW_CARD:  
{"deckType":1} 
 Player 2 17:11:28 $MOVE_CARD:  
{"moveIndex":7,"cardId":40,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 17:11:28 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":40,"flipIfFlipped":false,"playerId":2} 
 Player 2 17:11:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":40} 
 Player 2 17:11:28 $FLIP_CARD:  
{"cardId":40} 
 Player 2 17:11:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":40} 
 Player 2 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 17:11:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 17:11:28 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 17:11:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 17:11:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 17:11:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 17:11:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 17:11:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 17:11:28 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 17:11:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 17:11:28 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 17:11:28 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 17:11:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 17:11:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 17:11:29 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 17:11:29 $UPDATE_ACTIONS:  
 Player 1 17:11:29 $MOVE_CARD:  
{"moveIndex":8,"cardId":134,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 2 17:11:29 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 17:11:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 
 Player 2 17:11:30 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 17:11:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 17:11:31 $REPLACE_STACK:  
{"currentStack":[]} 
 Player 2 17:11:31 $END_TURN:  
 Player 2 17:11:31 $SET_TURN:  
{"playerId":1} 
 Player 2 17:11:31 $START_TURN:  
{"playerId":1} 
 Player 1 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:11:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 17:11:31 $NEXT_STACK_ID:  
 Player 1 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 17:11:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 
 Player 1 17:11:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 2 "}} 
 Player 1 17:11:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 17:11:31 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 17:11:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 
 Player 1 17:11:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 2"},"childOfId":0} 
 Player 1 17:11:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 17:11:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 17:11:31 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 17:11:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 17:11:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 17:11:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 17:11:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 17:11:31 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 17:11:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 17:11:31 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 17:11:31 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 17:11:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 2 "}} 
 Player 1 17:11:31 $DRAW_CARD:  
{"deckType":1} 
 Player 1 17:11:31 $MOVE_CARD:  
{"moveIndex":9,"cardId":124,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 17:11:32 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":124,"flipIfFlipped":false,"playerId":1} 
 Player 1 17:11:32 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":124} 
 Player 1 17:11:32 $FLIP_CARD:  
{"cardId":124} 
 Player 1 17:11:32 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":124} 
 Player 1 17:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 17:11:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 
 Player 1 17:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 17:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 2  "}} 
 Player 1 17:11:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:11:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 
 Player 1 17:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":5} 
 Player 1 17:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 17:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 17:11:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 17:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 17:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 17:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 17:11:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 17:11:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 17:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 17:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 17:11:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 17:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 17:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 17:11:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 17:11:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:11:32 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 17:11:33 $NEXT_STACK_ID:  
 Player 1 17:11:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:11:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 1 17:11:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 17:11:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 3 "}} 
 Player 1 17:11:33 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":134} 
 Player 1 17:11:33 $MOVE_CARD:  
{"moveIndex":10,"cardId":134,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 17:11:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 17:11:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:11:33 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 17:11:34 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 17:11:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 17:11:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 17:11:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 17:11:34 $ACTION_MASSAGE_REMOVE:  
{"id":10} 
 Player 1 17:11:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 17:11:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 17:11:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":10} 
 Player 1 17:11:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 17:11:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 17:11:34 $ACTION_MASSAGE_REMOVE:  
{"id":12} 
 Player 1 17:11:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 17:11:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 17:11:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 17:11:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 17:11:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 17:11:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 17:11:34 $ACTION_MASSAGE_REMOVE:  
{"id":13} 
 Player 1 17:11:34 $ACTION_MASSAGE_REMOVE:  
{"id":11} 
 Player 1 17:11:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 1 17:11:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 17:11:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 17:11:35 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 17:11:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 
 Player 1 17:12:06 $DECK_ADD_TO_BOTTOM:  
{"deckType":1,"cardId":89} 
 Player 1 17:12:06 $DECK_ADD_TO_BOTTOM:  
{"deckType":5,"cardId":184} 
 Player 1 17:12:06 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":249} 
 Player 1 17:12:06 $DRAW_CARD:  
{"deckType":1} 
 Player 1 17:12:06 $MOVE_CARD:  
{"moveIndex":11,"cardId":89,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 17:12:06 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":89,"flipIfFlipped":false,"playerId":1} 
 Player 1 17:12:06 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":89} 
 Player 1 17:12:06 $FLIP_CARD:  
{"cardId":89} 
 Player 1 17:12:06 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":89} 
 Player 1 17:12:06 $DRAW_CARD:  
{"deckType":1} 
 Player 1 17:12:06 $MOVE_CARD:  
{"moveIndex":12,"cardId":83,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 17:12:07 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":83,"flipIfFlipped":false,"playerId":1} 
 Player 1 17:12:07 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":83} 
 Player 1 17:12:07 $FLIP_CARD:  
{"cardId":83} 
 Player 1 17:12:07 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":83} 
 Player 1 17:12:07 $MOVE_CARD:  
{"moveIndex":13,"cardId":134,"placeID":279,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 2 17:12:07 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":134,"flipIfFlipped":true,"playerId":1} 
 Player 1 17:12:07 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":134} 
 Player 1 17:12:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man: ChainEffects"} 
 Player 1 17:12:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 17:12:07 $ACTION_MASSAGE_REMOVE:  
{"id":14} 
 Player 1 17:12:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 
 Player 1 17:12:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:12:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":268,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 17:12:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":15} 
 Player 1 17:12:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 17:12:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 17:12:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 17:12:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 17:12:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 17:12:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 17:12:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Hanged Man "} 
 Player 2 17:12:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 17:12:07 $ACTION_MASSAGE_REMOVE:  
{"id":17} 
 Player 1 17:12:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 17:12:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 17:12:08 $ACTION_MASSAGE_REMOVE:  
{"id":18} 
 Player 1 17:12:08 $ACTION_MASSAGE_REMOVE:  
{"id":16} 
 Player 1 17:12:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 17:12:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 17:12:08 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 1 17:12:09 $ACTION_MASSAGE_REMOVE:  
{"id":19} 
 Player 1 17:12:10 $ACTION_MASSAGE_REMOVE:  
{"id":15} 
 Player 1 23:49:33 $MATCH:  
 Player 2 23:51:39 $MATCH:  
 Player 1 23:51:40 $MATCH:  
 Player 1 23:51:40 $START_GAME:  
 Player 2 23:51:40 $MOVE_TO_TABLE:  
 Player 1 23:51:40 $MOVE_TO_TABLE:  
 Player 2 23:51:49 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 1 23:51:49 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 23:51:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 
 Player 2 23:51:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":267}],"result":true,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 23:51:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":264,"itemCardId":267} 
 Player 2 23:51:49 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[133,117,90,51,29,141,9,21,112,72,116,45,114,126,107,118,102,80,64,123,131,63,60,11,47,31,143,26,10,89,93,97,128,95,86,33,82,87,139,18,46,84,50,105,79,14,65,15,108,17,122,106,55,7,111,78,32,76,75,77,68,135,36,23,121,120,67,91,88,62,25,98,30,41,8,119,110,127,42,134,85,54,12,100,99,13,115,24,66,28,142,71,124,101,104,56,136,52,83,132,27,137,59,35,109,92,19,57,113,43,61,20,129,38,40,49,53,39,130,94,138,34,74,48,69,44,81,103,37,70,73,140,125,16,58,96,22]} 
 Player 2 23:51:49 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[235,213,220,236,226,224,249,241,248,217,218,215,245,254,209,228,227,231,240,211,230,257,216,259,210,221,251,246,252,237,207,214,253,256,219,238,206,223,208,234,225,239,244,233,243,258,229,222,232,250,242,212,247,255]} 
 Player 2 23:51:49 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[173,166,200,186,149,152,155,196,165,168,182,180,178,146,174,193,176,177,167,156,183,161,201,195,170,188,163,181,189,171,175,160,169,192,148,194,154,187,162,203,184,172,153,164,185,151,150,158,191,202,199,179,159,197,157,198,190,147]} 
 Player 2 23:51:49 $DRAW_CARD:  
{"deckType":5} 
 Player 2 23:51:49 $FLIP_CARD:  
{"cardId":147} 
 Player 2 23:51:49 $ADD_STORE_CARD:  
{"cardId":147} 
 Player 2 23:51:49 $DRAW_CARD:  
{"deckType":5} 
 Player 2 23:51:49 $FLIP_CARD:  
{"cardId":190} 
 Player 2 23:51:49 $ADD_STORE_CARD:  
{"cardId":190} 
 Player 2 23:51:49 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:51:49 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":255} 
 Player 2 23:51:49 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:51:50 $FLIP_CARD:  
{"cardId":247} 
 Player 2 23:51:50 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":247} 
 Player 2 23:51:50 $NEW_MONSTER_ON_PLACE:  
{"cardId":247,"monsterPlaceId":1} 
 Player 2 23:51:50 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:51:50 $FLIP_CARD:  
{"cardId":212} 
 Player 2 23:51:50 $REGISTER_PASSIVE_ITEM:  
{"cardId":212} 
 Player 2 23:51:50 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":212} 
 Player 2 23:51:50 $NEW_MONSTER_ON_PLACE:  
{"cardId":212,"monsterPlaceId":2} 
 Player 2 23:51:50 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 23:51:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 23:51:50 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:51:50 $MOVE_CARD:  
{"moveIndex":1,"cardId":22,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:51:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 23:51:50 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":22,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:51:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":22} 
 Player 2 23:51:50 $FLIP_CARD:  
{"cardId":22} 
 Player 2 23:51:50 $FLIP_CARD:  
{"cardId":22} 
 Player 2 23:51:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":22} 
 Player 2 23:51:50 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:51:50 $MOVE_CARD:  
{"moveIndex":2,"cardId":96,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:51:51 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":96,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:51:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":96} 
 Player 2 23:51:51 $FLIP_CARD:  
{"cardId":96} 
 Player 2 23:51:51 $FLIP_CARD:  
{"cardId":96} 
 Player 2 23:51:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":96} 
 Player 2 23:51:51 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:51:51 $MOVE_CARD:  
{"moveIndex":3,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:51:51 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":58,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:51:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":58} 
 Player 2 23:51:51 $FLIP_CARD:  
{"cardId":58} 
 Player 2 23:51:51 $FLIP_CARD:  
{"cardId":58} 
 Player 2 23:51:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":58} 
 Player 2 23:51:51 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 23:51:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":264,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 23:51:51 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:51:51 $MOVE_CARD:  
{"moveIndex":4,"cardId":16,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:51:52 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":16,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:51:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":16} 
 Player 2 23:51:52 $FLIP_CARD:  
{"cardId":16} 
 Player 2 23:51:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":16} 
 Player 2 23:51:52 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:51:52 $MOVE_CARD:  
{"moveIndex":5,"cardId":125,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:51:52 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":125,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:51:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":125} 
 Player 2 23:51:52 $FLIP_CARD:  
{"cardId":125} 
 Player 2 23:51:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":125} 
 Player 2 23:51:52 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:51:52 $MOVE_CARD:  
{"moveIndex":6,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:51:52 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":140,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:51:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":140} 
 Player 2 23:51:52 $FLIP_CARD:  
{"cardId":140} 
 Player 2 23:51:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":140} 
 Player 2 23:51:53 $GAME_HAS_STARTED:  
 Player 2 23:51:53 $SET_TURN:  
{"playerId":2} 
 Player 2 23:51:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 23:51:53 $NEXT_STACK_ID:  
 Player 2 23:51:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 23:51:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 23:51:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 2 23:51:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 23:51:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 23:51:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 2 23:51:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 23:51:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 2 23:51:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 23:51:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 23:51:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 23:51:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 2 23:51:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 23:51:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 23:51:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 23:51:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 23:51:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 23:51:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 23:51:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 23:51:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 23:51:53 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 2 23:51:53 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 2 23:51:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 23:51:53 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:51:53 $MOVE_CARD:  
{"moveIndex":7,"cardId":73,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:51:53 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":73,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:51:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":73} 
 Player 2 23:51:53 $FLIP_CARD:  
{"cardId":73} 
 Player 2 23:51:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":73} 
 Player 2 23:51:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 23:51:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 2 23:51:54 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 2 23:51:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 23:51:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 23:51:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":264,"turnPlayerCardId":264,"stackEffectType":13}} 
 Player 2 23:51:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 23:51:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 23:51:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 2 23:51:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 
 Player 1 23:51:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 23:51:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 23:51:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 23:51:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 23:51:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 
 Player 2 23:51:54 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 2 23:51:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 23:51:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 2 23:51:54 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 2 23:51:54 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 2 23:51:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 23:51:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 23:51:54 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 23:51:54 $UPDATE_ACTIONS:  
 Player 2 23:51:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 2 23:51:56 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 23:53:23 $MATCH:  
 Player 1 23:53:24 $MATCH:  
 Player 1 23:53:25 $START_GAME:  
 Player 1 23:53:25 $MOVE_TO_TABLE:  
 Player 2 23:53:25 $MOVE_TO_TABLE:  
 Player 1 23:53:32 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 23:53:32 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 23:53:32 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":268,"itemCardId":269} 
 Player 2 23:53:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 23:53:32 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 
 Player 2 23:53:32 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[41,136,58,74,31,121,124,108,82,98,73,51,118,30,56,14,33,61,9,76,81,99,90,45,10,19,80,18,62,12,131,113,35,111,44,71,72,119,7,52,28,123,127,105,27,86,137,57,138,34,84,46,25,69,53,47,140,48,116,95,141,109,78,139,32,75,22,112,36,126,117,20,37,104,8,38,65,42,15,133,29,97,50,130,134,26,129,11,40,96,63,132,67,66,122,24,49,68,110,135,17,54,21,23,77,91,103,125,93,115,87,60,64,143,70,13,16,107,102,55,89,114,101,83,92,43,79,94,100,39,59,106,128,88,85,120,142]} 
 Player 2 23:53:32 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[243,251,250,242,225,222,235,208,224,221,231,239,213,211,214,218,212,237,226,216,215,252,234,257,228,241,246,209,232,244,227,247,259,233,229,220,210,217,253,223,245,238,249,207,240,254,236,230,206,258,256,248,219,255]} 
 Player 2 23:53:33 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[164,161,148,190,197,194,193,177,153,196,159,199,192,163,184,198,185,187,202,158,160,154,186,152,188,151,195,162,168,189,172,173,179,181,191,150,169,157,146,175,203,183,174,147,176,155,182,180,171,167,170,165,156,200,149,201,166,178]} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":5} 
 Player 2 23:53:33 $FLIP_CARD:  
{"cardId":178} 
 Player 2 23:53:33 $ADD_STORE_CARD:  
{"cardId":178} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":5} 
 Player 2 23:53:33 $FLIP_CARD:  
{"cardId":166} 
 Player 2 23:53:33 $ADD_STORE_CARD:  
{"cardId":166} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:53:33 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":255} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:53:33 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":219} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:53:33 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":248} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:53:33 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":256} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:53:33 $FLIP_CARD:  
{"cardId":258} 
 Player 2 23:53:33 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":258} 
 Player 2 23:53:33 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":1} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:53:33 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":206} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:53:33 $FLIP_CARD:  
{"cardId":230} 
 Player 2 23:53:33 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":230} 
 Player 2 23:53:33 $NEW_MONSTER_ON_PLACE:  
{"cardId":230,"monsterPlaceId":2} 
 Player 2 23:53:33 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 23:53:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 23:53:33 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:53:33 $MOVE_CARD:  
{"moveIndex":1,"cardId":142,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:53:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":269}],"result":true,"preventMethod":false,"methodScopeId":268,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 23:53:33 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":142,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:53:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":142} 
 Player 2 23:53:34 $FLIP_CARD:  
{"cardId":142} 
 Player 2 23:53:34 $FLIP_CARD:  
{"cardId":142} 
 Player 2 23:53:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":142} 
 Player 2 23:53:34 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:53:34 $MOVE_CARD:  
{"moveIndex":2,"cardId":120,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:53:34 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":120,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:53:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":120} 
 Player 2 23:53:34 $FLIP_CARD:  
{"cardId":120} 
 Player 2 23:53:34 $FLIP_CARD:  
{"cardId":120} 
 Player 2 23:53:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":120} 
 Player 2 23:53:34 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:53:34 $MOVE_CARD:  
{"moveIndex":3,"cardId":85,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:53:34 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":85,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:53:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":85} 
 Player 2 23:53:34 $FLIP_CARD:  
{"cardId":85} 
 Player 2 23:53:34 $FLIP_CARD:  
{"cardId":85} 
 Player 2 23:53:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":85} 
 Player 2 23:53:34 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 23:53:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 23:53:35 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:53:35 $MOVE_CARD:  
{"moveIndex":4,"cardId":88,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:53:35 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":88,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:53:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":88} 
 Player 2 23:53:35 $FLIP_CARD:  
{"cardId":88} 
 Player 2 23:53:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":88} 
 Player 2 23:53:35 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:53:35 $MOVE_CARD:  
{"moveIndex":5,"cardId":128,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:53:35 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":128,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:53:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":128} 
 Player 2 23:53:35 $FLIP_CARD:  
{"cardId":128} 
 Player 2 23:53:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":128} 
 Player 2 23:53:35 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:53:35 $MOVE_CARD:  
{"moveIndex":6,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:53:36 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":106,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:53:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":106} 
 Player 2 23:53:36 $FLIP_CARD:  
{"cardId":106} 
 Player 2 23:53:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":106} 
 Player 2 23:53:36 $GAME_HAS_STARTED:  
 Player 2 23:53:36 $SET_TURN:  
{"playerId":1} 
 Player 2 23:53:36 $START_TURN:  
{"playerId":1} 
 Player 2 23:53:36 $UPDATE_ACTIONS:  
 Player 1 23:53:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 23:53:36 $NEXT_STACK_ID:  
 Player 1 23:53:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 23:53:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 23:53:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 
 Player 1 23:53:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 23:53:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 23:53:36 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 23:53:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 23:53:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 
 Player 1 23:53:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 23:53:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 23:53:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 23:53:36 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 23:53:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 23:53:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 23:53:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 23:53:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 23:53:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 23:53:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:53:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:53:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 23:53:36 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 23:53:36 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 23:53:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 23:53:36 $DRAW_CARD:  
{"deckType":1} 
 Player 1 23:53:36 $MOVE_CARD:  
{"moveIndex":7,"cardId":59,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 23:53:37 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":59,"flipIfFlipped":false,"playerId":1} 
 Player 1 23:53:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":59} 
 Player 1 23:53:37 $FLIP_CARD:  
{"cardId":59} 
 Player 1 23:53:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":59} 
 Player 1 23:53:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 23:53:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 
 Player 1 23:53:37 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 23:53:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 23:53:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 23:53:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":268,"turnPlayerCardId":268,"stackEffectType":13}} 
 Player 1 23:53:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 23:53:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 23:53:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 23:53:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 23:53:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:53:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:53:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:53:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:53:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 23:53:37 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 23:53:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 23:53:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 23:53:37 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 23:53:37 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 23:53:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 23:53:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 23:53:37 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 23:53:39 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 23:53:40 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 2 23:55:55 $MATCH:  
 Player 1 23:55:56 $MATCH:  
 Player 1 23:55:57 $START_GAME:  
 Player 1 23:55:57 $MOVE_TO_TABLE:  
 Player 2 23:55:57 $MOVE_TO_TABLE:  
 Player 1 23:56:05 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 
 Player 2 23:56:05 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 
 Player 2 23:56:05 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":260,"itemCardId":261} 
 Player 2 23:56:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":273}],"result":true,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 23:56:05 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":272,"itemCardId":273} 
 Player 2 23:56:05 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[88,116,53,113,130,63,108,51,28,112,89,49,22,101,72,43,84,127,143,8,73,19,98,31,12,133,75,94,135,81,41,126,114,62,80,109,16,40,25,142,96,47,128,134,122,132,34,9,27,123,92,15,121,100,106,110,69,18,33,131,99,59,39,17,29,140,103,120,136,70,85,55,35,36,68,102,119,66,82,107,14,24,124,65,38,90,30,7,37,83,60,139,118,67,74,56,105,45,26,141,87,57,13,44,115,64,117,95,104,10,137,76,78,46,91,21,50,58,71,23,86,48,97,138,111,32,125,42,52,79,129,54,20,93,61,77,11]} 
 Player 2 23:56:05 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[257,224,232,254,228,259,231,212,244,247,240,218,241,237,222,238,249,230,210,245,223,227,207,211,209,213,239,208,253,250,246,226,214,233,219,255,258,220,216,248,251,236,225,256,206,243,242,215,234,229,252,221,217,235]} 
 Player 2 23:56:05 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[148,158,203,164,190,153,168,146,197,162,156,189,176,194,165,155,179,171,201,191,149,185,178,152,172,166,167,183,186,192,147,154,195,184,196,150,173,182,170,198,159,193,163,199,202,161,174,200,160,157,187,175,151,169,180,177,188,181]} 
 Player 2 23:56:05 $DRAW_CARD:  
{"deckType":5} 
 Player 2 23:56:05 $FLIP_CARD:  
{"cardId":181} 
 Player 2 23:56:05 $ADD_STORE_CARD:  
{"cardId":181} 
 Player 2 23:56:05 $DRAW_CARD:  
{"deckType":5} 
 Player 2 23:56:05 $FLIP_CARD:  
{"cardId":188} 
 Player 2 23:56:05 $ADD_STORE_CARD:  
{"cardId":188} 
 Player 2 23:56:05 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:56:05 $FLIP_CARD:  
{"cardId":235} 
 Player 2 23:56:05 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":235} 
 Player 2 23:56:05 $NEW_MONSTER_ON_PLACE:  
{"cardId":235,"monsterPlaceId":1} 
 Player 2 23:56:05 $DRAW_CARD:  
{"deckType":2} 
 Player 2 23:56:05 $FLIP_CARD:  
{"cardId":217} 
 Player 2 23:56:05 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":217} 
 Player 2 23:56:05 $NEW_MONSTER_ON_PLACE:  
{"cardId":217,"monsterPlaceId":2} 
 Player 2 23:56:05 $CHANGE_MONEY:  
{"playerId":1,"numOfCoins":3,"isStartGame":true} 
 Player 2 23:56:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 23:56:05 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:56:05 $MOVE_CARD:  
{"moveIndex":1,"cardId":11,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:56:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":261}],"result":true,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 23:56:05 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":11,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:56:05 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":11} 
 Player 2 23:56:06 $FLIP_CARD:  
{"cardId":11} 
 Player 2 23:56:06 $FLIP_CARD:  
{"cardId":11} 
 Player 2 23:56:06 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":11} 
 Player 2 23:56:06 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:56:06 $MOVE_CARD:  
{"moveIndex":2,"cardId":77,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:56:06 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":77,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:56:06 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":77} 
 Player 2 23:56:06 $FLIP_CARD:  
{"cardId":77} 
 Player 2 23:56:06 $FLIP_CARD:  
{"cardId":77} 
 Player 2 23:56:06 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":77} 
 Player 2 23:56:06 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:56:06 $MOVE_CARD:  
{"moveIndex":3,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:56:06 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":61,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:56:06 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":61} 
 Player 2 23:56:06 $FLIP_CARD:  
{"cardId":61} 
 Player 2 23:56:06 $FLIP_CARD:  
{"cardId":61} 
 Player 2 23:56:06 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":61} 
 Player 2 23:56:06 $CHANGE_MONEY:  
{"playerId":2,"numOfCoins":3,"isStartGame":true} 
 Player 2 23:56:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 23:56:07 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:56:07 $MOVE_CARD:  
{"moveIndex":4,"cardId":93,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:56:07 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":93,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:56:07 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":93} 
 Player 2 23:56:07 $FLIP_CARD:  
{"cardId":93} 
 Player 2 23:56:07 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":93} 
 Player 2 23:56:07 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:56:07 $MOVE_CARD:  
{"moveIndex":5,"cardId":20,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:56:07 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":20,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:56:07 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":20} 
 Player 2 23:56:07 $FLIP_CARD:  
{"cardId":20} 
 Player 2 23:56:07 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":20} 
 Player 2 23:56:07 $DRAW_CARD:  
{"deckType":1} 
 Player 2 23:56:07 $MOVE_CARD:  
{"moveIndex":6,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 1 23:56:08 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":54,"flipIfFlipped":false,"playerId":2} 
 Player 2 23:56:08 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":54} 
 Player 2 23:56:08 $FLIP_CARD:  
{"cardId":54} 
 Player 2 23:56:08 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":54} 
 Player 2 23:56:08 $GAME_HAS_STARTED:  
 Player 2 23:56:08 $SET_TURN:  
{"playerId":1} 
 Player 2 23:56:08 $START_TURN:  
{"playerId":1} 
 Player 2 23:56:08 $UPDATE_ACTIONS:  
 Player 1 23:56:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 23:56:08 $NEXT_STACK_ID:  
 Player 1 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 23:56:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 23:56:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 23:56:08 $ACTION_MASSAGE_REMOVE:  
{"id":0} 
 Player 1 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 23:56:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 23:56:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 23:56:08 $ACTION_MASSAGE_REMOVE:  
{"id":2} 
 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 23:56:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 23:56:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 2 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:56:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 23:56:08 $ACTION_MASSAGE_REMOVE:  
{"id":3} 
 Player 1 23:56:08 $ACTION_MASSAGE_REMOVE:  
{"id":1} 
 Player 1 23:56:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 23:56:08 $DRAW_CARD:  
{"deckType":1} 
 Player 1 23:56:08 $MOVE_CARD:  
{"moveIndex":7,"cardId":129,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 2 23:56:09 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":129,"flipIfFlipped":false,"playerId":1} 
 Player 1 23:56:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":129} 
 Player 1 23:56:09 $FLIP_CARD:  
{"cardId":129} 
 Player 1 23:56:09 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":129} 
 Player 1 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 23:56:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 23:56:09 $ACTION_MASSAGE_REMOVE:  
{"id":4} 
 Player 1 23:56:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 23:56:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":260,"turnPlayerCardId":260,"stackEffectType":13}} 
 Player 1 23:56:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 23:56:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 23:56:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 
 Player 1 23:56:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 
 Player 2 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 23:56:09 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 
 Player 1 23:56:09 $ACTION_MASSAGE_REMOVE:  
{"id":7} 
 Player 1 23:56:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 23:56:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 
 Player 1 23:56:09 $ACTION_MASSAGE_REMOVE:  
{"id":8} 
 Player 1 23:56:09 $ACTION_MASSAGE_REMOVE:  
{"id":6} 
 Player 1 23:56:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 23:56:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 
 Player 1 23:56:09 $ACTION_MASSAGE_REMOVE:  
{"id":5} 
 Player 1 23:56:10 $ACTION_MASSAGE_REMOVE:  
{"id":9} 
 Player 1 23:56:12 $ACTION_MASSAGE_REMOVE:  
{"id":5}