Start Log 

 Player 1 10:18:50 $MATCH:  

 Player 1 10:18:50 $START_GAME:  

 Player 2 10:18:50 $MOVE_TO_TABLE:  

 Player 1 10:18:50 $MOVE_TO_TABLE:  

 Player 2 10:18:59 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 10:18:59 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 10:19:00 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":282,"itemCardId":283} 

 Player 2 10:19:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 10:19:00 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":290,"itemCardId":291} 

 Player 2 10:19:00 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[106,95,54,64,53,50,51,129,29,140,57,31,13,60,66,47,65,114,24,42,71,19,94,44,126,78,26,72,107,75,20,116,83,137,14,108,17,41,99,101,30,25,100,68,110,32,43,81,59,22,7,134,135,90,74,23,10,18,142,130,73,21,98,104,125,84,102,33,45,121,69,61,103,63,91,112,133,15,89,131,124,139,34,37,46,85,141,77,79,122,39,119,93,52,96,56,86,55,62,76,9,115,109,123,127,49,70,132,113,38,136,40,97,118,11,92,16,28,12,58,88,8,120,35,105,80,67,117,87,82,128,48,27,138,36,111]} 

 Player 2 10:19:00 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[272,270,229,241,280,235,236,256,259,273,261,258,254,244,267,251,275,262,265,264,247,281,228,250,238,260,249,246,257,271,269,279,266,278,248,263,234,233,240,277,276,239,243,245,268,253,252,232,255,237,242,230,231,274]} 

 Player 2 10:19:00 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[203,188,216,166,163,162,152,159,187,161,201,194,210,196,206,169,181,189,195,221,154,165,178,212,173,190,168,150,208,214,185,223,225,192,167,148,149,151,217,200,193,186,209,180,219,172,202,145,171,204,146,175,164,176,174,191,220,153,160,222,179,218,215,213,198,182,184,157,170,158,155,197,156,205,147,199,211,207,224,183,177]} 

 Player 2 10:19:00 $DRAW_CARD:  
{"deckType":5} 

 Player 2 10:19:00 $FLIP_CARD:  
{"cardId":177} 

 Player 2 10:19:00 $ADD_STORE_CARD:  
{"cardId":177} 

 Player 2 10:19:00 $DRAW_CARD:  
{"deckType":5} 

 Player 2 10:19:00 $FLIP_CARD:  
{"cardId":183} 

 Player 2 10:19:00 $ADD_STORE_CARD:  
{"cardId":183} 

 Player 2 10:19:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:19:00 $FLIP_CARD:  
{"cardId":274} 

 Player 2 10:19:00 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":274} 

 Player 2 10:19:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":274,"monsterPlaceId":1} 

 Player 2 10:19:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 10:19:00 $FLIP_CARD:  
{"cardId":231} 

 Player 2 10:19:00 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":231} 

 Player 2 10:19:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":231,"monsterPlaceId":2} 

 Player 2 10:19:00 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 10:19:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 10:19:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:19:01 $MOVE_CARD:  
{"moveIndex":1,"cardId":111,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:19:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":283}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 10:19:01 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":111,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:19:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":111} 

 Player 2 10:19:01 $FLIP_CARD:  
{"cardId":111} 

 Player 2 10:19:01 $FLIP_CARD:  
{"cardId":111} 

 Player 2 10:19:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":111} 

 Player 2 10:19:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:19:01 $MOVE_CARD:  
{"moveIndex":2,"cardId":36,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:19:01 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":36,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:19:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":36} 

 Player 2 10:19:02 $FLIP_CARD:  
{"cardId":36} 

 Player 2 10:19:02 $FLIP_CARD:  
{"cardId":36} 

 Player 2 10:19:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":36} 

 Player 2 10:19:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:19:02 $MOVE_CARD:  
{"moveIndex":3,"cardId":138,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:19:02 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":138,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:19:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":138} 

 Player 2 10:19:02 $FLIP_CARD:  
{"cardId":138} 

 Player 2 10:19:02 $FLIP_CARD:  
{"cardId":138} 

 Player 2 10:19:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":138} 

 Player 2 10:19:02 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 10:19:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 10:19:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:19:02 $MOVE_CARD:  
{"moveIndex":4,"cardId":27,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:19:03 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":27,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:19:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":27} 

 Player 2 10:19:03 $FLIP_CARD:  
{"cardId":27} 

 Player 2 10:19:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":27} 

 Player 2 10:19:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:19:03 $MOVE_CARD:  
{"moveIndex":5,"cardId":48,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:19:03 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":48,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:19:03 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":48} 

 Player 2 10:19:03 $FLIP_CARD:  
{"cardId":48} 

 Player 2 10:19:03 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":48} 

 Player 2 10:19:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:19:03 $MOVE_CARD:  
{"moveIndex":6,"cardId":128,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:19:04 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":128,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:19:04 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":128} 

 Player 2 10:19:04 $FLIP_CARD:  
{"cardId":128} 

 Player 2 10:19:04 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":128} 

 Player 2 10:19:04 $GAME_HAS_STARTED:  

 Player 2 10:19:04 $SET_TURN:  
{"playerId":1} 

 Player 2 10:19:04 $START_TURN:  
{"playerId":1} 

 Player 2 10:19:04 $UPDATE_ACTIONS:  

 Player 1 10:19:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:04 $NEXT_STACK_ID:  

 Player 1 10:19:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 10:19:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 10:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 10:19:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 10:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 10:19:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 10:19:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 10:19:04 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 10:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 10:19:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:04 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:19:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 10:19:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:05 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:19:05 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:19:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 10:19:05 $DRAW_CARD:  
{"deckType":1} 

 Player 1 10:19:05 $MOVE_CARD:  
{"moveIndex":7,"cardId":82,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 10:19:05 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":82,"flipIfFlipped":false,"playerId":1} 

 Player 1 10:19:05 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":82} 

 Player 1 10:19:05 $FLIP_CARD:  
{"cardId":82} 

 Player 1 10:19:05 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":82} 

 Player 1 10:19:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 10:19:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 10:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 10:19:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 10:19:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 10:19:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 10:19:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 10:19:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 10:19:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 10:19:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 10:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 10:19:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 10:19:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:19:06 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:19:07 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:19:07 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:19:07 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:19:08 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:19:08 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:19:13 $MOVE_CARD:  
{"moveIndex":8,"cardId":134,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 10:19:14 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":134,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:19:14 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 

 Player 1 10:19:18 $SHOW_DECISION:  
{"startCardId":282,"endCardId":274} 

 Player 1 10:19:21 $NEXT_STACK_ID:  

 Player 1 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 1 10:19:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 1 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 1 10:19:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 1 10:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 10:19:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 1 10:19:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 1 10:19:21 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 10:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 10:19:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:21 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 10:19:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 10:19:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:22 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 10:19:22 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 10:19:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 10:19:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":274,"particleType":5} 

 Player 1 10:19:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 

 Player 1 10:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 1 10:19:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 1 10:19:22 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:19:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 1 10:19:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 10:19:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 1 10:19:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 10:19:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 10:19:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 10:19:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 10:19:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 10:19:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 10:19:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 10:19:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:19:23 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:19:23 $NEXT_STACK_ID:  

 Player 1 10:19:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:19:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:19:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 10:19:24 $ROLL_DICE:  
{"playerId":1} 

 Player 2 10:19:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:19:24 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:19:25 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:19:25 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 10:19:26 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 10:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 10:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 10:19:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 10:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 10:19:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 10:19:26 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 10:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 10:19:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 10:19:26 $NEXT_STACK_ID:  

 Player 1 10:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:27 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}]} 

 Player 1 10:19:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:19:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 1 10:19:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 1 10:19:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 10:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 10:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:27 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 10:19:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 10:19:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:28 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 10:19:28 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 10:19:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:19:28 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"The Cage will deal 1 combat damage to Azazel"} 

 Player 1 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:19:28 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":274} 

 Player 1 10:19:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:19:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:28 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 10:19:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 10:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 10:19:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 10:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 10:19:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 10:19:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 1 10:19:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:19:29 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 10:19:30 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 10:19:31 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 10:19:31 $SHOW_DECISION:  
{"startCardId":134,"endCardId":134,"flipEndCard":true} 

 Player 1 10:19:34 $NEXT_STACK_ID:  

 Player 1 10:19:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 1 10:19:34 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 10:19:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 1 10:19:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 10:19:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add PlayLootCardStackEffect 5 "}} 

 Player 1 10:19:34 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":134} 

 Player 1 10:19:34 $MOVE_CARD:  
{"moveIndex":9,"cardId":134,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 10:19:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:35 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":134,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:19:35 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":134} 

 Player 1 10:19:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant: PreventDamage"} 

 Player 1 10:19:38 $SHOW_DECISION:  
{"startCardId":134,"endCardId":282} 

 Player 1 10:19:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant: PreventDamage"} 

 Player 1 10:19:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"effectToDo":{"effectName":"PreventDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":134,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:19:42 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 10:19:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding PlayLootCardStackEffect 5"},"childOfId":36} 

 Player 1 10:19:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 10:19:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:42 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 10:19:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 10:19:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:42 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 10:19:42 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 10:19:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve PlayLootCardStackEffect 5 "}} 

 Player 1 10:19:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant: PreventDamage"} 

 Player 1 10:19:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 

 Player 1 10:19:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":134,"particleType":6} 

 Player 1 10:19:44 $PLAYER_ADD_DMG_PREVENTION:  
{"playerId":1,"dmgToPrevent":2} 

 Player 1 10:19:44 $REMOVE_FROM_PILE:  
{"cardId":134} 

 Player 1 10:19:44 $MOVE_CARD:  
{"moveIndex":10,"cardId":134,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 10:19:44 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":134,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:19:44 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":134} 

 Player 1 10:19:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant: PreventDamage"} 

 Player 1 10:19:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:19:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve PlayLootCardStackEffect 5  "}} 

 Player 1 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":134,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 10:19:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve PlayLootCardStackEffect 5"},"childOfId":41} 

 Player 1 10:19:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 10:19:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Heirophant "} 

 Player 2 10:19:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 10:19:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 10:19:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 10:19:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 10:19:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:19:45 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 10:19:46 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 10:19:47 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 10:19:47 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 10:19:50 $NEXT_STACK_ID:  

 Player 1 10:19:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:19:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:19:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 1 10:19:50 $ROLL_DICE:  
{"playerId":1} 

 Player 2 10:19:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:19:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:19:52 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 10:19:52 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:52 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 10:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 

 Player 1 10:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 10:19:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:52 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 10:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 10:19:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:52 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 10:19:52 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 10:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 

 Player 1 10:19:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 1 10:19:52 $NEXT_STACK_ID:  

 Player 1 10:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}]} 

 Player 1 10:19:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":5,"originStackId":6},"isAfterActivation":true,"index":5} 

 Player 1 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 2 vs The Cage<Monster>"} 

 Player 1 10:19:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:53 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 1 10:19:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 1 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 1 10:19:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":2,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:19:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 

 Player 1 10:19:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 1 10:19:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:53 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 10:19:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 1 10:19:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:19:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:54 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 10:19:54 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 10:19:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 

 Player 1 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:19:54 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"The Cage will deal 1 combat damage to Azazel"} 

 Player 1 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:19:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PREVENT_DAMAGE","args":[],"result":-1,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:19:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:54 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 1 10:19:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:19:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":57} 

 Player 1 10:19:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 1 10:19:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:19:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:19:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:19:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 10:19:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 1 10:19:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 10:19:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Stack Was Emptied "}} 

 Player 1 10:19:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 10:19:55 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 10:19:56 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 10:19:57 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 10:20:10 $NEXT_STACK_ID:  

 Player 1 10:20:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:20:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:20:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:20:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:20:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Add AttackRoll 8 "}} 

 Player 1 10:20:10 $ROLL_DICE:  
{"playerId":1} 

 Player 2 10:20:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 10:20:12 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 10:20:12 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"player rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:20:12 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 10:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Adding AttackRoll 8"},"childOfId":62} 

 Player 1 10:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 1 10:20:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:12 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 10:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 1 10:20:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:20:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:20:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:20:12 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 10:20:12 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 10:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve AttackRoll 8 "}} 

 Player 1 10:20:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Added 0 to original roll"}} 

 Player 1 10:20:12 $NEXT_STACK_ID:  

 Player 1 10:20:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:13 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}]} 

 Player 1 10:20:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":7,"originStackId":8},"isAfterActivation":true,"index":7} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 rolled 5 vs The Cage<Monster>"} 

 Player 1 10:20:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:20:13 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 1 10:20:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:20:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve AttackRoll 8  "}} 

 Player 1 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 1 10:20:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"numberRolled":5,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 1 10:20:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":68} 

 Player 1 10:20:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 1 10:20:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:13 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 10:20:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 1 10:20:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:20:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 10:20:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:20:14 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 10:20:14 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 10:20:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve CombatDamage 9 "}} 

 Player 1 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:20:14 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"The Cage will deal 1 combat damage to Azazel"} 

 Player 1 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:20:14 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":274} 

 Player 1 10:20:14 $NEXT_STACK_ID:  

 Player 1 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel"} 

 Player 1 10:20:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 1 10:20:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274}} 

 Player 1 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 1 10:20:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 1 10:20:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:20:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 1 10:20:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274}} 

 Player 1 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 1 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 1 10:20:15 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274}]} 

 Player 1 10:20:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 10:20:15 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 10:20:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:20:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Remove After Resolve CombatDamage 9  "}} 

 Player 1 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 10:20:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":282,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":282,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 10:20:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":73} 

 Player 1 10:20:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 1 10:20:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:15 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 10:20:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 1 10:20:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:20:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 2 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 2 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 2 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Azazel \n2:Player 1 is about to die"} 

 Player 2 10:20:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:20:16 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 10:20:16 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 10:20:16 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 10:20:16 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 10:20:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Resolve PlayerDeath 10 "}} 

 Player 1 10:20:16 $DISABLE_PARTICLE_EFFECT:  
{"cardId":274,"particleType":5} 

 Player 1 10:20:16 $CANCEL_ATTACK:  

 Player 1 10:20:16 $NEXT_STACK_ID:  

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 10:20:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 10:20:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}} 

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 10:20:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274}} 

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 10:20:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274}} 

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 10:20:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}} 

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 10:20:16 $REPLACE_STACK:  
{"currentStack":[{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274},{"entityId":11,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}]} 

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 10:20:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274}} 

 Player 1 10:20:16 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 10:20:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 10:20:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274}} 

 Player 1 10:20:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Remove After Resolve PlayerDeath 10  "}} 

 Player 1 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 10:20:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"playerToDieCardId":282,"stackEffectType":15,"killerId":274}} 

 Player 1 10:20:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Remove After Resolve PlayerDeath 10"},"childOfId":78} 

 Player 1 10:20:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 1 10:20:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:17 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 10:20:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 1 10:20:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:20:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 10:20:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:20:17 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 10:20:17 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 10:20:17 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 10:20:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve PlayerDeathPenalties 11 "}} 

 Player 1 10:20:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Player 1 pays Penalties"}} 

 Player 1 10:20:18 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 10:20:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 1 10:20:19 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 10:20:23 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":36} 

 Player 1 10:20:23 $MOVE_CARD:  
{"moveIndex":11,"cardId":36,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 10:20:23 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":36,"flipIfFlipped":true,"playerId":1} 

 Player 1 10:20:23 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":36} 

 Player 1 10:20:23 $USE_ITEM:  
{"cardId":282} 

 Player 1 10:20:23 $USE_ITEM:  
{"cardId":283} 

 Player 1 10:20:23 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 10:20:24 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 10:20:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}} 

 Player 1 10:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Remove After Resolve PlayerDeathPenalties 11  "}} 

 Player 1 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":282,"playerToPayCardId":282,"stackEffectType":16}} 

 Player 1 10:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Response Remove After Resolve PlayerDeathPenalties 11"},"childOfId":84} 

 Player 1 10:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":84} 

 Player 1 10:20:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 10:20:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 10:20:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 1 10:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":84} 

 Player 1 10:20:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 1 10:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Stack Was Emptied "}} 

 Player 1 10:20:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 10:20:25 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 10:20:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 10:20:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 10:20:26 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 10:20:27 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 10:20:27 $END_TURN:  

 Player 1 10:20:27 $SET_TURN:  
{"playerId":2} 

 Player 1 10:20:27 $START_TURN:  
{"playerId":2} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 10:20:27 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 10:20:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 10:20:27 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 10:20:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:20:28 $NEXT_STACK_ID:  

 Player 2 10:20:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 10:20:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 10:20:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 10:20:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 10:20:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Add StartTurnLoot 12 "}} 

 Player 2 10:20:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:20:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 10:20:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 10:20:28 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 10:20:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Response Adding StartTurnLoot 12"},"childOfId":89} 

 Player 2 10:20:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":89} 

 Player 2 10:20:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:20:29 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 10:20:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":89} 

 Player 2 10:20:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:20:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:20:29 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 10:20:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:20:29 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 10:20:29 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 10:20:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Resolve StartTurnLoot 12 "}} 

 Player 2 10:20:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 10:20:29 $MOVE_CARD:  
{"moveIndex":12,"cardId":87,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 10:20:29 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":87,"flipIfFlipped":false,"playerId":2} 

 Player 2 10:20:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":87} 

 Player 2 10:20:29 $FLIP_CARD:  
{"cardId":87} 

 Player 2 10:20:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":87} 

 Player 2 10:20:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 10:20:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 10:20:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Remove After Resolve StartTurnLoot 12  "}} 

 Player 2 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 10:20:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Response Remove After Resolve StartTurnLoot 12"},"childOfId":94} 

 Player 2 10:20:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":94} 

 Player 2 10:20:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:20:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 10:20:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 10:20:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":94} 

 Player 2 10:20:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 10:20:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Stack Was Emptied "}} 

 Player 2 10:20:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 10:20:30 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 10:20:31 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 10:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 10:20:32 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 10:20:35 $MOVE_CARD:  
{"moveIndex":13,"cardId":211,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 10:20:35 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":211,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:20:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":211} 

 Player 2 10:20:35 $MOVE_CARD:  
{"moveIndex":14,"cardId":211,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 10:20:36 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":211,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:20:36 $ADD_AN_ITEM:  
{"playerId":2,"cardId":211,"isReward":true} 

 Player 2 10:20:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":211}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 10:20:40 $SHOW_DECISION:  
{"startCardId":48,"endCardId":48,"flipEndCard":true} 

 Player 2 10:20:43 $NEXT_STACK_ID:  

 Player 2 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 2 10:20:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 2 10:20:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 10:20:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Add PlayLootCardStackEffect 13 "}} 

 Player 2 10:20:43 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":48} 

 Player 2 10:20:43 $MOVE_CARD:  
{"moveIndex":15,"cardId":48,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:43 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":48,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:20:43 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":48} 

 Player 2 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10): addMoney"} 

 Player 2 10:20:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10): addMoney"} 

 Player 2 10:20:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":48,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:20:43 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 10:20:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Response Adding PlayLootCardStackEffect 13"},"childOfId":99} 

 Player 2 10:20:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":99} 

 Player 2 10:20:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:20:44 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 10:20:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Wait For Response From Player 1 "},"childOfId":99} 

 Player 2 10:20:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:20:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:20:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:20:44 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 10:20:44 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 10:20:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Resolve PlayLootCardStackEffect 13 "}} 

 Player 2 10:20:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10): addMoney"} 

 Player 2 10:20:44 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":48,"particleType":6} 

 Player 2 10:20:46 $DISABLE_PARTICLE_EFFECT:  
{"cardId":48,"particleType":6} 

 Player 2 10:20:46 $SET_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 2 10:20:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 10:20:46 $REMOVE_FROM_PILE:  
{"cardId":48} 

 Player 2 10:20:46 $MOVE_CARD:  
{"moveIndex":16,"cardId":48,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 10:20:46 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":48,"flipIfFlipped":true,"playerId":2} 

 Player 2 10:20:46 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":48} 

 Player 2 10:20:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10): addMoney"} 

 Player 2 10:20:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:20:46 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 10:20:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Remove After Resolve PlayLootCardStackEffect 13  "}} 

 Player 2 10:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 10:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Response Remove After Resolve PlayLootCardStackEffect 13"},"childOfId":104} 

 Player 2 10:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":104} 

 Player 2 10:20:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 10:20:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 10:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(10) "} 

 Player 1 10:20:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 10:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":104} 

 Player 2 10:20:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 10:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Stack Was Emptied "}} 

 Player 2 10:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 10:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 10:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 2 10:20:49 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 2 10:20:49 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 10:21:33 $MATCH: 