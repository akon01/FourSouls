Start Log 
 Player 1 02:05:38 $START_GAME:  
 Player 1 02:05:38 $MOVE_TO_TABLE:  
 Player 1 02:05:44 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 02:05:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":289}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 02:05:46 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":98,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:05:47 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":62,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:05:47 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":13,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:05:48 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":45,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:05:48 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":61,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:05:49 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":46,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:05:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:05:49 $NEXT_STACK_ID:  
 Player 1 02:05:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:05:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:05:49 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:05:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:05:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:05:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 02:05:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:05:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:05:49 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:05:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 02:05:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 02:05:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:05:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 02:05:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:05:49 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:05:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 02:05:50 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 02:05:50 $MOVE_CARD:  

 {"moveIndex":7,"cardId":11,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 02:05:50 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":11} 
 Player 1 02:05:50 $FLIP_CARD:  

 {"cardId":11} 
 Player 1 02:05:50 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":11} 
 Player 1 02:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:05:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:05:50 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:05:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 02:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:05:50 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:05:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 02:05:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 02:05:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:05:50 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 02:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 02:05:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 02:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 02:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 02:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:06:26 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":289} 
 Player 1 02:06:29 $NEXT_STACK_ID:  
 Player 1 02:06:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:06:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:06:29 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 02:06:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:06:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 02:06:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 
 Player 1 02:06:30 $SHOW_DECISION:  

 {"startCardId":289,"endCardId":227} 
 Player 1 02:06:33 $USE_ITEM:  

 {"cardId":289} 
 Player 1 02:06:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:06:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:06:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:06:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 
 Player 1 02:06:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 02:06:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:06:34 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 02:06:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 02:06:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:06:34 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:06:34 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 02:06:34 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 02:06:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 
 Player 1 02:06:34 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":289,"particleType":6} 
 Player 1 02:06:36 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":289,"particleType":6} 
 Player 1 02:06:53 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[250,251,238,234,240,260,272,233,276,237,255,273,242,265,268,254,231,259,229,252,280,244,239,275,266,257,264,256,262,278,248,228,270,236,267,274,263,271,243,232,241,247,281,246,279,249,235,230,277,245,269]} 
 Player 1 02:06:53 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[250,251,238,234,240,260,272,233,276,237,255,273,242,265,268,254,231,259,229,252,280,244,239,275,266,257,264,256,262,278,248,228,270,236,267,274,263,271,243,232,241,247,281,246,279,249,235,230,245,269]} 
 Player 1 02:06:53 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[250,251,238,234,240,260,272,233,276,237,255,273,242,265,268,254,231,259,229,252,280,244,239,275,266,257,264,256,262,278,248,228,270,236,267,274,263,271,243,232,241,247,281,246,279,249,235,230,269]} 
 Player 1 02:06:53 $DECK_ADD_TO_TOP:  

 {"deckType":2,"cardId":245} 
 Player 1 02:06:53 $DECK_ADD_TO_TOP:  

 {"deckType":2,"cardId":277} 
 Player 1 02:06:53 $DECK_ADD_TO_TOP:  

 {"deckType":2,"cardId":261} 
 Player 1 02:06:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:06:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:06:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:06:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 
 Player 1 02:06:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:06:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 
 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 02:06:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:06:54 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:06:54 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 02:06:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:06:54 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 02:06:54 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 02:06:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 02:06:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:06:58 $SHOW_DECISION:  

 {"startCardId":98,"endCardId":98,"flipEndCard":true} 
 Player 1 02:07:01 $NEXT_STACK_ID:  
 Player 1 02:07:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:07:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Curved Horn "} 
 Player 1 02:07:01 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 02:07:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Curved Horn "} 
 Player 1 02:07:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 02:07:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 
 Player 1 02:07:01 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":98} 
 Player 1 02:07:01 $MOVE_CARD:  

 {"moveIndex":8,"cardId":98,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:07:01 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":98} 
 Player 1 02:07:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Curved Horn: AddTrinket"} 
 Player 1 02:07:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Curved Horn: AddTrinket"} 
 Player 1 02:07:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":98,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:07:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 
 Player 1 02:07:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 02:07:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:07:02 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 02:07:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 02:07:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:07:02 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:07:02 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 02:07:02 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 02:07:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 1 02:07:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Curved Horn: AddTrinket"} 
 Player 1 02:07:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":98,"particleType":6} 
 Player 1 02:07:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":98,"particleType":6} 
 Player 1 02:07:04 $CARD_ADD_TRINKET:  

 {"cardId":98,"playerId":1,"addMuiliEffect":false} 
 Player 1 02:07:04 $REMOVE_FROM_PILE:  

 {"cardId":98} 
 Player 1 02:07:04 $REGISTER_PASSIVE_ITEM:  

 {"cardId":98} 
 Player 1 02:07:04 $MOVE_CARD:  

 {"moveIndex":9,"cardId":98,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 02:07:04 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":98,"isReward":true} 
 Player 1 02:07:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":98}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 02:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Curved Horn: AddTrinket"} 
 Player 1 02:07:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:07:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:07:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 
 Player 1 02:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:07:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":98,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 
 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 1 02:07:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:07:05 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:07:05 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 1 02:07:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:07:05 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 02:07:05 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 02:07:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 1 02:07:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:07:11 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":258} 
 Player 1 02:07:14 $NEXT_STACK_ID:  
 Player 1 02:07:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:07:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:14 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 02:07:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 02:07:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Add DeclareAttack 4 "}} 
 Player 1 02:07:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:07:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 02:07:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Adding DeclareAttack 4"},"childOfId":30} 
 Player 1 02:07:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 1 02:07:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:07:14 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 02:07:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 1 02:07:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:07:14 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:07:15 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 02:07:16 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 02:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 
 Player 1 02:07:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 
 Player 1 02:07:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 
 Player 1 02:07:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 
 Player 1 02:07:24 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:07:26 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":61,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 activated The Lost"} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 
 Player 1 02:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 
 Player 1 02:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 
 Player 1 02:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 
 Player 1 02:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 
 Player 1 02:07:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1)  \n3:Player 2 activated The Lost"} 
 Player 1 02:07:28 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:07:30 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":61,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust \n2:Player 2 play 4 Cents(1) "} 
 Player 1 02:07:31 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:31 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":5} 
 Player 1 02:07:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}} 
 Player 1 02:07:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:31 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":4,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":258,"stackEffectType":4}]} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Lust"} 
 Player 1 02:07:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:07:49 $NEXT_STACK_ID:  
 Player 1 02:07:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:07:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 
 Player 1 02:07:49 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:07:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 
 Player 1 02:07:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:07:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Add AttackRoll 7 "}} 
 Player 1 02:07:49 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 02:07:51 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 02:07:51 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"player rolled 5 vs Lust<Monster>"} 
 Player 1 02:07:51 $SHOW_DICE_ROLL:  

 {"stackId":7} 
 Player 1 02:07:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:07:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:07:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:07:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:07:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Response Adding AttackRoll 7"},"childOfId":54} 
 Player 1 02:07:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Wait For Response From Player 1 "},"childOfId":54} 
 Player 1 02:07:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:08:28 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 1 02:08:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":54} 
 Player 1 02:08:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:08:28 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:08:28 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 02:08:28 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 02:08:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Resolve AttackRoll 7 "}} 
 Player 1 02:08:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Added 0 to original roll"}} 
 Player 1 02:08:28 $LOG_ERROR:  

 {"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at CardOwnerFirstAttackRollOfTurn.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:27:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at CardOwnerFirstAttackRollOfTurn.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:20:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:298:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 1 02:08:28 $NEXT_STACK_ID:  
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:08:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:08:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:08:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:08:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:08:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:08:29 $REPLACE_STACK:  

 {"currentStack":[{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}]} 
 Player 1 02:08:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":4,"originStackId":7},"isAfterActivation":true,"index":4} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Player 1 rolled 5 vs Lust<Monster>"} 
 Player 1 02:08:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust"} 
 Player 1 02:08:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:08:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Remove After Resolve AttackRoll 7  "}} 
 Player 1 02:08:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust"} 
 Player 1 02:08:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":286,"numberRolled":5,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:08:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":60} 
 Player 1 02:08:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Player 1 02:08:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:08:30 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 02:08:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Player 1 02:08:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:08:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:08:30 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 02:08:30 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 1 02:08:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Resolve CombatDamage 8 "}} 
 Player 1 02:08:30 $UPDATE_STACK_VIS:  

 {"stackId":8,"text":"Cain will deal 1 combat damage to Lust"} 
 Player 1 02:08:30 $MONSTER_GET_DAMAGED:  

 {"cardId":258,"hpLeft":1,"damageDealerId":286} 
 Player 1 02:08:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":286}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 1 02:08:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":286},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":6,"originStackId":8},"isAfterActivation":true,"index":6} 
 Player 1 02:08:30 $NEXT_STACK_ID:  
 Player 1 02:08:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust"} 
 Player 1 02:08:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 02:08:30 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:08:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 02:08:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Add ActivatePassiveEffect 9 "}} 
 Player 1 02:08:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 02:08:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 02:08:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":65} 
 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":65} 
 Player 1 02:08:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:08:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:08:31 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":65} 
 Player 1 02:08:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:08:31 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 02:08:31 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 02:08:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Resolve ActivatePassiveEffect 9 "}} 
 Player 1 02:08:31 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":6} 
 Player 1 02:08:33 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":6} 
 Player 1 02:08:33 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":258} 
 Player 1 02:08:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 1 02:08:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":286},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":false,"index":6,"originStackId":8},"isAfterActivation":true,"index":6} 
 Player 1 02:08:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust \n2:Activate Lust effect DealDamage<DealDamage>"} 
 Player 1 02:08:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:08:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust"} 
 Player 1 02:08:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:08:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 
 Player 1 02:08:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust"} 
 Player 1 02:08:33 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[286],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":9,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:08:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":70} 
 Player 1 02:08:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Wait For Response From Player 1 "},"childOfId":70} 
 Player 1 02:08:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:08:33 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 1 02:08:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":70} 
 Player 1 02:08:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:08:34 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Resolve CombatDamage 8 "}} 
 Player 1 02:08:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Lust"} 
 Player 1 02:08:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:08:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:08:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Remove After Resolve CombatDamage 8  "}} 
 Player 1 02:08:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:08:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":286,"entityToDoDamageCardId":286,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":75} 
 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":75} 
 Player 1 02:08:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:08:34 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":75} 
 Player 1 02:08:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 02:08:34 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 02:08:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Stack Was Emptied "}} 
 Player 1 02:08:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:08:58 $NEXT_STACK_ID:  
 Player 1 02:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 
 Player 1 02:08:58 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:08:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Lust<Monster>"} 
 Player 1 02:08:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:08:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Add AttackRoll 10 "}} 
 Player 1 02:08:58 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 02:08:59 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 02:09:00 $UPDATE_STACK_VIS:  

 {"stackId":10,"text":"player rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:00 $SHOW_DICE_ROLL:  

 {"stackId":10} 
 Player 1 02:09:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:09:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Response Adding AttackRoll 10"},"childOfId":80} 
 Player 1 02:09:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":80} 
 Player 1 02:09:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:04 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":286} 
 Player 1 02:09:07 $NEXT_STACK_ID:  
 Player 1 02:09:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 activated Cain"} 
 Player 1 02:09:07 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 02:09:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 activated Cain"} 
 Player 1 02:09:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 02:09:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Add ActivateItem 11 "}} 
 Player 1 02:09:15 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":62,"flipEndCard":true} 
 Player 1 02:09:18 $USE_ITEM:  

 {"cardId":286} 
 Player 1 02:09:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 activated Cain"} 
 Player 1 02:09:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:09:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Response Adding ActivateItem 11"},"childOfId":83} 
 Player 1 02:09:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":83} 
 Player 1 02:09:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:18 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 02:09:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":83} 
 Player 1 02:09:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:09:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:09:18 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 02:09:18 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 02:09:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Resolve ActivateItem 11 "}} 
 Player 1 02:09:18 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":286,"particleType":6} 
 Player 1 02:09:20 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":286,"particleType":6} 
 Player 1 02:09:20 $NEXT_STACK_ID:  
 Player 1 02:09:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 activated Cain"} 
 Player 1 02:09:20 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":62} 
 Player 1 02:09:20 $MOVE_CARD:  

 {"moveIndex":12,"cardId":62,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:09:21 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":62} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":62,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":62,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258},{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":62,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney \n3:Player 1 activated Cain"} 
 Player 1 02:09:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney"} 
 Player 1 02:09:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:09:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Remove After Resolve ActivateItem 11  "}} 
 Player 1 02:09:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney"} 
 Player 1 02:09:22 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":286,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:09:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Response Remove After Resolve ActivateItem 11"},"childOfId":88} 
 Player 1 02:09:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 
 Player 1 02:09:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:22 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 02:09:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 
 Player 1 02:09:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:09:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:09:22 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 02:09:22 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 1 02:09:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Resolve PlayLootCardStackEffect 12 "}} 
 Player 1 02:09:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney"} 
 Player 1 02:09:22 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":62,"particleType":6} 
 Player 1 02:09:24 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":62,"particleType":6} 
 Player 1 02:09:24 $SET_MONEY:  

 {"playerId":1,"numOfCoins":7} 
 Player 1 02:09:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 1 02:09:24 $REMOVE_FROM_PILE:  

 {"cardId":62} 
 Player 1 02:09:24 $MOVE_CARD:  

 {"moveIndex":13,"cardId":62,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:09:25 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":62} 
 Player 1 02:09:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster> \n2:Player 1 play 4 Cents(2): addMoney"} 
 Player 1 02:09:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:09:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Remove After Resolve PlayLootCardStackEffect 12  "}} 
 Player 1 02:09:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":62,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Response Remove After Resolve PlayLootCardStackEffect 12"},"childOfId":93} 
 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 
 Player 1 02:09:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:09:25 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:09:25 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 
 Player 1 02:09:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:25 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 1 02:09:25 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Resolve AttackRoll 10 "}} 
 Player 1 02:09:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Added 0 to original roll"}} 
 Player 1 02:09:26 $LOG_ERROR:  

 {"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at CardOwnerFirstAttackRollOfTurn.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:27:46)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at CardOwnerFirstAttackRollOfTurn.testCondition (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardConditions/CardOwnerFirstAttackRollOfTurn.js:20:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:298:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 1 02:09:26 $NEXT_STACK_ID:  
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:26 $REPLACE_STACK:  

 {"currentStack":[{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}]} 
 Player 1 02:09:26 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":9,"originStackId":10},"isAfterActivation":true,"index":9} 
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain \n2:Player 1 rolled 2 vs Lust<Monster>"} 
 Player 1 02:09:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:09:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain"} 
 Player 1 02:09:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Remove After Resolve AttackRoll 10  "}} 
 Player 1 02:09:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust combat damage to Cain"} 
 Player 1 02:09:27 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":286,"numberRolled":2,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":258}} 
 Player 1 02:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Response Remove After Resolve AttackRoll 10"},"childOfId":99} 
 Player 1 02:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":99} 
 Player 1 02:09:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:27 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 02:09:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Wait For Response From Player 2 "},"childOfId":99} 
 Player 1 02:09:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:09:27 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:09:28 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 1 02:09:28 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 1 02:09:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Resolve CombatDamage 13 "}} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain"} 
 Player 1 02:09:28 $UPDATE_STACK_VIS:  

 {"stackId":13,"text":"Lust will deal 1 combat damage to Cain"} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain"} 
 Player 1 02:09:28 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":258} 
 Player 1 02:09:28 $NEXT_STACK_ID:  
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain"} 
 Player 1 02:09:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 
 Player 1 02:09:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 
 Player 1 02:09:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 
 Player 1 02:09:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 
 Player 1 02:09:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lust 1 combat damage to Cain \n2:Player 1 is about to die"} 
 Player 1 02:09:28 $REPLACE_STACK:  

 {"currentStack":[{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}]} 
 Player 1 02:09:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 1 02:09:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":11,"originStackId":13},"isAfterActivation":true,"index":11} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 02:09:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:09:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Remove After Resolve CombatDamage 13  "}} 
 Player 1 02:09:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 02:09:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":286,"entityToDoDamageCardId":258,"entityToTakeDamageCardId":286,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 02:09:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Response Remove After Resolve CombatDamage 13"},"childOfId":104} 
 Player 1 02:09:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":104} 
 Player 1 02:09:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:29 $ACTION_MASSAGE_REMOVE:  

 {"id":106} 
 Player 1 02:09:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":104} 
 Player 1 02:09:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:09:29 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:09:29 $ACTION_MASSAGE_REMOVE:  

 {"id":107} 
 Player 1 02:09:29 $ACTION_MASSAGE_REMOVE:  

 {"id":105} 
 Player 1 02:09:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Resolve PlayerDeath 14 "}} 
 Player 1 02:09:29 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":258,"particleType":5} 
 Player 1 02:09:29 $CANCEL_ATTACK:  
 Player 1 02:09:29 $NEXT_STACK_ID:  
 Player 1 02:09:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 02:09:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 1 02:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 
 Player 1 02:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 
 Player 1 02:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 1 02:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $REPLACE_STACK:  

 {"currentStack":[{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258},{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}]} 
 Player 1 02:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 
 Player 1 02:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 
 Player 1 02:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Remove After Resolve PlayerDeath 14  "}} 
 Player 1 02:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 02:09:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":286,"playerToDieCardId":286,"stackEffectType":15,"killerId":258}} 
 Player 1 02:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Response Remove After Resolve PlayerDeath 14"},"childOfId":109} 
 Player 1 02:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":109} 
 Player 1 02:09:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:09:30 $ACTION_MASSAGE_REMOVE:  

 {"id":111} 
 Player 1 02:09:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Wait For Response From Player 2 "},"childOfId":109} 
 Player 1 02:09:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:09:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:09:31 $ACTION_MASSAGE_REMOVE:  

 {"id":112} 
 Player 1 02:09:31 $ACTION_MASSAGE_REMOVE:  

 {"id":110} 
 Player 1 02:09:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Resolve PlayerDeathPenalties 15 "}} 
 Player 1 02:09:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Player 1 pays Penalties"}} 
 Player 1 02:09:31 $SET_MONEY:  

 {"playerId":1,"numOfCoins":6} 
 Player 1 02:09:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 
 Player 1 02:09:33 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":11} 
 Player 1 02:09:33 $MOVE_CARD:  

 {"moveIndex":14,"cardId":11,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:09:34 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":11} 
 Player 1 02:11:24 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":98} 
 Player 1 02:11:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":98}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 
 Player 1 02:11:24 $MOVE_CARD:  

 {"moveIndex":15,"cardId":98,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:11:24 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":98} 
 Player 1 02:11:24 $USE_ITEM:  

 {"cardId":286} 
 Player 1 02:11:24 $USE_ITEM:  

 {"cardId":289} 
 Player 1 02:11:24 $PLAYER_DIED:  

 {"playerId":1} 
 Player 1 02:11:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 1 02:11:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 1 02:11:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:11:24 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 1 02:11:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Remove After Resolve PlayerDeathPenalties 15  "}} 
 Player 1 02:11:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:11:24 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":286,"playerToPayCardId":286,"stackEffectType":16}} 
 Player 1 02:11:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Response Remove After Resolve PlayerDeathPenalties 15"},"childOfId":115} 
 Player 1 02:11:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Wait For Response From Player 2 "},"childOfId":115} 
 Player 1 02:11:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:11:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  

 {"id":117} 
 Player 1 02:11:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Wait For Response From Player 1 "},"childOfId":115} 
 Player 1 02:11:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  

 {"id":118} 
 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  

 {"id":116} 
 Player 1 02:11:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":119,"_text":"Stack Was Emptied "}} 
 Player 1 02:11:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:11:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:11:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:11:25 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 02:11:25 $END_TURN:  
 Player 1 02:11:25 $SET_TURN:  

 {"playerId":2} 
 Player 1 02:11:25 $START_TURN:  

 {"playerId":2} 
 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 1 02:11:25 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 02:11:26 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:11:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:11:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:11:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:26 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:11:26 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":103,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:11:27 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:11:47 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:12:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:12:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:01 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":45,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:12:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:02 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:04 $MOVE_CARD_END:  

 {"moveIndex":18,"cardId":45,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:12:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(7) "} 
 Player 1 02:12:05 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 
 Player 1 02:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 
 Player 1 02:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 
 Player 1 02:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 
 Player 1 02:12:19 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:20 $MOVE_CARD_END:  

 {"moveIndex":19,"cardId":196,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 
 Player 1 02:12:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 
 Player 1 02:12:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 
 Player 1 02:12:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Pandora's Box for 10 \n2:Refill Store slot"} 
 Player 1 02:12:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:12:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:12:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:12:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:29 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:30 $MOVE_CARD_END:  

 {"moveIndex":20,"cardId":196,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:12:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box \n2:Player 2 roll a dice"} 
 Player 1 02:12:35 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Pandora's Box"} 
 Player 1 02:12:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:12:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:12:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:12:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:12:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:13:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:13:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:13:05 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:13:08 $MOVE_CARD_END:  

 {"moveIndex":21,"cardId":103,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:13:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:13:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:13:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 
 Player 1 02:13:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:Player 2 activated The Lost"} 
 Player 1 02:13:19 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:13:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb "} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $MOVE_CARD_END:  

 {"moveIndex":22,"cardId":103,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Gold Bomb  \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:22 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by The Lost"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by The Lost"} 
 Player 1 02:13:24 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:13:24 $MOVE_CARD_END:  

 {"moveIndex":23,"cardId":56,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Lust<Monster> reward"} 
 Player 1 02:13:25 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:13:25 $MOVE_CARD_END:  

 {"moveIndex":24,"cardId":258,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 02:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 02:13:26 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:13:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 02:13:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 02:13:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 02:13:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder1 slot"} 
 Player 1 02:13:26 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:14:15 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:14:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:15 $RECHARGE_ITEM:  

 {"cardId":286} 
 Player 1 02:14:15 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":286} 
 Player 1 02:14:15 $RECHARGE_ITEM:  

 {"cardId":289} 
 Player 1 02:14:15 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":289} 
 Player 1 02:14:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:15 $NEXT_STACK_ID:  
 Player 1 02:14:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:14:15 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:14:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:14:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:14:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":207,"_text":"Add StartTurnLoot 28 "}} 
 Player 1 02:14:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:14:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:14:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":208,"_text":"Response Adding StartTurnLoot 28"},"childOfId":207} 
 Player 1 02:14:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":209,"_text":"Wait For Response From Player 1 "},"childOfId":207} 
 Player 1 02:14:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:15 $ACTION_MASSAGE_REMOVE:  

 {"id":209} 
 Player 1 02:14:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":210,"_text":"Wait For Response From Player 2 "},"childOfId":207} 
 Player 1 02:14:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:14:15 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:14:16 $ACTION_MASSAGE_REMOVE:  

 {"id":210} 
 Player 1 02:14:16 $ACTION_MASSAGE_REMOVE:  

 {"id":208} 
 Player 1 02:14:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":211,"_text":"Resolve StartTurnLoot 28 "}} 
 Player 1 02:14:16 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 02:14:16 $MOVE_CARD:  

 {"moveIndex":25,"cardId":80,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 02:14:16 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":80} 
 Player 1 02:14:16 $FLIP_CARD:  

 {"cardId":80} 
 Player 1 02:14:16 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":80} 
 Player 1 02:14:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:14:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:14:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:14:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":212,"_text":"Remove After Resolve StartTurnLoot 28  "}} 
 Player 1 02:14:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":28,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:14:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":213,"_text":"Response Remove After Resolve StartTurnLoot 28"},"childOfId":212} 
 Player 1 02:14:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":214,"_text":"Wait For Response From Player 2 "},"childOfId":212} 
 Player 1 02:14:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:14:17 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:14:17 $ACTION_MASSAGE_REMOVE:  

 {"id":214} 
 Player 1 02:14:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":215,"_text":"Wait For Response From Player 1 "},"childOfId":212} 
 Player 1 02:14:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:17 $ACTION_MASSAGE_REMOVE:  

 {"id":215} 
 Player 1 02:14:17 $ACTION_MASSAGE_REMOVE:  

 {"id":213} 
 Player 1 02:14:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":216,"_text":"Stack Was Emptied "}} 
 Player 1 02:14:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:23 $SHOW_DECISION:  

 {"startCardId":80,"endCardId":80,"flipEndCard":true} 
 Player 1 02:14:26 $NEXT_STACK_ID:  
 Player 1 02:14:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Nickel "} 
 Player 1 02:14:26 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 02:14:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Nickel "} 
 Player 1 02:14:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 02:14:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":217,"_text":"Add PlayLootCardStackEffect 29 "}} 
 Player 1 02:14:26 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":80} 
 Player 1 02:14:26 $MOVE_CARD:  

 {"moveIndex":26,"cardId":80,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:14:27 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":80} 
 Player 1 02:14:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Nickel: addMoney"} 
 Player 1 02:14:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Nickel: addMoney"} 
 Player 1 02:14:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":80,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:14:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":218,"_text":"Response Adding PlayLootCardStackEffect 29"},"childOfId":217} 
 Player 1 02:14:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":219,"_text":"Wait For Response From Player 1 "},"childOfId":217} 
 Player 1 02:14:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:27 $ACTION_MASSAGE_REMOVE:  

 {"id":219} 
 Player 1 02:14:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":220,"_text":"Wait For Response From Player 2 "},"childOfId":217} 
 Player 1 02:14:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:14:27 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:14:27 $ACTION_MASSAGE_REMOVE:  

 {"id":220} 
 Player 1 02:14:27 $ACTION_MASSAGE_REMOVE:  

 {"id":218} 
 Player 1 02:14:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":221,"_text":"Resolve PlayLootCardStackEffect 29 "}} 
 Player 1 02:14:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Nickel: addMoney"} 
 Player 1 02:14:27 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":80,"particleType":6} 
 Player 1 02:14:29 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":80,"particleType":6} 
 Player 1 02:14:29 $SET_MONEY:  

 {"playerId":1,"numOfCoins":11} 
 Player 1 02:14:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 
 Player 1 02:14:29 $REMOVE_FROM_PILE:  

 {"cardId":80} 
 Player 1 02:14:29 $MOVE_CARD:  

 {"moveIndex":27,"cardId":80,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:14:30 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":80} 
 Player 1 02:14:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Nickel: addMoney"} 
 Player 1 02:14:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:14:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":222,"_text":"Remove After Resolve PlayLootCardStackEffect 29  "}} 
 Player 1 02:14:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":29,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":80,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":223,"_text":"Response Remove After Resolve PlayLootCardStackEffect 29"},"childOfId":222} 
 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":224,"_text":"Wait For Response From Player 2 "},"childOfId":222} 
 Player 1 02:14:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:14:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:14:30 $ACTION_MASSAGE_REMOVE:  

 {"id":224} 
 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":225,"_text":"Wait For Response From Player 1 "},"childOfId":222} 
 Player 1 02:14:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:30 $ACTION_MASSAGE_REMOVE:  

 {"id":225} 
 Player 1 02:14:30 $ACTION_MASSAGE_REMOVE:  

 {"id":223} 
 Player 1 02:14:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":226,"_text":"Stack Was Emptied "}} 
 Player 1 02:14:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:32 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":289} 
 Player 1 02:14:35 $NEXT_STACK_ID:  
 Player 1 02:14:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:14:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:14:35 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 02:14:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:14:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 02:14:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":227,"_text":"Add ActivateItem 30 "}} 
 Player 1 02:14:36 $SHOW_DECISION:  

 {"startCardId":289,"endCardId":144} 
 Player 1 02:14:39 $USE_ITEM:  

 {"cardId":289} 
 Player 1 02:14:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:14:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:14:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":228,"_text":"Response Adding ActivateItem 30"},"childOfId":227} 
 Player 1 02:14:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":229,"_text":"Wait For Response From Player 1 "},"childOfId":227} 
 Player 1 02:14:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:14:39 $ACTION_MASSAGE_REMOVE:  

 {"id":229} 
 Player 1 02:14:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":230,"_text":"Wait For Response From Player 2 "},"childOfId":227} 
 Player 1 02:14:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:14:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:14:40 $ACTION_MASSAGE_REMOVE:  

 {"id":230} 
 Player 1 02:14:40 $ACTION_MASSAGE_REMOVE:  

 {"id":228} 
 Player 1 02:14:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":231,"_text":"Resolve ActivateItem 30 "}} 
 Player 1 02:14:40 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":289,"particleType":6} 
 Player 1 02:14:42 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":289,"particleType":6} 
 Player 1 02:15:56 $LOG_ERROR:  

 {"message":"\"Cannot read property '0' of undefined\"","stack":"\"TypeError: Cannot read property '0' of undefined\\n    at Deck.drawSpecificCard (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Deck.js:86:25)\\n    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:78:34\\n    at Array.forEach (<anonymous>)\\n    at LookAtTopDeckAndPutOnTop.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:77:39)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
 Player 1 02:15:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:15:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:15:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:15:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:15:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":232,"_text":"Remove After Resolve ActivateItem 30  "}} 
 Player 1 02:15:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:15:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":30,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:15:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":233,"_text":"Response Remove After Resolve ActivateItem 30"},"childOfId":232} 
 Player 1 02:15:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":234,"_text":"Wait For Response From Player 2 "},"childOfId":232} 
 Player 1 02:15:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:15:57 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:15:58 $ACTION_MASSAGE_REMOVE:  

 {"id":234} 
 Player 1 02:15:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":235,"_text":"Wait For Response From Player 1 "},"childOfId":232} 
 Player 1 02:15:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:15:58 $ACTION_MASSAGE_REMOVE:  

 {"id":235} 
 Player 1 02:15:58 $ACTION_MASSAGE_REMOVE:  

 {"id":233} 
 Player 1 02:15:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":236,"_text":"Stack Was Emptied "}} 
 Player 1 02:15:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:10 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 02:17:10 $END_TURN:  
 Player 1 02:17:10 $SET_TURN:  

 {"playerId":2} 
 Player 1 02:17:10 $START_TURN:  

 {"playerId":2} 
 Player 1 02:17:11 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:17:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:11 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:17:12 $MOVE_CARD_END:  

 {"moveIndex":28,"cardId":67,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:17:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:17:12 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:17:13 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:17:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:13 $RECHARGE_ITEM:  

 {"cardId":289} 
 Player 1 02:17:13 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":289} 
 Player 1 02:17:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:13 $NEXT_STACK_ID:  
 Player 1 02:17:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:17:13 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:17:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:17:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":247,"_text":"Add StartTurnLoot 32 "}} 
 Player 1 02:17:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:17:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":248,"_text":"Response Adding StartTurnLoot 32"},"childOfId":247} 
 Player 1 02:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":249,"_text":"Wait For Response From Player 1 "},"childOfId":247} 
 Player 1 02:17:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:14 $ACTION_MASSAGE_REMOVE:  

 {"id":249} 
 Player 1 02:17:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":250,"_text":"Wait For Response From Player 2 "},"childOfId":247} 
 Player 1 02:17:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:17:14 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:17:14 $ACTION_MASSAGE_REMOVE:  

 {"id":250} 
 Player 1 02:17:14 $ACTION_MASSAGE_REMOVE:  

 {"id":248} 
 Player 1 02:17:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":251,"_text":"Resolve StartTurnLoot 32 "}} 
 Player 1 02:17:14 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 02:17:14 $MOVE_CARD:  

 {"moveIndex":29,"cardId":75,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 02:17:14 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":75} 
 Player 1 02:17:14 $FLIP_CARD:  

 {"cardId":75} 
 Player 1 02:17:14 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":75} 
 Player 1 02:17:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:17:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:17:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":252,"_text":"Remove After Resolve StartTurnLoot 32  "}} 
 Player 1 02:17:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":32,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":253,"_text":"Response Remove After Resolve StartTurnLoot 32"},"childOfId":252} 
 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":254,"_text":"Wait For Response From Player 2 "},"childOfId":252} 
 Player 1 02:17:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:17:15 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:17:15 $ACTION_MASSAGE_REMOVE:  

 {"id":254} 
 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":255,"_text":"Wait For Response From Player 1 "},"childOfId":252} 
 Player 1 02:17:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:15 $ACTION_MASSAGE_REMOVE:  

 {"id":255} 
 Player 1 02:17:15 $ACTION_MASSAGE_REMOVE:  

 {"id":253} 
 Player 1 02:17:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":256,"_text":"Stack Was Emptied "}} 
 Player 1 02:17:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:19 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":159} 
 Player 1 02:17:22 $NEXT_STACK_ID:  
 Player 1 02:17:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 
 Player 1 02:17:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:17:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 
 Player 1 02:17:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":257,"_text":"Add PurchaseItem 33 "}} 
 Player 1 02:17:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 
 Player 1 02:17:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":258,"_text":"Response Adding PurchaseItem 33"},"childOfId":257} 
 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":259,"_text":"Wait For Response From Player 1 "},"childOfId":257} 
 Player 1 02:17:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:22 $ACTION_MASSAGE_REMOVE:  

 {"id":259} 
 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":260,"_text":"Wait For Response From Player 2 "},"childOfId":257} 
 Player 1 02:17:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:17:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:17:22 $ACTION_MASSAGE_REMOVE:  

 {"id":260} 
 Player 1 02:17:22 $ACTION_MASSAGE_REMOVE:  

 {"id":258} 
 Player 1 02:17:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":261,"_text":"Resolve PurchaseItem 33 "}} 
 Player 1 02:17:22 $SET_MONEY:  

 {"playerId":1,"numOfCoins":1} 
 Player 1 02:17:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 1 02:17:22 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":159} 
 Player 1 02:17:22 $NEXT_STACK_ID:  
 Player 1 02:17:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10"} 
 Player 1 02:17:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 
 Player 1 02:17:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 02:17:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 
 Player 1 02:17:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:17:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 
 Player 1 02:17:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:17:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 
 Player 1 02:17:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 02:17:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 
 Player 1 02:17:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Cursed Eye for 10 \n2:Refill Store slot"} 
 Player 1 02:17:23 $REPLACE_STACK:  

 {"currentStack":[{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9},{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 1 02:17:23 $REGISTER_PASSIVE_ITEM:  

 {"cardId":159} 
 Player 1 02:17:23 $MOVE_CARD:  

 {"moveIndex":30,"cardId":159,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 02:17:23 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":159,"isReward":false} 
 Player 1 02:17:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":159}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 
 Player 1 02:17:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:17:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:17:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":262,"_text":"Remove After Resolve PurchaseItem 33  "}} 
 Player 1 02:17:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill Store slot"} 
 Player 1 02:17:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":33,"creatorCardId":286,"itemToPurchaseCardId":159,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:17:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":263,"_text":"Response Remove After Resolve PurchaseItem 33"},"childOfId":262} 
 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":264,"_text":"Wait For Response From Player 1 "},"childOfId":262} 
 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  

 {"id":264} 
 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":265,"_text":"Wait For Response From Player 2 "},"childOfId":262} 
 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:17:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  

 {"id":265} 
 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  

 {"id":263} 
 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":266,"_text":"Resolve RefillEmptySlot 34 "}} 
 Player 1 02:17:24 $DRAW_CARD:  

 {"deckType":5} 
 Player 1 02:17:24 $FLIP_CARD:  

 {"cardId":211} 
 Player 1 02:17:24 $ADD_STORE_CARD:  

 {"cardId":211} 
 Player 1 02:17:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:24 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":267,"_text":"Remove After Resolve RefillEmptySlot 34  "}} 
 Player 1 02:17:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:17:24 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":34,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":268,"_text":"Response Remove After Resolve RefillEmptySlot 34"},"childOfId":267} 
 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":269,"_text":"Wait For Response From Player 2 "},"childOfId":267} 
 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:17:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  

 {"id":269} 
 Player 1 02:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":270,"_text":"Wait For Response From Player 1 "},"childOfId":267} 
 Player 1 02:17:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:17:24 $ACTION_MASSAGE_REMOVE:  

 {"id":270} 
 Player 1 02:17:25 $ACTION_MASSAGE_REMOVE:  

 {"id":268} 
 Player 1 02:17:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":271,"_text":"Stack Was Emptied "}} 
 Player 1 02:17:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:18:13 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":289} 
 Player 1 02:18:16 $NEXT_STACK_ID:  
 Player 1 02:18:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:18:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:18:16 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 02:18:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:18:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 02:18:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":272,"_text":"Add ActivateItem 35 "}} 
 Player 1 02:18:18 $SHOW_DECISION:  

 {"startCardId":289,"endCardId":144} 
 Player 1 02:18:21 $USE_ITEM:  

 {"cardId":289} 
 Player 1 02:18:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:18:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:18:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":273,"_text":"Response Adding ActivateItem 35"},"childOfId":272} 
 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":274,"_text":"Wait For Response From Player 1 "},"childOfId":272} 
 Player 1 02:18:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:18:21 $ACTION_MASSAGE_REMOVE:  

 {"id":274} 
 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":275,"_text":"Wait For Response From Player 2 "},"childOfId":272} 
 Player 1 02:18:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:18:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:18:21 $ACTION_MASSAGE_REMOVE:  

 {"id":275} 
 Player 1 02:18:21 $ACTION_MASSAGE_REMOVE:  

 {"id":273} 
 Player 1 02:18:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":276,"_text":"Resolve ActivateItem 35 "}} 
 Player 1 02:18:21 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":289,"particleType":6} 
 Player 1 02:18:23 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":289,"particleType":6} 
 Player 1 02:20:36 $LOG_ERROR:  

 {"message":"\"Cannot read property '0' of undefined\"","stack":"\"TypeError: Cannot read property '0' of undefined\\n    at Deck.drawSpecificCard (http://localhost:7456/preview-scripts/assets/Script/Entites/GameEntities/Deck.js:86:25)\\n    at http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:78:34\\n    at Array.forEach (<anonymous>)\\n    at LookAtTopDeckAndPutOnTop.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/LookAtTopDeckAndPutOnTop.js:77:39)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at fulfilled (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89787:28)\""} 
 Player 1 02:20:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 activated Sleight Of Hand"} 
 Player 1 02:20:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:20:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:20:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:20:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":277,"_text":"Remove After Resolve ActivateItem 35  "}} 
 Player 1 02:20:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:20:37 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":35,"creatorCardId":286,"hasLockingStackEffect":false,"itemToPlayCardId":289,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 02:20:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":278,"_text":"Response Remove After Resolve ActivateItem 35"},"childOfId":277} 
 Player 1 02:20:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":279,"_text":"Wait For Response From Player 2 "},"childOfId":277} 
 Player 1 02:20:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:20:37 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:20:38 $ACTION_MASSAGE_REMOVE:  

 {"id":279} 
 Player 1 02:20:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":280,"_text":"Wait For Response From Player 1 "},"childOfId":277} 
 Player 1 02:20:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:20:38 $ACTION_MASSAGE_REMOVE:  

 {"id":280} 
 Player 1 02:20:38 $ACTION_MASSAGE_REMOVE:  

 {"id":278} 
 Player 1 02:20:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":281,"_text":"Stack Was Emptied "}} 
 Player 1 02:20:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:21:06 $SHOW_DECISION:  

 {"startCardId":75,"endCardId":75,"flipEndCard":true} 
 Player 1 02:21:09 $NEXT_STACK_ID:  
 Player 1 02:21:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:21:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Dime(1) "} 
 Player 1 02:21:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 02:21:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Dime(1) "} 
 Player 1 02:21:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 02:21:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":282,"_text":"Add PlayLootCardStackEffect 36 "}} 
 Player 1 02:21:09 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":75} 
 Player 1 02:21:09 $MOVE_CARD:  

 {"moveIndex":31,"cardId":75,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:21:10 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":75} 
 Player 1 02:21:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Dime(1): addMoney"} 
 Player 1 02:21:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Dime(1): addMoney"} 
 Player 1 02:21:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":75,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:21:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":283,"_text":"Response Adding PlayLootCardStackEffect 36"},"childOfId":282} 
 Player 1 02:21:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":284,"_text":"Wait For Response From Player 1 "},"childOfId":282} 
 Player 1 02:21:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:10 $ACTION_MASSAGE_REMOVE:  

 {"id":284} 
 Player 1 02:21:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":285,"_text":"Wait For Response From Player 2 "},"childOfId":282} 
 Player 1 02:21:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:21:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:21:10 $ACTION_MASSAGE_REMOVE:  

 {"id":285} 
 Player 1 02:21:10 $ACTION_MASSAGE_REMOVE:  

 {"id":283} 
 Player 1 02:21:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":286,"_text":"Resolve PlayLootCardStackEffect 36 "}} 
 Player 1 02:21:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Dime(1): addMoney"} 
 Player 1 02:21:10 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":75,"particleType":6} 
 Player 1 02:21:12 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":75,"particleType":6} 
 Player 1 02:21:12 $SET_MONEY:  

 {"playerId":1,"numOfCoins":11} 
 Player 1 02:21:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 
 Player 1 02:21:12 $REMOVE_FROM_PILE:  

 {"cardId":75} 
 Player 1 02:21:12 $MOVE_CARD:  

 {"moveIndex":32,"cardId":75,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 02:21:13 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":75} 
 Player 1 02:21:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play A Dime(1): addMoney"} 
 Player 1 02:21:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:21:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:21:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":287,"_text":"Remove After Resolve PlayLootCardStackEffect 36  "}} 
 Player 1 02:21:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:21:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":36,"creatorCardId":286,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":75,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":288,"_text":"Response Remove After Resolve PlayLootCardStackEffect 36"},"childOfId":287} 
 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":289,"_text":"Wait For Response From Player 2 "},"childOfId":287} 
 Player 1 02:21:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:21:13 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:21:13 $ACTION_MASSAGE_REMOVE:  

 {"id":289} 
 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":290,"_text":"Wait For Response From Player 1 "},"childOfId":287} 
 Player 1 02:21:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:13 $ACTION_MASSAGE_REMOVE:  

 {"id":290} 
 Player 1 02:21:13 $ACTION_MASSAGE_REMOVE:  

 {"id":288} 
 Player 1 02:21:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":291,"_text":"Stack Was Emptied "}} 
 Player 1 02:21:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:21:16 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":211} 
 Player 1 02:21:19 $NEXT_STACK_ID:  
 Player 1 02:21:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:21:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 
 Player 1 02:21:19 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:21:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 
 Player 1 02:21:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":292,"_text":"Add PurchaseItem 37 "}} 
 Player 1 02:21:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 
 Player 1 02:21:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":293,"_text":"Response Adding PurchaseItem 37"},"childOfId":292} 
 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":294,"_text":"Wait For Response From Player 1 "},"childOfId":292} 
 Player 1 02:21:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:20 $ACTION_MASSAGE_REMOVE:  

 {"id":294} 
 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":295,"_text":"Wait For Response From Player 2 "},"childOfId":292} 
 Player 1 02:21:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:21:20 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:21:20 $ACTION_MASSAGE_REMOVE:  

 {"id":295} 
 Player 1 02:21:20 $ACTION_MASSAGE_REMOVE:  

 {"id":293} 
 Player 1 02:21:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":296,"_text":"Resolve PurchaseItem 37 "}} 
 Player 1 02:21:20 $SET_MONEY:  

 {"playerId":1,"numOfCoins":1} 
 Player 1 02:21:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 
 Player 1 02:21:20 $REMOVE_ITEM_FROM_SHOP:  

 {"cardId":211} 
 Player 1 02:21:20 $NEXT_STACK_ID:  
 Player 1 02:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 
 Player 1 02:21:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 02:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 02:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:21 $REPLACE_STACK:  

 {"currentStack":[{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9},{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 
 Player 1 02:21:21 $REGISTER_PASSIVE_ITEM:  

 {"cardId":211} 
 Player 1 02:21:21 $MOVE_CARD:  

 {"moveIndex":33,"cardId":211,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 02:21:21 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":211,"isReward":false} 
 Player 1 02:21:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":211}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 1 02:21:21 $NEXT_STACK_ID:  
 Player 1 02:21:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 
 Player 1 02:21:21 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"effectToDo":{"effectName":"SteamySaleEffect","cardEffectNum":0,"cardPlayerId":1,"cardId":211,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:21:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 
 Player 1 02:21:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"effectToDo":{"effectName":"SteamySaleEffect","cardEffectNum":0,"cardPlayerId":1,"cardId":211,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:21:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":297,"_text":"Add ActivatePassiveEffect 39 "}} 
 Player 1 02:21:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 
 Player 1 02:21:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 
 Player 1 02:21:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"effectToDo":{"effectName":"SteamySaleEffect","cardEffectNum":0,"cardPlayerId":1,"cardId":211,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:21:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":298,"_text":"Response Adding ActivatePassiveEffect 39"},"childOfId":297} 
 Player 1 02:21:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":299,"_text":"Wait For Response From Player 1 "},"childOfId":297} 
 Player 1 02:21:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:21 $ACTION_MASSAGE_REMOVE:  

 {"id":299} 
 Player 1 02:21:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":300,"_text":"Wait For Response From Player 2 "},"childOfId":297} 
 Player 1 02:21:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:21:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:21:22 $ACTION_MASSAGE_REMOVE:  

 {"id":300} 
 Player 1 02:21:22 $ACTION_MASSAGE_REMOVE:  

 {"id":298} 
 Player 1 02:21:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":301,"_text":"Resolve ActivatePassiveEffect 39 "}} 
 Player 1 02:21:22 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":211,"particleType":6} 
 Player 1 02:21:24 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":211,"particleType":6} 
 Player 1 02:21:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":211}],"result":true,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 1 02:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot \n3:Activate Steamy Sale effect Steamy Sale Effect<Steamy Sale Effect>"} 
 Player 1 02:21:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:24 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":302,"_text":"Remove After Resolve ActivatePassiveEffect 39  "}} 
 Player 1 02:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10 \n2:Refill Store slot"} 
 Player 1 02:21:24 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":211,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":303,"_text":"Response Remove After Resolve ActivatePassiveEffect 39"},"childOfId":302} 
 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":304,"_text":"Wait For Response From Player 2 "},"childOfId":302} 
 Player 1 02:21:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:21:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:21:24 $ACTION_MASSAGE_REMOVE:  

 {"id":304} 
 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":305,"_text":"Wait For Response From Player 1 "},"childOfId":302} 
 Player 1 02:21:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:24 $ACTION_MASSAGE_REMOVE:  

 {"id":305} 
 Player 1 02:21:24 $ACTION_MASSAGE_REMOVE:  

 {"id":303} 
 Player 1 02:21:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":306,"_text":"Resolve RefillEmptySlot 38 "}} 
 Player 1 02:21:24 $DRAW_CARD:  

 {"deckType":5} 
 Player 1 02:21:24 $FLIP_CARD:  

 {"cardId":175} 
 Player 1 02:21:24 $ADD_STORE_CARD:  

 {"cardId":175} 
 Player 1 02:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 
 Player 1 02:21:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":307,"_text":"Remove After Resolve RefillEmptySlot 38  "}} 
 Player 1 02:21:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Steamy Sale for 10"} 
 Player 1 02:21:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":38,"creatorCardId":286,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 
 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":308,"_text":"Response Remove After Resolve RefillEmptySlot 38"},"childOfId":307} 
 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":309,"_text":"Wait For Response From Player 1 "},"childOfId":307} 
 Player 1 02:21:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:25 $ACTION_MASSAGE_REMOVE:  

 {"id":309} 
 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":310,"_text":"Wait For Response From Player 2 "},"childOfId":307} 
 Player 1 02:21:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:21:25 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:21:25 $ACTION_MASSAGE_REMOVE:  

 {"id":310} 
 Player 1 02:21:25 $ACTION_MASSAGE_REMOVE:  

 {"id":308} 
 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":311,"_text":"Resolve PurchaseItem 37 "}} 
 Player 1 02:21:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:21:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":312,"_text":"Remove After Resolve PurchaseItem 37  "}} 
 Player 1 02:21:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:21:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":37,"creatorCardId":286,"itemToPurchaseCardId":211,"playerWhoBuysCardId":286,"cost":10,"stackEffectType":9}} 
 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":313,"_text":"Response Remove After Resolve PurchaseItem 37"},"childOfId":312} 
 Player 1 02:21:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":314,"_text":"Wait For Response From Player 2 "},"childOfId":312} 
 Player 1 02:21:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:21:25 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:21:25 $ACTION_MASSAGE_REMOVE:  

 {"id":314} 
 Player 1 02:21:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":315,"_text":"Wait For Response From Player 1 "},"childOfId":312} 
 Player 1 02:21:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:21:26 $ACTION_MASSAGE_REMOVE:  

 {"id":315} 
 Player 1 02:21:26 $ACTION_MASSAGE_REMOVE:  

 {"id":313} 
 Player 1 02:21:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":316,"_text":"Stack Was Emptied "}} 
 Player 1 02:21:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:29:34 $SHOW_DECISION:  

 {"startCardId":286,"endCardId":253} 
 Player 1 02:29:37 $NEXT_STACK_ID:  
 Player 1 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 1 02:29:37 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 1 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 1 02:29:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 1 02:29:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":317,"_text":"Add DeclareAttack 40 "}} 
 Player 1 02:29:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:29:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 1 02:29:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 1 02:29:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":318,"_text":"Response Adding DeclareAttack 40"},"childOfId":317} 
 Player 1 02:29:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":319,"_text":"Wait For Response From Player 1 "},"childOfId":317} 
 Player 1 02:29:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:30:06 $ACTION_MASSAGE_REMOVE:  

 {"id":319} 
 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":320,"_text":"Wait For Response From Player 2 "},"childOfId":317} 
 Player 1 02:30:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:30:06 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:30:06 $ACTION_MASSAGE_REMOVE:  

 {"id":320} 
 Player 1 02:30:06 $ACTION_MASSAGE_REMOVE:  

 {"id":318} 
 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":321,"_text":"Resolve DeclareAttack 40 "}} 
 Player 1 02:30:06 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":253,"particleType":5} 
 Player 1 02:30:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":20,"originStackId":40},"isAfterActivation":true,"index":20} 
 Player 1 02:30:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Holy Dinga"} 
 Player 1 02:30:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 1 02:30:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":322,"_text":"Remove After Resolve DeclareAttack 40  "}} 
 Player 1 02:30:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":40,"creatorCardId":286,"attackingPlayerCardId":286,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":323,"_text":"Response Remove After Resolve DeclareAttack 40"},"childOfId":322} 
 Player 1 02:30:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":324,"_text":"Wait For Response From Player 2 "},"childOfId":322} 
 Player 1 02:30:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:30:06 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:30:07 $ACTION_MASSAGE_REMOVE:  

 {"id":324} 
 Player 1 02:30:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":325,"_text":"Wait For Response From Player 1 "},"childOfId":322} 
 Player 1 02:30:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:30:10 $ACTION_MASSAGE_REMOVE:  

 {"id":325} 
 Player 1 02:30:10 $ACTION_MASSAGE_REMOVE:  

 {"id":323} 
 Player 1 02:30:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":326,"_text":"Stack Was Emptied "}} 
 Player 1 02:30:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:34 $NEXT_STACK_ID:  
 Player 1 02:30:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:30:34 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":41,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 1 02:30:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Holy Dinga<Monster>"} 
 Player 1 02:30:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":41,"creatorCardId":286,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 1 02:30:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":327,"_text":"Add AttackRoll 41 "}} 
 Player 1 02:30:34 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 02:30:36 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":1} 
 Player 1 02:30:36 $UPDATE_STACK_VIS:  

 {"stackId":41,"text":"player rolled 1 vs Holy Dinga<Monster>"} 
 Player 1 02:30:36 $SHOW_DICE_ROLL:  

 {"stackId":41} 
 Player 1 02:30:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster>"} 
 Player 1 02:30:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:30:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster>"} 
 Player 1 02:30:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":41,"creatorCardId":286,"numberRolled":1,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 1 02:30:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":328,"_text":"Response Adding AttackRoll 41"},"childOfId":327} 
 Player 1 02:30:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":329,"_text":"Wait For Response From Player 1 "},"childOfId":327} 
 Player 1 02:30:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:30:39 $ACTION_MASSAGE_REMOVE:  

 {"id":329} 
 Player 1 02:30:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":330,"_text":"Wait For Response From Player 2 "},"childOfId":327} 
 Player 1 02:30:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:30:40 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  

 {"id":330} 
 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  

 {"id":328} 
 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":331,"_text":"Resolve AttackRoll 41 "}} 
 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":332,"_text":"Added 0 to original roll"}} 
 Player 1 02:30:40 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":41},"isAfterActivation":false,"index":1} 
 Player 1 02:30:40 $NEXT_STACK_ID:  
 Player 1 02:30:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster>"} 
 Player 1 02:30:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 1 02:30:40 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":1,"cardId":159,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:30:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 1 02:30:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":1,"cardId":159,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":333,"_text":"Add ActivatePassiveEffect 42 "}} 
 Player 1 02:30:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 1 02:30:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs Holy Dinga<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 1 02:30:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":1,"cardId":159,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":334,"_text":"Response Adding ActivatePassiveEffect 42"},"childOfId":333} 
 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":335,"_text":"Wait For Response From Player 2 "},"childOfId":333} 
 Player 1 02:30:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:30:40 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  

 {"id":335} 
 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":336,"_text":"Wait For Response From Player 1 "},"childOfId":333} 
 Player 1 02:30:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  

 {"id":336} 
 Player 1 02:30:40 $ACTION_MASSAGE_REMOVE:  

 {"id":334} 
 Player 1 02:30:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":337,"_text":"Resolve ActivatePassiveEffect 42 "}} 
 Player 1 02:30:40 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":159,"particleType":6} 
 Player 1 02:30:42 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":159,"particleType":6} 
 Player 1 02:30:42 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":253,"particleType":5} 
 Player 1 02:30:42 $CANCEL_ATTACK:  
 Player 1 02:30:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 1 02:30:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":41,"creatorCardId":286,"numberRolled":1,"rollingPlayerCardId":286,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 1 02:30:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":338,"_text":"Fizzle AttackRoll 41"}} 
 Player 1 02:30:43 $FIZZLE_STACK_EFFECT:  

 {"entityId":41} 
 Player 1 02:30:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":286,"scopeIsPlayer":true,"index":1,"originStackId":41},"isAfterActivation":false,"index":1} 
 Player 1 02:30:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Cursed Eye effect EndTurn<EndTurn>"} 
 Player 1 02:30:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:30:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":339,"_text":"Remove After Resolve ActivatePassiveEffect 42  "}} 
 Player 1 02:30:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:43 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":286,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":159,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":340,"_text":"Response Remove After Resolve ActivatePassiveEffect 42"},"childOfId":339} 
 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":341,"_text":"Wait For Response From Player 1 "},"childOfId":339} 
 Player 1 02:30:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:30:43 $ACTION_MASSAGE_REMOVE:  

 {"id":341} 
 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":342,"_text":"Wait For Response From Player 2 "},"childOfId":339} 
 Player 1 02:30:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:30:43 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:30:43 $ACTION_MASSAGE_REMOVE:  

 {"id":342} 
 Player 1 02:30:43 $ACTION_MASSAGE_REMOVE:  

 {"id":340} 
 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":343,"_text":"Stack Was Emptied "}} 
 Player 1 02:30:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:30:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:43 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 02:30:43 $END_TURN:  
 Player 1 02:30:43 $SET_TURN:  

 {"playerId":2} 
 Player 1 02:30:43 $START_TURN:  

 {"playerId":2} 
 Player 1 02:30:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":344,"_text":"Stack Was Emptied "}} 
 Player 1 02:30:43 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:44 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 02:30:44 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:44 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:30:45 $MOVE_CARD_END:  

 {"moveIndex":34,"cardId":123,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:45 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:30:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:53 $MOVE_CARD_END:  

 {"moveIndex":35,"cardId":123,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:30:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:54 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:30:56 $MOVE_CARD_END:  

 {"moveIndex":36,"cardId":130,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:57 $MOVE_CARD_END:  

 {"moveIndex":37,"cardId":12,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:57 $MOVE_CARD_END:  

 {"moveIndex":38,"cardId":106,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:58 $MOVE_CARD_END:  

 {"moveIndex":39,"cardId":123,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play A Sack "} 
 Player 1 02:30:58 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:31:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:31:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:31:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:31:29 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:31 $MOVE_CARD_END:  

 {"moveIndex":40,"cardId":67,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated The Lost"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7)  \n2:Player 2 activated The Lost"} 
 Player 1 02:31:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:35 $MOVE_CARD_END:  

 {"moveIndex":41,"cardId":67,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:31:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 4 Cents(7) "} 
 Player 1 02:31:35 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:32:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:32:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:32:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:17 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:32:18 $MOVE_CARD_END:  

 {"moveIndex":42,"cardId":199,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:32:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:18 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10 \n2:Activate Polydactyly "} 
 Player 1 02:32:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 1 02:32:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:32:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:32:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:32:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:34 $MOVE_CARD_END:  

 {"moveIndex":43,"cardId":106,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:35 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:32:37 $MOVE_CARD_END:  

 {"moveIndex":44,"cardId":106,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:32:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Guppys Hairball "} 
 Player 1 02:32:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:32:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:32:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:32:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:32:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:32:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:32:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:32:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:33:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:33:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:33:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 
 Player 1 02:33:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 
 Player 1 02:33:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 
 Player 1 02:33:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 
 Player 1 02:33:28 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:33:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 
 Player 1 02:33:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 
 Player 1 02:33:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:33:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:33:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:33:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:33:31 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:33:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:33:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:14 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice \n5:Player 2 activated HolyMantle"} 
 Player 1 02:34:17 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 
 Player 1 02:34:18 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:34:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:34:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:34:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:34:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:34:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Activate Guppys Hairball "} 
 Player 1 02:34:20 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs!"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:21 $MOVE_CARD_END:  

 {"moveIndex":45,"cardId":277,"flipIfFlipped":true,"playerId":2} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs! \n3:Player 2 is about to die"} 
 Player 1 02:34:22 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:23 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:25 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1} 
 Player 1 02:34:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Activate HolyMantle "} 
 Player 1 02:34:25 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 
 Player 1 02:34:27 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:34:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:34:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:34:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Monster Deck"} 
 Player 1 02:34:27 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:34:27 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 02:34:27 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:34:28 $RECHARGE_ITEM:  

 {"cardId":289} 
 Player 1 02:34:28 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":289} 
 Player 1 02:34:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:34:28 $NEXT_STACK_ID:  
 Player 1 02:34:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:34:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:34:28 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:34:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:34:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":474,"_text":"Add StartTurnLoot 58 "}} 
 Player 1 02:34:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:34:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:34:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":475,"_text":"Response Adding StartTurnLoot 58"},"childOfId":474} 
 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":476,"_text":"Wait For Response From Player 1 "},"childOfId":474} 
 Player 1 02:34:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:34:28 $ACTION_MASSAGE_REMOVE:  

 {"id":476} 
 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":477,"_text":"Wait For Response From Player 2 "},"childOfId":474} 
 Player 1 02:34:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:34:28 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:34:28 $ACTION_MASSAGE_REMOVE:  

 {"id":477} 
 Player 1 02:34:28 $ACTION_MASSAGE_REMOVE:  

 {"id":475} 
 Player 1 02:34:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":478,"_text":"Resolve StartTurnLoot 58 "}} 
 Player 1 02:34:28 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 02:34:28 $MOVE_CARD:  

 {"moveIndex":46,"cardId":128,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 02:34:29 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":128} 
 Player 1 02:34:29 $FLIP_CARD:  

 {"cardId":128} 
 Player 1 02:34:29 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":128} 
 Player 1 02:34:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 02:34:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:34:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:34:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":479,"_text":"Remove After Resolve StartTurnLoot 58  "}} 
 Player 1 02:34:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:34:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":58,"creatorCardId":286,"turnPlayerCardId":286,"stackEffectType":13}} 
 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":480,"_text":"Response Remove After Resolve StartTurnLoot 58"},"childOfId":479} 
 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":481,"_text":"Wait For Response From Player 2 "},"childOfId":479} 
 Player 1 02:34:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 02:34:29 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 02:34:29 $ACTION_MASSAGE_REMOVE:  

 {"id":481} 
 Player 1 02:34:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":482,"_text":"Wait For Response From Player 1 "},"childOfId":479} 
 Player 1 02:34:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 02:34:29 $ACTION_MASSAGE_REMOVE:  

 {"id":482} 
 Player 1 02:34:29 $ACTION_MASSAGE_REMOVE:  

 {"id":480} 
 Player 1 02:34:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":483,"_text":"Stack Was Emptied "}} 
 Player 1 02:34:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"}