Start Log 

 Player 1 17:11:05 $MATCH:  

 Player 1 17:11:05 $START_GAME:  

 Player 1 17:11:05 $MOVE_TO_TABLE:  

 Player 2 17:11:05 $MOVE_TO_TABLE:  

 Player 1 17:11:12 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:11:12 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 17:11:12 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":311,"itemCardId":312} 

 Player 1 17:11:13 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":311,"itemCardId":312} 

 Player 1 17:11:13 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 17:11:13 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":313,"itemCardId":314} 

 Player 2 17:11:13 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[9,77,86,114,41,73,37,49,108,53,42,91,58,95,120,23,101,98,48,87,56,52,115,35,116,99,29,83,81,94,59,44,100,106,124,6,134,47,126,63,18,61,34,11,64,84,136,5,40,132,12,72,65,131,33,38,25,10,19,104,82,31,89,74,55,27,113,122,50,67,28,103,119,102,93,130,79,97,88,57,138,105,54,43,30,7,90,24,109,78,20,71,129,96,112,80,110,22,137,16,125,46,13,76,26,123,68,39,117,135,32,127,17,85,8,66,21,60,62,107,133,111,4,15,45,128,118,69,75,92,70,14,121,139,51,36]} 

 Player 2 17:11:13 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[278,277,264,259,285,260,280,289,263,234,255,279,288,250,246,298,239,223,237,257,254,309,252,291,284,265,294,247,295,261,268,302,293,287,292,273,283,248,267,276,300,253,274,242,251,241,296,240,232,306,244,256,282,262,310,258,275,236,227,290,233,231,225,271,245,238,270,286,249,272,228,303,224,299,307,304,243,229,226,266,235,269,297,230,281,301,305,308]} 

 Player 2 17:11:13 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[154,221,191,141,169,198,170,174,212,197,176,185,145,214,187,202,161,173,215,163,203,200,190,165,152,207,183,206,167,146,160,189,211,151,156,192,209,150,175,204,219,216,208,180,157,220,162,195,144,166,201,196,168,210,184,153,143,148,181,172,199,205,193,177,218,182,159,213,158,171,155,188,142,147,194,164,186,217,179,178,149]} 

 Player 2 17:11:13 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:11:13 $FLIP_CARD:  
{"cardId":149} 

 Player 2 17:11:13 $ADD_STORE_CARD:  
{"cardId":149} 

 Player 2 17:11:13 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:11:13 $FLIP_CARD:  
{"cardId":178} 

 Player 2 17:11:13 $ADD_STORE_CARD:  
{"cardId":178} 

 Player 2 17:11:13 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:11:13 $FLIP_CARD:  
{"cardId":308} 

 Player 2 17:11:13 $REGISTER_PASSIVE_ITEM:  
{"cardId":308} 

 Player 2 17:11:13 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":308} 

 Player 2 17:11:13 $NEW_MONSTER_ON_PLACE:  
{"cardId":308,"monsterPlaceId":1} 

 Player 2 17:11:13 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:11:13 $FLIP_CARD:  
{"cardId":305} 

 Player 2 17:11:13 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":305} 

 Player 2 17:11:13 $NEW_MONSTER_ON_PLACE:  
{"cardId":305,"monsterPlaceId":2} 

 Player 2 17:11:13 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:11:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:11:13 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:11:13 $MOVE_CARD:  
{"moveIndex":1,"cardId":36,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:11:13 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":36,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:11:13 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":36} 

 Player 2 17:11:14 $FLIP_CARD:  
{"cardId":36} 

 Player 2 17:11:14 $FLIP_CARD:  
{"cardId":36} 

 Player 2 17:11:14 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":36} 

 Player 2 17:11:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:11:14 $MOVE_CARD:  
{"moveIndex":2,"cardId":51,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:11:14 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":51,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:11:14 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":51} 

 Player 2 17:11:14 $FLIP_CARD:  
{"cardId":51} 

 Player 2 17:11:14 $FLIP_CARD:  
{"cardId":51} 

 Player 2 17:11:14 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":51} 

 Player 2 17:11:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:11:14 $MOVE_CARD:  
{"moveIndex":3,"cardId":139,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:11:14 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":139,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:11:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":139} 

 Player 2 17:11:15 $FLIP_CARD:  
{"cardId":139} 

 Player 2 17:11:15 $FLIP_CARD:  
{"cardId":139} 

 Player 2 17:11:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":139} 

 Player 2 17:11:15 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:11:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:11:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:11:15 $MOVE_CARD:  
{"moveIndex":4,"cardId":121,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:11:15 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":121,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:11:15 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":121} 

 Player 2 17:11:15 $FLIP_CARD:  
{"cardId":121} 

 Player 2 17:11:15 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":121} 

 Player 2 17:11:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:11:15 $MOVE_CARD:  
{"moveIndex":5,"cardId":14,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:11:15 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":14,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:11:16 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":14} 

 Player 2 17:11:16 $FLIP_CARD:  
{"cardId":14} 

 Player 2 17:11:16 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":14} 

 Player 2 17:11:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:11:16 $MOVE_CARD:  
{"moveIndex":6,"cardId":70,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:11:16 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":70,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:11:16 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":70} 

 Player 2 17:11:16 $FLIP_CARD:  
{"cardId":70} 

 Player 2 17:11:16 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":70} 

 Player 2 17:11:16 $GAME_HAS_STARTED:  

 Player 2 17:11:16 $SET_TURN:  
{"playerId":1} 

 Player 2 17:11:16 $START_TURN:  
{"playerId":1} 

 Player 2 17:11:16 $UPDATE_ACTIONS:  

 Player 1 17:11:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:16 $NEXT_STACK_ID:  

 Player 1 17:11:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:11:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 17:11:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 1 17:11:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 1 17:11:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:11:16 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 17:11:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:11:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 17:11:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 1 17:11:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 1 17:11:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 1 17:11:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 17:11:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 17:11:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:11:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:11:19 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:11:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:11:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 1 17:11:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}]} 

 Player 1 17:11:20 $DRAW_CARD:  
{"deckType":1} 

 Player 1 17:11:20 $MOVE_CARD:  
{"moveIndex":7,"cardId":92,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 17:11:20 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":92,"flipIfFlipped":false,"playerId":1} 

 Player 1 17:11:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":92} 

 Player 1 17:11:20 $FLIP_CARD:  
{"cardId":92} 

 Player 1 17:11:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":92} 

 Player 1 17:11:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 17:11:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 1 17:11:20 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:11:20 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:11:20 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 17:11:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 17:11:23 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 17:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 1 17:11:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:11:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 1 17:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 1 17:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 17:11:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:11:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:11:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 17:11:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:11:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:11:23 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 17:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 17:11:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:23 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 17:11:23 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 17:11:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 17:11:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:11:23 $CLEAR_SE_VIS:  

 Player 1 17:11:33 $SET_MONEY:  
{"playerId":1,"numOfCoins":11} 

 Player 1 17:11:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":8}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:11:37 $NEXT_STACK_ID:  

 Player 1 17:11:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Play 3 Cents(1) "} 

 Player 1 17:11:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 17:11:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 17:11:37 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:11:37 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 17:11:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:11:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Play 3 Cents(1) "} 

 Player 1 17:11:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Play Loot Card 2 "}} 

 Player 1 17:11:40 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":36} 

 Player 1 17:11:40 $MOVE_CARD:  
{"moveIndex":8,"cardId":36,"placeID":329,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 17:11:40 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":36,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:11:40 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":36} 

 Player 1 17:11:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Play 3 Cents(1): addMoney"} 

 Player 1 17:11:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":36,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 17:11:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Play Loot Card 2"},"childOfId":10} 

 Player 1 17:11:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 17:11:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:40 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 17:11:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 17:11:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:11:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:11:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Play 3 Cents(1) "} 

 Player 2 17:11:41 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:11:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:11:41 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 17:11:41 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 17:11:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Play Loot Card 2 "}} 

 Player 1 17:11:41 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":36,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 1 17:11:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Plays 3 Cents(1): addMoney"} 

 Player 1 17:11:41 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":36,"particleType":6} 

 Player 1 17:11:43 $DISABLE_PARTICLE_EFFECT:  
{"cardId":36,"particleType":6} 

 Player 1 17:11:43 $SET_MONEY:  
{"playerId":1,"numOfCoins":14} 

 Player 1 17:11:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 17:11:43 $REMOVE_FROM_PILE:  
{"cardId":36} 

 Player 1 17:11:43 $MOVE_CARD:  
{"moveIndex":9,"cardId":36,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 17:11:43 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":36,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:11:43 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":36} 

 Player 1 17:11:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 17:11:43 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:11:43 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:11:43 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 17:11:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Play 3 Cents(1) "} 

 Player 1 17:11:46 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 17:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Play Loot Card 2  "}} 

 Player 1 17:11:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:11:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":36,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 17:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Play Loot Card 2"},"childOfId":15} 

 Player 1 17:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 17:11:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:11:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:11:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Play 3 Cents(1) "} 

 Player 2 17:11:46 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:11:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:11:46 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 17:11:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 17:11:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:46 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 17:11:46 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 17:11:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 17:11:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:11:47 $CLEAR_SE_VIS:  

 Player 1 17:11:49 $NEXT_STACK_ID:  

 Player 1 17:11:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10"} 

 Player 1 17:11:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"itemToPurchaseCardId":178,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 

 Player 1 17:11:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"itemToPurchaseCardId":178,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 

 Player 1 17:11:49 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:11:49 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 17:11:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:11:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10"} 

 Player 1 17:11:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Purchase Item 3 "}} 

 Player 1 17:11:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"itemToPurchaseCardId":178,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 

 Player 1 17:11:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Purchase Item 3"},"childOfId":20} 

 Player 1 17:11:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 17:11:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:52 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 17:11:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 17:11:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:11:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:11:52 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:11:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:11:52 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 17:11:52 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 17:11:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Purchase Item 3 "}} 

 Player 1 17:11:52 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":311,"itemToPurchaseCardId":178,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}]} 

 Player 1 17:11:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Bought Jaw Bone For 10 cents"} 

 Player 1 17:11:52 $SET_MONEY:  
{"playerId":1,"numOfCoins":4} 

 Player 1 17:11:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 17:11:52 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":178} 

 Player 1 17:11:52 $NEXT_STACK_ID:  

 Player 1 17:11:52 $CLEAR_SE_VIS:  

 Player 1 17:11:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Bought Jaw Bone For 10 cents \n2:Refill Store slot"} 

 Player 1 17:11:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"itemToPurchaseCardId":178,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 

 Player 1 17:11:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 17:11:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":311,"itemToPurchaseCardId":178,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9},{"entityId":4,"creatorCardId":311,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 17:11:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 17:11:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:11:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:53 $MOVE_CARD:  
{"moveIndex":10,"cardId":178,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 17:11:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10"} 

 Player 2 17:11:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Refill Store slot"} 

 Player 2 17:11:53 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":178,"flipIfFlipped":true,"playerId":1} 

 Player 1 17:11:53 $ADD_AN_ITEM:  
{"playerId":1,"cardId":178,"isReward":false} 

 Player 1 17:11:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":178}],"result":true,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 17:11:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_BUY_ITEM","args":[{"type":2,"number":-10},{"type":0,"number":178}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 1 17:11:53 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:11:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:11:53 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 17:11:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 17:11:56 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 17:11:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Player Purchase Item 3  "}} 

 Player 1 17:11:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 17:11:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":311,"itemToPurchaseCardId":178,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 

 Player 1 17:11:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Player Purchase Item 3"},"childOfId":25} 

 Player 1 17:11:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 17:11:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:11:59 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 17:11:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 17:11:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:11:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:11:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Refill Store slot"} 

 Player 2 17:11:59 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:11:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:11:59 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 17:11:59 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 17:12:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve Reffil Empty Store Slot 4 "}} 

 Player 1 17:12:00 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":311,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 17:12:00 $DRAW_CARD:  
{"deckType":5} 

 Player 1 17:12:00 $FLIP_CARD:  
{"cardId":179} 

 Player 1 17:12:00 $ADD_STORE_CARD:  
{"cardId":179} 

 Player 1 17:12:00 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:12:00 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:12:00 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 17:12:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10"} 

 Player 2 17:12:00 $LOG_ERROR:  
"no stack effect to show" 
//////Error From Player 2////
  

 Player 2 17:12:00 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 17:12:00 $SHOW_ANNOUNCEMENT:  
{"text":"no stack effect to show"} 

 Player 1 17:12:02 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 17:12:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve Reffil Empty Store Slot 4  "}} 

 Player 1 17:12:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:12:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":311,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 17:12:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve Reffil Empty Store Slot 4"},"childOfId":30} 

 Player 1 17:12:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 17:12:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:12:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:12:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10"} 

 Player 2 17:12:03 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:12:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:12:03 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 17:12:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 17:12:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:12:03 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 17:12:03 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 17:12:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Stack Was Emptied "}} 

 Player 1 17:12:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:12:03 $CLEAR_SE_VIS:  

 Player 1 17:20:40 $NEXT_STACK_ID:  

 Player 1 17:20:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on War"} 

 Player 1 17:20:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":308,"stackEffectType":4}} 

 Player 1 17:20:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":308,"stackEffectType":4}} 

 Player 1 17:20:40 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:20:40 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 17:20:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10"} 

 Player 2 17:20:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Player 1 declared attack on War"} 

 Player 1 17:20:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add Player Declare Attack On Monster 5 "}} 

 Player 1 17:20:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on War"} 

 Player 1 17:20:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":308,"stackEffectType":4}} 

 Player 1 17:20:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding Player Declare Attack On Monster 5"},"childOfId":35} 

 Player 1 17:20:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 17:20:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:20:44 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 17:20:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 17:20:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:20:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:20:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Player 1 declared attack on War"} 

 Player 2 17:20:44 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:20:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:20:44 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 17:20:44 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 17:20:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve Player Declare Attack On Monster 5 "}} 

 Player 1 17:20:44 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":308,"stackEffectType":4}]} 

 Player 1 17:20:44 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":308,"particleType":5} 

 Player 1 17:20:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with War"} 

 Player 1 17:20:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 

 Player 1 17:20:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":308,"stackEffectType":4}} 

 Player 1 17:20:44 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:20:44 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:20:44 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 17:20:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Player 1 declared attack on War"} 

 Player 1 17:20:47 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 17:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve Player Declare Attack On Monster 5  "}} 

 Player 1 17:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:20:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":308,"stackEffectType":4}} 

 Player 1 17:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve Player Declare Attack On Monster 5"},"childOfId":40} 

 Player 1 17:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 17:20:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:20:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:20:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Player 1 declared attack on War"} 

 Player 2 17:20:47 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:20:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 17:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 17:20:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 17:20:47 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 17:20:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 1 17:20:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:20:47 $CLEAR_SE_VIS:  

 Player 1 17:20:49 $NEXT_STACK_ID:  

 Player 1 17:20:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against War<Monster>"} 

 Player 1 17:20:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":308}} 

 Player 1 17:20:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":308}} 

 Player 1 17:20:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:20:50 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 17:20:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10"} 

 Player 2 17:20:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Player 1 is rolling against War<Monster>"} 

 Player 1 17:20:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add Player Attack Roll On Monster 6 "}} 

 Player 1 17:20:53 $ROLL_DICE:  
{"playerId":1} 

 Player 1 17:20:55 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 17:20:55 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 6 vs War<Monster>"} 

 Player 1 17:20:55 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 1 17:20:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs War<Monster>"} 

 Player 1 17:20:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:20:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"numberRolled":6,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":308}} 

 Player 1 17:20:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding Player Attack Roll On Monster 6"},"childOfId":45} 

 Player 1 17:20:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 17:20:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:20:58 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 17:20:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 17:20:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:20:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:20:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 17:20:58 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:20:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:20:58 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 17:20:58 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 17:20:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve Player Attack Roll On Monster 6 "}} 

 Player 1 17:20:58 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":311,"numberRolled":6,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":308}]} 

 Player 1 17:20:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Added 0 to original roll"}} 

 Player 1 17:20:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 1 Against War<Monster> 3"} 

 Player 1 17:20:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Miss"} 

 Player 1 17:20:59 $NEXT_STACK_ID:  

 Player 1 17:20:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:20:59 $CLEAR_SE_VIS:  

 Player 1 17:20:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War is going to hurt Azazel \n2:Player 1 Roll Miss"} 

 Player 1 17:20:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":311,"entityToDoDamageCardId":308,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 17:20:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"numberRolled":6,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":308}} 

 Player 1 17:20:59 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":311,"entityToDoDamageCardId":308,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":6,"creatorCardId":311,"numberRolled":6,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":308}]} 

 Player 1 17:20:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:20:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 

 Player 1 17:20:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"numberRolled":6,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":308}} 

 Player 1 17:20:59 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:20:59 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:20:59 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 17:20:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Buy Jaw Bone For 10 \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 17:20:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War is going to hurt Azazel \n2:Player 1 is rolling against War<Monster>"} 

 Player 1 17:21:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 17:21:01 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 17:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve Player Attack Roll On Monster 6  "}} 

 Player 1 17:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War is going to hurt Azazel"} 

 Player 1 17:21:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":311,"numberRolled":6,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":308}} 

 Player 1 17:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve Player Attack Roll On Monster 6"},"childOfId":51} 

 Player 1 17:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 17:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 17:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 17:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:21:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War is going to hurt Azazel \n2:Player 1 is rolling against War<Monster>"} 

 Player 2 17:21:05 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:21:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 17:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 17:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve Monster Combat Damage To A Player 7 "}} 

 Player 1 17:21:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":311,"entityToDoDamageCardId":308,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}]} 

 Player 1 17:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War Is Going To Hurt Azazel For 1 DMG "} 

 Player 1 17:21:05 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"War will deal 1 combat damage to Azazel"} 

 Player 1 17:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War will deal 1 combat damage to Azazel"} 

 Player 1 17:21:05 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":308} 

 Player 1 17:21:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":308}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 17:21:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":308}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":9,"originStackId":7},"isAfterActivation":true,"index":9} 

 Player 1 17:21:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":311,"entityToDoDamageCardId":308,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 17:21:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:21:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:21:05 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 17:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War is going to hurt Azazel"} 

 Player 2 17:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War is going to hurt Azazel"} 

 Player 1 17:21:08 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 17:21:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve Monster Combat Damage To A Player 7  "}} 

 Player 1 17:21:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:21:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":311,"entityToDoDamageCardId":308,"entityToTakeDamageCardId":311,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 17:21:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 7"},"childOfId":56} 

 Player 1 17:21:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 1 17:21:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:21:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:21:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:War is going to hurt Azazel"} 

 Player 2 17:21:08 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:21:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:21:08 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 17:21:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 1 17:21:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:21:08 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 17:21:08 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 17:21:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Stack Was Emptied "}} 

 Player 1 17:21:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:21:08 $CLEAR_SE_VIS:  

 Player 1 17:21:33 $NEXT_STACK_ID:  

 Player 1 17:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is going to activate Lord Of The Pit"} 

 Player 1 17:21:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":312,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 17:21:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":312,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 17:21:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:21:33 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 17:21:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is going to activate Lord Of The Pit"} 

 Player 1 17:21:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Add Activate Item 8 "}} 

 Player 1 17:21:36 $USE_ITEM:  
{"cardId":312} 

 Player 1 17:21:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:21:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":312,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:21:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Adding Activate Item 8"},"childOfId":61} 

 Player 1 17:21:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 1 17:21:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:21:36 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 17:21:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 1 17:21:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:21:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:21:36 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:21:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:21:36 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 17:21:36 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 17:21:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve Activate Item 8 "}} 

 Player 1 17:21:37 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":312,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 17:21:37 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":312,"particleType":6} 

 Player 1 17:21:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":312,"particleType":6} 

 Player 1 17:21:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":308,"particleType":5} 

 Player 1 17:21:38 $CANCEL_ATTACK:  

 Player 1 17:21:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 has activated Lord Of The Pit"} 

 Player 1 17:21:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":312}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 17:21:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":312,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:21:39 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:21:39 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:21:39 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 17:21:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is going to activate Lord Of The Pit"} 

 Player 1 17:21:41 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 17:21:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Remove After Resolve Activate Item 8  "}} 

 Player 1 17:21:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:21:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":312,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 17:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Remove After Resolve Activate Item 8"},"childOfId":66} 

 Player 1 17:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 1 17:21:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:21:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is going to activate Lord Of The Pit"} 

 Player 2 17:21:42 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[313,314]} 

 Player 2 17:21:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 17:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 1 17:21:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 17:21:42 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 17:21:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Stack Was Emptied "}} 

 Player 1 17:21:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:21:42 $CLEAR_SE_VIS:  

 Player 2 17:23:10 $MATCH: 