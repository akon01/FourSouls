Start Log 

 Player 1 15:07:05 $MATCH:  

 Player 1 15:07:05 $START_GAME:  

 Player 1 15:07:05 $MOVE_TO_TABLE:  

 Player 2 15:07:05 $MOVE_TO_TABLE:  

 Player 1 15:07:14 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:07:14 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 15:07:14 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":276,"itemCardId":277} 

 Player 2 15:07:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":275}],"result":true,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:07:14 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":274,"itemCardId":275} 

 Player 2 15:07:14 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[19,61,53,140,55,119,92,56,81,132,9,45,58,36,138,96,141,51,127,115,34,17,22,77,98,93,43,49,130,97,88,126,76,54,112,24,83,31,111,67,68,110,123,25,101,62,50,104,129,27,26,142,94,121,15,20,106,118,32,35,46,82,41,99,7,122,117,44,125,59,87,52,72,28,100,105,8,113,14,143,134,131,69,108,10,73,38,74,13,120,128,79,30,133,11,116,60,80,23,37,114,40,64,12,85,89,90,70,29,91,95,63,57,75,65,135,136,21,47,102,139,18,16,78,33,66,124,107,39,103,71,42,48,137,84,86,109]} 

 Player 2 15:07:14 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[209,228,211,234,248,257,210,236,244,250,216,238,239,218,246,252,232,255,223,212,251,240,241,254,215,206,235,220,237,233,253,213,259,229,256,207,224,217,221,208,247,222,243,242,231,245,258,225,249,230,226,219,214,227]} 

 Player 2 15:07:14 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[146,201,156,185,161,177,169,158,154,187,164,199,149,195,153,200,203,183,175,167,163,197,160,188,162,202,166,191,147,198,196,179,159,165,151,180,157,150,171,193,176,168,192,189,181,173,184,148,194,155,174,152,178,182,172,170,186,190]} 

 Player 2 15:07:14 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:07:14 $FLIP_CARD:  
{"cardId":190} 

 Player 2 15:07:14 $ADD_STORE_CARD:  
{"cardId":190} 

 Player 2 15:07:14 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:07:14 $FLIP_CARD:  
{"cardId":186} 

 Player 2 15:07:14 $ADD_STORE_CARD:  
{"cardId":186} 

 Player 2 15:07:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:07:14 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":227} 

 Player 2 15:07:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:07:15 $FLIP_CARD:  
{"cardId":214} 

 Player 2 15:07:15 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":214} 

 Player 2 15:07:15 $NEW_MONSTER_ON_PLACE:  
{"cardId":214,"monsterPlaceId":1} 

 Player 2 15:07:15 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:07:15 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":219} 

 Player 2 15:07:15 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:07:15 $FLIP_CARD:  
{"cardId":226} 

 Player 2 15:07:15 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":226} 

 Player 2 15:07:15 $NEW_MONSTER_ON_PLACE:  
{"cardId":226,"monsterPlaceId":2} 

 Player 2 15:07:15 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:07:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:07:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:07:15 $MOVE_CARD:  
{"moveIndex":1,"cardId":109,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:07:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":277}],"result":true,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 15:07:15 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":109,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:07:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":109} 

 Player 2 15:07:16 $FLIP_CARD:  
{"cardId":109} 

 Player 2 15:07:16 $FLIP_CARD:  
{"cardId":109} 

 Player 2 15:07:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":109} 

 Player 2 15:07:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:07:16 $MOVE_CARD:  
{"moveIndex":2,"cardId":86,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:07:16 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:07:16 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":86} 

 Player 2 15:07:16 $FLIP_CARD:  
{"cardId":86} 

 Player 2 15:07:16 $FLIP_CARD:  
{"cardId":86} 

 Player 2 15:07:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":86} 

 Player 2 15:07:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:07:16 $MOVE_CARD:  
{"moveIndex":3,"cardId":84,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:07:17 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":84,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:07:17 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":84} 

 Player 2 15:07:17 $FLIP_CARD:  
{"cardId":84} 

 Player 2 15:07:17 $FLIP_CARD:  
{"cardId":84} 

 Player 2 15:07:17 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":84} 

 Player 2 15:07:17 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:07:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 15:07:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:07:17 $MOVE_CARD:  
{"moveIndex":4,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:07:17 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":137,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:07:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":137} 

 Player 2 15:07:17 $FLIP_CARD:  
{"cardId":137} 

 Player 2 15:07:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":137} 

 Player 2 15:07:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:07:17 $MOVE_CARD:  
{"moveIndex":5,"cardId":48,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:07:18 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":48,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:07:18 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":48} 

 Player 2 15:07:18 $FLIP_CARD:  
{"cardId":48} 

 Player 2 15:07:18 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":48} 

 Player 2 15:07:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:07:18 $MOVE_CARD:  
{"moveIndex":6,"cardId":42,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:07:18 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":42,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:07:18 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":42} 

 Player 2 15:07:18 $FLIP_CARD:  
{"cardId":42} 

 Player 2 15:07:18 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":42} 

 Player 2 15:07:18 $GAME_HAS_STARTED:  

 Player 2 15:07:18 $SET_TURN:  
{"playerId":2} 

 Player 2 15:07:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:18 $NEXT_STACK_ID:  

 Player 2 15:07:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:07:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 15:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:07:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 15:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 15:07:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:19 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:07:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 15:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 15:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 15:07:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:19 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 15:07:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:07:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:07:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:19 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:07:19 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 15:07:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:07:19 $MOVE_CARD:  
{"moveIndex":7,"cardId":71,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:07:19 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:07:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":71} 

 Player 2 15:07:20 $FLIP_CARD:  
{"cardId":71} 

 Player 2 15:07:20 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":71} 

 Player 2 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:07:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 15:07:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":274,"turnPlayerCardId":274,"stackEffectType":13}} 

 Player 2 15:07:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 15:07:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 15:07:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:07:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 15:07:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 15:07:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 15:07:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 15:07:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:07:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:07:20 $UPDATE_ACTIONS:  

 Player 2 15:07:22 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:07:23 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:07:27 $SHOW_DECISION:  
{"startCardId":274,"endCardId":226} 

 Player 2 15:07:30 $NEXT_STACK_ID:  

 Player 2 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 2 15:07:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 2 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 2 15:07:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 2 15:07:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 15:07:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 2 15:07:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 2 15:07:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 15:07:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 15:07:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 15:07:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 15:07:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 15:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 15:07:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 15:07:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":226,"particleType":5} 

 Player 2 15:07:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 

 Player 2 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 2 15:07:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 2 15:07:31 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:07:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 2 15:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 15:07:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":274,"attackingPlayerCardId":274,"idOfCardBeingAttacked":226,"stackEffectType":4}} 

 Player 2 15:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 15:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 15:07:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fly"} 

 Player 1 15:07:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 15:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 15:07:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 15:07:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 15:07:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:07:32 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:07:33 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:07:34 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:07:40 $NEXT_STACK_ID:  

 Player 2 15:07:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 

 Player 2 15:07:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}} 

 Player 2 15:07:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 

 Player 2 15:07:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}} 

 Player 2 15:07:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 15:07:40 $ROLL_DICE:  
{"playerId":2} 

 Player 1 15:07:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:07:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:07:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 

 Player 2 15:07:42 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 15:07:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:42 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:07:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"numberRolled":3,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}} 

 Player 2 15:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 15:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 15:07:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:42 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 15:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 15:07:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:07:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:42 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 15:07:42 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 15:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 15:07:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 15:07:42 $NEXT_STACK_ID:  

 Player 2 15:07:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"numberRolled":3,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"numberRolled":3,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:43 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":274,"numberRolled":3,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}]} 

 Player 2 15:07:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 rolled 3 vs Fly<Monster>"} 

 Player 2 15:07:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"numberRolled":3,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}} 

 Player 2 15:07:43 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 2 15:07:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"numberRolled":3,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}} 

 Player 2 15:07:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 2 15:07:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":274,"numberRolled":3,"rollingPlayerCardId":274,"stackEffectType":2,"attackedMonsterCardId":226}} 

 Player 2 15:07:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 15:07:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 15:07:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:43 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 15:07:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 15:07:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:Player 2 is rolling against Fly<Monster>"} 

 Player 1 15:07:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:44 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 15:07:44 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 15:07:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 15:07:44 $MONSTER_GET_DAMAGED:  
{"cardId":226,"hpLeft":0,"damageDealerId":274} 

 Player 2 15:07:44 $NEXT_STACK_ID:  

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 2 15:07:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 2 15:07:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}} 

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 2 15:07:44 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 2 15:07:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 2 15:07:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}} 

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 2 15:07:44 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}]} 

 Player 2 15:07:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":226,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 15:07:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":274},{"type":0,"number":226}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 2 15:07:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:07:44 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:07:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 15:07:44 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:07:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 15:07:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":274,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":226,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:07:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 2 15:07:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 15:07:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:45 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 15:07:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 15:07:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 1 15:07:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Fly \n2:[object Object] killed by Samson"} 

 Player 1 15:07:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:45 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 15:07:45 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 15:07:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve MonsterDeath 5 "}} 

 Player 2 15:07:46 $DISABLE_PARTICLE_EFFECT:  
{"cardId":226,"particleType":5} 

 Player 2 15:07:46 $CANCEL_ATTACK:  

 Player 2 15:07:46 $NEXT_STACK_ID:  

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 15:07:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 15:07:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":274,"monsterCardWithRewardId":226,"playerCardIdToReward":274,"stackEffectType":7}} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 15:07:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 15:07:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":274,"monsterCardWithRewardId":226,"playerCardIdToReward":274,"stackEffectType":7}} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 15:07:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 15:07:46 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":274,"monsterCardWithRewardId":226,"playerCardIdToReward":274,"stackEffectType":7},{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}]} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 15:07:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}} 

 Player 2 15:07:46 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 2 15:07:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}} 

 Player 2 15:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve MonsterDeath 5  "}} 

 Player 2 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 2 15:07:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":274,"monsterToDieCardId":226,"stackEffectType":5,"killerId":274}} 

 Player 2 15:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve MonsterDeath 5"},"childOfId":36} 

 Player 2 15:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 15:07:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:46 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 15:07:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 15:07:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 15:07:46 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:07:46 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 15:07:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 15:07:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve MonsterRewardStackEffect 6 "}} 

 Player 2 15:07:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":226,"scopeIsPlayer":false,"index":8,"originStackId":6},"isAfterActivation":true,"index":8} 

 Player 2 15:07:47 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 15:07:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 15:07:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:07:47 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:07:48 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:07:48 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:07:48 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:07:48 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:07:48 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:07:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:48 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":274,"monsterCardWithRewardId":226,"playerCardIdToReward":274,"stackEffectType":7}} 

 Player 2 15:07:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Fizzle MonsterRewardStackEffect 6"}} 

 Player 2 15:07:48 $MOVE_CARD:  
{"moveIndex":8,"cardId":226,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 15:07:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:48 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":226,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:07:48 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":226} 

 Player 2 15:07:48 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":226} 

 Player 2 15:07:48 $NEXT_STACK_ID:  

 Player 2 15:07:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:07:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 15:07:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:07:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 15:07:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Add RefillEmptySlot 7 "}} 

 Player 2 15:07:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:48 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:07:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:07:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 15:07:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Response Adding RefillEmptySlot 7"},"childOfId":42} 

 Player 2 15:07:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":42} 

 Player 2 15:07:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:49 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 15:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Wait For Response From Player 1 "},"childOfId":42} 

 Player 2 15:07:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 15:07:49 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward"} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 15:07:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:49 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 15:07:49 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 15:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve RefillEmptySlot 7 "}} 

 Player 2 15:07:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:07:49 $FLIP_CARD:  
{"cardId":230} 

 Player 2 15:07:49 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":230} 

 Player 2 15:07:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":230,"monsterPlaceId":2} 

 Player 2 15:07:49 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 15:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Remove After Resolve RefillEmptySlot 7  "}} 

 Player 2 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":274,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 15:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Response Remove After Resolve RefillEmptySlot 7"},"childOfId":47} 

 Player 2 15:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":47} 

 Player 2 15:07:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:07:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 15:07:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fly<Monster> reward \n2:Refill holder2 slot"} 

 Player 1 15:07:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:07:49 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 15:07:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 2 "},"childOfId":47} 

 Player 2 15:07:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:07:49 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 15:07:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Stack Was Emptied "}} 

 Player 2 15:07:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:07:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Stack Was Emptied "}} 

 Player 2 15:07:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:07:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:07:51 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:07:52 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:08:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:08:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:08:00 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:08:00 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:08:00 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:08:00 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:08:00 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:08:01 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 15:08:01 $END_TURN:  

 Player 2 15:08:01 $SET_TURN:  
{"playerId":1} 

 Player 2 15:08:01 $START_TURN:  
{"playerId":1} 

 Player 1 15:08:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:08:01 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:08:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:08:02 $NEXT_STACK_ID:  

 Player 1 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:08:02 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:08:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:08:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Add StartTurnLoot 8 "}} 

 Player 1 15:08:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:08:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:08:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Response Adding StartTurnLoot 8"},"childOfId":53} 

 Player 1 15:08:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":53} 

 Player 1 15:08:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 15:08:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Wait For Response From Player 2 "},"childOfId":53} 

 Player 1 15:08:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:08:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 15:08:02 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 15:08:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Resolve StartTurnLoot 8 "}} 

 Player 1 15:08:03 $DRAW_CARD:  
{"deckType":1} 

 Player 1 15:08:03 $MOVE_CARD:  
{"moveIndex":9,"cardId":103,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 15:08:03 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":103,"flipIfFlipped":false,"playerId":1} 

 Player 1 15:08:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":103} 

 Player 1 15:08:03 $FLIP_CARD:  
{"cardId":103} 

 Player 1 15:08:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":103} 

 Player 1 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:08:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:08:03 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:08:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Remove After Resolve StartTurnLoot 8  "}} 

 Player 1 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":276,"turnPlayerCardId":276,"stackEffectType":13}} 

 Player 1 15:08:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Response Remove After Resolve StartTurnLoot 8"},"childOfId":58} 

 Player 1 15:08:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":58} 

 Player 1 15:08:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:08:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:08:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:08:03 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 15:08:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Wait For Response From Player 1 "},"childOfId":58} 

 Player 1 15:08:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 15:08:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Stack Was Emptied "}} 

 Player 1 15:08:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:08:04 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 15:08:05 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 15:08:05 $SHOW_DECISION:  
{"startCardId":276,"endCardId":205} 

 Player 1 15:08:06 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:08:08 $NEXT_STACK_ID:  

 Player 1 15:08:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:08:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":205,"stackEffectType":4}} 

 Player 1 15:08:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:08:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":205,"stackEffectType":4}} 

 Player 1 15:08:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Add DeclareAttack 9 "}} 

 Player 1 15:08:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:08:09 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 15:08:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:08:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":205,"stackEffectType":4}} 

 Player 1 15:08:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Response Adding DeclareAttack 9"},"childOfId":63} 

 Player 1 15:08:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":63} 

 Player 1 15:08:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:08:09 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 15:08:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 2 "},"childOfId":63} 

 Player 1 15:08:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:08:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:08:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:08:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:08:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:08:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:08:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:08:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:08:09 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:08:09 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 15:08:09 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 15:08:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Resolve DeclareAttack 9 "}} 

 Player 1 15:08:09 $DRAW_CARD:  
{"deckType":2} 

 Player 1 15:08:09 $SHOW_CARD_PREVIEW:  
{"cardToShowId":249,"playerId":1} 

 Player 1 15:08:14 $FLIP_CARD:  
{"cardId":249} 

 Player 1 15:08:14 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":249} 

 Player 1 15:08:14 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":2} 

 Player 1 15:08:14 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":249,"particleType":5} 

 Player 1 15:08:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":276,"scopeIsPlayer":true,"index":2,"originStackId":9},"isAfterActivation":true,"index":2} 

 Player 1 15:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 15:08:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 15:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 15:08:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 15:08:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve DeclareAttack 9  "}} 

 Player 1 15:08:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":276,"attackingPlayerCardId":276,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 15:08:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve DeclareAttack 9"},"childOfId":68} 

 Player 1 15:08:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 1 15:08:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:08:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 15:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Squirt"} 

 Player 2 15:08:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Squirt"} 

 Player 2 15:08:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Squirt"} 

 Player 2 15:08:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Squirt"} 

 Player 2 15:08:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 15:08:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 1 15:08:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 15:08:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Stack Was Emptied "}} 

 Player 1 15:08:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:08:16 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 15:08:16 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 15:08:16 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 15:08:16 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 15:08:16 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 15:08:16 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 15:08:17 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 15:15:25 $MATCH: 