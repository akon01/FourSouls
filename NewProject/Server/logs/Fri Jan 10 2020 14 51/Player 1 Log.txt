Start Log 
 Player 1 14:51:03 $START_GAME:  
 Player 1 14:51:04 $MOVE_TO_TABLE:  
 Player 1 14:51:10 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 14:51:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":268}],"result":true,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 14:51:17 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":48,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:51:18 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":142,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:51:18 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":85,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:51:19 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":56,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:51:19 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":126,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:51:20 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":113,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:21 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":66,"flipIfFlipped":false,"playerId":2} 
 Player 1 14:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 14:51:22 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:29 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":107,"flipIfFlipped":true,"playerId":2} 
 Player 1 14:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:32 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":107,"flipIfFlipped":true,"playerId":2} 
 Player 1 14:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:37 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:40 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":107,"flipIfFlipped":true,"playerId":2} 
 Player 1 14:51:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Holy Card "} 
 Player 1 14:51:40 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:50 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Widow"} 
 Player 1 14:51:51 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:54 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:55 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:51:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:51:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:51:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:51:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":true} 
 Player 1 14:52:06 $SHOW_DECISION:  

 {"startCardId":267,"endCardId":267} 
 Player 1 14:52:08 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 14:52:09 $NEXT_STACK_ID:  
 Player 1 14:52:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 activated Isaac"} 
 Player 1 14:52:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 14:52:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 activated Isaac"} 
 Player 1 14:52:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 14:52:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Add ActivateItem 7 "}} 
 Player 1 14:52:11 $SHOW_DECISION:  

 {"startCardId":267,"endCardId":48} 
 Player 1 14:52:14 $USE_ITEM:  

 {"cardId":267} 
 Player 1 14:52:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:52:14 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 14:52:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 activated Isaac"} 
 Player 1 14:52:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:52:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Response Adding ActivateItem 7"},"childOfId":50} 
 Player 1 14:52:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 1 14:52:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:52:14 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:52:15 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 14:52:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 1 14:52:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:52:15 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 14:52:15 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 1 14:52:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Resolve ActivateItem 7 "}} 
 Player 1 14:52:15 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":267,"particleType":6} 
 Player 1 14:52:17 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":267,"particleType":6} 
 Player 1 14:52:17 $NEXT_STACK_ID:  
 Player 1 14:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 activated Isaac"} 
 Player 1 14:52:17 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":48} 
 Player 1 14:52:17 $MOVE_CARD:  

 {"moveIndex":11,"cardId":48,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 14:52:17 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":48} 
 Player 1 14:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":48,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:17 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":265,"rollingPlayerCardId":265,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 1 14:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":265,"numberRolled":2,"rollingPlayerCardId":265,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 1 14:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":48,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:52:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:18 $REPLACE_STACK:  

 {"currentStack":[{"entityId":6,"creatorCardId":265,"numberRolled":2,"rollingPlayerCardId":265,"stackEffectType":2,"attackedMonsterCardId":257},{"entityId":8,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":48,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":7,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 14:52:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney \n3:Player 1 activated Isaac"} 
 Player 1 14:52:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:52:18 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 14:52:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney"} 
 Player 1 14:52:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:52:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Remove After Resolve ActivateItem 7  "}} 
 Player 1 14:52:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney"} 
 Player 1 14:52:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":267,"hasLockingStackEffect":false,"itemToPlayCardId":267,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 14:52:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Response Remove After Resolve ActivateItem 7"},"childOfId":55} 
 Player 1 14:52:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Player 1 14:52:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:52:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:52:19 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 14:52:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Player 1 14:52:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:52:19 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 14:52:19 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 1 14:52:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Resolve PlayLootCardStackEffect 8 "}} 
 Player 1 14:52:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney"} 
 Player 1 14:52:19 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":48,"particleType":6} 
 Player 1 14:52:20 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 14:52:21 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":48,"particleType":6} 
 Player 1 14:52:21 $SET_MONEY:  

 {"playerId":1,"numOfCoins":6} 
 Player 1 14:52:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":267,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 14:52:21 $REMOVE_FROM_PILE:  

 {"cardId":48} 
 Player 1 14:52:21 $MOVE_CARD:  

 {"moveIndex":12,"cardId":48,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 14:52:21 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":48} 
 Player 1 14:52:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster> \n2:Player 1 play 3 Cents(10): addMoney"} 
 Player 1 14:52:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:52:21 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 14:52:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:52:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Remove After Resolve PlayLootCardStackEffect 8  "}} 
 Player 1 14:52:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":267,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":48,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 14:52:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Response Remove After Resolve PlayLootCardStackEffect 8"},"childOfId":60} 
 Player 1 14:52:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Player 1 14:52:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:52:21 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 14:52:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Player 1 14:52:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:52:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:52:22 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 14:52:22 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 1 14:52:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Resolve AttackRoll 6 "}} 
 Player 1 14:52:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:22 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":6,"creatorCardId":265,"numberRolled":2,"rollingPlayerCardId":265,"stackEffectType":2,"attackedMonsterCardId":257}]} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":265,"numberRolled":2,"rollingPlayerCardId":265,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is rolling against Widow<Monster>"} 
 Player 1 14:52:23 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":265,"numberRolled":2,"rollingPlayerCardId":265,"stackEffectType":2,"attackedMonsterCardId":257}]} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":265,"numberRolled":2,"rollingPlayerCardId":265,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 1 14:52:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 1 14:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":265,"numberRolled":2,"rollingPlayerCardId":265,"stackEffectType":2,"attackedMonsterCardId":257}} 
 Player 1 14:52:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":66} 
 Player 1 14:52:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 1 14:52:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:52:24 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:52:24 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 14:52:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 1 14:52:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:52:24 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 14:52:24 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 1 14:52:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Resolve CombatDamage 9 "}} 
 Player 1 14:52:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:24 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 1 14:52:24 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:25 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 14:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:52:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:52:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"playerToDieCardId":265,"stackEffectType":15,"killerId":257}} 
 Player 1 14:52:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Widow combat damage to Eden \n2:Player 2 is about to die"} 
 Player 1 14:52:26 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":10,"creatorCardId":265,"playerToDieCardId":265,"stackEffectType":15,"killerId":257}]} 
 Player 1 14:52:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:52:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Remove After Resolve CombatDamage 9  "}} 
 Player 1 14:52:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"entityToDoDamageCardId":257,"entityToTakeDamageCardId":265,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 14:52:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":71} 
 Player 1 14:52:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 
 Player 1 14:52:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:52:26 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:52:26 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 14:52:26 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 14:52:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 
 Player 1 14:52:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:52:26 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 14:52:27 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 1 14:52:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Resolve PlayerDeath 10 "}} 
 Player 1 14:52:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:27 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":10,"creatorCardId":265,"playerToDieCardId":265,"stackEffectType":15,"killerId":257}]} 
 Player 1 14:52:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:27 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:52:28 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 14:52:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate Holy Card "} 
 Player 1 14:52:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"playerToDieCardId":265,"stackEffectType":15,"killerId":257}} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"playerToDieCardId":265,"stackEffectType":15,"killerId":257}} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 14:52:31 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":265,"playerToDieCardId":265,"stackEffectType":15,"killerId":257}]} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:52:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"playerToDieCardId":265,"stackEffectType":15,"killerId":257}} 
 Player 1 14:52:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Remove After Resolve PlayerDeath 10  "}} 
 Player 1 14:52:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:52:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"playerToDieCardId":265,"stackEffectType":15,"killerId":257}} 
 Player 1 14:52:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Response Remove After Resolve PlayerDeath 10"},"childOfId":87} 
 Player 1 14:52:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":87} 
 Player 1 14:52:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 14:52:31 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 1 14:52:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":87} 
 Player 1 14:52:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 14:52:32 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 1 14:52:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Stack Was Emptied "}} 
 Player 1 14:52:32 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 14:52:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 14:52:32 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 14:52:33 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 14:52:33 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 14:52:34 $ACTION_MASSAGE_REMOVE:  

 {"id":87}