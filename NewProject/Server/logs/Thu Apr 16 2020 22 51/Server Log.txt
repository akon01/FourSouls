Start Log 

 Player 1 22:51:09 $MATCH:  

 Player 1 22:51:10 $START_GAME:  

 Player 1 22:51:10 $MOVE_TO_TABLE:  

 Player 2 22:51:10 $MOVE_TO_TABLE:  

 Player 1 22:51:26 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 22:51:26 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 22:51:26 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 22:51:26 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 22:51:26 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 22:51:27 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":321,"itemCardId":322} 

 Player 2 22:51:27 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[34,62,68,69,45,76,112,32,41,35,101,107,120,106,66,113,46,30,126,85,97,60,70,77,8,51,49,16,37,116,121,114,82,25,117,109,122,96,90,44,99,48,79,5,65,21,31,87,53,86,50,94,27,52,137,124,128,102,111,57,131,135,127,39,23,74,136,20,6,59,47,134,26,14,18,22,98,93,118,71,61,9,29,105,17,13,56,92,78,83,100,89,42,11,133,75,38,36,19,139,33,123,24,119,15,81,80,64,67,91,104,63,28,73,103,138,110,88,58,12,7,40,54,55,129,125,95,4,108,132,10,130,84,115,43,72]} 

 Player 2 22:51:27 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[291,245,225,285,280,259,271,281,231,240,299,238,241,270,239,237,260,234,246,304,228,300,309,286,288,230,233,250,236,279,278,276,256,229,235,262,301,295,264,265,224,227,242,277,274,296,303,287,302,267,263,253,290,261,273,310,251,255,269,272,294,247,297,249,284,292,226,254,306,289,248,282,257,305,244,298,293,266,283,275,268,223,307,252,258,243,232,308]} 

 Player 2 22:51:27 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[219,190,201,221,159,176,187,158,166,149,153,164,206,198,144,182,165,143,202,170,217,180,169,150,174,141,163,215,200,179,172,212,154,195,191,197,175,210,178,145,171,184,183,209,213,192,193,204,142,173,194,214,220,196,181,216,188,162,203,208,152,156,199,161,168,160,189,148,177,147,186,205,211,218,207,167,146,155,185,151,157]} 

 Player 2 22:51:27 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:51:27 $FLIP_CARD:  
{"cardId":157} 

 Player 2 22:51:27 $ADD_STORE_CARD:  
{"cardId":157} 

 Player 2 22:51:27 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:51:27 $FLIP_CARD:  
{"cardId":151} 

 Player 2 22:51:27 $ADD_STORE_CARD:  
{"cardId":151} 

 Player 2 22:51:27 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:51:27 $FLIP_CARD:  
{"cardId":308} 

 Player 2 22:51:27 $REGISTER_PASSIVE_ITEM:  
{"cardId":308} 

 Player 2 22:51:27 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":308} 

 Player 2 22:51:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":308,"monsterPlaceId":1} 

 Player 2 22:51:27 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:51:27 $FLIP_CARD:  
{"cardId":232} 

 Player 2 22:51:27 $REGISTER_PASSIVE_ITEM:  
{"cardId":232} 

 Player 2 22:51:27 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":232} 

 Player 2 22:51:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":232,"monsterPlaceId":2} 

 Player 2 22:51:27 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 22:51:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 22:51:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:27 $MOVE_CARD:  
{"moveIndex":1,"cardId":72,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:27 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":72,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":72} 

 Player 2 22:51:28 $FLIP_CARD:  
{"cardId":72} 

 Player 2 22:51:28 $FLIP_CARD:  
{"cardId":72} 

 Player 2 22:51:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":72} 

 Player 2 22:51:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:28 $MOVE_CARD:  
{"moveIndex":2,"cardId":43,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:28 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":43,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:28 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":43} 

 Player 2 22:51:28 $FLIP_CARD:  
{"cardId":43} 

 Player 2 22:51:28 $FLIP_CARD:  
{"cardId":43} 

 Player 2 22:51:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":43} 

 Player 2 22:51:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:28 $MOVE_CARD:  
{"moveIndex":3,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:28 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":115,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:29 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":115} 

 Player 2 22:51:29 $FLIP_CARD:  
{"cardId":115} 

 Player 2 22:51:29 $FLIP_CARD:  
{"cardId":115} 

 Player 2 22:51:29 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":115} 

 Player 2 22:51:29 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 22:51:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 22:51:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:29 $MOVE_CARD:  
{"moveIndex":4,"cardId":84,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:29 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":84,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":84} 

 Player 2 22:51:29 $FLIP_CARD:  
{"cardId":84} 

 Player 2 22:51:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":84} 

 Player 2 22:51:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:29 $MOVE_CARD:  
{"moveIndex":5,"cardId":130,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:29 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":130,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:30 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":130} 

 Player 2 22:51:30 $FLIP_CARD:  
{"cardId":130} 

 Player 2 22:51:30 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":130} 

 Player 2 22:51:30 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:51:30 $MOVE_CARD:  
{"moveIndex":6,"cardId":10,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:51:30 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":10,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:51:30 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":10} 

 Player 2 22:51:30 $FLIP_CARD:  
{"cardId":10} 

 Player 2 22:51:30 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":10} 

 Player 2 22:51:30 $GAME_HAS_STARTED:  

 Player 2 22:51:30 $SET_TURN:  
{"playerId":1} 

 Player 2 22:51:30 $START_TURN:  
{"playerId":1} 

 Player 2 22:51:30 $UPDATE_ACTIONS:  

 Player 1 22:51:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:30 $NEXT_STACK_ID:  

 Player 1 22:51:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:51:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:51:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:51:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:51:30 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:51:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:51:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:51:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 22:51:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:51:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 22:51:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 22:51:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 22:51:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:51:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:51:33 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:51:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:51:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 22:51:33 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:51:33 $DRAW_CARD:  
{"deckType":1} 

 Player 1 22:51:33 $MOVE_CARD:  
{"moveIndex":7,"cardId":132,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 22:51:34 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":132,"flipIfFlipped":false,"playerId":1} 

 Player 1 22:51:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":132} 

 Player 1 22:51:34 $FLIP_CARD:  
{"cardId":132} 

 Player 1 22:51:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":132} 

 Player 1 22:51:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 22:51:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:51:34 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 22:51:34 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:51:34 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:51:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:51:36 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":5,"isTemp":true} 

 Player 1 22:51:37 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 22:51:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 22:51:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:51:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:51:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 22:51:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 22:51:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:51:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:51:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 22:51:37 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:51:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:51:37 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 22:51:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 22:51:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:37 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 22:51:37 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 22:51:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 22:51:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:51:37 $CLEAR_SE_VIS:  

 Player 1 22:51:42 $MOVE_CARD:  
{"moveIndex":8,"cardId":287,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 22:51:43 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":287,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:51:43 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[291,245,225,285,280,259,271,281,231,240,299,238,241,270,239,237,260,234,246,304,228,300,309,286,288,230,233,250,236,279,278,276,256,229,235,262,301,295,264,265,224,227,242,277,274,296,303,302,267,263,253,290,261,273,310,251,255,269,272,294,247,297,249,284,292,226,254,306,289,248,282,257,305,244,298,293,266,283,275,268,223,307,252,258,243]} 

 Player 1 22:51:43 $FLIP_CARD:  
{"cardId":287} 

 Player 1 22:51:43 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":308} 

 Player 1 22:51:43 $REGISTER_PASSIVE_ITEM:  
{"cardId":287} 

 Player 1 22:51:43 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":287} 

 Player 1 22:51:43 $NEW_MONSTER_ON_PLACE:  
{"cardId":287,"monsterPlaceId":1} 

 Player 1 22:51:45 $NEXT_STACK_ID:  

 Player 1 22:51:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Mask of Infamy"} 

 Player 1 22:51:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":287,"stackEffectType":4}} 

 Player 1 22:51:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":287,"stackEffectType":4}} 

 Player 1 22:51:45 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:51:45 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:51:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:51:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Mask of Infamy"} 

 Player 1 22:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 22:51:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":287,"stackEffectType":4}} 

 Player 1 22:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 22:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 22:51:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:48 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 22:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 22:51:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:51:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:51:48 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:51:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:51:48 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 22:51:48 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 22:51:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 22:51:48 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":287,"stackEffectType":4}} 

 Player 1 22:51:48 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":287,"particleType":5} 

 Player 1 22:51:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with Mask of Infamy"} 

 Player 1 22:51:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 

 Player 1 22:51:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":287,"stackEffectType":4}} 

 Player 1 22:51:48 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 22:51:48 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:51:49 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:51:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Mask of Infamy"} 

 Player 1 22:51:51 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 22:51:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 22:51:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:51:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":287,"stackEffectType":4}} 

 Player 1 22:51:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 22:51:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 22:51:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:51:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:51:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Mask of Infamy"} 

 Player 2 22:51:52 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:51:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:51:52 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 22:51:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 22:51:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:51:52 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 22:51:52 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 22:51:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 22:51:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:51:52 $CLEAR_SE_VIS:  

 Player 1 22:51:52 $NEXT_STACK_ID:  

 Player 1 22:51:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 

 Player 1 22:51:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":287}} 

 Player 1 22:51:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":287}} 

 Player 1 22:51:52 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:51:52 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:51:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:51:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 

 Player 1 22:51:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 22:51:55 $ROLL_DICE:  
{"playerId":1} 

 Player 1 22:51:57 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 22:51:57 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Mask of Infamy<Monster>"} 

 Player 1 22:51:57 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 22:52:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Mask of Infamy<Monster>"} 

 Player 1 22:52:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":5,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":287}} 

 Player 1 22:52:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 22:52:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 22:52:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:00 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 22:52:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 22:52:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 

 Player 2 22:52:00 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:52:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:00 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 22:52:00 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 22:52:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 22:52:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Mask of Infamy<Monster>"} 

 Player 1 22:52:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":5,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":287}} 

 Player 1 22:52:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 22:52:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 6 Against Mask of Infamy<Monster> 4"} 

 Player 1 22:52:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 22:52:00 $NEXT_STACK_ID:  

 Player 1 22:52:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:00 $CLEAR_SE_VIS:  

 Player 1 22:52:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:Player 1 Roll Hit"} 

 Player 1 22:52:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 22:52:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":5,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":287}} 

 Player 1 22:52:00 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":3,"creatorCardId":313,"numberRolled":5,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":287}]} 

 Player 1 22:52:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:52:00 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 22:52:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 

 Player 2 22:52:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 

 Player 1 22:52:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 22:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:Player 1 Roll Hit"} 

 Player 1 22:52:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":5,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":287}} 

 Player 1 22:52:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 22:52:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:03 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:Player 1 is rolling against Mask of Infamy<Monster>"} 

 Player 1 22:52:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 22:52:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 22:52:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy"} 

 Player 1 22:52:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":5,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":287}} 

 Player 1 22:52:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 22:52:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 22:52:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:06 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 22:52:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 22:52:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:Player 1 is rolling against Mask of Infamy<Monster>"} 

 Player 2 22:52:06 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:52:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:06 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 22:52:06 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 22:52:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 22:52:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy"} 

 Player 1 22:52:06 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 22:52:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby will deal 6 combat damage to Mask of Infamy "} 

 Player 1 22:52:06 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Blue Baby will deal 6 combat damage to Mask of Infamy"} 

 Player 1 22:52:06 $MONSTER_GET_DAMAGED:  
{"cardId":287,"hpLeft":0,"damageDealerId":313} 

 Player 1 22:52:06 $NEXT_STACK_ID:  

 Player 1 22:52:07 $CLEAR_SE_VIS:  

 Player 1 22:52:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby will deal 6 combat damage to Mask of Infamy  \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:52:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 22:52:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"monsterToDieCardId":287,"stackEffectType":5,"killerId":313}} 

 Player 1 22:52:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":5,"creatorCardId":313,"monsterToDieCardId":287,"stackEffectType":5,"killerId":313}]} 

 Player 1 22:52:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"monsterToDieCardId":287,"stackEffectType":5,"killerId":313}} 

 Player 1 22:52:07 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:52:07 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:52:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy"} 

 Player 2 22:52:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:52:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":6},{"type":0,"number":313},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 22:52:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":6},{"type":2,"number":6},{"type":0,"number":313},{"type":0,"number":287}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 22:52:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby will deal 6 combat damage to Mask of Infamy  \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:52:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 22:52:09 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 22:52:09 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:09 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 22:52:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:52:12 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 22:52:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 22:52:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:52:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":287,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 22:52:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 22:52:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 22:52:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:12 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 22:52:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 22:52:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 2 22:52:13 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:52:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:13 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 22:52:13 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 22:52:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve MonsterDeath 5 "}} 

 Player 1 22:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:52:13 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"monsterToDieCardId":287,"stackEffectType":5,"killerId":313}} 

 Player 1 22:52:13 $DISABLE_PARTICLE_EFFECT:  
{"cardId":287,"particleType":5} 

 Player 1 22:52:13 $CANCEL_ATTACK:  

 Player 1 22:52:13 $NEXT_STACK_ID:  

 Player 1 22:52:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:13 $CLEAR_SE_VIS:  

 Player 1 22:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:52:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":313,"monsterCardWithRewardId":287,"playerCardIdToReward":313,"stackEffectType":7}} 

 Player 1 22:52:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"monsterToDieCardId":287,"stackEffectType":5,"killerId":313}} 

 Player 1 22:52:13 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":313,"monsterCardWithRewardId":287,"playerCardIdToReward":313,"stackEffectType":7},{"entityId":5,"creatorCardId":313,"monsterToDieCardId":287,"stackEffectType":5,"killerId":313}]} 

 Player 1 22:52:13 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:52:13 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 22:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy"} 

 Player 2 22:52:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy"} 

 Player 1 22:52:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:52:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"monsterToDieCardId":287,"stackEffectType":5,"killerId":313}} 

 Player 1 22:52:16 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 22:52:16 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:16 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 22:52:19 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 22:52:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve MonsterDeath 5  "}} 

 Player 1 22:52:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward"} 

 Player 1 22:52:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":313,"monsterToDieCardId":287,"stackEffectType":5,"killerId":313}} 

 Player 1 22:52:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve MonsterDeath 5"},"childOfId":36} 

 Player 1 22:52:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 22:52:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:19 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 22:52:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 22:52:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 2 22:52:19 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:52:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:19 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 22:52:19 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 22:52:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve MonsterRewardStackEffect 6 "}} 

 Player 1 22:52:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward"} 

 Player 1 22:52:19 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":313,"monsterCardWithRewardId":287,"playerCardIdToReward":313,"stackEffectType":7}} 

 Player 1 22:52:19 $DRAW_CARD:  
{"deckType":5} 

 Player 1 22:52:19 $REGISTER_PASSIVE_ITEM:  
{"cardId":185} 

 Player 1 22:52:19 $MOVE_CARD:  
{"moveIndex":9,"cardId":185,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 22:52:19 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":185,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:52:20 $ADD_AN_ITEM:  
{"playerId":1,"cardId":185,"isReward":true} 

 Player 1 22:52:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":185}],"result":true,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 22:52:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":false,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 22:52:20 $NEXT_STACK_ID:  

 Player 1 22:52:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch Effect AddMoney<AddMoney>"} 

 Player 1 22:52:20 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":185,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:52:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":185,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:52:20 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:52:20 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 22:52:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward"} 

 Player 2 22:52:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 1 22:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Add ActivatePassiveEffect 7 "}} 

 Player 1 22:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch effect AddMoney<AddMoney>"} 

 Player 1 22:52:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":313,"effectCardPlayer":313},"entityId":7,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":185,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":41} 

 Player 1 22:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 22:52:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 2 22:52:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:52:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:23 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 22:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 22:52:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:23 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 22:52:23 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 22:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 22:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch effect AddMoney<AddMoney>"} 

 Player 1 22:52:23 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":313,"effectCardPlayer":313},"entityId":7,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":185,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":185,"particleType":6} 

 Player 2 22:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 1 22:52:25 $DISABLE_PARTICLE_EFFECT:  
{"cardId":185,"particleType":6} 

 Player 1 22:52:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":6} 

 Player 1 22:52:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 22:52:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":false,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 22:52:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activated Midas Touch Effect"} 

 Player 1 22:52:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":313,"effectCardPlayer":313},"entityId":7,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:25 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 1 22:52:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:25 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 22:52:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 1 22:52:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 

 Player 1 22:52:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward"} 

 Player 1 22:52:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":313,"effectCardPlayer":313},"entityId":7,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":46} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 22:52:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:28 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 22:52:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 2 22:52:28 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:52:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:28 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 22:52:28 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 22:52:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve MonsterRewardStackEffect 6 "}} 

 Player 1 22:52:28 $MOVE_CARD:  
{"moveIndex":10,"cardId":287,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"soulsLayout"} 

 Player 2 22:52:29 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":287,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:52:29 $GET_SOUL:  
{"playerId":1,"cardId":287} 

 Player 1 22:52:29 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":287} 

 Player 1 22:52:29 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":287} 

 Player 1 22:52:29 $REGISTER_PASSIVE_ITEM:  
{"cardId":308} 

 Player 1 22:52:29 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 1 22:52:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward"} 

 Player 1 22:52:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":313,"monsterCardWithRewardId":287,"playerCardIdToReward":313,"stackEffectType":7}} 

 Player 1 22:52:29 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 22:52:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:52:29 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 22:52:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 22:52:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve MonsterRewardStackEffect 6  "}} 

 Player 1 22:52:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:52:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":313,"monsterCardWithRewardId":287,"playerCardIdToReward":313,"stackEffectType":7}} 

 Player 1 22:52:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve MonsterRewardStackEffect 6"},"childOfId":51} 

 Player 1 22:52:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 22:52:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:52:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:52:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward"} 

 Player 2 22:52:32 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:52:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:52:32 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 22:52:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 22:52:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:32 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 22:52:32 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 22:52:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Stack Was Emptied "}} 

 Player 1 22:52:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:52:32 $CLEAR_SE_VIS:  

 Player 1 22:52:55 $MOVE_CARD:  
{"moveIndex":11,"cardId":247,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 22:52:55 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":247,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:52:55 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[291,245,225,285,280,259,271,281,231,240,299,238,241,270,239,237,260,234,246,304,228,300,309,286,288,230,233,250,236,279,278,276,256,229,235,262,301,295,264,265,224,227,242,277,274,296,303,302,267,263,253,290,261,273,310,251,255,269,272,294,297,249,284,292,226,254,306,289,248,282,257,305,244,298,293,266,283,275,268,223,307,252,258,243]} 

 Player 1 22:52:55 $FLIP_CARD:  
{"cardId":247} 

 Player 1 22:52:56 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":308} 

 Player 1 22:52:56 $REGISTER_PASSIVE_ITEM:  
{"cardId":247} 

 Player 1 22:52:56 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":247} 

 Player 1 22:52:56 $NEW_MONSTER_ON_PLACE:  
{"cardId":247,"monsterPlaceId":1} 

 Player 1 22:52:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:52:57 $CLEAR_SE_VIS:  

 Player 1 22:52:57 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 22:52:57 $CLEAR_SE_VIS:  

 Player 1 22:52:57 $END_TURN:  

 Player 1 22:52:57 $SET_TURN:  
{"playerId":2} 

 Player 1 22:52:57 $START_TURN:  
{"playerId":2} 

 Player 2 22:52:57 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 22:52:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:52:57 $NEXT_STACK_ID:  

 Player 2 22:52:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:52:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:52:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:52:57 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:52:57 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 22:52:57 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 22:52:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:52:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:52:57 $CLEAR_SE_VIS:  

 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Add StartTurnLoot 8 "}} 

 Player 2 22:53:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Adding StartTurnLoot 8"},"childOfId":56} 

 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 22:53:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:00 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 22:53:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:53:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:00 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 22:53:00 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve StartTurnLoot 8 "}} 

 Player 2 22:53:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:53:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:53:00 $MOVE_CARD:  
{"moveIndex":12,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:53:01 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:53:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":108} 

 Player 2 22:53:01 $FLIP_CARD:  
{"cardId":108} 

 Player 2 22:53:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":108} 

 Player 2 22:53:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 22:53:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:53:01 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 2 22:53:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:53:01 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 22:53:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:53:04 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Remove After Resolve StartTurnLoot 8  "}} 

 Player 2 22:53:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:53:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Remove After Resolve StartTurnLoot 8"},"childOfId":61} 

 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 2 22:53:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 22:53:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:53:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:04 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 2 22:53:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:04 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 22:53:04 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Stack Was Emptied "}} 

 Player 2 22:53:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:53:04 $CLEAR_SE_VIS:  

 Player 2 22:53:20 $MOVE_CARD:  
{"moveIndex":13,"cardId":82,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 22:53:21 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":82,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:53:21 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[34,62,68,69,45,76,112,32,41,35,101,107,120,106,66,113,46,30,126,85,97,60,70,77,8,51,49,16,37,116,121,114,25,117,109,122,96,90,44,99,48,79,5,65,21,31,87,53,86,50,94,27,52,137,124,128,102,111,57,131,135,127,39,23,74,136,20,6,59,47,134,26,14,18,22,98,93,118,71,61,9,29,105,17,13,56,92,78,83,100,89,42,11,133,75,38,36,19,139,33,123,24,119,15,81,80,64,67,91,104,63,28,73,103,138,110,88,58,12,7,40,54,55,129,125,95,4]} 

 Player 2 22:53:21 $FLIP_CARD:  
{"cardId":82} 

 Player 2 22:53:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":82} 

 Player 2 22:53:23 $NEXT_STACK_ID:  

 Player 2 22:53:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 

 Player 2 22:53:24 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 22:53:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 22:53:24 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:53:24 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 22:53:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:53:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 

 Player 2 22:53:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Add PlayLootCardStackEffect 9 "}} 

 Player 2 22:53:27 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":82} 

 Player 2 22:53:27 $MOVE_CARD:  
{"moveIndex":14,"cardId":82,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 22:53:27 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":82,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:53:27 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":82} 

 Player 2 22:53:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Bloody Penny: AddTrinket"} 

 Player 2 22:53:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:53:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Adding PlayLootCardStackEffect 9"},"childOfId":66} 

 Player 2 22:53:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 2 22:53:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:27 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 22:53:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 2 22:53:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 

 Player 1 22:53:27 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:53:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:27 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 22:53:27 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 22:53:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Resolve PlayLootCardStackEffect 9 "}} 

 Player 2 22:53:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Bloody Penny: AddTrinket"} 

 Player 2 22:53:27 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:53:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Plays Bloody Penny: AddTrinket"} 

 Player 2 22:53:27 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":82,"particleType":6} 

 Player 1 22:53:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 

 Player 2 22:53:29 $DISABLE_PARTICLE_EFFECT:  
{"cardId":82,"particleType":6} 

 Player 2 22:53:29 $CARD_ADD_TRINKET:  
{"cardId":82,"playerId":2,"addMuiliEffect":false} 

 Player 2 22:53:29 $REMOVE_FROM_PILE:  
{"cardId":82} 

 Player 2 22:53:29 $REGISTER_PASSIVE_ITEM:  
{"cardId":82} 

 Player 2 22:53:29 $MOVE_CARD:  
{"moveIndex":15,"cardId":82,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 22:53:30 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":82,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:53:30 $ADD_AN_ITEM:  
{"playerId":2,"cardId":82,"isReward":true} 

 Player 2 22:53:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":82}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 22:53:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Plays Bloody Penny: AddTrinket"} 

 Player 2 22:53:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:53:30 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":9} 

 Player 2 22:53:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:53:30 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 22:53:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 

 Player 2 22:53:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Remove After Resolve PlayLootCardStackEffect 9  "}} 

 Player 2 22:53:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:53:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Remove After Resolve PlayLootCardStackEffect 9"},"childOfId":71} 

 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 2 22:53:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 

 Player 1 22:53:33 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:53:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:33 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 2 22:53:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:33 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 22:53:33 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Stack Was Emptied "}} 

 Player 2 22:53:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:53:33 $CLEAR_SE_VIS:  

 Player 2 22:53:41 $MOVE_CARD:  
{"moveIndex":16,"cardId":123,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 22:53:41 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:53:41 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[34,62,68,69,45,76,112,32,41,35,101,107,120,106,66,113,46,30,126,85,97,60,70,77,8,51,49,16,37,116,121,114,25,117,109,122,96,90,44,99,48,79,5,65,21,31,87,53,86,50,94,27,52,137,124,128,102,111,57,131,135,127,39,23,74,136,20,6,59,47,134,26,14,18,22,98,93,118,71,61,9,29,105,17,13,56,92,78,83,100,89,42,11,133,75,38,36,19,139,33,24,119,15,81,80,64,67,91,104,63,28,73,103,138,110,88,58,12,7,40,54,55,129,125,95,4]} 

 Player 2 22:53:41 $FLIP_CARD:  
{"cardId":123} 

 Player 2 22:53:41 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 22:53:44 $NEXT_STACK_ID:  

 Player 2 22:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is going to activate Lilith"} 

 Player 2 22:53:44 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 22:53:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 22:53:44 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:53:44 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 22:53:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is going to activate Lilith"} 

 Player 2 22:53:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Add ActivateItem 10 "}} 

 Player 2 22:53:48 $SHOW_DECISION:  
{"startCardId":321,"endCardId":123,"flipEndCard":true} 

 Player 2 22:53:51 $USE_ITEM:  
{"cardId":321} 

 Player 2 22:53:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:53:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Response Adding ActivateItem 10"},"childOfId":76} 

 Player 2 22:53:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":76} 

 Player 2 22:53:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:51 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 22:53:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":76} 

 Player 2 22:53:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:53:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:52 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 22:53:52 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 22:53:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Resolve ActivateItem 10 "}} 

 Player 2 22:53:52 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:53:52 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":321,"particleType":6} 

 Player 2 22:53:54 $DISABLE_PARTICLE_EFFECT:  
{"cardId":321,"particleType":6} 

 Player 2 22:53:54 $NEXT_STACK_ID:  

 Player 2 22:53:54 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 22:53:54 $MOVE_CARD:  
{"moveIndex":17,"cardId":123,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 22:53:54 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:53:54 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":123} 

 Player 2 22:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket \n2:Player 2 is going to activate Lilith"} 

 Player 2 22:53:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:54 $CLEAR_SE_VIS:  

 Player 2 22:53:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:53:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:53:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 22:53:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:53:54 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 22:53:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is going to activate Lilith"} 

 Player 2 22:53:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket \n2:Player 2 has activated Lilith"} 

 Player 2 22:53:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":321}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 22:53:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:53:57 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":10} 

 Player 2 22:53:57 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:53:57 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 22:53:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny  \n2:Player 2 is going to activate Lilith"} 

 Player 2 22:54:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Remove After Resolve ActivateItem 10  "}} 

 Player 2 22:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket"} 

 Player 2 22:54:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Response Remove After Resolve ActivateItem 10"},"childOfId":81} 

 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 2 "},"childOfId":81} 

 Player 2 22:54:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:54:00 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":81} 

 Player 2 22:54:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:54:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny  \n2:Player 2 is going to activate Lilith"} 

 Player 1 22:54:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:54:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:54:00 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 22:54:00 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Resolve PlayLootCardStackEffect 11 "}} 

 Player 2 22:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket"} 

 Player 2 22:54:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:54:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Plays Swallowed Penny: AddTrinket"} 

 Player 2 22:54:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 1 22:54:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 

 Player 2 22:54:02 $DISABLE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 22:54:02 $CARD_ADD_TRINKET:  
{"cardId":123,"playerId":2,"addMuiliEffect":false} 

 Player 2 22:54:02 $REMOVE_FROM_PILE:  
{"cardId":123} 

 Player 2 22:54:02 $REGISTER_PASSIVE_ITEM:  
{"cardId":123} 

 Player 2 22:54:02 $MOVE_CARD:  
{"moveIndex":18,"cardId":123,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 22:54:03 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":123,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:54:03 $ADD_AN_ITEM:  
{"playerId":2,"cardId":123,"isReward":true} 

 Player 2 22:54:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":123}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 22:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Plays Swallowed Penny: AddTrinket"} 

 Player 2 22:54:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:54:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 2 22:54:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:54:03 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 22:54:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 

 Player 2 22:54:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Remove After Resolve PlayLootCardStackEffect 11  "}} 

 Player 2 22:54:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:54:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Response Remove After Resolve PlayLootCardStackEffect 11"},"childOfId":86} 

 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Wait For Response From Player 1 "},"childOfId":86} 

 Player 2 22:54:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:54:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:54:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 

 Player 1 22:54:06 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:54:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 2 "},"childOfId":86} 

 Player 2 22:54:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 22:54:06 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Stack Was Emptied "}} 

 Player 2 22:54:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:54:06 $CLEAR_SE_VIS:  

 Player 2 22:54:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:54:07 $CLEAR_SE_VIS:  

 Player 2 22:54:07 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 22:54:07 $CLEAR_SE_VIS:  

 Player 2 22:54:07 $END_TURN:  

 Player 2 22:54:07 $SET_TURN:  
{"playerId":1} 

 Player 2 22:54:07 $START_TURN:  
{"playerId":1} 

 Player 1 22:54:07 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 22:54:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:07 $NEXT_STACK_ID:  

 Player 1 22:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:54:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:54:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:54:07 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:54:07 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 22:54:07 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 22:54:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:54:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:54:07 $CLEAR_SE_VIS:  

 Player 1 22:54:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Add StartTurnLoot 12 "}} 

 Player 1 22:54:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:54:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Response Adding StartTurnLoot 12"},"childOfId":91} 

 Player 1 22:54:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 1 "},"childOfId":91} 

 Player 1 22:54:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:10 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 22:54:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":91} 

 Player 1 22:54:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:54:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:54:10 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:54:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:54:10 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 22:54:10 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 22:54:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Resolve StartTurnLoot 12 "}} 

 Player 1 22:54:10 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:54:10 $DRAW_CARD:  
{"deckType":1} 

 Player 1 22:54:10 $MOVE_CARD:  
{"moveIndex":19,"cardId":4,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 22:54:11 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":4,"flipIfFlipped":false,"playerId":1} 

 Player 1 22:54:11 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":4} 

 Player 1 22:54:11 $FLIP_CARD:  
{"cardId":4} 

 Player 1 22:54:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":4} 

 Player 1 22:54:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 22:54:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:54:11 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 1 22:54:11 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:54:11 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 22:54:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:54:14 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 1 22:54:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Remove After Resolve StartTurnLoot 12  "}} 

 Player 1 22:54:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:54:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:54:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Response Remove After Resolve StartTurnLoot 12"},"childOfId":96} 

 Player 1 22:54:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 2 "},"childOfId":96} 

 Player 1 22:54:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:54:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:54:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 22:54:14 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:54:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:54:14 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 22:54:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 1 "},"childOfId":96} 

 Player 1 22:54:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:14 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 22:54:14 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 22:54:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Stack Was Emptied "}} 

 Player 1 22:54:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:54:14 $CLEAR_SE_VIS:  

 Player 1 22:54:19 $NEXT_STACK_ID:  

 Player 1 22:54:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Monster Deck"} 

 Player 1 22:54:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":222,"stackEffectType":4}} 

 Player 1 22:54:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":222,"stackEffectType":4}} 

 Player 1 22:54:20 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:54:20 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 22:54:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:54:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Monster Deck"} 

 Player 1 22:54:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Add DeclareAttack 13 "}} 

 Player 1 22:54:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":222,"stackEffectType":4}} 

 Player 1 22:54:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Response Adding DeclareAttack 13"},"childOfId":101} 

 Player 1 22:54:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Wait For Response From Player 1 "},"childOfId":101} 

 Player 1 22:54:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 1 22:54:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Wait For Response From Player 2 "},"childOfId":101} 

 Player 1 22:54:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:54:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:54:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:54:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 1 22:54:23 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 22:54:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Resolve DeclareAttack 13 "}} 

 Player 1 22:54:23 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":222,"stackEffectType":4}} 

 Player 1 22:54:23 $DRAW_CARD:  
{"deckType":2} 

 Player 1 22:54:23 $SHOW_CARD_PREVIEW:  
{"cardToShowId":243,"playerId":1} 

 Player 1 22:54:28 $FLIP_CARD:  
{"cardId":243} 

 Player 1 22:54:28 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":247} 

 Player 1 22:54:28 $REGISTER_PASSIVE_ITEM:  
{"cardId":243} 

 Player 1 22:54:28 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":243} 

 Player 1 22:54:28 $NEW_MONSTER_ON_PLACE:  
{"cardId":243,"monsterPlaceId":1} 

 Player 1 22:54:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":243,"particleType":5} 

 Player 1 22:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with Cursed Horf"} 

 Player 1 22:54:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":8,"originStackId":13},"isAfterActivation":true,"index":8} 

 Player 1 22:54:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 1 22:54:28 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 1 22:54:28 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:54:28 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 22:54:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Monster Deck"} 

 Player 1 22:54:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 1 22:54:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Remove After Resolve DeclareAttack 13  "}} 

 Player 1 22:54:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:54:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 1 22:54:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Response Remove After Resolve DeclareAttack 13"},"childOfId":106} 

 Player 1 22:54:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Wait For Response From Player 2 "},"childOfId":106} 

 Player 1 22:54:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:54:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:54:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Cursed Horf"} 

 Player 2 22:54:31 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:54:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:54:31 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 1 22:54:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Wait For Response From Player 1 "},"childOfId":106} 

 Player 1 22:54:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:31 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 1 22:54:31 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 22:54:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Stack Was Emptied "}} 

 Player 1 22:54:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:54:31 $CLEAR_SE_VIS:  

 Player 1 22:54:35 $NEXT_STACK_ID:  

 Player 1 22:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 

 Player 1 22:54:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 22:54:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 22:54:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:54:35 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 22:54:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:54:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 

 Player 1 22:54:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Add AttackRoll 14 "}} 

 Player 1 22:54:38 $ROLL_DICE:  
{"playerId":1} 

 Player 1 22:54:41 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 22:54:41 $UPDATE_STACK_VIS:  
{"stackId":14,"text":"player rolled 1 vs Cursed Horf<Monster>"} 

 Player 1 22:54:41 $SHOW_DICE_ROLL:  
{"stackId":14} 

 Player 1 22:54:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Cursed Horf<Monster>"} 

 Player 1 22:54:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":313,"numberRolled":1,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 22:54:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Response Adding AttackRoll 14"},"childOfId":111} 

 Player 1 22:54:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Wait For Response From Player 1 "},"childOfId":111} 

 Player 1 22:54:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:44 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 1 22:54:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Wait For Response From Player 2 "},"childOfId":111} 

 Player 1 22:54:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:54:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:54:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 

 Player 2 22:54:44 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:54:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:54:44 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 1 22:54:44 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 1 22:54:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Resolve AttackRoll 14 "}} 

 Player 1 22:54:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Cursed Horf<Monster>"} 

 Player 1 22:54:44 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":313,"numberRolled":1,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 22:54:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Added 0 to original roll"}} 

 Player 1 22:54:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 4 Against Cursed Horf<Monster> 4"} 

 Player 1 22:54:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 22:54:44 $NEXT_STACK_ID:  

 Player 1 22:54:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:44 $CLEAR_SE_VIS:  

 Player 1 22:54:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:Player 1 Roll Hit"} 

 Player 1 22:54:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:54:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":313,"numberRolled":1,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 22:54:44 $REPLACE_STACK:  
{"currentStack":[{"entityId":15,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":14,"creatorCardId":313,"numberRolled":1,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":243}]} 

 Player 1 22:54:44 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:54:44 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 22:54:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 

 Player 2 22:54:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 

 Player 1 22:54:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":9,"originStackId":14},"isAfterActivation":true,"index":9} 

 Player 1 22:54:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:Player 1 Roll Hit"} 

 Player 1 22:54:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":313,"numberRolled":1,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 22:54:47 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":14} 

 Player 1 22:54:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:54:47 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 22:54:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:Player 1 is rolling against Cursed Horf<Monster>"} 

 Player 1 22:54:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":14} 

 Player 1 22:54:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Remove After Resolve AttackRoll 14  "}} 

 Player 1 22:54:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf"} 

 Player 1 22:54:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":313,"numberRolled":1,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 1 22:54:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Response Remove After Resolve AttackRoll 14"},"childOfId":117} 

 Player 1 22:54:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Wait For Response From Player 1 "},"childOfId":117} 

 Player 1 22:54:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:50 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 1 22:54:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 2 "},"childOfId":117} 

 Player 1 22:54:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:54:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:54:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:Player 1 is rolling against Cursed Horf<Monster>"} 

 Player 2 22:54:50 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:54:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:54:50 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 1 22:54:50 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 1 22:54:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Resolve CombatDamage 15 "}} 

 Player 1 22:54:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf"} 

 Player 1 22:54:50 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:54:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby will deal 1 combat damage to Cursed Horf "} 

 Player 1 22:54:50 $UPDATE_STACK_VIS:  
{"stackId":15,"text":"Blue Baby will deal 1 combat damage to Cursed Horf"} 

 Player 1 22:54:51 $MONSTER_GET_DAMAGED:  
{"cardId":243,"hpLeft":0,"damageDealerId":313} 

 Player 1 22:54:51 $NEXT_STACK_ID:  

 Player 1 22:54:51 $CLEAR_SE_VIS:  

 Player 1 22:54:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby will deal 1 combat damage to Cursed Horf  \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:54:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:54:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":313,"monsterToDieCardId":243,"stackEffectType":5,"killerId":313}} 

 Player 1 22:54:51 $REPLACE_STACK:  
{"currentStack":[{"entityId":15,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":16,"creatorCardId":313,"monsterToDieCardId":243,"stackEffectType":5,"killerId":313}]} 

 Player 1 22:54:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":313,"monsterToDieCardId":243,"stackEffectType":5,"killerId":313}} 

 Player 1 22:54:51 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:54:51 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 2 22:54:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf"} 

 Player 2 22:54:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:54:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":313},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 22:54:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":313},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":11,"originStackId":15},"isAfterActivation":true,"index":11} 

 Player 1 22:54:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby will deal 1 combat damage to Cursed Horf  \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:54:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:54:53 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":15} 

 Player 1 22:54:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:54:54 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 22:54:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:54:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":15} 

 Player 1 22:54:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Remove After Resolve CombatDamage 15  "}} 

 Player 1 22:54:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:54:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:54:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Response Remove After Resolve CombatDamage 15"},"childOfId":122} 

 Player 1 22:54:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Wait For Response From Player 1 "},"childOfId":122} 

 Player 1 22:54:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:57 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 1 22:54:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Wait For Response From Player 2 "},"childOfId":122} 

 Player 1 22:54:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:54:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 2 22:54:57 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:54:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:54:57 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 1 22:54:57 $ACTION_MASSAGE_REMOVE:  
{"id":123} 

 Player 1 22:54:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Resolve MonsterDeath 16 "}} 

 Player 1 22:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:54:57 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":313,"monsterToDieCardId":243,"stackEffectType":5,"killerId":313}} 

 Player 1 22:54:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":243,"particleType":5} 

 Player 1 22:54:57 $CANCEL_ATTACK:  

 Player 1 22:54:57 $NEXT_STACK_ID:  

 Player 1 22:54:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:54:57 $CLEAR_SE_VIS:  

 Player 1 22:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:54:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":313,"monsterCardWithRewardId":243,"playerCardIdToReward":313,"stackEffectType":7}} 

 Player 1 22:54:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":313,"monsterToDieCardId":243,"stackEffectType":5,"killerId":313}} 

 Player 1 22:54:57 $REPLACE_STACK:  
{"currentStack":[{"entityId":17,"creatorCardId":313,"monsterCardWithRewardId":243,"playerCardIdToReward":313,"stackEffectType":7},{"entityId":16,"creatorCardId":313,"monsterToDieCardId":243,"stackEffectType":5,"killerId":313}]} 

 Player 1 22:54:57 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:54:57 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 2 22:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf"} 

 Player 2 22:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Cursed Horf"} 

 Player 1 22:55:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 1 22:55:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":313,"monsterToDieCardId":243,"stackEffectType":5,"killerId":313}} 

 Player 1 22:55:00 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":16} 

 Player 1 22:55:00 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:55:00 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 1 22:55:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":16} 

 Player 1 22:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Remove After Resolve MonsterDeath 16  "}} 

 Player 1 22:55:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward"} 

 Player 1 22:55:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":313,"monsterToDieCardId":243,"stackEffectType":5,"killerId":313}} 

 Player 1 22:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Response Remove After Resolve MonsterDeath 16"},"childOfId":127} 

 Player 1 22:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Wait For Response From Player 1 "},"childOfId":127} 

 Player 1 22:55:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:03 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 1 22:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Wait For Response From Player 2 "},"childOfId":127} 

 Player 1 22:55:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Blue Baby"} 

 Player 2 22:55:03 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:55:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:03 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 22:55:03 $ACTION_MASSAGE_REMOVE:  
{"id":128} 

 Player 1 22:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Resolve MonsterRewardStackEffect 17 "}} 

 Player 1 22:55:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward"} 

 Player 1 22:55:03 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":313,"monsterCardWithRewardId":243,"playerCardIdToReward":313,"stackEffectType":7}} 

 Player 1 22:55:03 $SET_MONEY:  
{"playerId":1,"numOfCoins":9} 

 Player 1 22:55:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 1 22:55:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":13,"originStackId":17},"isAfterActivation":true,"index":13} 

 Player 1 22:55:03 $NEXT_STACK_ID:  

 Player 1 22:55:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch Effect AddMoney<AddMoney>"} 

 Player 1 22:55:03 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":185,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:55:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":185,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:55:03 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:55:03 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 2 22:55:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward"} 

 Player 2 22:55:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 1 22:55:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Add ActivatePassiveEffect 18 "}} 

 Player 1 22:55:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch effect AddMoney<AddMoney>"} 

 Player 1 22:55:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":313,"effectCardPlayer":313},"entityId":18,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":185,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:55:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Response Adding ActivatePassiveEffect 18"},"childOfId":132} 

 Player 1 22:55:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Wait For Response From Player 2 "},"childOfId":132} 

 Player 1 22:55:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 2 22:55:06 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:55:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:06 $ACTION_MASSAGE_REMOVE:  
{"id":134} 

 Player 1 22:55:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Wait For Response From Player 1 "},"childOfId":132} 

 Player 1 22:55:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:06 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 22:55:07 $ACTION_MASSAGE_REMOVE:  
{"id":133} 

 Player 1 22:55:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Resolve ActivatePassiveEffect 18 "}} 

 Player 1 22:55:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch effect AddMoney<AddMoney>"} 

 Player 1 22:55:07 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":313,"effectCardPlayer":313},"entityId":18,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":185,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:55:07 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":185,"particleType":6} 

 Player 2 22:55:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 1 22:55:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":185,"particleType":6} 

 Player 1 22:55:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":12} 

 Player 1 22:55:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 1 22:55:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":13,"originStackId":17},"isAfterActivation":true,"index":13} 

 Player 1 22:55:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activated Midas Touch Effect"} 

 Player 1 22:55:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":313,"effectCardPlayer":313},"entityId":18,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:55:09 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":18} 

 Player 1 22:55:09 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:55:09 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 2 22:55:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 1 22:55:11 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":18} 

 Player 1 22:55:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Remove After Resolve ActivatePassiveEffect 18  "}} 

 Player 1 22:55:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward"} 

 Player 1 22:55:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":313,"effectCardPlayer":313},"entityId":18,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":185,"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:55:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Response Remove After Resolve ActivatePassiveEffect 18"},"childOfId":137} 

 Player 1 22:55:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Wait For Response From Player 1 "},"childOfId":137} 

 Player 1 22:55:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:12 $ACTION_MASSAGE_REMOVE:  
{"id":139} 

 Player 1 22:55:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Wait For Response From Player 2 "},"childOfId":137} 

 Player 1 22:55:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 

 Player 2 22:55:12 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:55:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:12 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 22:55:12 $ACTION_MASSAGE_REMOVE:  
{"id":138} 

 Player 1 22:55:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Resolve MonsterRewardStackEffect 17 "}} 

 Player 1 22:55:12 $MOVE_CARD:  
{"moveIndex":20,"cardId":243,"placeID":332,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 22:55:12 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":243,"flipIfFlipped":true,"playerId":1} 

 Player 1 22:55:12 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":243} 

 Player 1 22:55:12 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":243} 

 Player 1 22:55:12 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":243} 

 Player 1 22:55:12 $REGISTER_PASSIVE_ITEM:  
{"cardId":247} 

 Player 1 22:55:12 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 1 22:55:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward"} 

 Player 1 22:55:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":313,"monsterCardWithRewardId":243,"playerCardIdToReward":313,"stackEffectType":7}} 

 Player 1 22:55:12 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":17} 

 Player 1 22:55:12 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:55:12 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 1 22:55:15 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":17} 

 Player 1 22:55:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Remove After Resolve MonsterRewardStackEffect 17  "}} 

 Player 1 22:55:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:55:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":313,"monsterCardWithRewardId":243,"playerCardIdToReward":313,"stackEffectType":7}} 

 Player 1 22:55:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Response Remove After Resolve MonsterRewardStackEffect 17"},"childOfId":142} 

 Player 1 22:55:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Wait For Response From Player 2 "},"childOfId":142} 

 Player 1 22:55:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward"} 

 Player 2 22:55:15 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322]} 

 Player 2 22:55:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:15 $ACTION_MASSAGE_REMOVE:  
{"id":144} 

 Player 1 22:55:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Wait For Response From Player 1 "},"childOfId":142} 

 Player 1 22:55:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:16 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 22:55:16 $ACTION_MASSAGE_REMOVE:  
{"id":143} 

 Player 1 22:55:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Stack Was Emptied "}} 

 Player 1 22:55:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:55:16 $CLEAR_SE_VIS:  

 Player 1 22:55:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:22 $CLEAR_SE_VIS:  

 Player 1 22:55:22 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 22:55:22 $CLEAR_SE_VIS:  

 Player 1 22:55:22 $END_TURN:  

 Player 1 22:55:22 $SET_TURN:  
{"playerId":2} 

 Player 1 22:55:22 $START_TURN:  
{"playerId":2} 

 Player 2 22:55:22 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 22:55:22 $RECHARGE_ITEM:  
{"cardId":321} 

 Player 2 22:55:22 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":321} 

 Player 2 22:55:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:55:22 $NEXT_STACK_ID:  

 Player 2 22:55:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:55:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:55:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:55:22 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:55:22 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 22:55:22 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 22:55:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:55:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:55:22 $CLEAR_SE_VIS:  

 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Add StartTurnLoot 19 "}} 

 Player 2 22:55:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:55:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Response Adding StartTurnLoot 19"},"childOfId":147} 

 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":147} 

 Player 2 22:55:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:55:25 $ACTION_MASSAGE_REMOVE:  
{"id":149} 

 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Wait For Response From Player 1 "},"childOfId":147} 

 Player 2 22:55:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:55:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:55:25 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:55:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:55:25 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 2 22:55:25 $ACTION_MASSAGE_REMOVE:  
{"id":148} 

 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Resolve StartTurnLoot 19 "}} 

 Player 2 22:55:25 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:55:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:55:25 $MOVE_CARD:  
{"moveIndex":21,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:55:26 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":95,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:55:26 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":95} 

 Player 2 22:55:26 $FLIP_CARD:  
{"cardId":95} 

 Player 2 22:55:26 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 22:55:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 22:55:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:55:26 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":19} 

 Player 2 22:55:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:55:26 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 22:55:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 22:55:29 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":19} 

 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Remove After Resolve StartTurnLoot 19  "}} 

 Player 2 22:55:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:55:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 

 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Response Remove After Resolve StartTurnLoot 19"},"childOfId":152} 

 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Wait For Response From Player 1 "},"childOfId":152} 

 Player 2 22:55:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:55:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:55:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 22:55:29 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 22:55:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:55:29 $ACTION_MASSAGE_REMOVE:  
{"id":154} 

 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Wait For Response From Player 2 "},"childOfId":152} 

 Player 2 22:55:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:55:29 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 2 22:55:29 $ACTION_MASSAGE_REMOVE:  
{"id":153} 

 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Stack Was Emptied "}} 

 Player 2 22:55:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:55:29 $CLEAR_SE_VIS:  

 Player 2 22:55:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:55:29 $CLEAR_SE_VIS:  

 Player 2 22:55:29 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 22:55:29 $CLEAR_SE_VIS:  

 Player 2 22:55:29 $END_TURN:  

 Player 2 22:55:29 $SET_TURN:  
{"playerId":1} 

 Player 2 22:55:29 $START_TURN:  
{"playerId":1} 

 Player 1 22:55:29 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 22:55:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:29 $NEXT_STACK_ID:  

 Player 1 22:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:55:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:55:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:55:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:55:30 $SHOW_STACK_EFFECT:  
{"effectId":20} 

 Player 2 22:55:30 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 22:55:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:55:30 $CLEAR_SE_VIS:  

 Player 1 22:55:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Add StartTurnLoot 20 "}} 

 Player 1 22:55:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:55:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Response Adding StartTurnLoot 20"},"childOfId":157} 

 Player 1 22:55:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Wait For Response From Player 1 "},"childOfId":157} 

 Player 1 22:55:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:33 $ACTION_MASSAGE_REMOVE:  
{"id":159} 

 Player 1 22:55:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Wait For Response From Player 2 "},"childOfId":157} 

 Player 1 22:55:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:33 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:55:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:33 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 1 22:55:33 $ACTION_MASSAGE_REMOVE:  
{"id":158} 

 Player 1 22:55:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Resolve StartTurnLoot 20 "}} 

 Player 1 22:55:33 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:55:33 $DRAW_CARD:  
{"deckType":1} 

 Player 1 22:55:33 $MOVE_CARD:  
{"moveIndex":22,"cardId":125,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 22:55:33 $MOVE_CARD_END:  
{"moveIndex":22,"cardId":125,"flipIfFlipped":false,"playerId":1} 

 Player 1 22:55:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":125} 

 Player 1 22:55:33 $FLIP_CARD:  
{"cardId":125} 

 Player 1 22:55:33 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":125} 

 Player 1 22:55:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 22:55:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:55:33 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":20} 

 Player 1 22:55:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:55:33 $SHOW_STACK_EFFECT:  
{"effectId":20} 

 Player 2 22:55:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 22:55:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":20} 

 Player 1 22:55:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Remove After Resolve StartTurnLoot 20  "}} 

 Player 1 22:55:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:55:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 

 Player 1 22:55:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Response Remove After Resolve StartTurnLoot 20"},"childOfId":162} 

 Player 1 22:55:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Wait For Response From Player 2 "},"childOfId":162} 

 Player 1 22:55:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 22:55:37 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:55:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:37 $ACTION_MASSAGE_REMOVE:  
{"id":164} 

 Player 1 22:55:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Wait For Response From Player 1 "},"childOfId":162} 

 Player 1 22:55:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:37 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 1 22:55:37 $ACTION_MASSAGE_REMOVE:  
{"id":163} 

 Player 1 22:55:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Stack Was Emptied "}} 

 Player 1 22:55:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:55:37 $CLEAR_SE_VIS:  

 Player 1 22:55:43 $NEXT_STACK_ID:  

 Player 1 22:55:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 

 Player 1 22:55:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 22:55:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 22:55:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:55:43 $SHOW_STACK_EFFECT:  
{"effectId":21} 

 Player 2 22:55:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:55:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 

 Player 1 22:55:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Add DeclareAttack 21 "}} 

 Player 1 22:55:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 22:55:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Response Adding DeclareAttack 21"},"childOfId":167} 

 Player 1 22:55:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Wait For Response From Player 1 "},"childOfId":167} 

 Player 1 22:55:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:46 $ACTION_MASSAGE_REMOVE:  
{"id":169} 

 Player 1 22:55:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Wait For Response From Player 2 "},"childOfId":167} 

 Player 1 22:55:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:46 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:55:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:46 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 1 22:55:46 $ACTION_MASSAGE_REMOVE:  
{"id":168} 

 Player 1 22:55:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Resolve DeclareAttack 21 "}} 

 Player 1 22:55:46 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 22:55:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":232,"particleType":5} 

 Player 1 22:55:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Entered Battle with Carrion Queen"} 

 Player 1 22:55:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":15,"originStackId":21},"isAfterActivation":true,"index":15} 

 Player 1 22:55:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 22:55:46 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":21} 

 Player 1 22:55:46 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:55:46 $SHOW_STACK_EFFECT:  
{"effectId":21} 

 Player 2 22:55:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 

 Player 1 22:55:49 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":21} 

 Player 1 22:55:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Remove After Resolve DeclareAttack 21  "}} 

 Player 1 22:55:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:55:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 1 22:55:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Response Remove After Resolve DeclareAttack 21"},"childOfId":172} 

 Player 1 22:55:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Wait For Response From Player 2 "},"childOfId":172} 

 Player 1 22:55:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 

 Player 2 22:55:49 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:55:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:49 $ACTION_MASSAGE_REMOVE:  
{"id":174} 

 Player 1 22:55:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":175,"_text":"Wait For Response From Player 1 "},"childOfId":172} 

 Player 1 22:55:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:49 $ACTION_MASSAGE_REMOVE:  
{"id":175} 

 Player 1 22:55:49 $ACTION_MASSAGE_REMOVE:  
{"id":173} 

 Player 1 22:55:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":176,"_text":"Stack Was Emptied "}} 

 Player 1 22:55:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 22:55:49 $CLEAR_SE_VIS:  

 Player 1 22:55:50 $NEXT_STACK_ID:  

 Player 1 22:55:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 1 22:55:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:55:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:55:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:55:50 $SHOW_STACK_EFFECT:  
{"effectId":22} 

 Player 2 22:55:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 22:55:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 1 22:55:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":177,"_text":"Add AttackRoll 22 "}} 

 Player 1 22:55:53 $ROLL_DICE:  
{"playerId":1} 

 Player 1 22:55:55 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 22:55:55 $UPDATE_STACK_VIS:  
{"stackId":22,"text":"player rolled 6 vs Carrion Queen<Monster>"} 

 Player 1 22:55:56 $SHOW_DICE_ROLL:  
{"stackId":22} 

 Player 1 22:55:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Carrion Queen<Monster>"} 

 Player 1 22:55:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:55:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":178,"_text":"Response Adding AttackRoll 22"},"childOfId":177} 

 Player 1 22:55:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":179,"_text":"Wait For Response From Player 1 "},"childOfId":177} 

 Player 1 22:55:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:59 $ACTION_MASSAGE_REMOVE:  
{"id":179} 

 Player 1 22:55:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":180,"_text":"Wait For Response From Player 2 "},"childOfId":177} 

 Player 1 22:55:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:55:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:55:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 2 22:55:59 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:55:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:55:59 $ACTION_MASSAGE_REMOVE:  
{"id":180} 

 Player 1 22:55:59 $ACTION_MASSAGE_REMOVE:  
{"id":178} 

 Player 1 22:55:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":181,"_text":"Resolve AttackRoll 22 "}} 

 Player 1 22:55:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Carrion Queen<Monster>"} 

 Player 1 22:55:59 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:55:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":182,"_text":"Added 0 to original roll"}} 

 Player 1 22:55:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Rolled 4 Against Carrion Queen<Monster> 4"} 

 Player 1 22:55:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Roll Hit"} 

 Player 1 22:55:59 $NEXT_STACK_ID:  

 Player 1 22:55:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:55:59 $CLEAR_SE_VIS:  

 Player 1 22:55:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit"} 

 Player 1 22:55:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:55:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:55:59 $REPLACE_STACK:  
{"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}]} 

 Player 1 22:55:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:55:59 $SHOW_STACK_EFFECT:  
{"effectId":23} 

 Player 2 22:55:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 2 22:55:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 1 22:56:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":16,"originStackId":22},"isAfterActivation":true,"index":16} 

 Player 1 22:56:02 $NEXT_STACK_ID:  

 Player 1 22:56:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit"} 

 Player 1 22:56:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor Effect DealDamage<DealDamage>"} 

 Player 1 22:56:02 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:56:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:56:02 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:56:02 $SHOW_STACK_EFFECT:  
{"effectId":24} 

 Player 2 22:56:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster>"} 

 Player 2 22:56:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 

 Player 1 22:56:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":183,"_text":"Add ActivatePassiveEffect 24 "}} 

 Player 1 22:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 

 Player 1 22:56:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":184,"_text":"Response Adding ActivatePassiveEffect 24"},"childOfId":183} 

 Player 1 22:56:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":185,"_text":"Wait For Response From Player 1 "},"childOfId":183} 

 Player 1 22:56:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:56:05 $ACTION_MASSAGE_REMOVE:  
{"id":185} 

 Player 1 22:56:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":186,"_text":"Wait For Response From Player 2 "},"childOfId":183} 

 Player 1 22:56:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:56:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 

 Player 2 22:56:05 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:56:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:56:05 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 1 22:56:05 $ACTION_MASSAGE_REMOVE:  
{"id":184} 

 Player 1 22:56:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":187,"_text":"Resolve ActivatePassiveEffect 24 "}} 

 Player 1 22:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 

 Player 1 22:56:05 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":247,"particleType":6} 

 Player 2 22:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 

 Player 1 22:56:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":247,"particleType":6} 

 Player 1 22:56:07 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":247} 

 Player 1 22:56:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 

 Player 1 22:56:07 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":247} 

 Player 1 22:56:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 

 Player 1 22:56:07 $NEXT_STACK_ID:  

 Player 1 22:56:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 

 Player 1 22:56:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:56:07 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:56:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:56:07 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:56:07 $SHOW_STACK_EFFECT:  
{"effectId":25} 

 Player 2 22:56:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 

 Player 2 22:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 1 22:56:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":188,"_text":"Add ActivatePassiveEffect 25 "}} 

 Player 1 22:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:56:10 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 22:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 2 22:56:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 22:56:10 $END_PUT_ON_STACK:  
{"playerId":1} 

 Player 1 22:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:56:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":189,"_text":"Response Adding ActivatePassiveEffect 25"},"childOfId":188} 

 Player 1 22:56:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":190,"_text":"Wait For Response From Player 2 "},"childOfId":188} 

 Player 1 22:56:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:56:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:56:10 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:56:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:56:11 $ACTION_MASSAGE_REMOVE:  
{"id":190} 

 Player 1 22:56:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":191,"_text":"Wait For Response From Player 1 "},"childOfId":188} 

 Player 1 22:56:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:56:11 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 1 22:56:11 $ACTION_MASSAGE_REMOVE:  
{"id":189} 

 Player 1 22:56:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":192,"_text":"Resolve ActivatePassiveEffect 25 "}} 

 Player 1 22:56:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny "} 

 Player 1 22:56:11 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:11 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":16,"originStackId":22},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 22:56:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 2 22:56:11 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 22:56:13 $DISABLE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 22:56:13 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 22:56:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 22:56:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":{"type":2,"number":1}},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":18},"isAfterActivation":true,"index":18} 

 Player 2 22:56:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activated Swallowed Penny Effect"} 

 Player 2 22:56:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 22:56:13 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 22:56:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny "} 

 Player 1 22:56:13 $CLEAR_SE_VIS:  

 Player 1 22:56:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 1 22:56:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:56:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:56:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:13 $REPLACE_STACK:  
{"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":null,"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 22:56:13 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:56:13 $SHOW_STACK_EFFECT:  
{"effectId":25} 

 Player 2 22:56:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activated Swallowed Penny Effect"} 

 Player 1 22:56:16 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":25} 

 Player 1 22:56:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":193,"_text":"Remove After Resolve ActivatePassiveEffect 25  "}} 

 Player 1 22:56:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 

 Player 1 22:56:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":194,"_text":"Response Remove After Resolve ActivatePassiveEffect 25"},"childOfId":193} 

 Player 1 22:56:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":195,"_text":"Wait For Response From Player 1 "},"childOfId":193} 

 Player 1 22:56:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:56:16 $ACTION_MASSAGE_REMOVE:  
{"id":195} 

 Player 1 22:56:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":196,"_text":"Wait For Response From Player 2 "},"childOfId":193} 

 Player 1 22:56:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:56:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:56:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 

 Player 2 22:56:16 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:56:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:56:16 $ACTION_MASSAGE_REMOVE:  
{"id":196} 

 Player 1 22:56:16 $ACTION_MASSAGE_REMOVE:  
{"id":194} 

 Player 1 22:56:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":197,"_text":"Resolve ActivatePassiveEffect 24 "}} 

 Player 1 22:56:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 

 Player 1 22:56:16 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":247,"particleType":6} 

 Player 1 22:56:18 $DISABLE_PARTICLE_EFFECT:  
{"cardId":247,"particleType":6} 

 Player 1 22:56:18 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":247} 

 Player 1 22:56:18 $NEXT_STACK_ID:  

 Player 1 22:56:18 $CLEAR_SE_VIS:  

 Player 1 22:56:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die"} 

 Player 1 22:56:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:56:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:56:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":16,"originStackId":22},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:19 $REPLACE_STACK:  
{"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":16,"originStackId":22},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247}]} 

 Player 1 22:56:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:56:19 $SHOW_STACK_EFFECT:  
{"effectId":26} 

 Player 2 22:56:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 

 Player 2 22:56:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die"} 

 Player 1 22:56:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:56:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 

 Player 1 22:56:21 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":247} 

 Player 1 22:56:21 $NEXT_STACK_ID:  

 Player 1 22:56:21 $CLEAR_SE_VIS:  

 Player 1 22:56:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 

 Player 1 22:56:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:56:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:56:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":16,"originStackId":22},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":16,"originStackId":22},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}]} 

 Player 1 22:56:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:22 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:56:22 $SHOW_STACK_EFFECT:  
{"effectId":27} 

 Player 2 22:56:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die"} 

 Player 2 22:56:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 

 Player 1 22:56:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:56:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 

 Player 1 22:56:24 $NEXT_STACK_ID:  

 Player 1 22:56:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:56:24 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:56:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 22:56:24 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:56:25 $SHOW_STACK_EFFECT:  
{"effectId":28} 

 Player 2 22:56:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 

 Player 2 22:56:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 

 Player 1 22:56:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":198,"_text":"Add ActivatePassiveEffect 28 "}} 

 Player 1 22:56:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:56:27 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 22:56:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 

 Player 2 22:56:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 22:56:27 $END_PUT_ON_STACK:  
{"playerId":1} 

 Player 1 22:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 

 Player 1 22:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":199,"_text":"Response Adding ActivatePassiveEffect 28"},"childOfId":198} 

 Player 1 22:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":200,"_text":"Wait For Response From Player 1 "},"childOfId":198} 

 Player 1 22:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":200} 

 Player 1 22:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":201,"_text":"Wait For Response From Player 2 "},"childOfId":198} 

 Player 1 22:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:56:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:56:28 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:56:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":201} 

 Player 1 22:56:28 $ACTION_MASSAGE_REMOVE:  
{"id":199} 

 Player 1 22:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":202,"_text":"Resolve ActivatePassiveEffect 28 "}} 

 Player 1 22:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 

 Player 1 22:56:28 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:28 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":16,"originStackId":22},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 22:56:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 22:56:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 2 22:56:30 $SET_MONEY:  
{"playerId":2,"numOfCoins":5} 

 Player 2 22:56:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 22:56:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":{"type":2,"number":1}},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":20},"isAfterActivation":true,"index":20} 

 Player 2 22:56:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activated Swallowed Penny Effect"} 

 Player 2 22:56:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 22:56:30 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 22:56:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 

 Player 1 22:56:30 $CLEAR_SE_VIS:  

 Player 1 22:56:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:56:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:56:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:30 $REPLACE_STACK:  
{"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"effectCollectedData":null,"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 22:56:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:56:30 $SHOW_STACK_EFFECT:  
{"effectId":28} 

 Player 2 22:56:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activated Swallowed Penny Effect"} 

 Player 1 22:56:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":28} 

 Player 1 22:56:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":203,"_text":"Remove After Resolve ActivatePassiveEffect 28  "}} 

 Player 1 22:56:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 

 Player 1 22:56:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":204,"_text":"Response Remove After Resolve ActivatePassiveEffect 28"},"childOfId":203} 

 Player 1 22:56:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":205,"_text":"Wait For Response From Player 2 "},"childOfId":203} 

 Player 1 22:56:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:56:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:56:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 

 Player 2 22:56:34 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:56:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:56:34 $ACTION_MASSAGE_REMOVE:  
{"id":205} 

 Player 1 22:56:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":206,"_text":"Wait For Response From Player 1 "},"childOfId":203} 

 Player 1 22:56:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:56:34 $ACTION_MASSAGE_REMOVE:  
{"id":206} 

 Player 1 22:56:34 $ACTION_MASSAGE_REMOVE:  
{"id":204} 

 Player 1 22:56:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":207,"_text":"Resolve PlayerDeath 27 "}} 

 Player 1 22:56:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 

 Player 1 22:56:34 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:34 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}]} 

 Player 2 22:56:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Has Died"} 

 Player 2 22:56:34 $NEXT_STACK_ID:  

 Player 2 22:56:34 $CLEAR_SE_VIS:  

 Player 2 22:56:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Has Died \n6:Player 2 Is About To Pay Death Penalties"} 

 Player 2 22:56:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 2 22:56:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 22:56:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 22:56:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247}} 

 Player 2 22:56:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 

 Player 2 22:56:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 2 22:56:34 $REPLACE_STACK:  
{"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}]} 

 Player 2 22:56:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 2 22:56:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:56:35 $SHOW_STACK_EFFECT:  
{"effectId":29} 

 Player 1 22:56:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 

 Player 1 22:56:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Player 2 Is About To Pay Death Penalties"} 

 Player 2 22:56:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Has Died \n6:Player 2 Is About To Pay Death Penalties"} 

 Player 2 22:56:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 

 Player 2 22:56:37 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}]} 

 Player 1 22:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Player 2 Is About To Pay Death Penalties"} 

 Player 1 22:56:37 $CLEAR_SE_VIS:  

 Player 1 22:56:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 

 Player 1 22:56:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 1 22:56:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 22:56:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 1 22:56:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}]} 

 Player 1 22:56:37 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:56:37 $SHOW_STACK_EFFECT:  
{"effectId":27} 

 Player 2 22:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Has Died \n6:Player 2 Is About To Pay Death Penalties"} 

 Player 1 22:56:40 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":27} 

 Player 1 22:56:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":208,"_text":"Remove After Resolve PlayerDeath 27  "}} 

 Player 1 22:56:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Pay Death Penalties"} 

 Player 1 22:56:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 

 Player 1 22:56:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":209,"_text":"Response Remove After Resolve PlayerDeath 27"},"childOfId":208} 

 Player 1 22:56:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":210,"_text":"Wait For Response From Player 1 "},"childOfId":208} 

 Player 1 22:56:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:56:40 $ACTION_MASSAGE_REMOVE:  
{"id":210} 

 Player 1 22:56:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":211,"_text":"Wait For Response From Player 2 "},"childOfId":208} 

 Player 1 22:56:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:56:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:56:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Player 2 Is About To Pay Death Penalties"} 

 Player 2 22:56:41 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[321,322]} 

 Player 2 22:56:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:56:41 $ACTION_MASSAGE_REMOVE:  
{"id":211} 

 Player 1 22:56:41 $ACTION_MASSAGE_REMOVE:  
{"id":209} 

 Player 1 22:56:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":212,"_text":"Resolve PlayerDeathPenalties 29 "}} 

 Player 1 22:56:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Pay Death Penalties"} 

 Player 1 22:56:41 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 

 Player 1 22:56:41 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}]} 

 Player 2 22:56:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 

 Player 2 22:56:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":213,"_text":"Player 2 pays Penalties"}} 

 Player 2 22:56:41 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 22:56:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 22:59:08 $MATCH: 