"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var ActionComposite_1 = require("./ActionComposite");
var utils_1 = require("../../utils");
var CoreActions_1 = require("./CoreActions");
var factories_1 = require("../factories");
/**
 * component before init action, to run @Component decorator class before init hooks.
 *
 * @export
 * @class ComponentInitAction
 * @extends {ActionComposite}
 */
var ComponentInitAction = /** @class */ (function (_super) {
    tslib_1.__extends(ComponentInitAction, _super);
    function ComponentInitAction() {
        return _super.call(this, CoreActions_1.CoreActions.componentInit) || this;
    }
    ComponentInitAction.prototype.working = function (container, data) {
        if (data.raiseContainer && data.raiseContainer !== container) {
            return;
        }
        if (data.targetType && data.target) {
            if (container.getLifeScope().hasDecorator(data.targetType, factories_1.DecoratorType.Class, function (surm) { return surm.actions.includes(CoreActions_1.CoreActions.componentInit); })) {
                var component = data.target;
                if (utils_1.isFunction(component.onInit)) {
                    container.syncInvoke(data.target || data.targetType, 'onInit', data.target);
                }
            }
        }
    };
    ComponentInitAction.getClassAnnations = function () {
        return { "name": "ComponentInitAction", "params": { "constructor": [], "working": ["container", "data"] } };
    };
    return ComponentInitAction;
}(ActionComposite_1.ActionComposite));
exports.ComponentInitAction = ComponentInitAction;

//# sourceMappingURL=../../sourcemaps/core/actions/ComponentInitAction.js.map
