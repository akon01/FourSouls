import { IContainer, IRecognizer, Express } from '@ts-ioc/core';
import { Joinpoint } from '../joinpoints';
import { IAdvisorChain } from './IAdvisorChain';
/**
 * advisor chain.
 *
 * @export
 * @class AdvisorChain
 * @implements {IAdvisorChain}
 */
export declare class AdvisorChain implements IAdvisorChain {
    protected joinPoint: Joinpoint;
    container: IContainer;
    protected actions: Express<Joinpoint, any>[];
    constructor(joinPoint: Joinpoint);
    /**
     * register next action.
     *
     * @param {Express<Joinpoint, any>} action
     * @memberof AdvisorChain
     */
    next(action: Express<Joinpoint, any>): void;
    /**
     * get recognizer of this advisor.
     *
     * @returns {IRecognizer}
     * @memberof AdvisorChain
     */
    getRecognizer(): IRecognizer;
    /**
     * process the advices.
     *
     * @memberof AdvisorChain
     */
    process(): void;
    static getClassAnnations(): any;
}
