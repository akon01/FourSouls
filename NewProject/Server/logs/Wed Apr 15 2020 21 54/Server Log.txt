Start Log 

 Player 1 21:54:39 $MATCH:  

 Player 1 21:54:39 $START_GAME:  

 Player 2 21:54:39 $MOVE_TO_TABLE:  

 Player 1 21:54:39 $MOVE_TO_TABLE:  

 Player 2 21:54:49 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 21:54:49 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 21:54:49 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":319,"itemCardId":320} 

 Player 1 21:54:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":319,"itemCardId":320} 

 Player 1 21:54:49 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 21:54:49 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":325,"itemCardId":326} 

 Player 2 21:54:49 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[110,42,29,122,43,89,95,108,53,59,67,34,48,74,25,57,137,49,98,64,54,58,24,117,41,78,101,62,47,31,104,68,112,102,8,13,86,129,83,132,133,11,21,111,22,135,85,18,118,30,106,23,61,77,60,5,88,121,14,79,4,81,100,124,97,73,82,37,72,36,136,109,69,55,70,126,130,7,99,45,87,139,76,27,91,123,20,103,40,16,84,107,9,51,71,33,17,52,115,113,93,46,120,131,114,92,15,63,35,96,80,65,66,10,6,28,105,44,32,19,116,94,50,75,26,128,119,134,90,138,38,12,127,125,56,39]} 

 Player 2 21:54:49 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[267,292,277,271,274,269,283,288,299,306,229,254,238,231,248,227,279,223,255,295,275,245,235,272,270,239,300,273,294,265,244,276,240,305,258,307,281,303,262,250,278,256,296,309,286,301,253,230,302,233,247,234,293,228,252,261,297,242,264,289,241,291,260,284,298,257,268,304,251,285,259,266,224,280,237,226,246,310,232,225,287,290,282,243,249,236,308,263]} 

 Player 2 21:54:49 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[219,197,159,176,164,163,152,188,191,214,209,204,193,187,181,203,178,145,205,174,153,173,220,148,192,202,141,195,208,185,162,157,172,217,155,167,154,142,161,183,171,221,156,200,189,212,170,175,169,210,158,196,151,179,199,218,213,149,184,182,206,180,186,211,143,177,216,150,201,207,198,215,144,165,190,168,160,146,166,147,194]} 

 Player 2 21:54:49 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:54:49 $FLIP_CARD:  
{"cardId":194} 

 Player 2 21:54:49 $ADD_STORE_CARD:  
{"cardId":194} 

 Player 2 21:54:49 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:54:49 $FLIP_CARD:  
{"cardId":147} 

 Player 2 21:54:49 $ADD_STORE_CARD:  
{"cardId":147} 

 Player 2 21:54:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:54:49 $FLIP_CARD:  
{"cardId":263} 

 Player 2 21:54:49 $REGISTER_PASSIVE_ITEM:  
{"cardId":263} 

 Player 2 21:54:49 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":263} 

 Player 2 21:54:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":263,"monsterPlaceId":1} 

 Player 2 21:54:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 21:54:49 $FLIP_CARD:  
{"cardId":308} 

 Player 2 21:54:49 $REGISTER_PASSIVE_ITEM:  
{"cardId":308} 

 Player 2 21:54:49 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":308} 

 Player 2 21:54:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":308,"monsterPlaceId":2} 

 Player 2 21:54:49 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 21:54:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 21:54:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:54:49 $MOVE_CARD:  
{"moveIndex":1,"cardId":39,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:54:50 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":39,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:54:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":39} 

 Player 2 21:54:50 $FLIP_CARD:  
{"cardId":39} 

 Player 2 21:54:50 $FLIP_CARD:  
{"cardId":39} 

 Player 2 21:54:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":39} 

 Player 2 21:54:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:54:50 $MOVE_CARD:  
{"moveIndex":2,"cardId":56,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:54:50 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":56,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:54:50 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":56} 

 Player 2 21:54:50 $FLIP_CARD:  
{"cardId":56} 

 Player 2 21:54:50 $FLIP_CARD:  
{"cardId":56} 

 Player 2 21:54:50 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":56} 

 Player 2 21:54:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:54:50 $MOVE_CARD:  
{"moveIndex":3,"cardId":125,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:54:51 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":125,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:54:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":125} 

 Player 2 21:54:51 $FLIP_CARD:  
{"cardId":125} 

 Player 2 21:54:51 $FLIP_CARD:  
{"cardId":125} 

 Player 2 21:54:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":125} 

 Player 2 21:54:51 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 21:54:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 21:54:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:54:51 $MOVE_CARD:  
{"moveIndex":4,"cardId":127,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:54:51 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:54:51 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":127} 

 Player 2 21:54:51 $FLIP_CARD:  
{"cardId":127} 

 Player 2 21:54:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":127} 

 Player 2 21:54:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:54:52 $MOVE_CARD:  
{"moveIndex":5,"cardId":12,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:54:52 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":12,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:54:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":12} 

 Player 2 21:54:52 $FLIP_CARD:  
{"cardId":12} 

 Player 2 21:54:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":12} 

 Player 2 21:54:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:54:52 $MOVE_CARD:  
{"moveIndex":6,"cardId":38,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:54:52 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":38,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:54:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":38} 

 Player 2 21:54:52 $FLIP_CARD:  
{"cardId":38} 

 Player 2 21:54:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":38} 

 Player 2 21:54:53 $GAME_HAS_STARTED:  

 Player 2 21:54:53 $SET_TURN:  
{"playerId":2} 

 Player 2 21:54:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:54:53 $NEXT_STACK_ID:  

 Player 2 21:54:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:54:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 21:54:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 21:54:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 21:54:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:54:53 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 21:54:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:54:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 21:54:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 21:54:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:54:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 21:54:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 21:54:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 21:54:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:54:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 21:54:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:54:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:54:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:54:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:54:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 21:54:56 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 21:54:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 21:54:56 $MOVE_CARD:  
{"moveIndex":7,"cardId":138,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 21:54:56 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":138,"flipIfFlipped":false,"playerId":2} 

 Player 2 21:54:56 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":138} 

 Player 2 21:54:56 $FLIP_CARD:  
{"cardId":138} 

 Player 2 21:54:56 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":138} 

 Player 2 21:54:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 

 Player 2 21:54:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 21:54:56 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 21:54:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:54:56 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 21:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 2 21:54:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 21:54:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 21:54:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:54:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 2 21:54:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 21:54:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 21:54:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:55:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:55:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 

 Player 1 21:55:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:55:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:55:00 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 21:55:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 21:55:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:55:00 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 21:55:00 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 21:55:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 21:55:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:55:00 $CLEAR_SE_VIS:  

 Player 2 21:55:00 $UPDATE_ACTIONS:  

 Player 2 21:55:21 $MOVE_CARD:  
{"moveIndex":8,"cardId":281,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 21:55:22 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":281,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:55:22 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[267,292,277,271,274,269,283,288,299,306,229,254,238,231,248,227,279,223,255,295,275,245,235,272,270,239,300,273,294,265,244,276,240,305,258,307,303,262,250,278,256,296,309,286,301,253,230,302,233,247,234,293,228,252,261,297,242,264,289,241,291,260,284,298,257,268,304,251,285,259,266,224,280,237,226,246,310,232,225,287,290,282,243,249,236]} 

 Player 2 21:55:22 $FLIP_CARD:  
{"cardId":281} 

 Player 2 21:55:22 $REGISTER_PASSIVE_ITEM:  
{"cardId":281} 

 Player 2 21:55:22 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 2 21:55:22 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 2 21:55:31 $NEXT_STACK_ID:  

 Player 2 21:55:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 21:55:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 21:55:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 21:55:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:55:32 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 21:55:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:55:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 21:55:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 21:55:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:55:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 21:55:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 21:55:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 21:55:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:55:35 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 21:55:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 21:55:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:55:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:55:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:55:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:55:35 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 21:55:35 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 21:55:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 21:55:35 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 21:55:35 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 2 21:55:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 

 Player 2 21:55:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 21:55:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 21:55:35 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 21:55:35 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:55:35 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 21:55:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 2 21:55:38 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 21:55:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 21:55:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:55:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":281,"stackEffectType":4}} 

 Player 2 21:55:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 21:55:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 21:55:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:55:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:55:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 declared attack on Isaac!"} 

 Player 1 21:55:38 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:55:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:55:38 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 21:55:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 21:55:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:55:38 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 21:55:38 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 21:55:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 21:55:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:55:38 $CLEAR_SE_VIS:  

 Player 2 21:55:39 $NEXT_STACK_ID:  

 Player 2 21:55:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 21:55:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:55:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:55:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:55:39 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 21:55:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:55:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 21:55:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 21:55:42 $ROLL_DICE:  
{"playerId":2} 

 Player 2 21:55:43 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 21:55:43 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Isaac!<Monster>"} 

 Player 2 21:55:43 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 21:55:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Isaac!<Monster>"} 

 Player 2 21:55:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:55:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:55:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 21:55:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 21:55:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:55:46 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 21:55:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 21:55:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:55:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:55:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 21:55:47 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 21:55:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:55:47 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 21:55:47 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 21:55:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 21:55:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Isaac!<Monster>"} 

 Player 2 21:55:47 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:55:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 21:55:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 3 Against Isaac!<Monster> 3"} 

 Player 2 21:55:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 21:55:47 $NEXT_STACK_ID:  

 Player 2 21:55:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:55:47 $CLEAR_SE_VIS:  

 Player 2 21:55:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 21:55:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:55:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:55:47 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":3,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 21:55:47 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:55:47 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 21:55:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 21:55:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 21:55:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 21:55:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 21:55:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:55:50 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 21:55:50 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:55:50 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 21:55:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 21:55:53 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 21:55:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 21:55:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac!"} 

 Player 2 21:55:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":5,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:55:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 21:55:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 21:55:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:55:53 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 21:55:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 21:55:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:55:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:55:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 21:55:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:55:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:55:53 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 21:55:53 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 21:55:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 21:55:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac!"} 

 Player 2 21:55:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:55:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 

 Player 2 21:55:53 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Samson will deal 1 combat damage to Isaac!"} 

 Player 2 21:55:53 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":6,"damageDealerId":325} 

 Player 2 21:55:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 21:55:53 $NEXT_STACK_ID:  

 Player 2 21:55:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 21:55:53 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 21:55:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 21:55:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:55:54 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 21:55:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac!"} 

 Player 1 21:55:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 21:55:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 21:55:59 $SHOW_DECISION:  
{"startCardId":281,"endCardId":325} 

 Player 2 21:56:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 21:56:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 

 Player 2 21:56:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 21:56:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:56:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:56:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 21:56:02 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:56:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:56:02 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 21:56:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 21:56:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:02 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 21:56:02 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 21:56:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 2 21:56:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 21:56:02 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 21:56:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 21:56:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 21:56:04 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":281} 

 Player 2 21:56:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 21:56:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 21:56:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 

 Player 2 21:56:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:04 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 2 21:56:04 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:56:04 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 21:56:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 2 21:56:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 21:56:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 2 21:56:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 

 Player 2 21:56:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 

 Player 2 21:56:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 21:56:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:07 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 21:56:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 21:56:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:56:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:56:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Activate Isaac! "} 

 Player 1 21:56:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:56:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:56:07 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 21:56:07 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 21:56:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 21:56:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":325},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 

 Player 2 21:56:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 1 combat damage to Isaac! "} 

 Player 2 21:56:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:56:07 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 21:56:08 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:56:08 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 21:56:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac!"} 

 Player 2 21:56:09 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":6,"isTemp":true} 

 Player 2 21:56:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 21:56:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 21:56:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:56:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:56:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 2 21:56:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 21:56:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:56:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:56:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac!"} 

 Player 1 21:56:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:56:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:56:11 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 21:56:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 21:56:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:11 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 21:56:11 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 21:56:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 21:56:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:56:11 $CLEAR_SE_VIS:  

 Player 2 21:56:12 $NEXT_STACK_ID:  

 Player 2 21:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 21:56:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:56:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:56:12 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:56:12 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 21:56:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:56:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 21:56:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 2 21:56:15 $ROLL_DICE:  
{"playerId":2} 

 Player 2 21:56:17 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 21:56:17 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 1 vs Isaac!<Monster>"} 

 Player 2 21:56:17 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 21:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Isaac!<Monster>"} 

 Player 2 21:56:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:56:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 

 Player 2 21:56:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 21:56:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:20 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 21:56:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 21:56:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:56:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 21:56:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319,320]} 

 Player 1 21:56:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:56:20 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 21:56:20 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 21:56:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 

 Player 2 21:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Isaac!<Monster>"} 

 Player 2 21:56:20 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:56:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 2 21:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Rolled 3 Against Isaac!<Monster> 3"} 

 Player 2 21:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Roll Hit"} 

 Player 2 21:56:20 $NEXT_STACK_ID:  

 Player 2 21:56:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:20 $CLEAR_SE_VIS:  

 Player 2 21:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 21:56:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:56:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:56:20 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":6,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}]} 

 Player 2 21:56:20 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:56:20 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 1 21:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 21:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 21:56:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":8,"originStackId":6},"isAfterActivation":true,"index":8} 

 Player 2 21:56:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 Roll Hit"} 

 Player 2 21:56:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:56:23 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 2 21:56:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:56:23 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 21:56:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 2 21:56:26 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 21:56:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 2 21:56:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac!"} 

 Player 2 21:56:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":281}} 

 Player 2 21:56:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 

 Player 2 21:56:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 21:56:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:26 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 21:56:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 21:56:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:56:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:56:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:Player 2 is rolling against Isaac!<Monster>"} 

 Player 1 21:56:26 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:56:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:56:26 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 21:56:26 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 21:56:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 21:56:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac!"} 

 Player 2 21:56:27 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:56:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac! "} 

 Player 2 21:56:27 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Samson will deal 7 combat damage to Isaac!"} 

 Player 2 21:56:27 $MONSTER_GET_DAMAGED:  
{"cardId":281,"hpLeft":0,"damageDealerId":325} 

 Player 2 21:56:27 $NEXT_STACK_ID:  

 Player 2 21:56:27 $CLEAR_SE_VIS:  

 Player 2 21:56:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson"} 

 Player 2 21:56:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:56:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 

 Player 2 21:56:27 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}]} 

 Player 2 21:56:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 

 Player 2 21:56:27 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:56:27 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 1 21:56:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac!"} 

 Player 1 21:56:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson"} 

 Player 2 21:56:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":7},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 21:56:29 $NEXT_STACK_ID:  

 Player 2 21:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson"} 

 Player 2 21:56:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! Effect DealDamage<DealDamage>"} 

 Player 2 21:56:30 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 21:56:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 21:56:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:56:30 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 21:56:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson"} 

 Player 1 21:56:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 

 Player 2 21:56:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Add ActivatePassiveEffect 9 "}} 

 Player 2 21:56:38 $SHOW_DECISION:  
{"startCardId":281,"endCardId":325} 

 Player 2 21:56:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 21:56:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":57} 

 Player 2 21:56:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 21:56:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:41 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 21:56:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 21:56:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:56:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 

 Player 1 21:56:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:56:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:56:42 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 21:56:42 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 21:56:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve ActivatePassiveEffect 9 "}} 

 Player 2 21:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 21:56:42 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 21:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 

 Player 2 21:56:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 21:56:44 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":281} 

 Player 2 21:56:44 $NEXT_STACK_ID:  

 Player 2 21:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! effect DealDamage<DealDamage>"} 

 Player 2 21:56:44 $CLEAR_SE_VIS:  

 Player 2 21:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! effect DealDamage<DealDamage> \n4:Player 2 Is About To Die"} 

 Player 2 21:56:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 

 Player 2 21:56:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 

 Player 2 21:56:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":7},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 

 Player 2 21:56:44 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325},{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":7},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":10,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}]} 

 Player 2 21:56:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 

 Player 2 21:56:44 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:56:44 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 21:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 

 Player 1 21:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac!  \n4:Player 2 Is About To Die"} 

 Player 2 21:56:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 21:56:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":7},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 21:56:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Activated Isaac! Effect \n4:Player 2 Is About To Die"} 

 Player 2 21:56:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:56:47 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 21:56:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac!  \n4:Player 2 Is About To Die"} 

 Player 2 21:56:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 21:56:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 

 Player 2 21:56:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Player 2 Is About To Die"} 

 Player 2 21:56:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":9,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":true,"index":9,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 21:56:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":62} 

 Player 2 21:56:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 21:56:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:50 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 21:56:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 21:56:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:56:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:56:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac!  \n4:Player 2 Is About To Die"} 

 Player 1 21:56:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:56:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:56:50 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 21:56:50 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 21:56:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve PlayerDeath 10 "}} 

 Player 2 21:56:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Player 2 Is About To Die"} 

 Player 2 21:56:50 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 

 Player 2 21:56:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson will deal 7 combat damage to Isaac!  \n2:[object Object] Is Going To Be Killed by Samson \n3:Player 2 Has Died"} 

 Player 2 21:56:50 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":5} 

 Player 2 21:56:50 $CANCEL_ATTACK:  

 Player 2 21:56:50 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 2 21:56:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 21:56:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Fizzle CombatDamage 7"}} 

 Player 2 21:56:50 $FIZZLE_STACK_EFFECT:  
{"entityId":7} 

 Player 2 21:56:50 $NEXT_STACK_ID:  

 Player 2 21:56:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Has Died"} 

 Player 2 21:56:50 $CLEAR_SE_VIS:  

 Player 2 21:56:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:56:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 

 Player 2 21:56:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 

 Player 2 21:56:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 

 Player 2 21:56:51 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325},{"entityId":10,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281},{"entityId":11,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 

 Player 2 21:56:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 

 Player 2 21:56:51 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:56:51 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 21:56:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson is going to hurt Isaac! \n2:[object Object] Is Going To Be Killed by Samson \n3:Activate Isaac! "} 

 Player 1 21:56:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Activate Isaac! "} 

 Player 1 21:56:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:56:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Has Died \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:56:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 

 Player 2 21:56:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:56:53 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 1 21:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:56:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 21:56:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve PlayerDeath 10  "}} 

 Player 2 21:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:56:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":281}} 

 Player 2 21:56:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve PlayerDeath 10"},"childOfId":68} 

 Player 2 21:56:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 2 21:56:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:56:56 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 21:56:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 2 21:56:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:56:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die \n3:Player 2 Is About To Pay Death Penalties"} 

 Player 1 21:56:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:56:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:56:57 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 21:56:57 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 21:56:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve PlayerDeathPenalties 11 "}} 

 Player 2 21:56:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Pay Death Penalties"} 

 Player 2 21:56:57 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 

 Player 2 21:56:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Player 2 pays Penalties"}} 

 Player 2 21:56:57 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 21:56:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 1 21:56:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die"} 

 Player 2 21:57:03 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":12} 

 Player 2 21:57:03 $MOVE_CARD:  
{"moveIndex":9,"cardId":12,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 21:57:03 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":12,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:57:03 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":12} 

 Player 2 21:57:03 $USE_ITEM:  
{"cardId":325} 

 Player 2 21:57:03 $USE_ITEM:  
{"cardId":326} 

 Player 2 21:57:03 $PLAYER_DIED:  
{"playerId":2} 

 Player 2 21:57:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Paid Death Penalties"} 

 Player 2 21:57:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 

 Player 2 21:57:03 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":11} 

 Player 2 21:57:03 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:57:04 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 21:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Die"} 

 Player 2 21:57:06 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 21:57:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Remove After Resolve PlayerDeathPenalties 11  "}} 

 Player 2 21:57:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson"} 

 Player 2 21:57:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 

 Player 2 21:57:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Response Remove After Resolve PlayerDeathPenalties 11"},"childOfId":74} 

 Player 2 21:57:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":74} 

 Player 2 21:57:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:57:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:57:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson \n2:Player 2 Is About To Pay Death Penalties"} 

 Player 1 21:57:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:57:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:57:07 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 21:57:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":74} 

 Player 2 21:57:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:57:07 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 21:57:07 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 21:57:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Resolve MonsterDeath 8 "}} 

 Player 2 21:57:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson"} 

 Player 2 21:57:07 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 

 Player 2 21:57:07 $NEXT_STACK_ID:  

 Player 2 21:57:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:57:07 $CLEAR_SE_VIS:  

 Player 2 21:57:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Samson"} 

 Player 2 21:57:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":325,"monsterCardWithRewardId":281,"playerCardIdToReward":325,"stackEffectType":7}} 

 Player 2 21:57:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 

 Player 2 21:57:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":325,"monsterCardWithRewardId":281,"playerCardIdToReward":325,"stackEffectType":7},{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}]} 

 Player 2 21:57:07 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 21:57:07 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 21:57:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] Is Going To Be Killed by Samson"} 

 Player 2 21:57:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Samson"} 

 Player 2 21:57:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 

 Player 2 21:57:10 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 2 21:57:10 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:57:10 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 21:57:13 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 21:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Remove After Resolve MonsterDeath 8  "}} 

 Player 2 21:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 2 21:57:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"monsterToDieCardId":281,"stackEffectType":5,"killerId":325}} 

 Player 2 21:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Response Remove After Resolve MonsterDeath 8"},"childOfId":79} 

 Player 2 21:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 

 Player 2 21:57:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:57:13 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 21:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 

 Player 2 21:57:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:57:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Samson"} 

 Player 1 21:57:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:57:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:57:13 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 21:57:13 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 21:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Resolve MonsterRewardStackEffect 12 "}} 

 Player 2 21:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 2 21:57:13 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":325,"monsterCardWithRewardId":281,"playerCardIdToReward":325,"stackEffectType":7}} 

 Player 2 21:57:13 $DRAW_CARD:  
{"deckType":5} 

 Player 2 21:57:13 $MOVE_CARD:  
{"moveIndex":10,"cardId":166,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 21:57:14 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":166,"flipIfFlipped":true,"playerId":2} 

 Player 2 21:57:14 $ADD_AN_ITEM:  
{"playerId":2,"cardId":166,"isReward":true} 

 Player 2 21:57:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":166}],"result":true,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 21:57:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":13,"originStackId":12},"isAfterActivation":true,"index":13} 

 Player 2 21:57:14 $LOG_ERROR:  
"error while resolving stack effect 12" 
//////Error From Player 2////
  

 Player 2 21:57:14 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 21:57:14 $SHOW_ANNOUNCEMENT:  
{"text":"error while resolving stack effect 12"} 

 Player 2 21:57:14 $LOG_ERROR:  
{"message":"\"Cannot read property '_playerId' of null\"","stack":"\"TypeError: Cannot read property '_playerId' of null\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:731:92)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at Function.CardManager.moveCardTo (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:693:16)\\n    at Player.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:1313:68)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
//////Error From Player 2////
  

 Player 2 21:57:14 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property '_playerId' of null\""

 + "\"TypeError: Cannot read property '_playerId' of null\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:731:92)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at Function.CardManager.moveCardTo (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:693:16)\
    at Player.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:1313:68)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property '_playerId' of null\""

 + "\"TypeError: Cannot read property '_playerId' of null\
    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:731:92)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at Function.CardManager.moveCardTo (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:693:16)\
    at Player.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:1313:68)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""

////// 

 Player 2 21:57:14 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 2 21:57:14 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 21:57:14 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 21:57:17 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 2 21:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Remove After Resolve MonsterRewardStackEffect 12  "}} 

 Player 2 21:57:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:57:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":325,"monsterCardWithRewardId":281,"playerCardIdToReward":325,"stackEffectType":7}} 

 Player 2 21:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Response Remove After Resolve MonsterRewardStackEffect 12"},"childOfId":84} 

 Player 2 21:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":84} 

 Player 2 21:57:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 21:57:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 21:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 Is Going To Get Isaac!<Monster>'s Reward"} 

 Player 1 21:57:17 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[319]} 

 Player 1 21:57:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 21:57:17 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 21:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":84} 

 Player 2 21:57:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:57:18 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 21:57:18 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 21:57:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Stack Was Emptied "}} 

 Player 2 21:57:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:57:18 $CLEAR_SE_VIS:  

 Player 2 21:57:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 21:57:18 $CLEAR_SE_VIS:  

 Player 2 21:57:18 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 21:57:18 $CLEAR_SE_VIS:  

 Player 2 21:57:18 $END_TURN:  

 Player 2 21:57:18 $SET_TURN:  
{"playerId":1} 

 Player 2 21:57:18 $START_TURN:  
{"playerId":1} 

 Player 2 21:57:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":7},{"type":2,"number":3},{"type":0,"number":325},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":14,"originStackId":7},"isAfterActivation":true,"index":14} 

 Player 2 21:57:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Stack Was Emptied "}} 

 Player 2 21:57:18 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 21:57:18 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 21:57:18 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 21:57:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:57:19 $NEXT_STACK_ID:  

 Player 1 21:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 21:57:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 21:57:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 21:57:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 21:57:19 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 1 21:57:19 $CLEAR_SE_VIS:  

 Player 2 21:57:19 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 21:57:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 21:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 21:57:19 $CLEAR_SE_VIS:  

 Player 1 21:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Add StartTurnLoot 13 "}} 

 Player 1 21:57:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:57:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 21:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Response Adding StartTurnLoot 13"},"childOfId":90} 

 Player 1 21:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":90} 

 Player 1 21:57:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:57:21 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 21:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 2 "},"childOfId":90} 

 Player 1 21:57:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:57:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:57:22 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[166]} 

 Player 2 21:57:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:57:22 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 21:57:22 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 1 21:57:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Resolve StartTurnLoot 13 "}} 

 Player 1 21:57:22 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 21:57:22 $DRAW_CARD:  
{"deckType":1} 

 Player 1 21:57:22 $MOVE_CARD:  
{"moveIndex":11,"cardId":90,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 21:57:22 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":90,"flipIfFlipped":false,"playerId":1} 

 Player 1 21:57:22 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":90} 

 Player 1 21:57:22 $FLIP_CARD:  
{"cardId":90} 

 Player 1 21:57:22 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":90} 

 Player 1 21:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 

 Player 1 21:57:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 21:57:22 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 1 21:57:22 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 21:57:22 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 21:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 1 21:57:25 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 1 21:57:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Remove After Resolve StartTurnLoot 13  "}} 

 Player 1 21:57:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:57:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 1 21:57:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Response Remove After Resolve StartTurnLoot 13"},"childOfId":95} 

 Player 1 21:57:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":95} 

 Player 1 21:57:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 21:57:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 21:57:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 

 Player 2 21:57:25 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[166]} 

 Player 2 21:57:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 21:57:26 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 21:57:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":95} 

 Player 1 21:57:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 21:57:26 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 21:57:26 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 1 21:57:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Stack Was Emptied "}} 

 Player 1 21:57:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 21:57:26 $CLEAR_SE_VIS:  

 Player 2 22:00:35 $MATCH: 