Start Log 

 Player 2 19:33:25 $MATCH:  

 Player 1 19:36:29 $START_GAME:  

 Player 2 19:36:29 $MOVE_TO_TABLE:  

 Player 1 19:36:29 $MOVE_TO_TABLE:  

 Player 1 19:36:33 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 19:36:35 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 19:36:35 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":296,"itemCardId":297} 

 Player 2 19:36:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 19:36:35 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":290,"itemCardId":291} 

 Player 2 19:36:35 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[128,113,8,117,42,61,80,18,136,84,23,27,34,111,17,110,19,94,21,112,104,29,139,49,64,57,77,53,30,38,86,131,127,73,26,62,33,65,74,41,138,142,47,66,132,108,51,107,35,36,98,56,31,129,37,10,89,126,63,134,9,22,92,32,125,79,39,103,14,46,50,44,115,13,91,52,97,99,133,69,105,88,141,40,124,87,25,119,75,78,101,11,85,130,118,48,43,137,121,58,140,59,12,96,81,45,7,109,20,120,123,90,70,24,60,15,122,54,55,116,16,67,76,100,82,114,28,93,102,106,95,68,72,83,135,71]} 

 Player 2 19:36:35 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[264,247,248,263,277,271,244,275,270,231,238,253,260,254,252,268,269,276,255,233,259,273,262,241,267,239,242,280,230,261,249,240,237,278,266,257,246,265,274,236,256,258,234,245,250,272,251,228,243,281,279,235,229,232]} 

 Player 2 19:36:35 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[145,166,163,173,146,208,178,190,188,170,185,194,218,214,207,169,223,154,162,202,167,215,195,157,193,203,204,187,176,158,171,161,168,224,155,182,212,186,172,211,209,174,198,192,177,189,205,156,152,147,183,221,153,184,175,225,149,197,206,191,222,179,217,201,180,150,151,219,148,160,196,210,164,213,199,159,220,216,165,200,181]} 

 Player 2 19:36:35 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:36:35 $FLIP_CARD:  
{"cardId":181} 

 Player 2 19:36:35 $ADD_STORE_CARD:  
{"cardId":181} 

 Player 2 19:36:35 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:36:35 $FLIP_CARD:  
{"cardId":200} 

 Player 2 19:36:35 $ADD_STORE_CARD:  
{"cardId":200} 

 Player 2 19:36:35 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:36:35 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":232} 

 Player 2 19:36:35 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:36:35 $FLIP_CARD:  
{"cardId":229} 

 Player 2 19:36:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 2 19:36:35 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":229} 

 Player 2 19:36:35 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":1} 

 Player 2 19:36:35 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:36:35 $FLIP_CARD:  
{"cardId":235} 

 Player 2 19:36:35 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":235} 

 Player 2 19:36:35 $NEW_MONSTER_ON_PLACE:  
{"cardId":235,"monsterPlaceId":2} 

 Player 2 19:36:35 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 19:36:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 19:36:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:36:35 $MOVE_CARD:  
{"moveIndex":1,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:36:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 19:36:36 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:36:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":71} 

 Player 2 19:36:36 $FLIP_CARD:  
{"cardId":71} 

 Player 2 19:36:36 $FLIP_CARD:  
{"cardId":71} 

 Player 2 19:36:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":71} 

 Player 2 19:36:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:36:36 $MOVE_CARD:  
{"moveIndex":2,"cardId":135,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:36:36 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":135,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:36:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":135} 

 Player 2 19:36:36 $FLIP_CARD:  
{"cardId":135} 

 Player 2 19:36:36 $FLIP_CARD:  
{"cardId":135} 

 Player 2 19:36:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":135} 

 Player 2 19:36:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:36:36 $MOVE_CARD:  
{"moveIndex":3,"cardId":83,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:36:37 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":83,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:36:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":83} 

 Player 2 19:36:37 $FLIP_CARD:  
{"cardId":83} 

 Player 2 19:36:37 $FLIP_CARD:  
{"cardId":83} 

 Player 2 19:36:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":83} 

 Player 2 19:36:37 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 19:36:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 19:36:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:36:37 $MOVE_CARD:  
{"moveIndex":4,"cardId":72,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:36:37 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":72,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:36:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":72} 

 Player 2 19:36:37 $FLIP_CARD:  
{"cardId":72} 

 Player 2 19:36:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":72} 

 Player 2 19:36:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:36:37 $MOVE_CARD:  
{"moveIndex":5,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:36:38 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:36:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":68} 

 Player 2 19:36:38 $FLIP_CARD:  
{"cardId":68} 

 Player 2 19:36:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 19:36:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:36:38 $MOVE_CARD:  
{"moveIndex":6,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:36:38 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":95,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:36:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":95} 

 Player 2 19:36:38 $FLIP_CARD:  
{"cardId":95} 

 Player 2 19:36:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 19:36:38 $GAME_HAS_STARTED:  

 Player 2 19:36:38 $SET_TURN:  
{"playerId":2} 

 Player 2 19:36:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:36:39 $NEXT_STACK_ID:  

 Player 2 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:36:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:36:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 19:36:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:36:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 19:36:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 19:36:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:36:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:36:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 19:36:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:36:39 $MOVE_CARD:  
{"moveIndex":7,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:36:39 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":106,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:36:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":106} 

 Player 2 19:36:39 $FLIP_CARD:  
{"cardId":106} 

 Player 2 19:36:40 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:36:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:36:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:36:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 19:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:36:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:36:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:36:40 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 19:36:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:36:40 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 19:36:40 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 19:36:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 19:36:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:36:40 $UPDATE_ACTIONS:  

 Player 2 19:36:46 $SHOW_DECISION:  
{"startCardId":106,"endCardId":106,"flipEndCard":true} 

 Player 2 19:36:49 $NEXT_STACK_ID:  

 Player 2 19:36:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:36:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 2 19:36:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 19:36:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 2 19:36:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 19:36:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 19:36:49 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 19:36:49 $MOVE_CARD:  
{"moveIndex":8,"cardId":106,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:36:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:36:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:36:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:50 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":106,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:36:50 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":106} 

 Player 2 19:36:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 

 Player 2 19:36:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:36:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 

 Player 2 19:36:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:36:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 19:36:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 19:36:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:36:50 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 19:36:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 19:36:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:36:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:36:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:36:50 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 19:36:51 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 19:36:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 19:36:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 

 Player 2 19:36:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 19:36:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 19:36:53 $CARD_ADD_TRINKET:  
{"cardId":106,"playerId":2,"addMuiliEffect":true} 

 Player 2 19:36:53 $REMOVE_FROM_PILE:  
{"cardId":106} 

 Player 2 19:36:53 $REGISTER_PASSIVE_ITEM:  
{"cardId":106} 

 Player 2 19:36:53 $MOVE_CARD:  
{"moveIndex":9,"cardId":106,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 19:36:53 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":106,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:36:53 $ADD_AN_ITEM:  
{"playerId":2,"cardId":106,"isReward":true} 

 Player 2 19:36:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":106}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball: AddTrinket"} 

 Player 2 19:36:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:36:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:36:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:36:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:36:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 19:36:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 19:36:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:36:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Guppys Hairball "} 

 Player 1 19:36:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:36:54 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 19:36:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 19:36:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:36:54 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 19:36:54 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 19:36:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 19:36:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:02 $SHOW_DECISION:  
{"startCardId":290,"endCardId":235} 

 Player 2 19:37:05 $NEXT_STACK_ID:  

 Player 2 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 2 19:37:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 

 Player 2 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 2 19:37:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 

 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 2 19:37:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 2 19:37:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 

 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 19:37:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 19:37:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 19:37:05 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 19:37:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":235,"particleType":5} 

 Player 2 19:37:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 2 19:37:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 

 Player 2 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 

 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 2 19:37:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":235,"stackEffectType":4}} 

 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 2 19:37:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 19:37:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Clotty"} 

 Player 1 19:37:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:06 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 19:37:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 19:37:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:06 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 19:37:06 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 19:37:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 19:37:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:14 $NEXT_STACK_ID:  

 Player 2 19:37:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 2 19:37:14 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 2 19:37:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 2 19:37:14 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:37:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 2 19:37:15 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 19:37:15 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:16 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 19:37:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 19:37:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:19 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 19:37:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:19 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 19:37:19 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 2 19:37:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 19:37:19 $NEXT_STACK_ID:  

 Player 2 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:19 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}]} 

 Player 2 19:37:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 

 Player 2 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 4 vs Clotty<Monster>"} 

 Player 2 19:37:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 2 19:37:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 2 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 2 19:37:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 

 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 19:37:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:20 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 19:37:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:20 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 19:37:20 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 19:37:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 2 19:37:20 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Isaac will deal 1 combat damage to Clotty"} 

 Player 2 19:37:20 $MONSTER_GET_DAMAGED:  
{"cardId":235,"hpLeft":1,"damageDealerId":290} 

 Player 2 19:37:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":235,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 19:37:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":290},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":5},"isAfterActivation":true,"index":8} 

 Player 2 19:37:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 2 19:37:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 2 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 19:37:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:21 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 19:37:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:21 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 19:37:21 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 19:37:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 19:37:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:23 $NEXT_STACK_ID:  

 Player 2 19:37:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 2 19:37:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 2 19:37:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 2 19:37:24 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:37:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 2 19:37:25 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 19:37:25 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:25 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 19:37:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 

 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 19:37:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:28 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 19:37:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:28 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 19:37:28 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 

 Player 2 19:37:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 2 19:37:28 $NEXT_STACK_ID:  

 Player 2 19:37:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}]} 

 Player 2 19:37:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":9,"originStackId":6},"isAfterActivation":true,"index":9} 

 Player 2 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 rolled 3 vs Clotty<Monster>"} 

 Player 2 19:37:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 2 19:37:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 2 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 2 19:37:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":290,"numberRolled":3,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":235}} 

 Player 2 19:37:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 

 Player 2 19:37:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 19:37:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:29 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 19:37:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 19:37:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:Player 2 is rolling against Clotty<Monster>"} 

 Player 1 19:37:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:29 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 19:37:29 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 19:37:30 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Isaac will deal 1 combat damage to Clotty"} 

 Player 2 19:37:30 $MONSTER_GET_DAMAGED:  
{"cardId":235,"hpLeft":0,"damageDealerId":290} 

 Player 2 19:37:30 $NEXT_STACK_ID:  

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 2 19:37:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}]} 

 Player 2 19:37:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":235,"scopeIsPlayer":false,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 19:37:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":235}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":11,"originStackId":7},"isAfterActivation":true,"index":11} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 2 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:37:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":235,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":57} 

 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 19:37:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:30 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 19:37:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 19:37:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty"} 

 Player 1 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Clotty \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:31 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 19:37:31 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 19:37:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve MonsterDeath 8 "}} 

 Player 2 19:37:31 $DISABLE_PARTICLE_EFFECT:  
{"cardId":235,"particleType":5} 

 Player 2 19:37:31 $CANCEL_ATTACK:  

 Player 2 19:37:31 $NEXT_STACK_ID:  

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:37:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"monsterCardWithRewardId":235,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"monsterCardWithRewardId":235,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":290,"monsterCardWithRewardId":235,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}]} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:37:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 2 19:37:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 

 Player 2 19:37:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve MonsterDeath 8  "}} 

 Player 2 19:37:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 2 19:37:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":290,"monsterToDieCardId":235,"stackEffectType":5,"killerId":290}} 

 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve MonsterDeath 8"},"childOfId":62} 

 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 19:37:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:32 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 19:37:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:37:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:32 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 19:37:32 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve MonsterRewardStackEffect 9 "}} 

 Player 2 19:37:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":235,"scopeIsPlayer":false,"index":12,"originStackId":9},"isAfterActivation":true,"index":12} 

 Player 2 19:37:32 $SET_MONEY:  
{"playerId":2,"numOfCoins":7} 

 Player 2 19:37:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":290,"monsterCardWithRewardId":235,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:37:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Fizzle MonsterRewardStackEffect 9"}} 

 Player 2 19:37:32 $FIZZLE_STACK_EFFECT:  
{"entityId":9} 

 Player 2 19:37:32 $MOVE_CARD:  
{"moveIndex":10,"cardId":235,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Clotty<Monster> reward"} 

 Player 1 19:37:33 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:33 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":235,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:37:33 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":235} 

 Player 2 19:37:33 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":235} 

 Player 2 19:37:33 $NEXT_STACK_ID:  

 Player 2 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 19:37:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 19:37:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 19:37:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Add RefillEmptySlot 10 "}} 

 Player 2 19:37:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 19:37:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 19:37:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Adding RefillEmptySlot 10"},"childOfId":68} 

 Player 2 19:37:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 2 19:37:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:33 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 19:37:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 2 19:37:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 19:37:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 19:37:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve RefillEmptySlot 10 "}} 

 Player 2 19:37:34 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:37:34 $FLIP_CARD:  
{"cardId":279} 

 Player 2 19:37:34 $REGISTER_PASSIVE_ITEM:  
{"cardId":279} 

 Player 2 19:37:34 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":279} 

 Player 2 19:37:34 $NEW_MONSTER_ON_PLACE:  
{"cardId":279,"monsterPlaceId":2} 

 Player 2 19:37:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Remove After Resolve RefillEmptySlot 10  "}} 

 Player 2 19:37:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":290,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Remove After Resolve RefillEmptySlot 10"},"childOfId":73} 

 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 2 19:37:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 19:37:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 19:37:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 19:37:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 19:37:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 2 19:37:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 19:37:34 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 19:37:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Stack Was Emptied "}} 

 Player 2 19:37:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Stack Was Emptied "}} 

 Player 2 19:37:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:39 $SHOW_DECISION:  
{"startCardId":290,"endCardId":290} 

 Player 2 19:37:42 $NEXT_STACK_ID:  

 Player 2 19:37:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:37:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:37:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:37:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:37:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Add ActivateItem 11 "}} 

 Player 1 19:37:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:37:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:37:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:37:46 $SHOW_DECISION:  
{"startCardId":290,"endCardId":72,"flipEndCard":true} 

 Player 2 19:37:49 $USE_ITEM:  
{"cardId":290} 

 Player 2 19:37:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:37:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:37:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Response Adding ActivateItem 11"},"childOfId":79} 

 Player 2 19:37:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 

 Player 2 19:37:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:49 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 19:37:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 

 Player 2 19:37:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:37:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:37:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:49 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 19:37:49 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 19:37:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Resolve ActivateItem 11 "}} 

 Player 2 19:37:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 19:37:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 19:37:51 $NEXT_STACK_ID:  

 Player 2 19:37:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:37:51 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":72} 

 Player 2 19:37:51 $MOVE_CARD:  
{"moveIndex":11,"cardId":72,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:37:52 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":72,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:37:52 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":72} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:37:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:37:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":72,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:37:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:37:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":72,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:37:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:37:52 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":72,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:37:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 

 Player 2 19:37:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:37:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Remove After Resolve ActivateItem 11  "}} 

 Player 2 19:37:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 

 Player 2 19:37:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:37:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Response Remove After Resolve ActivateItem 11"},"childOfId":84} 

 Player 2 19:37:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":84} 

 Player 2 19:37:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:52 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 19:37:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":84} 

 Player 2 19:37:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Isaac"} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Isaac"} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Isaac"} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Isaac"} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Isaac"} 

 Player 1 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12)  \n2:Player 2 activated Isaac"} 

 Player 1 19:37:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:53 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 19:37:53 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 19:37:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Resolve PlayLootCardStackEffect 12 "}} 

 Player 2 19:37:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 

 Player 2 19:37:53 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":72,"particleType":6} 

 Player 2 19:37:55 $DISABLE_PARTICLE_EFFECT:  
{"cardId":72,"particleType":6} 

 Player 2 19:37:55 $SET_MONEY:  
{"playerId":2,"numOfCoins":11} 

 Player 2 19:37:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 2 19:37:55 $REMOVE_FROM_PILE:  
{"cardId":72} 

 Player 2 19:37:55 $MOVE_CARD:  
{"moveIndex":12,"cardId":72,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:37:55 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":72,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:37:56 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":72} 

 Player 2 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12): addMoney"} 

 Player 2 19:37:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Remove After Resolve PlayLootCardStackEffect 12  "}} 

 Player 2 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:37:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":72,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Response Remove After Resolve PlayLootCardStackEffect 12"},"childOfId":89} 

 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":89} 

 Player 2 19:37:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:37:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(12) "} 

 Player 1 19:37:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:37:56 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":89} 

 Player 2 19:37:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:37:56 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 19:37:56 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 19:37:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Stack Was Emptied "}} 

 Player 2 19:37:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:08 $SHOW_DECISION:  
{"startCardId":290,"endCardId":181} 

 Player 2 19:38:11 $NEXT_STACK_ID:  

 Player 2 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 2 19:38:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 2 19:38:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:38:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Add PurchaseItem 13 "}} 

 Player 2 19:38:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 2 19:38:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:38:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Response Adding PurchaseItem 13"},"childOfId":94} 

 Player 2 19:38:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":94} 

 Player 2 19:38:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:38:11 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 19:38:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 1 "},"childOfId":94} 

 Player 2 19:38:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:38:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:38:12 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 19:38:12 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 19:38:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Resolve PurchaseItem 13 "}} 

 Player 2 19:38:12 $SET_MONEY:  
{"playerId":2,"numOfCoins":1} 

 Player 2 19:38:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 2 19:38:12 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":181} 

 Player 2 19:38:12 $NEXT_STACK_ID:  

 Player 2 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 2 19:38:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:12 $REPLACE_STACK:  
{"currentStack":[{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 19:38:12 $REGISTER_PASSIVE_ITEM:  
{"cardId":181} 

 Player 2 19:38:12 $MOVE_CARD:  
{"moveIndex":13,"cardId":181,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:38:12 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":181,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:38:12 $ADD_AN_ITEM:  
{"playerId":2,"cardId":181,"isReward":false} 

 Player 2 19:38:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":181}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 19:38:13 $NEXT_STACK_ID:  

 Player 2 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 

 Player 2 19:38:13 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 

 Player 2 19:38:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Add ActivatePassiveEffect 15 "}} 

 Player 2 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 

 Player 2 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 

 Player 2 19:38:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Response Adding ActivatePassiveEffect 15"},"childOfId":99} 

 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":99} 

 Player 2 19:38:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:38:13 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Wait For Response From Player 1 "},"childOfId":99} 

 Player 2 19:38:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:38:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 1 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 1 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:38:13 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 19:38:13 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 19:38:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Resolve ActivatePassiveEffect 15 "}} 

 Player 2 19:38:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 19:38:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 19:38:15 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":1,"isTemp":false} 

 Player 2 19:38:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":181}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 19:38:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac effect GainStats<GainStats>"} 

 Player 2 19:38:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:38:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:38:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Remove After Resolve ActivatePassiveEffect 15  "}} 

 Player 2 19:38:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 2 19:38:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":15,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Response Remove After Resolve ActivatePassiveEffect 15"},"childOfId":104} 

 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":104} 

 Player 2 19:38:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:38:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot \n3:Activate Ipecac "} 

 Player 1 19:38:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:38:16 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":104} 

 Player 2 19:38:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:38:16 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 19:38:16 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Resolve RefillEmptySlot 14 "}} 

 Player 2 19:38:16 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:38:16 $FLIP_CARD:  
{"cardId":165} 

 Player 2 19:38:16 $ADD_STORE_CARD:  
{"cardId":165} 

 Player 2 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 2 19:38:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Remove After Resolve RefillEmptySlot 14  "}} 

 Player 2 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 2 19:38:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Response Remove After Resolve RefillEmptySlot 14"},"childOfId":109} 

 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":109} 

 Player 2 19:38:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:38:16 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 19:38:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Wait For Response From Player 1 "},"childOfId":109} 

 Player 2 19:38:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:38:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 1 19:38:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10 \n2:Refill Store slot"} 

 Player 1 19:38:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:38:17 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 19:38:17 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Resolve PurchaseItem 13 "}} 

 Player 2 19:38:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:17 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Remove After Resolve PurchaseItem 13  "}} 

 Player 2 19:38:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":290,"itemToPurchaseCardId":181,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Response Remove After Resolve PurchaseItem 13"},"childOfId":114} 

 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Wait For Response From Player 1 "},"childOfId":114} 

 Player 2 19:38:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:38:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:38:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Ipecac for 10"} 

 Player 1 19:38:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:38:17 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 19:38:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Wait For Response From Player 2 "},"childOfId":114} 

 Player 2 19:38:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:38:17 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 19:38:18 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 2 19:38:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Stack Was Emptied "}} 

 Player 2 19:38:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:38:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:19 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 19:38:19 $END_TURN:  

 Player 2 19:38:19 $SET_TURN:  
{"playerId":1} 

 Player 2 19:38:19 $START_TURN:  
{"playerId":1} 

 Player 1 19:38:19 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:38:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:38:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:19 $NEXT_STACK_ID:  

 Player 1 19:38:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:38:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:19 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 19:38:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:38:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:38:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:38:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Add StartTurnLoot 16 "}} 

 Player 1 19:38:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:38:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:38:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Response Adding StartTurnLoot 16"},"childOfId":119} 

 Player 1 19:38:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Wait For Response From Player 1 "},"childOfId":119} 

 Player 1 19:38:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:20 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 1 19:38:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Wait For Response From Player 2 "},"childOfId":119} 

 Player 1 19:38:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:38:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:38:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:38:20 $ACTION_MASSAGE_REMOVE:  
{"id":122} 

 Player 1 19:38:20 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 1 19:38:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Resolve StartTurnLoot 16 "}} 

 Player 1 19:38:20 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:38:20 $MOVE_CARD:  
{"moveIndex":14,"cardId":102,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:38:20 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":102,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:38:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":102} 

 Player 1 19:38:21 $FLIP_CARD:  
{"cardId":102} 

 Player 1 19:38:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":102} 

 Player 1 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:38:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:38:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:38:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Remove After Resolve StartTurnLoot 16  "}} 

 Player 1 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:38:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:38:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Response Remove After Resolve StartTurnLoot 16"},"childOfId":124} 

 Player 1 19:38:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Wait For Response From Player 2 "},"childOfId":124} 

 Player 1 19:38:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:38:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:38:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:38:21 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 1 19:38:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Wait For Response From Player 1 "},"childOfId":124} 

 Player 1 19:38:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:21 $ACTION_MASSAGE_REMOVE:  
{"id":127} 

 Player 1 19:38:21 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 1 19:38:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Stack Was Emptied "}} 

 Player 1 19:38:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:38:45 $SHOW_DECISION:  
{"startCardId":102,"endCardId":102,"flipEndCard":true} 

 Player 1 19:38:48 $NEXT_STACK_ID:  

 Player 1 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 1 19:38:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 1 19:38:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:38:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Add PlayLootCardStackEffect 17 "}} 

 Player 1 19:38:48 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":102} 

 Player 1 19:38:48 $MOVE_CARD:  
{"moveIndex":15,"cardId":102,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:38:48 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":102,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:38:48 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":102} 

 Player 1 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:38:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:38:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"effectToDo":{"effectName":"EhwazEffect","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:38:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Response Adding PlayLootCardStackEffect 17"},"childOfId":129} 

 Player 1 19:38:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Wait For Response From Player 1 "},"childOfId":129} 

 Player 1 19:38:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:49 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 1 19:38:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Wait For Response From Player 2 "},"childOfId":129} 

 Player 1 19:38:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:38:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:38:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:38:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:38:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:38:49 $ACTION_MASSAGE_REMOVE:  
{"id":132} 

 Player 1 19:38:49 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 19:38:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Resolve PlayLootCardStackEffect 17 "}} 

 Player 1 19:38:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:38:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":102,"particleType":6} 

 Player 1 19:38:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":102,"particleType":6} 

 Player 1 19:38:51 $MOVE_CARD:  
{"moveIndex":16,"cardId":229,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:38:51 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":229,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:38:51 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":229} 

 Player 1 19:38:51 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":229} 

 Player 1 19:38:51 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":229} 

 Player 1 19:38:51 $NEXT_STACK_ID:  

 Player 1 19:38:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:38:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot"} 

 Player 1 19:38:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot"} 

 Player 1 19:38:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Add RefillEmptySlot 18 "}} 

 Player 1 19:38:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot"} 

 Player 1 19:38:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Response Adding RefillEmptySlot 18"},"childOfId":134} 

 Player 1 19:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Wait For Response From Player 1 "},"childOfId":134} 

 Player 1 19:38:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:52 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 1 19:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Wait For Response From Player 2 "},"childOfId":134} 

 Player 1 19:38:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:38:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:38:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:38:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:38:52 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 1 19:38:52 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 19:38:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Resolve RefillEmptySlot 18 "}} 

 Player 1 19:38:52 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:38:52 $FLIP_CARD:  
{"cardId":281} 

 Player 1 19:38:52 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 1 19:38:52 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 1 19:38:52 $SHOW_DECISION:  
{"startCardId":296,"endCardId":281} 

 Player 1 19:38:55 $NEXT_STACK_ID:  

 Player 1 19:38:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot"} 

 Player 1 19:38:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:38:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:38:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:38:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:38:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Add ActivateItem 19 "}} 

 Player 1 19:38:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:38:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:38:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Response Adding ActivateItem 19"},"childOfId":139} 

 Player 1 19:38:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Wait For Response From Player 1 "},"childOfId":139} 

 Player 1 19:38:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:55 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 1 19:38:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Wait For Response From Player 2 "},"childOfId":139} 

 Player 1 19:38:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:38:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:38:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:38:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:38:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:38:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:38:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:38:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:38:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:38:56 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 1 19:38:56 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 19:38:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Resolve ActivateItem 19 "}} 

 Player 1 19:38:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 19:38:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 1 19:38:58 $NEW_MONSTER_PLACE:  

 Player 1 19:38:58 $NEXT_STACK_ID:  

 Player 1 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 1 19:38:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 1 19:38:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:38:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Add RefillEmptySlot 20 "}} 

 Player 1 19:38:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 1 19:38:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":20,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:38:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Response Adding RefillEmptySlot 20"},"childOfId":144} 

 Player 1 19:38:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Wait For Response From Player 1 "},"childOfId":144} 

 Player 1 19:38:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:38:58 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 1 19:38:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Wait For Response From Player 2 "},"childOfId":144} 

 Player 1 19:38:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:38:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 2 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 2 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 2 19:38:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 2 19:38:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:38:59 $ACTION_MASSAGE_REMOVE:  
{"id":147} 

 Player 1 19:38:59 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 19:38:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Resolve RefillEmptySlot 20 "}} 

 Player 1 19:38:59 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:38:59 $FLIP_CARD:  
{"cardId":243} 

 Player 1 19:38:59 $REGISTER_PASSIVE_ITEM:  
{"cardId":243} 

 Player 1 19:38:59 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":243} 

 Player 1 19:38:59 $NEW_MONSTER_ON_PLACE:  
{"cardId":243,"monsterPlaceId":3} 

 Player 1 19:38:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:38:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":20,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:38:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Remove After Resolve RefillEmptySlot 20  "}} 

 Player 1 19:38:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:38:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":20,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:38:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Response Remove After Resolve RefillEmptySlot 20"},"childOfId":149} 

 Player 1 19:38:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Wait For Response From Player 2 "},"childOfId":149} 

 Player 1 19:38:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:38:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:38:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 2 19:38:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 2 19:38:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 2 19:38:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder3 slot"} 

 Player 2 19:38:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:38:59 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 1 19:39:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Wait For Response From Player 1 "},"childOfId":149} 

 Player 1 19:39:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:00 $ACTION_MASSAGE_REMOVE:  
{"id":152} 

 Player 1 19:39:00 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 1 19:39:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Resolve ActivateItem 19 "}} 

 Player 1 19:39:00 $MOVE_CARD:  
{"moveIndex":17,"cardId":281,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:39:00 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":281,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:39:00 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":281} 

 Player 1 19:39:00 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":281} 

 Player 1 19:39:00 $NEXT_STACK_ID:  

 Player 1 19:39:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:39:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 1 19:39:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 1 19:39:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Add RefillEmptySlot 21 "}} 

 Player 1 19:39:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 1 19:39:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":21,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Response Adding RefillEmptySlot 21"},"childOfId":154} 

 Player 1 19:39:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Wait For Response From Player 1 "},"childOfId":154} 

 Player 1 19:39:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:00 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 1 19:39:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Wait For Response From Player 2 "},"childOfId":154} 

 Player 1 19:39:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:39:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:39:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:01 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 1 19:39:01 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 1 19:39:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Resolve RefillEmptySlot 21 "}} 

 Player 1 19:39:01 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:39:01 $FLIP_CARD:  
{"cardId":228} 

 Player 1 19:39:01 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":228} 

 Player 1 19:39:01 $NEW_MONSTER_ON_PLACE:  
{"cardId":228,"monsterPlaceId":1} 

 Player 1 19:39:01 $SHOW_DECISION:  
{"startCardId":296,"endCardId":228} 

 Player 1 19:39:04 $NEXT_STACK_ID:  

 Player 1 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 1 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Add ActivateItem 22 "}} 

 Player 1 19:39:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":160,"_text":"Response Adding ActivateItem 22"},"childOfId":159} 

 Player 1 19:39:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":161,"_text":"Wait For Response From Player 1 "},"childOfId":159} 

 Player 1 19:39:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:04 $ACTION_MASSAGE_REMOVE:  
{"id":161} 

 Player 1 19:39:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":162,"_text":"Wait For Response From Player 2 "},"childOfId":159} 

 Player 1 19:39:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:05 $ACTION_MASSAGE_REMOVE:  
{"id":162} 

 Player 1 19:39:05 $ACTION_MASSAGE_REMOVE:  
{"id":160} 

 Player 1 19:39:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":163,"_text":"Resolve ActivateItem 22 "}} 

 Player 1 19:39:05 $NEXT_STACK_ID:  

 Player 1 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:05 $NEXT_STACK_ID:  

 Player 1 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 1 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 1 19:39:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":296,"stackEffectToLock":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 1 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 1 19:39:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":296,"stackEffectToLock":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 19:39:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":164,"_text":"Add RollDiceStackEffect 24 "}} 

 Player 1 19:39:05 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 1 19:39:06 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 19:39:06 $UPDATE_STACK_VIS:  
{"stackId":24,"text":"player 1 rolled 4"} 

 Player 1 19:39:07 $SHOW_DICE_ROLL:  
{"stackId":24} 

 Player 1 19:39:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 rolled 4"} 

 Player 1 19:39:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 rolled 4"} 

 Player 1 19:39:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 rolled 4"} 

 Player 1 19:39:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":296,"stackEffectToLock":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 1 19:39:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":165,"_text":"Response Adding RollDiceStackEffect 24"},"childOfId":164} 

 Player 1 19:39:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":166,"_text":"Wait For Response From Player 1 "},"childOfId":164} 

 Player 1 19:39:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:10 $ACTION_MASSAGE_REMOVE:  
{"id":166} 

 Player 1 19:39:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":167,"_text":"Wait For Response From Player 2 "},"childOfId":164} 

 Player 1 19:39:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:14 $ACTION_MASSAGE_REMOVE:  
{"id":167} 

 Player 1 19:39:14 $ACTION_MASSAGE_REMOVE:  
{"id":165} 

 Player 1 19:39:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":168,"_text":"Resolve RollDiceStackEffect 24 "}} 

 Player 1 19:39:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":24},"isAfterActivation":true,"index":2} 

 Player 1 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 rolled 4"} 

 Player 1 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 rolled 4"} 

 Player 1 19:39:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":24,"creatorCardId":296,"stackEffectToLock":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 1 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":24,"creatorCardId":296,"stackEffectToLock":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 1 19:39:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":169,"_text":"Remove After Resolve RollDiceStackEffect 24  "}} 

 Player 1 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":24,"creatorCardId":296,"stackEffectToLock":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":4,"stackEffectType":11}} 

 Player 1 19:39:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":170,"_text":"Response Remove After Resolve RollDiceStackEffect 24"},"childOfId":169} 

 Player 1 19:39:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":171,"_text":"Wait For Response From Player 2 "},"childOfId":169} 

 Player 1 19:39:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Player 1 roll a dice"} 

 Player 2 19:39:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:15 $ACTION_MASSAGE_REMOVE:  
{"id":171} 

 Player 1 19:39:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":172,"_text":"Wait For Response From Player 1 "},"childOfId":169} 

 Player 1 19:39:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:15 $ACTION_MASSAGE_REMOVE:  
{"id":172} 

 Player 1 19:39:15 $ACTION_MASSAGE_REMOVE:  
{"id":170} 

 Player 1 19:39:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":173,"_text":"Resolve ActivateItem 22 "}} 

 Player 1 19:39:15 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":228,"particleType":6} 

 Player 1 19:39:17 $DISABLE_PARTICLE_EFFECT:  
{"cardId":228,"particleType":6} 

 Player 1 19:39:17 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:39:17 $MOVE_CARD:  
{"moveIndex":18,"cardId":93,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:39:17 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":93,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:39:17 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":93} 

 Player 1 19:39:17 $FLIP_CARD:  
{"cardId":93} 

 Player 1 19:39:17 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":93} 

 Player 1 19:39:17 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:39:17 $MOVE_CARD:  
{"moveIndex":19,"cardId":28,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:39:18 $MOVE_CARD_END:  
{"moveIndex":19,"cardId":28,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:39:18 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":28} 

 Player 1 19:39:18 $FLIP_CARD:  
{"cardId":28} 

 Player 1 19:39:18 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":28} 

 Player 1 19:39:18 $MOVE_CARD:  
{"moveIndex":20,"cardId":228,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:39:18 $MOVE_CARD_END:  
{"moveIndex":20,"cardId":228,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:39:18 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":228} 

 Player 1 19:39:18 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":228} 

 Player 1 19:39:18 $NEXT_STACK_ID:  

 Player 1 19:39:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 1 19:39:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 1 19:39:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":174,"_text":"Add RefillEmptySlot 25 "}} 

 Player 1 19:39:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 1 19:39:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":25,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":175,"_text":"Response Adding RefillEmptySlot 25"},"childOfId":174} 

 Player 1 19:39:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":176,"_text":"Wait For Response From Player 1 "},"childOfId":174} 

 Player 1 19:39:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:19 $ACTION_MASSAGE_REMOVE:  
{"id":176} 

 Player 1 19:39:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":177,"_text":"Wait For Response From Player 2 "},"childOfId":174} 

 Player 1 19:39:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 2 19:39:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 2 19:39:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 2 19:39:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 2 19:39:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:19 $ACTION_MASSAGE_REMOVE:  
{"id":177} 

 Player 1 19:39:19 $ACTION_MASSAGE_REMOVE:  
{"id":175} 

 Player 1 19:39:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":178,"_text":"Resolve RefillEmptySlot 25 "}} 

 Player 1 19:39:19 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:39:19 $FLIP_CARD:  
{"cardId":251} 

 Player 1 19:39:19 $REGISTER_PASSIVE_ITEM:  
{"cardId":251} 

 Player 1 19:39:19 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":251} 

 Player 1 19:39:19 $NEW_MONSTER_ON_PLACE:  
{"cardId":251,"monsterPlaceId":1} 

 Player 1 19:39:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":25,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":179,"_text":"Remove After Resolve RefillEmptySlot 25  "}} 

 Player 1 19:39:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":25,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":180,"_text":"Response Remove After Resolve RefillEmptySlot 25"},"childOfId":179} 

 Player 1 19:39:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":181,"_text":"Wait For Response From Player 2 "},"childOfId":179} 

 Player 1 19:39:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 2 19:39:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 2 19:39:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 2 19:39:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room \n6:Refill holder1 slot"} 

 Player 2 19:39:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:20 $ACTION_MASSAGE_REMOVE:  
{"id":181} 

 Player 1 19:39:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":182,"_text":"Wait For Response From Player 1 "},"childOfId":179} 

 Player 1 19:39:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:20 $ACTION_MASSAGE_REMOVE:  
{"id":182} 

 Player 1 19:39:20 $ACTION_MASSAGE_REMOVE:  
{"id":180} 

 Player 1 19:39:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":183,"_text":"Resolve ActivateItem 22 "}} 

 Player 1 19:39:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 1 19:39:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 1 19:39:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":184,"_text":"Remove After Resolve ActivateItem 22  "}} 

 Player 1 19:39:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 1 19:39:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":22,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":228,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":185,"_text":"Response Remove After Resolve ActivateItem 22"},"childOfId":184} 

 Player 1 19:39:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":186,"_text":"Wait For Response From Player 1 "},"childOfId":184} 

 Player 1 19:39:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:20 $ACTION_MASSAGE_REMOVE:  
{"id":186} 

 Player 1 19:39:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":187,"_text":"Wait For Response From Player 2 "},"childOfId":184} 

 Player 1 19:39:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot \n5:Player 1 activated Angel Room"} 

 Player 2 19:39:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:21 $ACTION_MASSAGE_REMOVE:  
{"id":187} 

 Player 1 19:39:21 $ACTION_MASSAGE_REMOVE:  
{"id":185} 

 Player 1 19:39:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":188,"_text":"Resolve RefillEmptySlot 21 "}} 

 Player 1 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:39:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":21,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":189,"_text":"Remove After Resolve RefillEmptySlot 21  "}} 

 Player 1 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:39:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":21,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":190,"_text":"Response Remove After Resolve RefillEmptySlot 21"},"childOfId":189} 

 Player 1 19:39:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":191,"_text":"Wait For Response From Player 2 "},"childOfId":189} 

 Player 1 19:39:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor! \n4:Refill holder1 slot"} 

 Player 2 19:39:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:22 $ACTION_MASSAGE_REMOVE:  
{"id":191} 

 Player 1 19:39:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":192,"_text":"Wait For Response From Player 1 "},"childOfId":189} 

 Player 1 19:39:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:22 $ACTION_MASSAGE_REMOVE:  
{"id":192} 

 Player 1 19:39:22 $ACTION_MASSAGE_REMOVE:  
{"id":190} 

 Player 1 19:39:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":193,"_text":"Resolve ActivateItem 19 "}} 

 Player 1 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 1 19:39:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot"} 

 Player 1 19:39:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:39:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":194,"_text":"Remove After Resolve ActivateItem 19  "}} 

 Player 1 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder1 slot"} 

 Player 1 19:39:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:39:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":195,"_text":"Response Remove After Resolve ActivateItem 19"},"childOfId":194} 

 Player 1 19:39:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":196,"_text":"Wait For Response From Player 1 "},"childOfId":194} 

 Player 1 19:39:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:22 $ACTION_MASSAGE_REMOVE:  
{"id":196} 

 Player 1 19:39:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":197,"_text":"Wait For Response From Player 2 "},"childOfId":194} 

 Player 1 19:39:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:39:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot \n3:Player 1 activated XL Floor!"} 

 Player 2 19:39:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:23 $ACTION_MASSAGE_REMOVE:  
{"id":197} 

 Player 1 19:39:23 $ACTION_MASSAGE_REMOVE:  
{"id":195} 

 Player 1 19:39:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":198,"_text":"Resolve RefillEmptySlot 18 "}} 

 Player 1 19:39:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":199,"_text":"Remove After Resolve RefillEmptySlot 18  "}} 

 Player 1 19:39:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":18,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 19:39:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":200,"_text":"Response Remove After Resolve RefillEmptySlot 18"},"childOfId":199} 

 Player 1 19:39:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":201,"_text":"Wait For Response From Player 2 "},"childOfId":199} 

 Player 1 19:39:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:39:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:39:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:39:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder1 slot"} 

 Player 2 19:39:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:23 $ACTION_MASSAGE_REMOVE:  
{"id":201} 

 Player 1 19:39:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":202,"_text":"Wait For Response From Player 1 "},"childOfId":199} 

 Player 1 19:39:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:23 $ACTION_MASSAGE_REMOVE:  
{"id":202} 

 Player 1 19:39:23 $ACTION_MASSAGE_REMOVE:  
{"id":200} 

 Player 1 19:39:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":203,"_text":"Resolve PlayLootCardStackEffect 17 "}} 

 Player 1 19:39:23 $MOVE_CARD:  
{"moveIndex":21,"cardId":279,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:39:24 $MOVE_CARD_END:  
{"moveIndex":21,"cardId":279,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:39:24 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":279} 

 Player 1 19:39:24 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":279} 

 Player 1 19:39:24 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":279} 

 Player 1 19:39:24 $NEXT_STACK_ID:  

 Player 1 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder2 slot"} 

 Player 1 19:39:24 $ADD_TO_STACK:  
{"stackEffect":{"entityId":26,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder2 slot"} 

 Player 1 19:39:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 19:39:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":204,"_text":"Add RefillEmptySlot 26 "}} 

 Player 1 19:39:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder2 slot"} 

 Player 1 19:39:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":26,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 19:39:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":205,"_text":"Response Adding RefillEmptySlot 26"},"childOfId":204} 

 Player 1 19:39:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":206,"_text":"Wait For Response From Player 1 "},"childOfId":204} 

 Player 1 19:39:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:24 $ACTION_MASSAGE_REMOVE:  
{"id":206} 

 Player 1 19:39:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":207,"_text":"Wait For Response From Player 2 "},"childOfId":204} 

 Player 1 19:39:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 

 Player 2 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 

 Player 2 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 

 Player 2 19:39:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 

 Player 2 19:39:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:25 $ACTION_MASSAGE_REMOVE:  
{"id":207} 

 Player 1 19:39:25 $ACTION_MASSAGE_REMOVE:  
{"id":205} 

 Player 1 19:39:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":208,"_text":"Resolve RefillEmptySlot 26 "}} 

 Player 1 19:39:25 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:39:25 $FLIP_CARD:  
{"cardId":272} 

 Player 1 19:39:25 $REGISTER_PASSIVE_ITEM:  
{"cardId":272} 

 Player 1 19:39:25 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":272} 

 Player 1 19:39:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":272,"monsterPlaceId":2} 

 Player 1 19:39:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":26,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 19:39:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":209,"_text":"Remove After Resolve RefillEmptySlot 26  "}} 

 Player 1 19:39:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":26,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 19:39:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":210,"_text":"Response Remove After Resolve RefillEmptySlot 26"},"childOfId":209} 

 Player 1 19:39:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":211,"_text":"Wait For Response From Player 2 "},"childOfId":209} 

 Player 1 19:39:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 

 Player 2 19:39:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 

 Player 2 19:39:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 

 Player 2 19:39:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder2 slot"} 

 Player 2 19:39:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:25 $ACTION_MASSAGE_REMOVE:  
{"id":211} 

 Player 1 19:39:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":212,"_text":"Wait For Response From Player 1 "},"childOfId":209} 

 Player 1 19:39:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:25 $ACTION_MASSAGE_REMOVE:  
{"id":212} 

 Player 1 19:39:25 $ACTION_MASSAGE_REMOVE:  
{"id":210} 

 Player 1 19:39:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":213,"_text":"Resolve PlayLootCardStackEffect 17 "}} 

 Player 1 19:39:25 $MOVE_CARD:  
{"moveIndex":22,"cardId":243,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:39:26 $MOVE_CARD_END:  
{"moveIndex":22,"cardId":243,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:39:26 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":243} 

 Player 1 19:39:26 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":243} 

 Player 1 19:39:26 $REMOVE_MONSTER:  
{"holderId":3,"monsterId":243} 

 Player 1 19:39:26 $NEXT_STACK_ID:  

 Player 1 19:39:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot"} 

 Player 1 19:39:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot"} 

 Player 1 19:39:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":214,"_text":"Add RefillEmptySlot 27 "}} 

 Player 1 19:39:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot"} 

 Player 1 19:39:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":27,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":215,"_text":"Response Adding RefillEmptySlot 27"},"childOfId":214} 

 Player 1 19:39:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":216,"_text":"Wait For Response From Player 1 "},"childOfId":214} 

 Player 1 19:39:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:26 $ACTION_MASSAGE_REMOVE:  
{"id":216} 

 Player 1 19:39:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":217,"_text":"Wait For Response From Player 2 "},"childOfId":214} 

 Player 1 19:39:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:27 $ACTION_MASSAGE_REMOVE:  
{"id":217} 

 Player 1 19:39:27 $ACTION_MASSAGE_REMOVE:  
{"id":215} 

 Player 1 19:39:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":218,"_text":"Resolve RefillEmptySlot 27 "}} 

 Player 1 19:39:27 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:39:27 $FLIP_CARD:  
{"cardId":250} 

 Player 1 19:39:27 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":250} 

 Player 1 19:39:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":250,"monsterPlaceId":3} 

 Player 1 19:39:27 $SHOW_DECISION:  
{"startCardId":296,"endCardId":250} 

 Player 1 19:39:30 $NEXT_STACK_ID:  

 Player 1 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot"} 

 Player 1 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":219,"_text":"Add ActivateItem 28 "}} 

 Player 1 19:39:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":220,"_text":"Response Adding ActivateItem 28"},"childOfId":219} 

 Player 1 19:39:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":221,"_text":"Wait For Response From Player 1 "},"childOfId":219} 

 Player 1 19:39:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:30 $ACTION_MASSAGE_REMOVE:  
{"id":221} 

 Player 1 19:39:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":222,"_text":"Wait For Response From Player 2 "},"childOfId":219} 

 Player 1 19:39:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:30 $ACTION_MASSAGE_REMOVE:  
{"id":222} 

 Player 1 19:39:30 $ACTION_MASSAGE_REMOVE:  
{"id":220} 

 Player 1 19:39:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":223,"_text":"Resolve ActivateItem 28 "}} 

 Player 1 19:39:31 $NEXT_STACK_ID:  

 Player 1 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:31 $NEXT_STACK_ID:  

 Player 1 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 1 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 1 19:39:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":30,"creatorCardId":296,"stackEffectToLock":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 1 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 1 19:39:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":30,"creatorCardId":296,"stackEffectToLock":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 19:39:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":224,"_text":"Add RollDiceStackEffect 30 "}} 

 Player 1 19:39:31 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 1 19:39:32 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 19:39:32 $UPDATE_STACK_VIS:  
{"stackId":30,"text":"player 1 rolled 5"} 

 Player 1 19:39:32 $SHOW_DICE_ROLL:  
{"stackId":30} 

 Player 1 19:39:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 rolled 5"} 

 Player 1 19:39:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 rolled 5"} 

 Player 1 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 rolled 5"} 

 Player 1 19:39:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":30,"creatorCardId":296,"stackEffectToLock":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 1 19:39:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":225,"_text":"Response Adding RollDiceStackEffect 30"},"childOfId":224} 

 Player 1 19:39:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":226,"_text":"Wait For Response From Player 1 "},"childOfId":224} 

 Player 1 19:39:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:36 $ACTION_MASSAGE_REMOVE:  
{"id":226} 

 Player 1 19:39:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":227,"_text":"Wait For Response From Player 2 "},"childOfId":224} 

 Player 1 19:39:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:36 $ACTION_MASSAGE_REMOVE:  
{"id":227} 

 Player 1 19:39:36 $ACTION_MASSAGE_REMOVE:  
{"id":225} 

 Player 1 19:39:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":228,"_text":"Resolve RollDiceStackEffect 30 "}} 

 Player 1 19:39:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":3,"originStackId":30},"isAfterActivation":true,"index":3} 

 Player 1 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 rolled 5"} 

 Player 1 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 rolled 5"} 

 Player 1 19:39:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":30,"creatorCardId":296,"stackEffectToLock":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 1 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":30,"creatorCardId":296,"stackEffectToLock":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 1 19:39:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":229,"_text":"Remove After Resolve RollDiceStackEffect 30  "}} 

 Player 1 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":30,"creatorCardId":296,"stackEffectToLock":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 1 19:39:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":230,"_text":"Response Remove After Resolve RollDiceStackEffect 30"},"childOfId":229} 

 Player 1 19:39:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":231,"_text":"Wait For Response From Player 2 "},"childOfId":229} 

 Player 1 19:39:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Player 1 roll a dice"} 

 Player 2 19:39:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:37 $ACTION_MASSAGE_REMOVE:  
{"id":231} 

 Player 1 19:39:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":232,"_text":"Wait For Response From Player 1 "},"childOfId":229} 

 Player 1 19:39:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:37 $ACTION_MASSAGE_REMOVE:  
{"id":232} 

 Player 1 19:39:37 $ACTION_MASSAGE_REMOVE:  
{"id":230} 

 Player 1 19:39:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":233,"_text":"Resolve ActivateItem 28 "}} 

 Player 1 19:39:37 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":250,"particleType":6} 

 Player 1 19:39:39 $DISABLE_PARTICLE_EFFECT:  
{"cardId":250,"particleType":6} 

 Player 1 19:39:39 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:39:39 $MOVE_CARD:  
{"moveIndex":23,"cardId":114,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:39:39 $MOVE_CARD_END:  
{"moveIndex":23,"cardId":114,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:39:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":114} 

 Player 1 19:39:40 $FLIP_CARD:  
{"cardId":114} 

 Player 1 19:39:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":114} 

 Player 1 19:39:40 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:39:40 $MOVE_CARD:  
{"moveIndex":24,"cardId":82,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:39:40 $MOVE_CARD_END:  
{"moveIndex":24,"cardId":82,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:39:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":82} 

 Player 1 19:39:40 $FLIP_CARD:  
{"cardId":82} 

 Player 1 19:39:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":82} 

 Player 1 19:39:40 $MOVE_CARD:  
{"moveIndex":25,"cardId":250,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:39:41 $MOVE_CARD_END:  
{"moveIndex":25,"cardId":250,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:39:41 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":250} 

 Player 1 19:39:41 $REMOVE_MONSTER:  
{"holderId":3,"monsterId":250} 

 Player 1 19:39:41 $NEXT_STACK_ID:  

 Player 1 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 1 19:39:41 $ADD_TO_STACK:  
{"stackEffect":{"entityId":31,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 1 19:39:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":31,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":234,"_text":"Add RefillEmptySlot 31 "}} 

 Player 1 19:39:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 1 19:39:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":31,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":235,"_text":"Response Adding RefillEmptySlot 31"},"childOfId":234} 

 Player 1 19:39:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":236,"_text":"Wait For Response From Player 1 "},"childOfId":234} 

 Player 1 19:39:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:41 $ACTION_MASSAGE_REMOVE:  
{"id":236} 

 Player 1 19:39:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":237,"_text":"Wait For Response From Player 2 "},"childOfId":234} 

 Player 1 19:39:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 2 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 2 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 2 19:39:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 2 19:39:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:42 $ACTION_MASSAGE_REMOVE:  
{"id":237} 

 Player 1 19:39:42 $ACTION_MASSAGE_REMOVE:  
{"id":235} 

 Player 1 19:39:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":238,"_text":"Resolve RefillEmptySlot 31 "}} 

 Player 1 19:39:42 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:39:42 $FLIP_CARD:  
{"cardId":245} 

 Player 1 19:39:42 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":245} 

 Player 1 19:39:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":245,"monsterPlaceId":3} 

 Player 1 19:39:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":31,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":239,"_text":"Remove After Resolve RefillEmptySlot 31  "}} 

 Player 1 19:39:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":31,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":240,"_text":"Response Remove After Resolve RefillEmptySlot 31"},"childOfId":239} 

 Player 1 19:39:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":241,"_text":"Wait For Response From Player 2 "},"childOfId":239} 

 Player 1 19:39:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 2 19:39:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 2 19:39:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 2 19:39:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2) \n4:Refill holder3 slot"} 

 Player 2 19:39:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:42 $ACTION_MASSAGE_REMOVE:  
{"id":241} 

 Player 1 19:39:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":242,"_text":"Wait For Response From Player 1 "},"childOfId":239} 

 Player 1 19:39:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:42 $ACTION_MASSAGE_REMOVE:  
{"id":242} 

 Player 1 19:39:43 $ACTION_MASSAGE_REMOVE:  
{"id":240} 

 Player 1 19:39:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":243,"_text":"Resolve ActivateItem 28 "}} 

 Player 1 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 1 19:39:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot"} 

 Player 1 19:39:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":244,"_text":"Remove After Resolve ActivateItem 28  "}} 

 Player 1 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect \n2:Refill holder3 slot"} 

 Player 1 19:39:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":28,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":250,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:39:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":245,"_text":"Response Remove After Resolve ActivateItem 28"},"childOfId":244} 

 Player 1 19:39:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":246,"_text":"Wait For Response From Player 1 "},"childOfId":244} 

 Player 1 19:39:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:43 $ACTION_MASSAGE_REMOVE:  
{"id":246} 

 Player 1 19:39:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":247,"_text":"Wait For Response From Player 2 "},"childOfId":244} 

 Player 1 19:39:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot \n3:Player 1 activated Gold Chest (2)"} 

 Player 2 19:39:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:43 $ACTION_MASSAGE_REMOVE:  
{"id":247} 

 Player 1 19:39:43 $ACTION_MASSAGE_REMOVE:  
{"id":245} 

 Player 1 19:39:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":248,"_text":"Resolve RefillEmptySlot 27 "}} 

 Player 1 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":27,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":249,"_text":"Remove After Resolve RefillEmptySlot 27  "}} 

 Player 1 19:39:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":27,"creatorCardId":296,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 19:39:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":250,"_text":"Response Remove After Resolve RefillEmptySlot 27"},"childOfId":249} 

 Player 1 19:39:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":251,"_text":"Wait For Response From Player 2 "},"childOfId":249} 

 Player 1 19:39:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz  \n2:Refill holder3 slot"} 

 Player 2 19:39:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:44 $ACTION_MASSAGE_REMOVE:  
{"id":251} 

 Player 1 19:39:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":252,"_text":"Wait For Response From Player 1 "},"childOfId":249} 

 Player 1 19:39:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:44 $ACTION_MASSAGE_REMOVE:  
{"id":252} 

 Player 1 19:39:44 $ACTION_MASSAGE_REMOVE:  
{"id":250} 

 Player 1 19:39:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":253,"_text":"Resolve PlayLootCardStackEffect 17 "}} 

 Player 1 19:39:44 $REMOVE_FROM_PILE:  
{"cardId":102} 

 Player 1 19:39:44 $MOVE_CARD:  
{"moveIndex":26,"cardId":102,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:39:44 $MOVE_CARD_END:  
{"moveIndex":26,"cardId":102,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:39:45 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":102} 

 Player 1 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz: EhwazEffect"} 

 Player 1 19:39:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":17,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:39:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:39:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":254,"_text":"Remove After Resolve PlayLootCardStackEffect 17  "}} 

 Player 1 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:39:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":17,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:39:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":255,"_text":"Response Remove After Resolve PlayLootCardStackEffect 17"},"childOfId":254} 

 Player 1 19:39:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":256,"_text":"Wait For Response From Player 1 "},"childOfId":254} 

 Player 1 19:39:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:39:45 $ACTION_MASSAGE_REMOVE:  
{"id":256} 

 Player 1 19:39:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":257,"_text":"Wait For Response From Player 2 "},"childOfId":254} 

 Player 1 19:39:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:39:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Ehwaz "} 

 Player 2 19:39:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:39:45 $ACTION_MASSAGE_REMOVE:  
{"id":257} 

 Player 1 19:39:45 $ACTION_MASSAGE_REMOVE:  
{"id":255} 

 Player 1 19:39:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":258,"_text":"Stack Was Emptied "}} 

 Player 1 19:39:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:09 $SHOW_DECISION:  
{"startCardId":296,"endCardId":297} 

 Player 1 19:40:12 $NEXT_STACK_ID:  

 Player 1 19:40:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:40:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":32,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:40:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:40:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":32,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:40:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":259,"_text":"Add ActivateItem 32 "}} 

 Player 2 19:40:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:40:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:40:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:40:15 $SHOW_DECISION:  
{"startCardId":297,"endCardId":296} 

 Player 1 19:40:18 $USE_ITEM:  
{"cardId":297} 

 Player 1 19:40:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:40:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":32,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:40:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":260,"_text":"Response Adding ActivateItem 32"},"childOfId":259} 

 Player 1 19:40:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":261,"_text":"Wait For Response From Player 1 "},"childOfId":259} 

 Player 1 19:40:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:18 $ACTION_MASSAGE_REMOVE:  
{"id":261} 

 Player 1 19:40:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":262,"_text":"Wait For Response From Player 2 "},"childOfId":259} 

 Player 1 19:40:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:40:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:40:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:40:18 $ACTION_MASSAGE_REMOVE:  
{"id":262} 

 Player 1 19:40:18 $ACTION_MASSAGE_REMOVE:  
{"id":260} 

 Player 1 19:40:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":263,"_text":"Resolve ActivateItem 32 "}} 

 Player 1 19:40:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 19:40:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 19:40:20 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":true} 

 Player 1 19:40:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:40:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":32,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:40:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":32,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:40:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":264,"_text":"Remove After Resolve ActivateItem 32  "}} 

 Player 1 19:40:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":32,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:40:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":265,"_text":"Response Remove After Resolve ActivateItem 32"},"childOfId":264} 

 Player 1 19:40:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":266,"_text":"Wait For Response From Player 2 "},"childOfId":264} 

 Player 1 19:40:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:40:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:40:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:40:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:40:21 $ACTION_MASSAGE_REMOVE:  
{"id":266} 

 Player 1 19:40:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":267,"_text":"Wait For Response From Player 1 "},"childOfId":264} 

 Player 1 19:40:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:21 $ACTION_MASSAGE_REMOVE:  
{"id":267} 

 Player 1 19:40:21 $ACTION_MASSAGE_REMOVE:  
{"id":265} 

 Player 1 19:40:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":268,"_text":"Stack Was Emptied "}} 

 Player 1 19:40:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:27 $SHOW_DECISION:  
{"startCardId":296,"endCardId":227} 

 Player 1 19:40:30 $NEXT_STACK_ID:  

 Player 1 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:40:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":33,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:40:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":33,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:40:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":269,"_text":"Add DeclareAttack 33 "}} 

 Player 1 19:40:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:40:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":33,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:40:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":270,"_text":"Response Adding DeclareAttack 33"},"childOfId":269} 

 Player 1 19:40:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":271,"_text":"Wait For Response From Player 1 "},"childOfId":269} 

 Player 1 19:40:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:30 $ACTION_MASSAGE_REMOVE:  
{"id":271} 

 Player 1 19:40:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":272,"_text":"Wait For Response From Player 2 "},"childOfId":269} 

 Player 1 19:40:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:40:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:40:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:40:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:40:31 $ACTION_MASSAGE_REMOVE:  
{"id":272} 

 Player 1 19:40:31 $ACTION_MASSAGE_REMOVE:  
{"id":270} 

 Player 1 19:40:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":273,"_text":"Resolve DeclareAttack 33 "}} 

 Player 1 19:40:31 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:40:31 $SHOW_CARD_PREVIEW:  
{"cardToShowId":234,"playerId":1} 

 Player 1 19:40:45 $FLIP_CARD:  
{"cardId":234} 

 Player 1 19:40:45 $REGISTER_PASSIVE_ITEM:  
{"cardId":234} 

 Player 1 19:40:45 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":234} 

 Player 1 19:40:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":234,"monsterPlaceId":3} 

 Player 1 19:40:45 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":234,"particleType":5} 

 Player 1 19:40:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":4,"originStackId":33},"isAfterActivation":true,"index":4} 

 Player 1 19:40:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:40:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":33,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 1 19:40:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":33,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 1 19:40:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":274,"_text":"Remove After Resolve DeclareAttack 33  "}} 

 Player 1 19:40:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":33,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 1 19:40:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":275,"_text":"Response Remove After Resolve DeclareAttack 33"},"childOfId":274} 

 Player 1 19:40:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":276,"_text":"Wait For Response From Player 2 "},"childOfId":274} 

 Player 1 19:40:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:40:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:40:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:40:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:40:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Chub"} 

 Player 2 19:40:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Chub"} 

 Player 2 19:40:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Chub"} 

 Player 2 19:40:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Chub"} 

 Player 2 19:40:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:40:46 $ACTION_MASSAGE_REMOVE:  
{"id":276} 

 Player 1 19:40:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":277,"_text":"Wait For Response From Player 1 "},"childOfId":274} 

 Player 1 19:40:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:46 $ACTION_MASSAGE_REMOVE:  
{"id":277} 

 Player 1 19:40:46 $ACTION_MASSAGE_REMOVE:  
{"id":275} 

 Player 1 19:40:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":278,"_text":"Stack Was Emptied "}} 

 Player 1 19:40:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:53 $NEXT_STACK_ID:  

 Player 1 19:40:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:40:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:40:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":34,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:40:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:40:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":34,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:40:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":279,"_text":"Add AttackRoll 34 "}} 

 Player 1 19:40:53 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:40:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:40:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:40:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:40:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:40:55 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 19:40:55 $UPDATE_STACK_VIS:  
{"stackId":34,"text":"player rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:55 $SHOW_DICE_ROLL:  
{"stackId":34} 

 Player 1 19:40:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":34,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:40:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":280,"_text":"Response Adding AttackRoll 34"},"childOfId":279} 

 Player 1 19:40:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":281,"_text":"Wait For Response From Player 1 "},"childOfId":279} 

 Player 1 19:40:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:58 $ACTION_MASSAGE_REMOVE:  
{"id":281} 

 Player 1 19:40:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":282,"_text":"Wait For Response From Player 2 "},"childOfId":279} 

 Player 1 19:40:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:40:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:40:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:40:59 $ACTION_MASSAGE_REMOVE:  
{"id":282} 

 Player 1 19:40:59 $ACTION_MASSAGE_REMOVE:  
{"id":280} 

 Player 1 19:40:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":283,"_text":"Resolve AttackRoll 34 "}} 

 Player 1 19:40:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":284,"_text":"Added 0 to original roll"}} 

 Player 1 19:40:59 $NEXT_STACK_ID:  

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":35,"creatorCardId":296,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":34,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":35,"creatorCardId":296,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":34,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:59 $REPLACE_STACK:  
{"currentStack":[{"entityId":35,"creatorCardId":296,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":34,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}]} 

 Player 1 19:40:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":5,"originStackId":34},"isAfterActivation":true,"index":5} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 rolled 2 vs Chub<Monster>"} 

 Player 1 19:40:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":34,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 1 19:40:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":34,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:40:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":285,"_text":"Remove After Resolve AttackRoll 34  "}} 

 Player 1 19:40:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 1 19:41:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":34,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:41:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":286,"_text":"Response Remove After Resolve AttackRoll 34"},"childOfId":285} 

 Player 1 19:41:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":287,"_text":"Wait For Response From Player 1 "},"childOfId":285} 

 Player 1 19:41:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:00 $ACTION_MASSAGE_REMOVE:  
{"id":287} 

 Player 1 19:41:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":288,"_text":"Wait For Response From Player 2 "},"childOfId":285} 

 Player 1 19:41:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:41:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:41:00 $ACTION_MASSAGE_REMOVE:  
{"id":288} 

 Player 1 19:41:00 $ACTION_MASSAGE_REMOVE:  
{"id":286} 

 Player 1 19:41:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":289,"_text":"Resolve CombatDamage 35 "}} 

 Player 1 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub 1 combat damage to Samson"} 

 Player 1 19:41:00 $UPDATE_STACK_VIS:  
{"stackId":35,"text":"Chub will deal 1 combat damage to Samson"} 

 Player 1 19:41:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub 1 combat damage to Samson"} 

 Player 1 19:41:00 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":234} 

 Player 1 19:41:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":234}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 19:41:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":234}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":7,"originStackId":35},"isAfterActivation":true,"index":7} 

 Player 1 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub 1 combat damage to Samson"} 

 Player 1 19:41:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":35,"creatorCardId":296,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:41:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":35,"creatorCardId":296,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:41:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":290,"_text":"Remove After Resolve CombatDamage 35  "}} 

 Player 1 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:41:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":35,"creatorCardId":296,"entityToDoDamageCardId":234,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:41:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":291,"_text":"Response Remove After Resolve CombatDamage 35"},"childOfId":290} 

 Player 1 19:41:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":292,"_text":"Wait For Response From Player 2 "},"childOfId":290} 

 Player 1 19:41:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:41:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Chub combat damage to Samson"} 

 Player 2 19:41:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:41:01 $ACTION_MASSAGE_REMOVE:  
{"id":292} 

 Player 1 19:41:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":293,"_text":"Wait For Response From Player 1 "},"childOfId":290} 

 Player 1 19:41:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:01 $ACTION_MASSAGE_REMOVE:  
{"id":293} 

 Player 1 19:41:01 $ACTION_MASSAGE_REMOVE:  
{"id":291} 

 Player 1 19:41:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":294,"_text":"Stack Was Emptied "}} 

 Player 1 19:41:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:41:04 $NEXT_STACK_ID:  

 Player 1 19:41:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:41:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":36,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:41:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":36,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:41:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":295,"_text":"Add AttackRoll 36 "}} 

 Player 1 19:41:04 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:41:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:41:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:41:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:05 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 19:41:05 $UPDATE_STACK_VIS:  
{"stackId":36,"text":"player rolled 5 vs Chub<Monster>"} 

 Player 1 19:41:05 $SHOW_DICE_ROLL:  
{"stackId":36} 

 Player 1 19:41:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster>"} 

 Player 1 19:41:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster>"} 

 Player 1 19:41:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:41:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":296,"_text":"Response Adding AttackRoll 36"},"childOfId":295} 

 Player 1 19:41:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":297,"_text":"Wait For Response From Player 1 "},"childOfId":295} 

 Player 1 19:41:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:08 $ACTION_MASSAGE_REMOVE:  
{"id":297} 

 Player 1 19:41:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":298,"_text":"Wait For Response From Player 2 "},"childOfId":295} 

 Player 1 19:41:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:41:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:41:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":true} 

 Player 2 19:41:13 $SHOW_DECISION:  
{"startCardId":290,"endCardId":291} 

 Player 1 19:41:13 $ACTION_MASSAGE_REMOVE:  
{"id":298} 

 Player 1 19:41:13 $ACTION_MASSAGE_REMOVE:  
{"id":296} 

 Player 2 19:41:16 $NEXT_STACK_ID:  

 Player 2 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:41:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:41:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:41:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":299,"_text":"Add ActivateItem 37 "}} 

 Player 2 19:41:16 $USE_ITEM:  
{"cardId":291} 

 Player 2 19:41:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:41:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:41:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":300,"_text":"Response Adding ActivateItem 37"},"childOfId":299} 

 Player 2 19:41:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":301,"_text":"Wait For Response From Player 1 "},"childOfId":299} 

 Player 2 19:41:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:41:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster>"} 

 Player 1 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster>"} 

 Player 1 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:41:16 $ACTION_MASSAGE_REMOVE:  
{"id":301} 

 Player 2 19:41:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":302,"_text":"Wait For Response From Player 2 "},"childOfId":299} 

 Player 2 19:41:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:41:16 $ACTION_MASSAGE_REMOVE:  
{"id":302} 

 Player 2 19:41:17 $ACTION_MASSAGE_REMOVE:  
{"id":300} 

 Player 2 19:41:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":303,"_text":"Resolve ActivateItem 37 "}} 

 Player 2 19:41:17 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 19:41:18 $DISABLE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 19:41:18 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:41:21 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 2 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:41:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:41:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":304,"_text":"Remove After Resolve ActivateItem 37  "}} 

 Player 2 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":37,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:41:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":305,"_text":"Response Remove After Resolve ActivateItem 37"},"childOfId":304} 

 Player 2 19:41:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":306,"_text":"Wait For Response From Player 2 "},"childOfId":304} 

 Player 2 19:41:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:41:21 $ACTION_MASSAGE_REMOVE:  
{"id":306} 

 Player 2 19:41:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":307,"_text":"Wait For Response From Player 1 "},"childOfId":304} 

 Player 2 19:41:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:41:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:41:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:41:22 $ACTION_MASSAGE_REMOVE:  
{"id":307} 

 Player 2 19:41:22 $ACTION_MASSAGE_REMOVE:  
{"id":305} 

 Player 2 19:41:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":308,"_text":"Resolve AttackRoll 36 "}} 

 Player 2 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:22 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}]} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster>"} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Chub<Monster>"} 

 Player 1 19:41:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":309,"_text":"Added 0 to original roll"}} 

 Player 1 19:41:22 $NEXT_STACK_ID:  

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":38,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":38,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":38,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}]} 

 Player 1 19:41:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":8,"originStackId":36},"isAfterActivation":true,"index":8} 

 Player 1 19:41:22 $NEXT_STACK_ID:  

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 19:41:22 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:41:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 19:41:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:41:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":310,"_text":"Add ActivatePassiveEffect 39 "}} 

 Player 1 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 19:41:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:41:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":311,"_text":"Response Adding ActivatePassiveEffect 39"},"childOfId":310} 

 Player 1 19:41:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":312,"_text":"Wait For Response From Player 1 "},"childOfId":310} 

 Player 1 19:41:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:23 $ACTION_MASSAGE_REMOVE:  
{"id":312} 

 Player 1 19:41:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":313,"_text":"Wait For Response From Player 2 "},"childOfId":310} 

 Player 1 19:41:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:41:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster>"} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 19:41:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 19:41:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:41:23 $ACTION_MASSAGE_REMOVE:  
{"id":313} 

 Player 1 19:41:23 $ACTION_MASSAGE_REMOVE:  
{"id":311} 

 Player 1 19:41:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":314,"_text":"Resolve ActivatePassiveEffect 39 "}} 

 Player 1 19:41:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":272,"particleType":6} 

 Player 1 19:41:25 $DISABLE_PARTICLE_EFFECT:  
{"cardId":272,"particleType":6} 

 Player 1 19:41:25 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":272} 

 Player 1 19:41:25 $NEXT_STACK_ID:  

 Player 1 19:41:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 19:41:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":38,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":8,"originStackId":36},"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":38,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":8,"originStackId":36},"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":38,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234},{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":8,"originStackId":36},"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}]} 

 Player 1 19:41:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 1 19:41:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":8,"originStackId":36},"isAfterActivation":true,"index":8} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 19:41:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 1 19:41:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:41:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":315,"_text":"Remove After Resolve ActivatePassiveEffect 39  "}} 

 Player 1 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 1 19:41:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":39,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:41:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":316,"_text":"Response Remove After Resolve ActivatePassiveEffect 39"},"childOfId":315} 

 Player 1 19:41:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":317,"_text":"Wait For Response From Player 1 "},"childOfId":315} 

 Player 1 19:41:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:26 $ACTION_MASSAGE_REMOVE:  
{"id":317} 

 Player 1 19:41:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":318,"_text":"Wait For Response From Player 2 "},"childOfId":315} 

 Player 1 19:41:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:41:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 19:41:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 19:41:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:41:27 $ACTION_MASSAGE_REMOVE:  
{"id":318} 

 Player 1 19:41:27 $ACTION_MASSAGE_REMOVE:  
{"id":316} 

 Player 1 19:41:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":319,"_text":"Resolve PlayerDeath 40 "}} 

 Player 1 19:41:27 $DISABLE_PARTICLE_EFFECT:  
{"cardId":234,"particleType":5} 

 Player 1 19:41:27 $CANCEL_ATTACK:  

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 1 is about to die"} 

 Player 1 19:41:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":38,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:41:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":320,"_text":"Fizzle CombatDamage 38"}} 

 Player 1 19:41:28 $FIZZLE_STACK_EFFECT:  
{"entityId":38} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:41:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":36,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 1 19:41:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":321,"_text":"Fizzle AttackRoll 36"}} 

 Player 1 19:41:28 $FIZZLE_STACK_EFFECT:  
{"entityId":36} 

 Player 1 19:41:28 $NEXT_STACK_ID:  

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:41:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":41,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":41,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272},{"entityId":41,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}]} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 19:41:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":322,"_text":"Remove After Resolve PlayerDeath 40  "}} 

 Player 1 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:41:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":40,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 19:41:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":323,"_text":"Response Remove After Resolve PlayerDeath 40"},"childOfId":322} 

 Player 1 19:41:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":324,"_text":"Wait For Response From Player 1 "},"childOfId":322} 

 Player 1 19:41:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:41:28 $ACTION_MASSAGE_REMOVE:  
{"id":324} 

 Player 1 19:41:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":325,"_text":"Wait For Response From Player 2 "},"childOfId":322} 

 Player 1 19:41:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:41:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Chub \n2:Player 1 is rolling against Chub<Monster> \n3:Player 1 is about to die"} 

 Player 2 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 1 is about to die"} 

 Player 2 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Chub<Monster> \n2:Player 1 is about to die"} 

 Player 2 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:41:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:41:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:41:29 $ACTION_MASSAGE_REMOVE:  
{"id":325} 

 Player 1 19:41:29 $ACTION_MASSAGE_REMOVE:  
{"id":323} 

 Player 1 19:41:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":326,"_text":"Resolve PlayerDeathPenalties 41 "}} 

 Player 1 19:41:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":327,"_text":"Player 1 pays Penalties"}} 

 Player 1 19:41:29 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 19:41:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 1 19:42:14 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":28} 

 Player 1 19:42:14 $MOVE_CARD:  
{"moveIndex":27,"cardId":28,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:42:15 $MOVE_CARD_END:  
{"moveIndex":27,"cardId":28,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:42:15 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":28} 

 Player 1 19:42:15 $USE_ITEM:  
{"cardId":296} 

 Player 1 19:42:15 $USE_ITEM:  
{"cardId":297} 

 Player 1 19:42:15 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:42:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":41,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:42:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":41,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:42:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":328,"_text":"Remove After Resolve PlayerDeathPenalties 41  "}} 

 Player 1 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:42:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":41,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:42:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":329,"_text":"Response Remove After Resolve PlayerDeathPenalties 41"},"childOfId":328} 

 Player 1 19:42:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":330,"_text":"Wait For Response From Player 2 "},"childOfId":328} 

 Player 1 19:42:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:42:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:42:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:42:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:42:15 $ACTION_MASSAGE_REMOVE:  
{"id":330} 

 Player 1 19:42:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":331,"_text":"Wait For Response From Player 1 "},"childOfId":328} 

 Player 1 19:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:42:16 $ACTION_MASSAGE_REMOVE:  
{"id":331} 

 Player 1 19:42:16 $ACTION_MASSAGE_REMOVE:  
{"id":329} 

 Player 1 19:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":332,"_text":"Stack Was Emptied "}} 

 Player 1 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:42:16 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 19:42:16 $END_TURN:  

 Player 1 19:42:16 $SET_TURN:  
{"playerId":2} 

 Player 1 19:42:16 $START_TURN:  
{"playerId":2} 

 Player 1 19:42:16 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[]} 

 Player 2 19:42:16 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:42:16 $RECHARGE_ITEM:  
{"cardId":290} 

 Player 2 19:42:16 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":290} 

 Player 2 19:42:16 $RECHARGE_ITEM:  
{"cardId":291} 

 Player 2 19:42:16 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":291} 

 Player 2 19:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:42:16 $NEXT_STACK_ID:  

 Player 2 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:42:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":42,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:42:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":42,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":333,"_text":"Add StartTurnLoot 42 "}} 

 Player 2 19:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:42:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":42,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":334,"_text":"Response Adding StartTurnLoot 42"},"childOfId":333} 

 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":335,"_text":"Wait For Response From Player 2 "},"childOfId":333} 

 Player 2 19:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:42:16 $ACTION_MASSAGE_REMOVE:  
{"id":335} 

 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":336,"_text":"Wait For Response From Player 1 "},"childOfId":333} 

 Player 2 19:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:42:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:42:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:42:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":42,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:42:16 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 19:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":337,"_text":"Stack Was Emptied "}} 

 Player 2 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:42:17 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:42:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:42:17 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:42:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:42:17 $ACTION_MASSAGE_REMOVE:  
{"id":336} 

 Player 2 19:42:17 $ACTION_MASSAGE_REMOVE:  
{"id":334} 

 Player 2 19:43:33 $SHOW_DECISION:  
{"startCardId":68,"endCardId":68,"flipEndCard":true} 

 Player 2 19:43:36 $NEXT_STACK_ID:  

 Player 2 19:43:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:43:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 2 19:43:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 19:43:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 2 19:43:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 19:43:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":338,"_text":"Add PlayLootCardStackEffect 43 "}} 

 Player 2 19:43:36 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 19:43:36 $MOVE_CARD:  
{"moveIndex":28,"cardId":68,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:43:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:43:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:43:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:37 $MOVE_CARD_END:  
{"moveIndex":28,"cardId":68,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:43:37 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":68} 

 Player 2 19:43:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 

 Player 2 19:43:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:43:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 

 Player 2 19:43:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:43:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":339,"_text":"Response Adding PlayLootCardStackEffect 43"},"childOfId":338} 

 Player 2 19:43:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":340,"_text":"Wait For Response From Player 2 "},"childOfId":338} 

 Player 2 19:43:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:43:37 $ACTION_MASSAGE_REMOVE:  
{"id":340} 

 Player 2 19:43:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":341,"_text":"Wait For Response From Player 1 "},"childOfId":338} 

 Player 2 19:43:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:43:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:43:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:43:37 $ACTION_MASSAGE_REMOVE:  
{"id":341} 

 Player 2 19:43:37 $ACTION_MASSAGE_REMOVE:  
{"id":339} 

 Player 2 19:43:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":342,"_text":"Resolve PlayLootCardStackEffect 43 "}} 

 Player 2 19:43:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 

 Player 2 19:43:37 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":68,"particleType":6} 

 Player 2 19:43:39 $DISABLE_PARTICLE_EFFECT:  
{"cardId":68,"particleType":6} 

 Player 2 19:43:39 $SET_MONEY:  
{"playerId":2,"numOfCoins":5} 

 Player 2 19:43:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 

 Player 2 19:43:39 $REMOVE_FROM_PILE:  
{"cardId":68} 

 Player 2 19:43:40 $MOVE_CARD:  
{"moveIndex":29,"cardId":68,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:43:40 $MOVE_CARD_END:  
{"moveIndex":29,"cardId":68,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:43:40 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":68} 

 Player 2 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8): addMoney"} 

 Player 2 19:43:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:43:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:43:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":343,"_text":"Remove After Resolve PlayLootCardStackEffect 43  "}} 

 Player 2 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:43:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":43,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:43:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":344,"_text":"Response Remove After Resolve PlayLootCardStackEffect 43"},"childOfId":343} 

 Player 2 19:43:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":345,"_text":"Wait For Response From Player 1 "},"childOfId":343} 

 Player 2 19:43:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:43:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(8) "} 

 Player 1 19:43:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":345} 

 Player 2 19:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":346,"_text":"Wait For Response From Player 2 "},"childOfId":343} 

 Player 2 19:43:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":346} 

 Player 2 19:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":344} 

 Player 2 19:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":347,"_text":"Stack Was Emptied "}} 

 Player 2 19:43:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:43:48 $SHOW_DECISION:  
{"startCardId":290,"endCardId":227} 

 Player 2 19:43:51 $NEXT_STACK_ID:  

 Player 2 19:43:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:43:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 19:43:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 19:43:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 19:43:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 19:43:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":348,"_text":"Add DeclareAttack 44 "}} 

 Player 2 19:43:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:43:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 19:43:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 19:43:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":349,"_text":"Response Adding DeclareAttack 44"},"childOfId":348} 

 Player 2 19:43:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":350,"_text":"Wait For Response From Player 2 "},"childOfId":348} 

 Player 2 19:43:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:43:51 $ACTION_MASSAGE_REMOVE:  
{"id":350} 

 Player 2 19:43:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":351,"_text":"Wait For Response From Player 1 "},"childOfId":348} 

 Player 2 19:43:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:43:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:43:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:43:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:43:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:43:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:43:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:43:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:43:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:43:52 $ACTION_MASSAGE_REMOVE:  
{"id":351} 

 Player 2 19:43:52 $ACTION_MASSAGE_REMOVE:  
{"id":349} 

 Player 2 19:43:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":352,"_text":"Resolve DeclareAttack 44 "}} 

 Player 2 19:43:52 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:43:52 $SHOW_CARD_PREVIEW:  
{"cardToShowId":258,"playerId":2} 

 Player 2 19:43:57 $FLIP_CARD:  
{"cardId":258} 

 Player 2 19:43:57 $REGISTER_PASSIVE_ITEM:  
{"cardId":258} 

 Player 2 19:43:57 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":258} 

 Player 2 19:43:57 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":2} 

 Player 2 19:43:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 2 19:43:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":18,"originStackId":44},"isAfterActivation":true,"index":18} 

 Player 2 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 19:43:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:43:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 19:43:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":353,"_text":"Remove After Resolve DeclareAttack 44  "}} 

 Player 2 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:43:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":44,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 19:43:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":354,"_text":"Response Remove After Resolve DeclareAttack 44"},"childOfId":353} 

 Player 2 19:43:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":355,"_text":"Wait For Response From Player 1 "},"childOfId":353} 

 Player 2 19:43:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:43:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 19:43:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Lust"} 

 Player 1 19:43:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:43:57 $ACTION_MASSAGE_REMOVE:  
{"id":355} 

 Player 2 19:43:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":356,"_text":"Wait For Response From Player 2 "},"childOfId":353} 

 Player 2 19:43:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:43:58 $ACTION_MASSAGE_REMOVE:  
{"id":356} 

 Player 2 19:43:58 $ACTION_MASSAGE_REMOVE:  
{"id":354} 

 Player 2 19:43:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":357,"_text":"Stack Was Emptied "}} 

 Player 2 19:43:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:44:09 $NEXT_STACK_ID:  

 Player 2 19:44:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:44:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 2 19:44:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":45,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 19:44:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 2 19:44:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":45,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 19:44:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":358,"_text":"Add AttackRoll 45 "}} 

 Player 2 19:44:09 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:44:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:44:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:44:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 2 19:44:11 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 19:44:11 $UPDATE_STACK_VIS:  
{"stackId":45,"text":"player rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:11 $SHOW_DICE_ROLL:  
{"stackId":45} 

 Player 2 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":359,"_text":"Response Adding AttackRoll 45"},"childOfId":358} 

 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":360,"_text":"Wait For Response From Player 2 "},"childOfId":358} 

 Player 2 19:44:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:14 $ACTION_MASSAGE_REMOVE:  
{"id":360} 

 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":361,"_text":"Wait For Response From Player 1 "},"childOfId":358} 

 Player 2 19:44:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:14 $ACTION_MASSAGE_REMOVE:  
{"id":361} 

 Player 2 19:44:14 $ACTION_MASSAGE_REMOVE:  
{"id":359} 

 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":362,"_text":"Resolve AttackRoll 45 "}} 

 Player 2 19:44:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":363,"_text":"Added 0 to original roll"}} 

 Player 2 19:44:14 $NEXT_STACK_ID:  

 Player 2 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:44:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:15 $REPLACE_STACK:  
{"currentStack":[{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 2 19:44:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":19,"originStackId":45},"isAfterActivation":true,"index":19} 

 Player 2 19:44:15 $NEXT_STACK_ID:  

 Player 2 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:44:15 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:44:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":364,"_text":"Add ActivatePassiveEffect 47 "}} 

 Player 2 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:44:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:44:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":365,"_text":"Response Adding ActivatePassiveEffect 47"},"childOfId":364} 

 Player 2 19:44:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":366,"_text":"Wait For Response From Player 2 "},"childOfId":364} 

 Player 2 19:44:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:15 $ACTION_MASSAGE_REMOVE:  
{"id":366} 

 Player 2 19:44:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":367,"_text":"Wait For Response From Player 1 "},"childOfId":364} 

 Player 2 19:44:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:15 $ACTION_MASSAGE_REMOVE:  
{"id":367} 

 Player 2 19:44:16 $ACTION_MASSAGE_REMOVE:  
{"id":365} 

 Player 2 19:44:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":368,"_text":"Resolve ActivatePassiveEffect 47 "}} 

 Player 2 19:44:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 19:44:17 $DISABLE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 19:44:18 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":290} 

 Player 2 19:44:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 

 Player 2 19:44:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":19,"originStackId":45},"isAfterActivation":true,"index":19} 

 Player 2 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:44:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":369,"_text":"Remove After Resolve ActivatePassiveEffect 47  "}} 

 Player 2 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":47,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":19,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":370,"_text":"Response Remove After Resolve ActivatePassiveEffect 47"},"childOfId":369} 

 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":371,"_text":"Wait For Response From Player 1 "},"childOfId":369} 

 Player 2 19:44:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster> \n3:Activate Ipecac "} 

 Player 1 19:44:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:18 $ACTION_MASSAGE_REMOVE:  
{"id":371} 

 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":372,"_text":"Wait For Response From Player 2 "},"childOfId":369} 

 Player 2 19:44:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:18 $ACTION_MASSAGE_REMOVE:  
{"id":372} 

 Player 2 19:44:18 $ACTION_MASSAGE_REMOVE:  
{"id":370} 

 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":373,"_text":"Resolve AttackRoll 45 "}} 

 Player 2 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 rolled 6 vs Lust<Monster>"} 

 Player 2 19:44:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:44:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 19:44:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":374,"_text":"Remove After Resolve AttackRoll 45  "}} 

 Player 2 19:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:44:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":45,"creatorCardId":290,"numberRolled":6,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 19:44:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":375,"_text":"Response Remove After Resolve AttackRoll 45"},"childOfId":374} 

 Player 2 19:44:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":376,"_text":"Wait For Response From Player 2 "},"childOfId":374} 

 Player 2 19:44:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":376} 

 Player 2 19:44:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":377,"_text":"Wait For Response From Player 1 "},"childOfId":374} 

 Player 2 19:44:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:Player 2 is rolling against Lust<Monster>"} 

 Player 1 19:44:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":377} 

 Player 2 19:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":375} 

 Player 2 19:44:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":378,"_text":"Resolve CombatDamage 46 "}} 

 Player 2 19:44:19 $UPDATE_STACK_VIS:  
{"stackId":46,"text":"Isaac will deal 2 combat damage to Lust"} 

 Player 2 19:44:19 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":0,"damageDealerId":290} 

 Player 2 19:44:19 $NEXT_STACK_ID:  

 Player 2 19:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 2 19:44:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:20 $REPLACE_STACK:  
{"currentStack":[{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}]} 

 Player 2 19:44:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 

 Player 2 19:44:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":6},{"type":0,"number":290},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":22,"originStackId":46},"isAfterActivation":true,"index":22} 

 Player 2 19:44:20 $NEXT_STACK_ID:  

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 19:44:20 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 19:44:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":379,"_text":"Add ActivatePassiveEffect 49 "}} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 19:44:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":258,"cardId":258,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:44:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":380,"_text":"Response Adding ActivatePassiveEffect 49"},"childOfId":379} 

 Player 2 19:44:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":381,"_text":"Wait For Response From Player 2 "},"childOfId":379} 

 Player 2 19:44:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:20 $ACTION_MASSAGE_REMOVE:  
{"id":381} 

 Player 2 19:44:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":382,"_text":"Wait For Response From Player 1 "},"childOfId":379} 

 Player 2 19:44:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:21 $ACTION_MASSAGE_REMOVE:  
{"id":382} 

 Player 2 19:44:21 $ACTION_MASSAGE_REMOVE:  
{"id":380} 

 Player 2 19:44:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":383,"_text":"Resolve ActivatePassiveEffect 49 "}} 

 Player 2 19:44:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 2 19:44:23 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 2 19:44:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 19:44:23 $NEXT_STACK_ID:  

 Player 2 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:23 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":384,"_text":"Add ActivatePassiveEffect 50 "}} 

 Player 2 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":385,"_text":"Response Adding ActivatePassiveEffect 50"},"childOfId":384} 

 Player 2 19:44:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":386,"_text":"Wait For Response From Player 1 "},"childOfId":384} 

 Player 2 19:44:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:23 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:24 $ACTION_MASSAGE_REMOVE:  
{"id":386} 

 Player 2 19:44:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":387,"_text":"Wait For Response From Player 2 "},"childOfId":384} 

 Player 2 19:44:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:24 $ACTION_MASSAGE_REMOVE:  
{"id":387} 

 Player 2 19:44:24 $ACTION_MASSAGE_REMOVE:  
{"id":385} 

 Player 2 19:44:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":388,"_text":"Resolve ActivatePassiveEffect 50 "}} 

 Player 2 19:44:24 $NEXT_STACK_ID:  

 Player 2 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 roll a dice"} 

 Player 2 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 roll a dice"} 

 Player 2 19:44:24 $ADD_TO_STACK:  
{"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 roll a dice"} 

 Player 2 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 roll a dice"} 

 Player 2 19:44:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 19:44:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":389,"_text":"Add RollDiceStackEffect 51 "}} 

 Player 2 19:44:24 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 2 19:44:25 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 19:44:25 $UPDATE_STACK_VIS:  
{"stackId":51,"text":"player 2 rolled 2"} 

 Player 2 19:44:25 $SHOW_DICE_ROLL:  
{"stackId":51} 

 Player 2 19:44:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 

 Player 2 19:44:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 

 Player 2 19:44:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 

 Player 2 19:44:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 19:44:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":390,"_text":"Response Adding RollDiceStackEffect 51"},"childOfId":389} 

 Player 2 19:44:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":391,"_text":"Wait For Response From Player 2 "},"childOfId":389} 

 Player 2 19:44:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:28 $ACTION_MASSAGE_REMOVE:  
{"id":391} 

 Player 2 19:44:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":392,"_text":"Wait For Response From Player 1 "},"childOfId":389} 

 Player 2 19:44:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:29 $ACTION_MASSAGE_REMOVE:  
{"id":392} 

 Player 2 19:44:29 $ACTION_MASSAGE_REMOVE:  
{"id":390} 

 Player 2 19:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":393,"_text":"Resolve RollDiceStackEffect 51 "}} 

 Player 2 19:44:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":23,"originStackId":51},"isAfterActivation":true,"index":23} 

 Player 2 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 

 Player 2 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n5:Player 2 rolled 2"} 

 Player 2 19:44:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 19:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":394,"_text":"Remove After Resolve RollDiceStackEffect 51  "}} 

 Player 2 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":51,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 

 Player 2 19:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":395,"_text":"Response Remove After Resolve RollDiceStackEffect 51"},"childOfId":394} 

 Player 2 19:44:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":396,"_text":"Wait For Response From Player 1 "},"childOfId":394} 

 Player 2 19:44:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball  \n5:Player 2 roll a dice"} 

 Player 1 19:44:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":396} 

 Player 2 19:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":397,"_text":"Wait For Response From Player 2 "},"childOfId":394} 

 Player 2 19:44:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":397} 

 Player 2 19:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":395} 

 Player 2 19:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":398,"_text":"Resolve ActivatePassiveEffect 50 "}} 

 Player 2 19:44:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 19:44:32 $DISABLE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 19:44:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage> \n4:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:44:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 19:44:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":399,"_text":"Remove After Resolve ActivatePassiveEffect 50  "}} 

 Player 2 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 19:44:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":50,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":400,"_text":"Response Remove After Resolve ActivatePassiveEffect 50"},"childOfId":399} 

 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":401,"_text":"Wait For Response From Player 2 "},"childOfId":399} 

 Player 2 19:44:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:32 $ACTION_MASSAGE_REMOVE:  
{"id":401} 

 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":402,"_text":"Wait For Response From Player 1 "},"childOfId":399} 

 Player 2 19:44:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust  \n4:Activate Guppys Hairball "} 

 Player 1 19:44:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:32 $ACTION_MASSAGE_REMOVE:  
{"id":402} 

 Player 2 19:44:32 $ACTION_MASSAGE_REMOVE:  
{"id":400} 

 Player 2 19:44:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":403,"_text":"Resolve ActivatePassiveEffect 49 "}} 

 Player 2 19:44:32 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":258} 

 Player 2 19:44:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 19:44:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":2},{"type":2,"number":6},{"type":0,"number":290},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":false,"index":22,"originStackId":46},"isAfterActivation":true,"index":22} 

 Player 2 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust effect DealDamage<DealDamage>"} 

 Player 2 19:44:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":404,"_text":"Remove After Resolve ActivatePassiveEffect 49  "}} 

 Player 2 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":49,"creatorCardId":258,"hasLockingStackEffect":false,"cardActivatorId":258,"cardWithEffectId":258,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":405,"_text":"Response Remove After Resolve ActivatePassiveEffect 49"},"childOfId":404} 

 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":406,"_text":"Wait For Response From Player 1 "},"childOfId":404} 

 Player 2 19:44:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac \n3:Activate Lust "} 

 Player 1 19:44:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:33 $ACTION_MASSAGE_REMOVE:  
{"id":406} 

 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":407,"_text":"Wait For Response From Player 2 "},"childOfId":404} 

 Player 2 19:44:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:33 $ACTION_MASSAGE_REMOVE:  
{"id":407} 

 Player 2 19:44:33 $ACTION_MASSAGE_REMOVE:  
{"id":405} 

 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":408,"_text":"Resolve MonsterDeath 48 "}} 

 Player 2 19:44:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 2 19:44:33 $CANCEL_ATTACK:  

 Player 2 19:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:44:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":46,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:44:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":409,"_text":"Fizzle CombatDamage 46"}} 

 Player 2 19:44:33 $FIZZLE_STACK_EFFECT:  
{"entityId":46} 

 Player 2 19:44:33 $NEXT_STACK_ID:  

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:44:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":52,"creatorCardId":290,"monsterCardWithRewardId":258,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":52,"creatorCardId":290,"monsterCardWithRewardId":258,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:34 $REPLACE_STACK:  
{"currentStack":[{"entityId":52,"creatorCardId":290,"monsterCardWithRewardId":258,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}]} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:44:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 2 19:44:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 

 Player 2 19:44:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":410,"_text":"Remove After Resolve MonsterDeath 48  "}} 

 Player 2 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 2 19:44:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":48,"creatorCardId":290,"monsterToDieCardId":258,"stackEffectType":5,"killerId":290}} 

 Player 2 19:44:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":411,"_text":"Response Remove After Resolve MonsterDeath 48"},"childOfId":410} 

 Player 2 19:44:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":412,"_text":"Wait For Response From Player 2 "},"childOfId":410} 

 Player 2 19:44:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:34 $ACTION_MASSAGE_REMOVE:  
{"id":412} 

 Player 2 19:44:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":413,"_text":"Wait For Response From Player 1 "},"childOfId":410} 

 Player 2 19:44:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Lust \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:44:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:35 $ACTION_MASSAGE_REMOVE:  
{"id":413} 

 Player 2 19:44:35 $ACTION_MASSAGE_REMOVE:  
{"id":411} 

 Player 2 19:44:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":414,"_text":"Resolve MonsterRewardStackEffect 52 "}} 

 Player 2 19:44:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:44:35 $MOVE_CARD:  
{"moveIndex":30,"cardId":100,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:44:35 $MOVE_CARD_END:  
{"moveIndex":30,"cardId":100,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:44:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":100} 

 Player 2 19:44:35 $FLIP_CARD:  
{"cardId":100} 

 Player 2 19:44:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":100} 

 Player 2 19:44:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:44:35 $MOVE_CARD:  
{"moveIndex":31,"cardId":76,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:44:36 $MOVE_CARD_END:  
{"moveIndex":31,"cardId":76,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:44:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":76} 

 Player 2 19:44:36 $FLIP_CARD:  
{"cardId":76} 

 Player 2 19:44:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":76} 

 Player 2 19:44:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":24,"originStackId":52},"isAfterActivation":true,"index":24} 

 Player 2 19:44:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:44:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:44:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":52,"creatorCardId":290,"monsterCardWithRewardId":258,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:44:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":415,"_text":"Fizzle MonsterRewardStackEffect 52"}} 

 Player 2 19:44:36 $FIZZLE_STACK_EFFECT:  
{"entityId":52} 

 Player 2 19:44:36 $MOVE_CARD:  
{"moveIndex":32,"cardId":258,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 

 Player 1 19:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Lust<Monster> reward"} 

 Player 1 19:44:36 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:44:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:44:37 $MOVE_CARD_END:  
{"moveIndex":32,"cardId":258,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:44:37 $GET_SOUL:  
{"playerId":2,"cardId":258} 

 Player 2 19:44:37 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":258} 

 Player 2 19:44:37 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":258} 

 Player 2 19:44:37 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 2 19:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":416,"_text":"Stack Was Emptied "}} 

 Player 2 19:44:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":417,"_text":"Stack Was Emptied "}} 

 Player 2 19:44:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:44:46 $SHOW_DECISION:  
{"startCardId":290,"endCardId":290} 

 Player 2 19:44:49 $NEXT_STACK_ID:  

 Player 2 19:44:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:44:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:44:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:44:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:44:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:44:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":418,"_text":"Add ActivateItem 53 "}} 

 Player 1 19:44:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:44:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:44:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:44:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:44:52 $SHOW_DECISION:  
{"startCardId":290,"endCardId":76,"flipEndCard":true} 

 Player 2 19:44:55 $USE_ITEM:  
{"cardId":290} 

 Player 2 19:44:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:44:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:44:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":419,"_text":"Response Adding ActivateItem 53"},"childOfId":418} 

 Player 2 19:44:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":420,"_text":"Wait For Response From Player 2 "},"childOfId":418} 

 Player 2 19:44:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:55 $ACTION_MASSAGE_REMOVE:  
{"id":420} 

 Player 2 19:44:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":421,"_text":"Wait For Response From Player 1 "},"childOfId":418} 

 Player 2 19:44:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:44:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:44:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:55 $ACTION_MASSAGE_REMOVE:  
{"id":421} 

 Player 2 19:44:55 $ACTION_MASSAGE_REMOVE:  
{"id":419} 

 Player 2 19:44:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":422,"_text":"Resolve ActivateItem 53 "}} 

 Player 2 19:44:55 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 19:44:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 19:44:57 $NEXT_STACK_ID:  

 Player 2 19:44:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 19:44:57 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":76} 

 Player 2 19:44:57 $MOVE_CARD:  
{"moveIndex":33,"cardId":76,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:44:57 $MOVE_CARD_END:  
{"moveIndex":33,"cardId":76,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:44:57 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":76} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:44:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:44:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":76,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:44:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:44:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":76,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:44:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:44:58 $REPLACE_STACK:  
{"currentStack":[{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":76,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 19:44:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney"} 

 Player 2 19:44:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:44:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":423,"_text":"Remove After Resolve ActivateItem 53  "}} 

 Player 2 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney"} 

 Player 2 19:44:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":53,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:44:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":424,"_text":"Response Remove After Resolve ActivateItem 53"},"childOfId":423} 

 Player 2 19:44:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":425,"_text":"Wait For Response From Player 2 "},"childOfId":423} 

 Player 2 19:44:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:44:58 $ACTION_MASSAGE_REMOVE:  
{"id":425} 

 Player 2 19:44:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":426,"_text":"Wait For Response From Player 1 "},"childOfId":423} 

 Player 2 19:44:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:44:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2)  \n2:Player 2 activated Isaac"} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2)  \n2:Player 2 activated Isaac"} 

 Player 1 19:44:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2)  \n2:Player 2 activated Isaac"} 

 Player 1 19:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2)  \n2:Player 2 activated Isaac"} 

 Player 1 19:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2)  \n2:Player 2 activated Isaac"} 

 Player 1 19:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2)  \n2:Player 2 activated Isaac"} 

 Player 1 19:44:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:44:59 $ACTION_MASSAGE_REMOVE:  
{"id":426} 

 Player 2 19:44:59 $ACTION_MASSAGE_REMOVE:  
{"id":424} 

 Player 2 19:44:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":427,"_text":"Resolve PlayLootCardStackEffect 54 "}} 

 Player 2 19:44:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney"} 

 Player 2 19:44:59 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":76,"particleType":6} 

 Player 2 19:45:01 $DISABLE_PARTICLE_EFFECT:  
{"cardId":76,"particleType":6} 

 Player 2 19:45:01 $SET_MONEY:  
{"playerId":2,"numOfCoins":15} 

 Player 2 19:45:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":25,"originStackId":-1},"isAfterActivation":true,"index":25} 

 Player 2 19:45:01 $REMOVE_FROM_PILE:  
{"cardId":76} 

 Player 2 19:45:01 $MOVE_CARD:  
{"moveIndex":34,"cardId":76,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:45:01 $MOVE_CARD_END:  
{"moveIndex":34,"cardId":76,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:45:01 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":76} 

 Player 2 19:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2): addMoney"} 

 Player 2 19:45:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:45:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":428,"_text":"Remove After Resolve PlayLootCardStackEffect 54  "}} 

 Player 2 19:45:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":54,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":76,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":429,"_text":"Response Remove After Resolve PlayLootCardStackEffect 54"},"childOfId":428} 

 Player 2 19:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":430,"_text":"Wait For Response From Player 1 "},"childOfId":428} 

 Player 2 19:45:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:45:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play A Dime(2) "} 

 Player 1 19:45:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":430} 

 Player 2 19:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":431,"_text":"Wait For Response From Player 2 "},"childOfId":428} 

 Player 2 19:45:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":431} 

 Player 2 19:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":429} 

 Player 2 19:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":432,"_text":"Stack Was Emptied "}} 

 Player 2 19:45:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:04 $SHOW_DECISION:  
{"startCardId":290,"endCardId":200} 

 Player 2 19:45:07 $NEXT_STACK_ID:  

 Player 2 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 2 19:45:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 2 19:45:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":433,"_text":"Add PurchaseItem 55 "}} 

 Player 2 19:45:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 2 19:45:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":434,"_text":"Response Adding PurchaseItem 55"},"childOfId":433} 

 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":435,"_text":"Wait For Response From Player 2 "},"childOfId":433} 

 Player 2 19:45:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:07 $ACTION_MASSAGE_REMOVE:  
{"id":435} 

 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":436,"_text":"Wait For Response From Player 1 "},"childOfId":433} 

 Player 2 19:45:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:45:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:45:07 $ACTION_MASSAGE_REMOVE:  
{"id":436} 

 Player 2 19:45:07 $ACTION_MASSAGE_REMOVE:  
{"id":434} 

 Player 2 19:45:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":437,"_text":"Resolve PurchaseItem 55 "}} 

 Player 2 19:45:07 $SET_MONEY:  
{"playerId":2,"numOfCoins":5} 

 Player 2 19:45:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":26,"originStackId":-1},"isAfterActivation":true,"index":26} 

 Player 2 19:45:07 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":200} 

 Player 2 19:45:07 $NEXT_STACK_ID:  

 Player 2 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 2 19:45:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 19:45:08 $REGISTER_PASSIVE_ITEM:  
{"cardId":200} 

 Player 2 19:45:08 $MOVE_CARD:  
{"moveIndex":35,"cardId":200,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:45:08 $MOVE_CARD_END:  
{"moveIndex":35,"cardId":200,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:45:08 $ADD_AN_ITEM:  
{"playerId":2,"cardId":200,"isReward":false} 

 Player 2 19:45:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":200}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 

 Player 2 19:45:09 $NEXT_STACK_ID:  

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $REPLACE_STACK:  
{"currentStack":[{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10},{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 19:45:09 $NEXT_STACK_ID:  

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:45:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":438,"_text":"Add ActivatePassiveEffect 58 "}} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"GainStats","cardEffectNum":1,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":439,"_text":"Response Adding ActivatePassiveEffect 58"},"childOfId":438} 

 Player 2 19:45:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":440,"_text":"Wait For Response From Player 2 "},"childOfId":438} 

 Player 2 19:45:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:09 $ACTION_MASSAGE_REMOVE:  
{"id":440} 

 Player 2 19:45:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":441,"_text":"Wait For Response From Player 1 "},"childOfId":438} 

 Player 2 19:45:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:45:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:45:10 $ACTION_MASSAGE_REMOVE:  
{"id":441} 

 Player 2 19:45:10 $ACTION_MASSAGE_REMOVE:  
{"id":439} 

 Player 2 19:45:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":442,"_text":"Resolve ActivatePassiveEffect 58 "}} 

 Player 2 19:45:10 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":200,"particleType":6} 

 Player 2 19:45:12 $DISABLE_PARTICLE_EFFECT:  
{"cardId":200,"particleType":6} 

 Player 2 19:45:12 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  
{"playerId":2,"bonusToGain":-1,"isTemp":false} 

 Player 2 19:45:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":200}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 

 Player 2 19:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats> \n4:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":443,"_text":"Remove After Resolve ActivatePassiveEffect 58  "}} 

 Player 2 19:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":58,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":444,"_text":"Response Remove After Resolve ActivatePassiveEffect 58"},"childOfId":443} 

 Player 2 19:45:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":445,"_text":"Wait For Response From Player 1 "},"childOfId":443} 

 Player 2 19:45:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:45:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus  \n4:Activate Polyphemus "} 

 Player 1 19:45:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:45:13 $ACTION_MASSAGE_REMOVE:  
{"id":445} 

 Player 2 19:45:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":446,"_text":"Wait For Response From Player 2 "},"childOfId":443} 

 Player 2 19:45:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:13 $ACTION_MASSAGE_REMOVE:  
{"id":446} 

 Player 2 19:45:13 $ACTION_MASSAGE_REMOVE:  
{"id":444} 

 Player 2 19:45:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":447,"_text":"Resolve ActivatePassiveEffect 57 "}} 

 Player 2 19:45:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":200,"particleType":6} 

 Player 2 19:45:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":200,"particleType":6} 

 Player 2 19:45:15 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":2,"isTemp":false} 

 Player 2 19:45:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":200}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 

 Player 2 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 19:45:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":448,"_text":"Remove After Resolve ActivatePassiveEffect 57  "}} 

 Player 2 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 2 19:45:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":57,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":27,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:45:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":449,"_text":"Response Remove After Resolve ActivatePassiveEffect 57"},"childOfId":448} 

 Player 2 19:45:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":450,"_text":"Wait For Response From Player 2 "},"childOfId":448} 

 Player 2 19:45:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:15 $ACTION_MASSAGE_REMOVE:  
{"id":450} 

 Player 2 19:45:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":451,"_text":"Wait For Response From Player 1 "},"childOfId":448} 

 Player 2 19:45:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:45:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 19:45:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot \n3:Activate Polyphemus "} 

 Player 1 19:45:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  
{"id":451} 

 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  
{"id":449} 

 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":452,"_text":"Resolve RefillEmptySlot 56 "}} 

 Player 2 19:45:16 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:45:16 $FLIP_CARD:  
{"cardId":216} 

 Player 2 19:45:16 $ADD_STORE_CARD:  
{"cardId":216} 

 Player 2 19:45:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 2 19:45:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":453,"_text":"Remove After Resolve RefillEmptySlot 56  "}} 

 Player 2 19:45:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 2 19:45:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":56,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":454,"_text":"Response Remove After Resolve RefillEmptySlot 56"},"childOfId":453} 

 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":455,"_text":"Wait For Response From Player 1 "},"childOfId":453} 

 Player 2 19:45:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:45:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:45:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 19:45:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 19:45:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 19:45:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10 \n2:Refill Store slot"} 

 Player 1 19:45:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  
{"id":455} 

 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":456,"_text":"Wait For Response From Player 2 "},"childOfId":453} 

 Player 2 19:45:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  
{"id":456} 

 Player 2 19:45:16 $ACTION_MASSAGE_REMOVE:  
{"id":454} 

 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":457,"_text":"Resolve PurchaseItem 55 "}} 

 Player 2 19:45:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":458,"_text":"Remove After Resolve PurchaseItem 55  "}} 

 Player 2 19:45:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":55,"creatorCardId":290,"itemToPurchaseCardId":200,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":459,"_text":"Response Remove After Resolve PurchaseItem 55"},"childOfId":458} 

 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":460,"_text":"Wait For Response From Player 2 "},"childOfId":458} 

 Player 2 19:45:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:17 $ACTION_MASSAGE_REMOVE:  
{"id":460} 

 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":461,"_text":"Wait For Response From Player 1 "},"childOfId":458} 

 Player 2 19:45:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:45:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:45:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Polyphemus for 10"} 

 Player 1 19:45:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:45:17 $ACTION_MASSAGE_REMOVE:  
{"id":461} 

 Player 2 19:45:17 $ACTION_MASSAGE_REMOVE:  
{"id":459} 

 Player 2 19:45:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":462,"_text":"Stack Was Emptied "}} 

 Player 2 19:45:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:45:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:21 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 19:45:21 $END_TURN:  

 Player 2 19:45:21 $SET_TURN:  
{"playerId":1} 

 Player 2 19:45:21 $START_TURN:  
{"playerId":1} 

 Player 1 19:45:21 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:45:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:45:21 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 19:45:21 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":296} 

 Player 2 19:45:21 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 19:45:21 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 1 19:45:21 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":297} 

 Player 1 19:45:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:21 $NEXT_STACK_ID:  

 Player 1 19:45:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:45:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:45:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":59,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:45:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:45:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":59,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:45:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":463,"_text":"Add StartTurnLoot 59 "}} 

 Player 1 19:45:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:45:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":59,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:45:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":464,"_text":"Response Adding StartTurnLoot 59"},"childOfId":463} 

 Player 1 19:45:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":465,"_text":"Wait For Response From Player 1 "},"childOfId":463} 

 Player 1 19:45:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:22 $ACTION_MASSAGE_REMOVE:  
{"id":465} 

 Player 1 19:45:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":466,"_text":"Wait For Response From Player 2 "},"childOfId":463} 

 Player 1 19:45:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:45:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:45:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:45:22 $ACTION_MASSAGE_REMOVE:  
{"id":466} 

 Player 1 19:45:22 $ACTION_MASSAGE_REMOVE:  
{"id":464} 

 Player 1 19:45:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":467,"_text":"Resolve StartTurnLoot 59 "}} 

 Player 1 19:45:22 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:45:22 $MOVE_CARD:  
{"moveIndex":36,"cardId":67,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:45:22 $MOVE_CARD_END:  
{"moveIndex":36,"cardId":67,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:45:23 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":67} 

 Player 1 19:45:23 $FLIP_CARD:  
{"cardId":67} 

 Player 1 19:45:23 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":67} 

 Player 1 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:45:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":59,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:45:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":59,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:45:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":468,"_text":"Remove After Resolve StartTurnLoot 59  "}} 

 Player 1 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:45:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":59,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:45:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":469,"_text":"Response Remove After Resolve StartTurnLoot 59"},"childOfId":468} 

 Player 1 19:45:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":470,"_text":"Wait For Response From Player 2 "},"childOfId":468} 

 Player 1 19:45:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:45:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:45:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:45:23 $ACTION_MASSAGE_REMOVE:  
{"id":470} 

 Player 1 19:45:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":471,"_text":"Wait For Response From Player 1 "},"childOfId":468} 

 Player 1 19:45:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:23 $ACTION_MASSAGE_REMOVE:  
{"id":471} 

 Player 1 19:45:23 $ACTION_MASSAGE_REMOVE:  
{"id":469} 

 Player 1 19:45:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":472,"_text":"Stack Was Emptied "}} 

 Player 1 19:45:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:45:45 $SHOW_DECISION:  
{"startCardId":83,"endCardId":83,"flipEndCard":true} 

 Player 1 19:45:48 $NEXT_STACK_ID:  

 Player 1 19:45:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:45:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:45:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:45:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":473,"_text":"Add PlayLootCardStackEffect 60 "}} 

 Player 1 19:45:48 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":83} 

 Player 1 19:45:48 $MOVE_CARD:  
{"moveIndex":37,"cardId":83,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:45:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:45:49 $MOVE_CARD_END:  
{"moveIndex":37,"cardId":83,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:45:49 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":83} 

 Player 1 19:45:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:45:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":474,"_text":"Response Adding PlayLootCardStackEffect 60"},"childOfId":473} 

 Player 1 19:45:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":475,"_text":"Wait For Response From Player 1 "},"childOfId":473} 

 Player 1 19:45:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":475} 

 Player 1 19:45:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":476,"_text":"Wait For Response From Player 2 "},"childOfId":473} 

 Player 1 19:45:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:45:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:45:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":476} 

 Player 1 19:45:49 $ACTION_MASSAGE_REMOVE:  
{"id":474} 

 Player 1 19:45:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":477,"_text":"Resolve PlayLootCardStackEffect 60 "}} 

 Player 1 19:45:49 $NEXT_STACK_ID:  

 Player 1 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:49 $NEXT_STACK_ID:  

 Player 1 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 1 19:45:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 1 19:45:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":62,"creatorCardId":296,"stackEffectToLock":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 1 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 1 19:45:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":62,"creatorCardId":296,"stackEffectToLock":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 19:45:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":478,"_text":"Add RollDiceStackEffect 62 "}} 

 Player 1 19:45:50 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 1 19:45:51 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 19:45:51 $UPDATE_STACK_VIS:  
{"stackId":62,"text":"player 1 rolled 6"} 

 Player 1 19:45:51 $SHOW_DICE_ROLL:  
{"stackId":62} 

 Player 1 19:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 rolled 6"} 

 Player 1 19:45:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 rolled 6"} 

 Player 1 19:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 rolled 6"} 

 Player 1 19:45:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":62,"creatorCardId":296,"stackEffectToLock":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 1 19:45:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":479,"_text":"Response Adding RollDiceStackEffect 62"},"childOfId":478} 

 Player 1 19:45:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":480,"_text":"Wait For Response From Player 1 "},"childOfId":478} 

 Player 1 19:45:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:54 $ACTION_MASSAGE_REMOVE:  
{"id":480} 

 Player 1 19:45:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":481,"_text":"Wait For Response From Player 2 "},"childOfId":478} 

 Player 1 19:45:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:45:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:45:55 $ACTION_MASSAGE_REMOVE:  
{"id":481} 

 Player 1 19:45:55 $ACTION_MASSAGE_REMOVE:  
{"id":479} 

 Player 1 19:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":482,"_text":"Resolve RollDiceStackEffect 62 "}} 

 Player 1 19:45:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":11,"originStackId":62},"isAfterActivation":true,"index":11} 

 Player 1 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 rolled 6"} 

 Player 1 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 rolled 6"} 

 Player 1 19:45:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":62,"creatorCardId":296,"stackEffectToLock":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 1 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":62,"creatorCardId":296,"stackEffectToLock":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 1 19:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":483,"_text":"Remove After Resolve RollDiceStackEffect 62  "}} 

 Player 1 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 1 19:45:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":62,"creatorCardId":296,"stackEffectToLock":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 1 19:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":484,"_text":"Response Remove After Resolve RollDiceStackEffect 62"},"childOfId":483} 

 Player 1 19:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":485,"_text":"Wait For Response From Player 2 "},"childOfId":483} 

 Player 1 19:45:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:45:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune  \n2:Player 1 roll a dice"} 

 Player 2 19:45:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:45:55 $ACTION_MASSAGE_REMOVE:  
{"id":485} 

 Player 1 19:45:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":486,"_text":"Wait For Response From Player 1 "},"childOfId":483} 

 Player 1 19:45:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":486} 

 Player 1 19:45:56 $ACTION_MASSAGE_REMOVE:  
{"id":484} 

 Player 1 19:45:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":487,"_text":"Resolve PlayLootCardStackEffect 60 "}} 

 Player 1 19:45:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune: ChainEffects"} 

 Player 1 19:45:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":83,"particleType":6} 

 Player 1 19:45:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":83,"particleType":6} 

 Player 1 19:45:58 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":71} 

 Player 1 19:45:58 $MOVE_CARD:  
{"moveIndex":38,"cardId":71,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:45:58 $MOVE_CARD_END:  
{"moveIndex":38,"cardId":71,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:45:58 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":71} 

 Player 1 19:45:58 $DISCARD_LOOT:  
{"playerId":1,"cardId":71} 

 Player 1 19:45:58 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":135} 

 Player 1 19:45:58 $MOVE_CARD:  
{"moveIndex":39,"cardId":135,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:45:58 $MOVE_CARD_END:  
{"moveIndex":39,"cardId":135,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:45:59 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":135} 

 Player 1 19:45:59 $DISCARD_LOOT:  
{"playerId":1,"cardId":135} 

 Player 1 19:45:59 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":93} 

 Player 1 19:45:59 $MOVE_CARD:  
{"moveIndex":40,"cardId":93,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:45:59 $MOVE_CARD_END:  
{"moveIndex":40,"cardId":93,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:45:59 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":93} 

 Player 1 19:45:59 $DISCARD_LOOT:  
{"playerId":1,"cardId":93} 

 Player 1 19:45:59 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":114} 

 Player 1 19:45:59 $MOVE_CARD:  
{"moveIndex":41,"cardId":114,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:45:59 $MOVE_CARD_END:  
{"moveIndex":41,"cardId":114,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:46:00 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":114} 

 Player 1 19:46:00 $DISCARD_LOOT:  
{"playerId":1,"cardId":114} 

 Player 1 19:46:00 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":82} 

 Player 1 19:46:00 $MOVE_CARD:  
{"moveIndex":42,"cardId":82,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:46:00 $MOVE_CARD_END:  
{"moveIndex":42,"cardId":82,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:46:00 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":82} 

 Player 1 19:46:00 $DISCARD_LOOT:  
{"playerId":1,"cardId":82} 

 Player 1 19:46:00 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":67} 

 Player 1 19:46:00 $MOVE_CARD:  
{"moveIndex":43,"cardId":67,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:46:01 $MOVE_CARD_END:  
{"moveIndex":43,"cardId":67,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:46:01 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":67} 

 Player 1 19:46:01 $DISCARD_LOOT:  
{"playerId":1,"cardId":67} 

 Player 1 19:46:01 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:46:01 $MOVE_CARD:  
{"moveIndex":44,"cardId":16,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:46:01 $MOVE_CARD_END:  
{"moveIndex":44,"cardId":16,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:46:01 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":16} 

 Player 1 19:46:01 $FLIP_CARD:  
{"cardId":16} 

 Player 1 19:46:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":16} 

 Player 1 19:46:01 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:46:01 $MOVE_CARD:  
{"moveIndex":45,"cardId":116,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:46:02 $MOVE_CARD_END:  
{"moveIndex":45,"cardId":116,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:46:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":116} 

 Player 1 19:46:02 $FLIP_CARD:  
{"cardId":116} 

 Player 1 19:46:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":116} 

 Player 1 19:46:02 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:46:02 $MOVE_CARD:  
{"moveIndex":46,"cardId":55,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:46:02 $MOVE_CARD_END:  
{"moveIndex":46,"cardId":55,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:46:02 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":55} 

 Player 1 19:46:02 $FLIP_CARD:  
{"cardId":55} 

 Player 1 19:46:02 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":55} 

 Player 1 19:46:02 $REMOVE_FROM_PILE:  
{"cardId":83} 

 Player 1 19:46:02 $MOVE_CARD:  
{"moveIndex":47,"cardId":83,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:46:03 $MOVE_CARD_END:  
{"moveIndex":47,"cardId":83,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:46:03 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":83} 

 Player 1 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune: ChainEffects"} 

 Player 1 19:46:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:46:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":488,"_text":"Remove After Resolve PlayLootCardStackEffect 60  "}} 

 Player 1 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":60,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":83,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:46:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":489,"_text":"Response Remove After Resolve PlayLootCardStackEffect 60"},"childOfId":488} 

 Player 1 19:46:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":490,"_text":"Wait For Response From Player 1 "},"childOfId":488} 

 Player 1 19:46:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:46:03 $ACTION_MASSAGE_REMOVE:  
{"id":490} 

 Player 1 19:46:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":491,"_text":"Wait For Response From Player 2 "},"childOfId":488} 

 Player 1 19:46:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:46:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:46:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Black Rune "} 

 Player 2 19:46:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:46:04 $ACTION_MASSAGE_REMOVE:  
{"id":491} 

 Player 1 19:46:04 $ACTION_MASSAGE_REMOVE:  
{"id":489} 

 Player 1 19:46:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":492,"_text":"Stack Was Emptied "}} 

 Player 1 19:46:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:23 $SHOW_DECISION:  
{"startCardId":296,"endCardId":227} 

 Player 1 19:46:26 $NEXT_STACK_ID:  

 Player 1 19:46:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:46:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":63,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:46:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:46:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":63,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:46:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":493,"_text":"Add DeclareAttack 63 "}} 

 Player 1 19:46:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:46:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:46:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":63,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:46:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":494,"_text":"Response Adding DeclareAttack 63"},"childOfId":493} 

 Player 1 19:46:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":495,"_text":"Wait For Response From Player 1 "},"childOfId":493} 

 Player 1 19:46:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:46:26 $ACTION_MASSAGE_REMOVE:  
{"id":495} 

 Player 1 19:46:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":496,"_text":"Wait For Response From Player 2 "},"childOfId":493} 

 Player 1 19:46:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:46:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:46:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:46:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:46:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:46:27 $ACTION_MASSAGE_REMOVE:  
{"id":496} 

 Player 1 19:46:27 $ACTION_MASSAGE_REMOVE:  
{"id":494} 

 Player 1 19:46:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":497,"_text":"Resolve DeclareAttack 63 "}} 

 Player 1 19:46:27 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:46:27 $SHOW_CARD_PREVIEW:  
{"cardToShowId":256,"playerId":1} 

 Player 1 19:46:52 $FLIP_CARD:  
{"cardId":256} 

 Player 1 19:46:52 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":256} 

 Player 1 19:46:52 $NEW_MONSTER_ON_PLACE:  
{"cardId":256,"monsterPlaceId":1} 

 Player 1 19:46:52 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":256,"particleType":5} 

 Player 1 19:46:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":12,"originStackId":63},"isAfterActivation":true,"index":12} 

 Player 1 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:46:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":63,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 1 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":63,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 1 19:46:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":498,"_text":"Remove After Resolve DeclareAttack 63  "}} 

 Player 1 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":63,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":256,"stackEffectType":4}} 

 Player 1 19:46:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":499,"_text":"Response Remove After Resolve DeclareAttack 63"},"childOfId":498} 

 Player 1 19:46:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":500,"_text":"Wait For Response From Player 2 "},"childOfId":498} 

 Player 1 19:46:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:46:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Leech"} 

 Player 2 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Leech"} 

 Player 2 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Leech"} 

 Player 2 19:46:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Leech"} 

 Player 2 19:46:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:46:52 $ACTION_MASSAGE_REMOVE:  
{"id":500} 

 Player 1 19:46:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":501,"_text":"Wait For Response From Player 1 "},"childOfId":498} 

 Player 1 19:46:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:46:53 $ACTION_MASSAGE_REMOVE:  
{"id":501} 

 Player 1 19:46:53 $ACTION_MASSAGE_REMOVE:  
{"id":499} 

 Player 1 19:46:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":502,"_text":"Stack Was Emptied "}} 

 Player 1 19:46:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:54 $NEXT_STACK_ID:  

 Player 1 19:46:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:46:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 

 Player 1 19:46:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":64,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 1 19:46:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 

 Player 1 19:46:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":64,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 1 19:46:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":503,"_text":"Add AttackRoll 64 "}} 

 Player 1 19:46:54 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:46:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:46:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:46:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:46:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 

 Player 1 19:46:56 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 19:46:56 $UPDATE_STACK_VIS:  
{"stackId":64,"text":"player rolled 3 vs Leech<Monster>"} 

 Player 1 19:46:56 $SHOW_DICE_ROLL:  
{"stackId":64} 

 Player 1 19:46:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:46:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:46:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:46:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":64,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 1 19:46:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":504,"_text":"Response Adding AttackRoll 64"},"childOfId":503} 

 Player 1 19:46:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":505,"_text":"Wait For Response From Player 1 "},"childOfId":503} 

 Player 1 19:46:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:46:59 $ACTION_MASSAGE_REMOVE:  
{"id":505} 

 Player 1 19:46:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":506,"_text":"Wait For Response From Player 2 "},"childOfId":503} 

 Player 1 19:46:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:46:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:46:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:46:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:46:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:47:00 $ACTION_MASSAGE_REMOVE:  
{"id":506} 

 Player 1 19:47:00 $ACTION_MASSAGE_REMOVE:  
{"id":504} 

 Player 1 19:47:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":507,"_text":"Resolve AttackRoll 64 "}} 

 Player 1 19:47:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":508,"_text":"Added 0 to original roll"}} 

 Player 1 19:47:00 $NEXT_STACK_ID:  

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:47:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:47:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":65,"creatorCardId":296,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:47:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":64,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:47:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":65,"creatorCardId":296,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:47:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":64,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:47:00 $REPLACE_STACK:  
{"currentStack":[{"entityId":65,"creatorCardId":296,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":64,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}]} 

 Player 1 19:47:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":13,"originStackId":64},"isAfterActivation":true,"index":13} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 rolled 3 vs Leech<Monster>"} 

 Player 1 19:47:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":64,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 1 19:47:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":64,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 1 19:47:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":509,"_text":"Remove After Resolve AttackRoll 64  "}} 

 Player 1 19:47:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 1 19:47:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":64,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":256}} 

 Player 1 19:47:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":510,"_text":"Response Remove After Resolve AttackRoll 64"},"childOfId":509} 

 Player 1 19:47:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":511,"_text":"Wait For Response From Player 1 "},"childOfId":509} 

 Player 1 19:47:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:47:00 $ACTION_MASSAGE_REMOVE:  
{"id":511} 

 Player 1 19:47:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":512,"_text":"Wait For Response From Player 2 "},"childOfId":509} 

 Player 1 19:47:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:47:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is rolling against Leech<Monster>"} 

 Player 2 19:47:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:47:01 $ACTION_MASSAGE_REMOVE:  
{"id":512} 

 Player 1 19:47:01 $ACTION_MASSAGE_REMOVE:  
{"id":510} 

 Player 1 19:47:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":513,"_text":"Resolve CombatDamage 65 "}} 

 Player 1 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson"} 

 Player 1 19:47:01 $UPDATE_STACK_VIS:  
{"stackId":65,"text":"Leech will deal 2 combat damage to Samson"} 

 Player 1 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson"} 

 Player 1 19:47:01 $PLAYER_GET_HIT:  
{"playerId":1,"damage":2,"damageDealerId":256} 

 Player 1 19:47:01 $NEXT_STACK_ID:  

 Player 1 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson"} 

 Player 1 19:47:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson \n2:Player 1 is about to die"} 

 Player 1 19:47:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256}} 

 Player 1 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson \n2:Player 1 is about to die"} 

 Player 1 19:47:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":65,"creatorCardId":296,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:47:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson \n2:Player 1 is about to die"} 

 Player 1 19:47:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":65,"creatorCardId":296,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson \n2:Player 1 is about to die"} 

 Player 1 19:47:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256}} 

 Player 1 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson \n2:Player 1 is about to die"} 

 Player 1 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech 2 combat damage to Samson \n2:Player 1 is about to die"} 

 Player 1 19:47:02 $REPLACE_STACK:  
{"currentStack":[{"entityId":65,"creatorCardId":296,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256}]} 

 Player 1 19:47:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 

 Player 1 19:47:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":2},{"type":2,"number":3},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":15,"originStackId":65},"isAfterActivation":true,"index":15} 

 Player 1 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:47:02 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":65,"creatorCardId":296,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:47:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":514,"_text":"Remove After Resolve CombatDamage 65  "}} 

 Player 1 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:47:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":65,"creatorCardId":296,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:47:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":515,"_text":"Response Remove After Resolve CombatDamage 65"},"childOfId":514} 

 Player 1 19:47:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":516,"_text":"Wait For Response From Player 1 "},"childOfId":514} 

 Player 1 19:47:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:47:02 $ACTION_MASSAGE_REMOVE:  
{"id":516} 

 Player 1 19:47:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":517,"_text":"Wait For Response From Player 2 "},"childOfId":514} 

 Player 1 19:47:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:47:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is about to die"} 

 Player 2 19:47:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Leech combat damage to Samson \n2:Player 1 is about to die"} 

 Player 2 19:47:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:47:03 $ACTION_MASSAGE_REMOVE:  
{"id":517} 

 Player 1 19:47:03 $ACTION_MASSAGE_REMOVE:  
{"id":515} 

 Player 1 19:47:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":518,"_text":"Resolve PlayerDeath 66 "}} 

 Player 1 19:47:03 $DISABLE_PARTICLE_EFFECT:  
{"cardId":256,"particleType":5} 

 Player 1 19:47:03 $CANCEL_ATTACK:  

 Player 1 19:47:03 $NEXT_STACK_ID:  

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 19:47:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":67,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256}} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256}} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":67,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $REPLACE_STACK:  
{"currentStack":[{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256},{"entityId":67,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}]} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256}} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256}} 

 Player 1 19:47:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":519,"_text":"Remove After Resolve PlayerDeath 66  "}} 

 Player 1 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:47:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":66,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":256}} 

 Player 1 19:47:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":520,"_text":"Response Remove After Resolve PlayerDeath 66"},"childOfId":519} 

 Player 1 19:47:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":521,"_text":"Wait For Response From Player 1 "},"childOfId":519} 

 Player 1 19:47:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:47:03 $ACTION_MASSAGE_REMOVE:  
{"id":521} 

 Player 1 19:47:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":522,"_text":"Wait For Response From Player 2 "},"childOfId":519} 

 Player 1 19:47:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:47:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 19:47:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:47:04 $ACTION_MASSAGE_REMOVE:  
{"id":522} 

 Player 1 19:47:04 $ACTION_MASSAGE_REMOVE:  
{"id":520} 

 Player 1 19:47:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":523,"_text":"Resolve PlayerDeathPenalties 67 "}} 

 Player 1 19:47:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":524,"_text":"Player 1 pays Penalties"}} 

 Player 1 19:47:04 $SET_MONEY:  
{"playerId":1,"numOfCoins":1} 

 Player 1 19:47:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 1 19:47:07 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":16} 

 Player 1 19:47:07 $MOVE_CARD:  
{"moveIndex":48,"cardId":16,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:47:08 $MOVE_CARD_END:  
{"moveIndex":48,"cardId":16,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:47:08 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":16} 

 Player 1 19:47:08 $USE_ITEM:  
{"cardId":296} 

 Player 1 19:47:08 $USE_ITEM:  
{"cardId":297} 

 Player 1 19:47:08 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 19:47:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":67,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":67,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:47:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":525,"_text":"Remove After Resolve PlayerDeathPenalties 67  "}} 

 Player 1 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":67,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 19:47:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":526,"_text":"Response Remove After Resolve PlayerDeathPenalties 67"},"childOfId":525} 

 Player 1 19:47:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":527,"_text":"Wait For Response From Player 2 "},"childOfId":525} 

 Player 1 19:47:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:47:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 19:47:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:47:08 $ACTION_MASSAGE_REMOVE:  
{"id":527} 

 Player 1 19:47:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":528,"_text":"Wait For Response From Player 1 "},"childOfId":525} 

 Player 1 19:47:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:47:09 $ACTION_MASSAGE_REMOVE:  
{"id":528} 

 Player 1 19:47:09 $ACTION_MASSAGE_REMOVE:  
{"id":526} 

 Player 1 19:47:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":529,"_text":"Stack Was Emptied "}} 

 Player 1 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:09 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 19:47:09 $END_TURN:  

 Player 1 19:47:09 $SET_TURN:  
{"playerId":2} 

 Player 1 19:47:09 $START_TURN:  
{"playerId":2} 

 Player 2 19:47:09 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:09 $RECHARGE_ITEM:  
{"cardId":290} 

 Player 2 19:47:09 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":290} 

 Player 2 19:47:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:47:09 $NEXT_STACK_ID:  

 Player 2 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:47:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:47:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:47:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":530,"_text":"Add StartTurnLoot 68 "}} 

 Player 2 19:47:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:47:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:47:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":531,"_text":"Response Adding StartTurnLoot 68"},"childOfId":530} 

 Player 2 19:47:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":532,"_text":"Wait For Response From Player 2 "},"childOfId":530} 

 Player 2 19:47:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:47:09 $ACTION_MASSAGE_REMOVE:  
{"id":532} 

 Player 2 19:47:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":533,"_text":"Wait For Response From Player 1 "},"childOfId":530} 

 Player 2 19:47:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:47:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:47:09 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:47:10 $ACTION_MASSAGE_REMOVE:  
{"id":533} 

 Player 2 19:47:10 $ACTION_MASSAGE_REMOVE:  
{"id":531} 

 Player 2 19:47:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":534,"_text":"Resolve StartTurnLoot 68 "}} 

 Player 2 19:47:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:47:10 $MOVE_CARD:  
{"moveIndex":49,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:47:10 $MOVE_CARD_END:  
{"moveIndex":49,"cardId":54,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:47:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":54} 

 Player 2 19:47:10 $FLIP_CARD:  
{"cardId":54} 

 Player 2 19:47:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":54} 

 Player 2 19:47:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:47:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:47:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:47:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":535,"_text":"Remove After Resolve StartTurnLoot 68  "}} 

 Player 2 19:47:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":68,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:47:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":536,"_text":"Response Remove After Resolve StartTurnLoot 68"},"childOfId":535} 

 Player 2 19:47:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":537,"_text":"Wait For Response From Player 1 "},"childOfId":535} 

 Player 2 19:47:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:47:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:47:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:47:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:47:11 $ACTION_MASSAGE_REMOVE:  
{"id":537} 

 Player 2 19:47:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":538,"_text":"Wait For Response From Player 2 "},"childOfId":535} 

 Player 2 19:47:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:47:11 $ACTION_MASSAGE_REMOVE:  
{"id":538} 

 Player 2 19:47:11 $ACTION_MASSAGE_REMOVE:  
{"id":536} 

 Player 2 19:47:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":539,"_text":"Stack Was Emptied "}} 

 Player 2 19:47:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:42 $SHOW_DECISION:  
{"startCardId":290,"endCardId":234} 

 Player 2 19:47:45 $NEXT_STACK_ID:  

 Player 2 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 2 19:47:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 2 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 2 19:47:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":540,"_text":"Add DeclareAttack 69 "}} 

 Player 2 19:47:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 2 19:47:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":541,"_text":"Response Adding DeclareAttack 69"},"childOfId":540} 

 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":542,"_text":"Wait For Response From Player 2 "},"childOfId":540} 

 Player 2 19:47:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:47:45 $ACTION_MASSAGE_REMOVE:  
{"id":542} 

 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":543,"_text":"Wait For Response From Player 1 "},"childOfId":540} 

 Player 2 19:47:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:47:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:47:45 $ACTION_MASSAGE_REMOVE:  
{"id":543} 

 Player 2 19:47:45 $ACTION_MASSAGE_REMOVE:  
{"id":541} 

 Player 2 19:47:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":544,"_text":"Resolve DeclareAttack 69 "}} 

 Player 2 19:47:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":234,"particleType":5} 

 Player 2 19:47:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":28,"originStackId":69},"isAfterActivation":true,"index":28} 

 Player 2 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 2 19:47:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 2 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":545,"_text":"Remove After Resolve DeclareAttack 69  "}} 

 Player 2 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":69,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":234,"stackEffectType":4}} 

 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":546,"_text":"Response Remove After Resolve DeclareAttack 69"},"childOfId":545} 

 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":547,"_text":"Wait For Response From Player 1 "},"childOfId":545} 

 Player 2 19:47:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:47:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Chub"} 

 Player 1 19:47:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:47:46 $ACTION_MASSAGE_REMOVE:  
{"id":547} 

 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":548,"_text":"Wait For Response From Player 2 "},"childOfId":545} 

 Player 2 19:47:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:47:46 $ACTION_MASSAGE_REMOVE:  
{"id":548} 

 Player 2 19:47:46 $ACTION_MASSAGE_REMOVE:  
{"id":546} 

 Player 2 19:47:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":549,"_text":"Stack Was Emptied "}} 

 Player 2 19:47:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:50 $NEXT_STACK_ID:  

 Player 2 19:47:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:47:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 2 19:47:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":70,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 2 19:47:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 2 19:47:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":70,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 2 19:47:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":550,"_text":"Add AttackRoll 70 "}} 

 Player 2 19:47:51 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:47:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:47:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:47:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 2 19:47:53 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 19:47:53 $UPDATE_STACK_VIS:  
{"stackId":70,"text":"player rolled 1 vs Chub<Monster>"} 

 Player 2 19:47:53 $SHOW_DICE_ROLL:  
{"stackId":70} 

 Player 2 19:47:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:47:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:47:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:47:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 2 19:47:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":551,"_text":"Response Adding AttackRoll 70"},"childOfId":550} 

 Player 2 19:47:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":552,"_text":"Wait For Response From Player 2 "},"childOfId":550} 

 Player 2 19:47:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:47:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:47:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 2 19:47:58 $SHOW_DECISION:  
{"startCardId":290,"endCardId":291} 

 Player 2 19:48:01 $NEXT_STACK_ID:  

 Player 2 19:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:48:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:48:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:48:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":553,"_text":"Add ActivateItem 71 "}} 

 Player 2 19:48:01 $USE_ITEM:  
{"cardId":291} 

 Player 2 19:48:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:48:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:48:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":554,"_text":"Response Adding ActivateItem 71"},"childOfId":553} 

 Player 2 19:48:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":555,"_text":"Wait For Response From Player 2 "},"childOfId":553} 

 Player 2 19:48:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:48:03 $ACTION_MASSAGE_REMOVE:  
{"id":555} 

 Player 2 19:48:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":556,"_text":"Wait For Response From Player 1 "},"childOfId":553} 

 Player 2 19:48:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:03 $ACTION_MASSAGE_REMOVE:  
{"id":556} 

 Player 2 19:48:03 $ACTION_MASSAGE_REMOVE:  
{"id":554} 

 Player 2 19:48:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":557,"_text":"Resolve ActivateItem 71 "}} 

 Player 2 19:48:03 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 19:48:05 $DISABLE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 19:48:05 $ROLL_DICE:  
{"playerId":2} 

 Player 2 19:48:07 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 19:48:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:48:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:48:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:48:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":558,"_text":"Remove After Resolve ActivateItem 71  "}} 

 Player 2 19:48:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":71,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:48:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":559,"_text":"Response Remove After Resolve ActivateItem 71"},"childOfId":558} 

 Player 2 19:48:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":560,"_text":"Wait For Response From Player 1 "},"childOfId":558} 

 Player 2 19:48:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:48:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:08 $ACTION_MASSAGE_REMOVE:  
{"id":560} 

 Player 2 19:48:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":561,"_text":"Wait For Response From Player 2 "},"childOfId":558} 

 Player 2 19:48:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:10 $ACTION_MASSAGE_REMOVE:  
{"id":561} 

 Player 2 19:48:10 $ACTION_MASSAGE_REMOVE:  
{"id":559} 

 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":562,"_text":"Resolve AttackRoll 70 "}} 

 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":563,"_text":"Added -1 to original roll"}} 

 Player 2 19:48:10 $NEXT_STACK_ID:  

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:10 $REPLACE_STACK:  
{"currentStack":[{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}]} 

 Player 2 19:48:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":29,"originStackId":70},"isAfterActivation":true,"index":29} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 rolled 1 vs Chub<Monster>"} 

 Player 2 19:48:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 2 19:48:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":564,"_text":"Remove After Resolve AttackRoll 70  "}} 

 Player 2 19:48:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 2 19:48:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":70,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":234}} 

 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":565,"_text":"Response Remove After Resolve AttackRoll 70"},"childOfId":564} 

 Player 2 19:48:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":566,"_text":"Wait For Response From Player 2 "},"childOfId":564} 

 Player 2 19:48:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 1 19:48:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:Player 2 is rolling against Chub<Monster>"} 

 Player 2 19:48:12 $ACTION_MASSAGE_REMOVE:  
{"id":566} 

 Player 2 19:48:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":567,"_text":"Wait For Response From Player 1 "},"childOfId":564} 

 Player 2 19:48:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:12 $ACTION_MASSAGE_REMOVE:  
{"id":567} 

 Player 2 19:48:12 $ACTION_MASSAGE_REMOVE:  
{"id":565} 

 Player 2 19:48:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":568,"_text":"Resolve CombatDamage 72 "}} 

 Player 2 19:48:12 $UPDATE_STACK_VIS:  
{"stackId":72,"text":"Isaac will deal 4 combat damage to Chub"} 

 Player 2 19:48:12 $MONSTER_GET_DAMAGED:  
{"cardId":234,"hpLeft":0,"damageDealerId":290} 

 Player 2 19:48:12 $NEXT_STACK_ID:  

 Player 2 19:48:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 2 19:48:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $REPLACE_STACK:  
{"currentStack":[{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}]} 

 Player 2 19:48:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":234,"scopeIsPlayer":false,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 

 Player 2 19:48:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":4},{"type":0,"number":290},{"type":0,"number":234}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":31,"originStackId":72},"isAfterActivation":true,"index":31} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:48:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":569,"_text":"Remove After Resolve CombatDamage 72  "}} 

 Player 2 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:48:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":72,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":234,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:48:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":570,"_text":"Response Remove After Resolve CombatDamage 72"},"childOfId":569} 

 Player 2 19:48:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":571,"_text":"Wait For Response From Player 2 "},"childOfId":569} 

 Player 2 19:48:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Chub \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:18 $ACTION_MASSAGE_REMOVE:  
{"id":571} 

 Player 2 19:48:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":572,"_text":"Wait For Response From Player 1 "},"childOfId":569} 

 Player 2 19:48:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:19 $ACTION_MASSAGE_REMOVE:  
{"id":572} 

 Player 2 19:48:19 $ACTION_MASSAGE_REMOVE:  
{"id":570} 

 Player 2 19:48:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":573,"_text":"Resolve MonsterDeath 73 "}} 

 Player 2 19:48:19 $DISABLE_PARTICLE_EFFECT:  
{"cardId":234,"particleType":5} 

 Player 2 19:48:19 $CANCEL_ATTACK:  

 Player 2 19:48:19 $NEXT_STACK_ID:  

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:48:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":74,"creatorCardId":290,"monsterCardWithRewardId":234,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":74,"creatorCardId":290,"monsterCardWithRewardId":234,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:19 $REPLACE_STACK:  
{"currentStack":[{"entityId":74,"creatorCardId":290,"monsterCardWithRewardId":234,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}]} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 2 19:48:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 

 Player 2 19:48:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":574,"_text":"Remove After Resolve MonsterDeath 73  "}} 

 Player 2 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 2 19:48:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":73,"creatorCardId":290,"monsterToDieCardId":234,"stackEffectType":5,"killerId":290}} 

 Player 2 19:48:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":575,"_text":"Response Remove After Resolve MonsterDeath 73"},"childOfId":574} 

 Player 2 19:48:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":576,"_text":"Wait For Response From Player 2 "},"childOfId":574} 

 Player 2 19:48:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:48:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:48:21 $ACTION_MASSAGE_REMOVE:  
{"id":576} 

 Player 2 19:48:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":577,"_text":"Wait For Response From Player 1 "},"childOfId":574} 

 Player 2 19:48:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:21 $ACTION_MASSAGE_REMOVE:  
{"id":577} 

 Player 2 19:48:21 $ACTION_MASSAGE_REMOVE:  
{"id":575} 

 Player 2 19:48:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":578,"_text":"Resolve MonsterRewardStackEffect 74 "}} 

 Player 2 19:48:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":234,"scopeIsPlayer":false,"index":32,"originStackId":74},"isAfterActivation":true,"index":32} 

 Player 2 19:48:21 $SET_MONEY:  
{"playerId":2,"numOfCoins":12} 

 Player 2 19:48:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":7}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":33,"originStackId":-1},"isAfterActivation":true,"index":33} 

 Player 2 19:48:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":74,"creatorCardId":290,"monsterCardWithRewardId":234,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:48:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":579,"_text":"Fizzle MonsterRewardStackEffect 74"}} 

 Player 2 19:48:22 $FIZZLE_STACK_EFFECT:  
{"entityId":74} 

 Player 2 19:48:22 $MOVE_CARD:  
{"moveIndex":50,"cardId":234,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 

 Player 1 19:48:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Chub<Monster> reward"} 

 Player 1 19:48:22 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:48:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:48:22 $MOVE_CARD_END:  
{"moveIndex":50,"cardId":234,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:48:22 $GET_SOUL:  
{"playerId":2,"cardId":234} 

 Player 2 19:48:22 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":234} 

 Player 2 19:48:22 $REMOVE_MONSTER:  
{"holderId":3,"monsterId":234} 

 Player 2 19:48:22 $GET_NEXT_MONSTER:  
{"monsterPlaceId":3} 

 Player 2 19:48:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":580,"_text":"Stack Was Emptied "}} 

 Player 2 19:48:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:22 $ACTION_MASSAGE_REMOVE:  
{"id":552} 

 Player 2 19:48:22 $ACTION_MASSAGE_REMOVE:  
{"id":551} 

 Player 2 19:48:28 $SHOW_DECISION:  
{"startCardId":290,"endCardId":144} 

 Player 2 19:48:31 $NEXT_STACK_ID:  

 Player 2 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 19:48:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 19:48:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:48:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":581,"_text":"Add PurchaseItem 75 "}} 

 Player 2 19:48:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 19:48:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:48:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":582,"_text":"Response Adding PurchaseItem 75"},"childOfId":581} 

 Player 2 19:48:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":583,"_text":"Wait For Response From Player 2 "},"childOfId":581} 

 Player 2 19:48:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 19:48:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 2 19:48:32 $ACTION_MASSAGE_REMOVE:  
{"id":583} 

 Player 2 19:48:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":584,"_text":"Wait For Response From Player 1 "},"childOfId":581} 

 Player 2 19:48:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:33 $ACTION_MASSAGE_REMOVE:  
{"id":584} 

 Player 2 19:48:33 $ACTION_MASSAGE_REMOVE:  
{"id":582} 

 Player 2 19:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":585,"_text":"Resolve PurchaseItem 75 "}} 

 Player 2 19:48:33 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 19:48:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":34,"originStackId":-1},"isAfterActivation":true,"index":34} 

 Player 2 19:48:33 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:48:33 $MOVE_CARD:  
{"moveIndex":51,"cardId":220,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 19:48:33 $MOVE_CARD_END:  
{"moveIndex":51,"cardId":220,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:48:33 $ADD_AN_ITEM:  
{"playerId":2,"cardId":220,"isReward":false} 

 Player 2 19:48:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":220}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 

 Player 2 19:48:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":586,"_text":"Remove After Resolve PurchaseItem 75  "}} 

 Player 2 19:48:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":75,"creatorCardId":290,"itemToPurchaseCardId":144,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 19:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":587,"_text":"Response Remove After Resolve PurchaseItem 75"},"childOfId":586} 

 Player 2 19:48:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":588,"_text":"Wait For Response From Player 1 "},"childOfId":586} 

 Player 2 19:48:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 19:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 19:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 19:48:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 

 Player 1 19:48:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:34 $ACTION_MASSAGE_REMOVE:  
{"id":588} 

 Player 2 19:48:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":589,"_text":"Wait For Response From Player 2 "},"childOfId":586} 

 Player 2 19:48:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:34 $ACTION_MASSAGE_REMOVE:  
{"id":589} 

 Player 2 19:48:34 $ACTION_MASSAGE_REMOVE:  
{"id":587} 

 Player 2 19:48:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":590,"_text":"Stack Was Emptied "}} 

 Player 2 19:48:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:38 $SHOW_DECISION:  
{"startCardId":290,"endCardId":220} 

 Player 2 19:48:41 $NEXT_STACK_ID:  

 Player 2 19:48:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 2 19:48:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 2 19:48:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":591,"_text":"Add ActivateItem 76 "}} 

 Player 2 19:48:42 $USE_ITEM:  
{"cardId":220} 

 Player 2 19:48:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 2 19:48:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":592,"_text":"Response Adding ActivateItem 76"},"childOfId":591} 

 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":593,"_text":"Wait For Response From Player 2 "},"childOfId":591} 

 Player 2 19:48:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:42 $ACTION_MASSAGE_REMOVE:  
{"id":593} 

 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":594,"_text":"Wait For Response From Player 1 "},"childOfId":591} 

 Player 2 19:48:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:42 $ACTION_MASSAGE_REMOVE:  
{"id":594} 

 Player 2 19:48:42 $ACTION_MASSAGE_REMOVE:  
{"id":592} 

 Player 2 19:48:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":595,"_text":"Resolve ActivateItem 76 "}} 

 Player 2 19:48:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":220,"particleType":6} 

 Player 2 19:48:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":220,"particleType":6} 

 Player 2 19:48:44 $LOG_ERROR:  
{"message":"\"Cannot read property 'getTarget' of undefined\"","stack":"\"TypeError: Cannot read property 'getTarget' of undefined\\n    at RerollItem.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/RerollItem.js:31:43)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at RerollItem.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/RerollItem.js:26:16)\\n    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:232:59)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 2////
  

 Player 2 19:48:44 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot read property 'getTarget' of undefined\""

 + "\"TypeError: Cannot read property 'getTarget' of undefined\
    at RerollItem.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/RerollItem.js:31:43)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at RerollItem.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/RerollItem.js:26:16)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:232:59)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 2////

 "\"Cannot read property 'getTarget' of undefined\""

 + "\"TypeError: Cannot read property 'getTarget' of undefined\
    at RerollItem.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/RerollItem.js:31:43)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at RerollItem.doEffect (http://localhost:7456/preview-scripts/assets/Script/CardEffectComponents/CardEffects/RerollItem.js:26:16)\
    at CardEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/CardEffect.js:232:59)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 2 19:48:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 2 19:48:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:48:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:48:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":596,"_text":"Remove After Resolve ActivateItem 76  "}} 

 Player 2 19:48:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:48:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":76,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":220,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:48:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":597,"_text":"Response Remove After Resolve ActivateItem 76"},"childOfId":596} 

 Player 2 19:48:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":598,"_text":"Wait For Response From Player 1 "},"childOfId":596} 

 Player 2 19:48:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:48:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:48:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated The D20"} 

 Player 1 19:48:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:48:46 $ACTION_MASSAGE_REMOVE:  
{"id":598} 

 Player 2 19:48:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":599,"_text":"Wait For Response From Player 2 "},"childOfId":596} 

 Player 2 19:48:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:48:47 $ACTION_MASSAGE_REMOVE:  
{"id":599} 

 Player 2 19:48:47 $ACTION_MASSAGE_REMOVE:  
{"id":597} 

 Player 2 19:48:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":600,"_text":"Stack Was Emptied "}} 

 Player 2 19:48:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:50:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:50:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:50:12 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 19:50:12 $END_TURN:  

 Player 2 19:50:12 $SET_TURN:  
{"playerId":1} 

 Player 2 19:50:12 $START_TURN:  
{"playerId":1} 

 Player 1 19:50:12 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:50:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:12 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 19:50:12 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":296} 

 Player 1 19:50:12 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 1 19:50:12 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":297} 

 Player 1 19:50:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:13 $NEXT_STACK_ID:  

 Player 1 19:50:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:50:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":77,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:50:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:50:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":77,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:50:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":601,"_text":"Add StartTurnLoot 77 "}} 

 Player 1 19:50:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:50:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":77,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:50:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":602,"_text":"Response Adding StartTurnLoot 77"},"childOfId":601} 

 Player 1 19:50:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":603,"_text":"Wait For Response From Player 1 "},"childOfId":601} 

 Player 1 19:50:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:14 $ACTION_MASSAGE_REMOVE:  
{"id":603} 

 Player 1 19:50:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":604,"_text":"Wait For Response From Player 2 "},"childOfId":601} 

 Player 1 19:50:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:50:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:50:14 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:50:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:50:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:50:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:50:14 $ACTION_MASSAGE_REMOVE:  
{"id":604} 

 Player 1 19:50:14 $ACTION_MASSAGE_REMOVE:  
{"id":602} 

 Player 1 19:50:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":605,"_text":"Resolve StartTurnLoot 77 "}} 

 Player 1 19:50:14 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:50:14 $MOVE_CARD:  
{"moveIndex":52,"cardId":122,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:50:14 $MOVE_CARD_END:  
{"moveIndex":52,"cardId":122,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:50:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":122} 

 Player 1 19:50:15 $FLIP_CARD:  
{"cardId":122} 

 Player 1 19:50:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":122} 

 Player 1 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:50:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":77,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":77,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:50:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":606,"_text":"Remove After Resolve StartTurnLoot 77  "}} 

 Player 1 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":77,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:50:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":607,"_text":"Response Remove After Resolve StartTurnLoot 77"},"childOfId":606} 

 Player 1 19:50:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":608,"_text":"Wait For Response From Player 2 "},"childOfId":606} 

 Player 1 19:50:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:50:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:50:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:50:15 $ACTION_MASSAGE_REMOVE:  
{"id":608} 

 Player 1 19:50:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":609,"_text":"Wait For Response From Player 1 "},"childOfId":606} 

 Player 1 19:50:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:15 $ACTION_MASSAGE_REMOVE:  
{"id":609} 

 Player 1 19:50:15 $ACTION_MASSAGE_REMOVE:  
{"id":607} 

 Player 1 19:50:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":610,"_text":"Stack Was Emptied "}} 

 Player 1 19:50:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:28 $SHOW_DECISION:  
{"startCardId":122,"endCardId":122,"flipEndCard":true} 

 Player 1 19:50:31 $NEXT_STACK_ID:  

 Player 1 19:50:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 1 19:50:31 $ADD_TO_STACK:  
{"stackEffect":{"entityId":78,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:50:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 1 19:50:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":78,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:50:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":611,"_text":"Add PlayLootCardStackEffect 78 "}} 

 Player 1 19:50:31 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":122} 

 Player 1 19:50:32 $MOVE_CARD:  
{"moveIndex":53,"cardId":122,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:50:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:50:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:32 $MOVE_CARD_END:  
{"moveIndex":53,"cardId":122,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:50:32 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":122} 

 Player 1 19:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart: AddTrinket"} 

 Player 1 19:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart: AddTrinket"} 

 Player 1 19:50:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":78,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":612,"_text":"Response Adding PlayLootCardStackEffect 78"},"childOfId":611} 

 Player 1 19:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":613,"_text":"Wait For Response From Player 1 "},"childOfId":611} 

 Player 1 19:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":613} 

 Player 1 19:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":614,"_text":"Wait For Response From Player 2 "},"childOfId":611} 

 Player 1 19:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:50:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:50:33 $ACTION_MASSAGE_REMOVE:  
{"id":614} 

 Player 1 19:50:33 $ACTION_MASSAGE_REMOVE:  
{"id":612} 

 Player 1 19:50:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":615,"_text":"Resolve PlayLootCardStackEffect 78 "}} 

 Player 1 19:50:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart: AddTrinket"} 

 Player 1 19:50:33 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 19:50:35 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 19:50:35 $CARD_ADD_TRINKET:  
{"cardId":122,"playerId":1,"addMuiliEffect":false} 

 Player 1 19:50:35 $REMOVE_FROM_PILE:  
{"cardId":122} 

 Player 1 19:50:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":122} 

 Player 1 19:50:35 $MOVE_CARD:  
{"moveIndex":54,"cardId":122,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 19:50:35 $MOVE_CARD_END:  
{"moveIndex":54,"cardId":122,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:50:35 $ADD_AN_ITEM:  
{"playerId":1,"cardId":122,"isReward":true} 

 Player 1 19:50:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":122}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":17,"originStackId":-1},"isAfterActivation":true,"index":17} 

 Player 1 19:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart: AddTrinket"} 

 Player 1 19:50:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":78,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:50:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":78,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":616,"_text":"Remove After Resolve PlayLootCardStackEffect 78  "}} 

 Player 1 19:50:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":78,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":122,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":617,"_text":"Response Remove After Resolve PlayLootCardStackEffect 78"},"childOfId":616} 

 Player 1 19:50:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":618,"_text":"Wait For Response From Player 2 "},"childOfId":616} 

 Player 1 19:50:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:50:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Purple Heart "} 

 Player 2 19:50:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:50:36 $ACTION_MASSAGE_REMOVE:  
{"id":618} 

 Player 1 19:50:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":619,"_text":"Wait For Response From Player 1 "},"childOfId":616} 

 Player 1 19:50:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:36 $ACTION_MASSAGE_REMOVE:  
{"id":619} 

 Player 1 19:50:36 $ACTION_MASSAGE_REMOVE:  
{"id":617} 

 Player 1 19:50:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":620,"_text":"Stack Was Emptied "}} 

 Player 1 19:50:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:49 $SHOW_DECISION:  
{"startCardId":296,"endCardId":296} 

 Player 1 19:50:52 $NEXT_STACK_ID:  

 Player 1 19:50:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:50:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:50:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:50:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:50:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:50:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":621,"_text":"Add ActivateItem 79 "}} 

 Player 2 19:50:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:50:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:50:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:50:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:50:54 $SHOW_DECISION:  
{"startCardId":296,"endCardId":116,"flipEndCard":true} 

 Player 1 19:50:57 $USE_ITEM:  
{"cardId":296} 

 Player 1 19:50:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:50:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:50:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":622,"_text":"Response Adding ActivateItem 79"},"childOfId":621} 

 Player 1 19:50:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":623,"_text":"Wait For Response From Player 1 "},"childOfId":621} 

 Player 1 19:50:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:50:57 $ACTION_MASSAGE_REMOVE:  
{"id":623} 

 Player 1 19:50:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":624,"_text":"Wait For Response From Player 2 "},"childOfId":621} 

 Player 1 19:50:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:50:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:50:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:50:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:50:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:50:57 $ACTION_MASSAGE_REMOVE:  
{"id":624} 

 Player 1 19:50:57 $ACTION_MASSAGE_REMOVE:  
{"id":622} 

 Player 1 19:50:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":625,"_text":"Resolve ActivateItem 79 "}} 

 Player 1 19:50:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 19:50:59 $DISABLE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 19:50:59 $NEXT_STACK_ID:  

 Player 1 19:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:51:00 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":116} 

 Player 1 19:51:00 $MOVE_CARD:  
{"moveIndex":55,"cardId":116,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:51:00 $MOVE_CARD_END:  
{"moveIndex":55,"cardId":116,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:51:00 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":116} 

 Player 1 19:51:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 1 19:51:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 1 19:51:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 1 19:51:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 1 19:51:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 1 19:51:00 $REPLACE_STACK:  
{"currentStack":[{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 1 19:51:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 1 19:51:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":626,"_text":"Remove After Resolve ActivateItem 79  "}} 

 Player 1 19:51:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 1 19:51:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":79,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":627,"_text":"Response Remove After Resolve ActivateItem 79"},"childOfId":626} 

 Player 1 19:51:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":628,"_text":"Wait For Response From Player 1 "},"childOfId":626} 

 Player 1 19:51:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:01 $ACTION_MASSAGE_REMOVE:  
{"id":628} 

 Player 1 19:51:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":629,"_text":"Wait For Response From Player 2 "},"childOfId":626} 

 Player 1 19:51:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:51:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 2 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 activated Samson"} 

 Player 2 19:51:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:51:01 $ACTION_MASSAGE_REMOVE:  
{"id":629} 

 Player 1 19:51:01 $ACTION_MASSAGE_REMOVE:  
{"id":627} 

 Player 1 19:51:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":630,"_text":"Resolve PlayLootCardStackEffect 80 "}} 

 Player 1 19:51:01 $NEXT_STACK_ID:  

 Player 1 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 1 19:51:01 $NEXT_STACK_ID:  

 Player 1 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 1 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 1 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 1 19:51:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":82,"creatorCardId":296,"stackEffectToLock":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 1 19:51:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 1 19:51:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":82,"creatorCardId":296,"stackEffectToLock":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 19:51:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":631,"_text":"Add RollDiceStackEffect 82 "}} 

 Player 1 19:51:02 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 1 19:51:03 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 19:51:03 $UPDATE_STACK_VIS:  
{"stackId":82,"text":"player 1 rolled 5"} 

 Player 1 19:51:03 $SHOW_DICE_ROLL:  
{"stackId":82} 

 Player 1 19:51:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 rolled 5"} 

 Player 1 19:51:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 rolled 5"} 

 Player 1 19:51:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 rolled 5"} 

 Player 1 19:51:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":82,"creatorCardId":296,"stackEffectToLock":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 1 19:51:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":632,"_text":"Response Adding RollDiceStackEffect 82"},"childOfId":631} 

 Player 1 19:51:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":633,"_text":"Wait For Response From Player 1 "},"childOfId":631} 

 Player 1 19:51:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:06 $ACTION_MASSAGE_REMOVE:  
{"id":633} 

 Player 1 19:51:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":634,"_text":"Wait For Response From Player 2 "},"childOfId":631} 

 Player 1 19:51:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:51:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:51:07 $ACTION_MASSAGE_REMOVE:  
{"id":634} 

 Player 1 19:51:07 $ACTION_MASSAGE_REMOVE:  
{"id":632} 

 Player 1 19:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":635,"_text":"Resolve RollDiceStackEffect 82 "}} 

 Player 1 19:51:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":18,"originStackId":82},"isAfterActivation":true,"index":18} 

 Player 1 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 rolled 5"} 

 Player 1 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 rolled 5"} 

 Player 1 19:51:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":82,"creatorCardId":296,"stackEffectToLock":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 1 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 1 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 1 19:51:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":82,"creatorCardId":296,"stackEffectToLock":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 1 19:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":636,"_text":"Remove After Resolve RollDiceStackEffect 82  "}} 

 Player 1 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 1 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 1 19:51:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":82,"creatorCardId":296,"stackEffectToLock":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 1 19:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":637,"_text":"Response Remove After Resolve RollDiceStackEffect 82"},"childOfId":636} 

 Player 1 19:51:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":638,"_text":"Wait For Response From Player 2 "},"childOfId":636} 

 Player 1 19:51:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:51:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple  \n2:Player 1 roll a dice"} 

 Player 2 19:51:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:51:08 $ACTION_MASSAGE_REMOVE:  
{"id":638} 

 Player 1 19:51:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":639,"_text":"Wait For Response From Player 1 "},"childOfId":636} 

 Player 1 19:51:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:08 $ACTION_MASSAGE_REMOVE:  
{"id":639} 

 Player 1 19:51:08 $ACTION_MASSAGE_REMOVE:  
{"id":637} 

 Player 1 19:51:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":640,"_text":"Resolve PlayLootCardStackEffect 80 "}} 

 Player 1 19:51:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple: GainStats"} 

 Player 1 19:51:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":116,"particleType":6} 

 Player 1 19:51:10 $DISABLE_PARTICLE_EFFECT:  
{"cardId":116,"particleType":6} 

 Player 1 19:51:10 $PLAYER_GAIN_ROLL_BONUS:  
{"playerId":1,"bonusToGain":-2,"isTemp":false} 

 Player 1 19:51:10 $REMOVE_FROM_PILE:  
{"cardId":116} 

 Player 1 19:51:10 $MOVE_CARD:  
{"moveIndex":56,"cardId":116,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:51:10 $MOVE_CARD_END:  
{"moveIndex":56,"cardId":116,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:51:10 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":116} 

 Player 1 19:51:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple: GainStats"} 

 Player 1 19:51:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:51:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:51:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":641,"_text":"Remove After Resolve PlayLootCardStackEffect 80  "}} 

 Player 1 19:51:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":80,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":116,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:51:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":642,"_text":"Response Remove After Resolve PlayLootCardStackEffect 80"},"childOfId":641} 

 Player 1 19:51:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":643,"_text":"Wait For Response From Player 1 "},"childOfId":641} 

 Player 1 19:51:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:10 $ACTION_MASSAGE_REMOVE:  
{"id":643} 

 Player 1 19:51:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":644,"_text":"Wait For Response From Player 2 "},"childOfId":641} 

 Player 1 19:51:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:51:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:51:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Pill Purple "} 

 Player 2 19:51:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:51:11 $ACTION_MASSAGE_REMOVE:  
{"id":644} 

 Player 1 19:51:11 $ACTION_MASSAGE_REMOVE:  
{"id":642} 

 Player 1 19:51:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":645,"_text":"Stack Was Emptied "}} 

 Player 1 19:51:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:12 $SHOW_DECISION:  
{"startCardId":296,"endCardId":297} 

 Player 1 19:51:15 $NEXT_STACK_ID:  

 Player 1 19:51:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:51:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":83,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:51:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:51:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":83,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:51:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":646,"_text":"Add ActivateItem 83 "}} 

 Player 2 19:51:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:51:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:51:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:51:17 $SHOW_DECISION:  
{"startCardId":297,"endCardId":296} 

 Player 1 19:51:20 $USE_ITEM:  
{"cardId":297} 

 Player 1 19:51:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:51:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":83,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":647,"_text":"Response Adding ActivateItem 83"},"childOfId":646} 

 Player 1 19:51:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":648,"_text":"Wait For Response From Player 1 "},"childOfId":646} 

 Player 1 19:51:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:20 $ACTION_MASSAGE_REMOVE:  
{"id":648} 

 Player 1 19:51:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":649,"_text":"Wait For Response From Player 2 "},"childOfId":646} 

 Player 1 19:51:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:51:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:51:20 $ACTION_MASSAGE_REMOVE:  
{"id":649} 

 Player 1 19:51:20 $ACTION_MASSAGE_REMOVE:  
{"id":647} 

 Player 1 19:51:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":650,"_text":"Resolve ActivateItem 83 "}} 

 Player 1 19:51:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 19:51:22 $DISABLE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 19:51:23 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":true} 

 Player 1 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:51:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":83,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":83,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":651,"_text":"Remove After Resolve ActivateItem 83  "}} 

 Player 1 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":83,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":652,"_text":"Response Remove After Resolve ActivateItem 83"},"childOfId":651} 

 Player 1 19:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":653,"_text":"Wait For Response From Player 2 "},"childOfId":651} 

 Player 1 19:51:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:51:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:51:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":653} 

 Player 1 19:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":654,"_text":"Wait For Response From Player 1 "},"childOfId":651} 

 Player 1 19:51:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":654} 

 Player 1 19:51:23 $ACTION_MASSAGE_REMOVE:  
{"id":652} 

 Player 1 19:51:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":655,"_text":"Stack Was Emptied "}} 

 Player 1 19:51:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:24 $SHOW_DECISION:  
{"startCardId":296,"endCardId":227} 

 Player 1 19:51:28 $NEXT_STACK_ID:  

 Player 1 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:51:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":84,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:51:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":84,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:51:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":656,"_text":"Add DeclareAttack 84 "}} 

 Player 1 19:51:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:51:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":84,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:51:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":657,"_text":"Response Adding DeclareAttack 84"},"childOfId":656} 

 Player 1 19:51:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":658,"_text":"Wait For Response From Player 1 "},"childOfId":656} 

 Player 1 19:51:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:28 $ACTION_MASSAGE_REMOVE:  
{"id":658} 

 Player 1 19:51:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":659,"_text":"Wait For Response From Player 2 "},"childOfId":656} 

 Player 1 19:51:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:51:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:51:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:51:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:51:28 $ACTION_MASSAGE_REMOVE:  
{"id":659} 

 Player 1 19:51:28 $ACTION_MASSAGE_REMOVE:  
{"id":657} 

 Player 1 19:51:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":660,"_text":"Resolve DeclareAttack 84 "}} 

 Player 1 19:51:28 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:51:28 $SHOW_CARD_PREVIEW:  
{"cardToShowId":236,"playerId":1} 

 Player 1 19:51:46 $FLIP_CARD:  
{"cardId":236} 

 Player 1 19:51:46 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":236} 

 Player 1 19:51:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":236,"monsterPlaceId":1} 

 Player 1 19:51:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":236,"particleType":5} 

 Player 1 19:51:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":19,"originStackId":84},"isAfterActivation":true,"index":19} 

 Player 1 19:51:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:51:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":84,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 19:51:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":84,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 19:51:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":661,"_text":"Remove After Resolve DeclareAttack 84  "}} 

 Player 1 19:51:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":84,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":236,"stackEffectType":4}} 

 Player 1 19:51:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":662,"_text":"Response Remove After Resolve DeclareAttack 84"},"childOfId":661} 

 Player 1 19:51:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":663,"_text":"Wait For Response From Player 2 "},"childOfId":661} 

 Player 1 19:51:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:51:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:51:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:51:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:51:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Cod Worm"} 

 Player 2 19:51:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Cod Worm"} 

 Player 2 19:51:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Cod Worm"} 

 Player 2 19:51:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Cod Worm"} 

 Player 2 19:51:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:51:47 $ACTION_MASSAGE_REMOVE:  
{"id":663} 

 Player 1 19:51:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":664,"_text":"Wait For Response From Player 1 "},"childOfId":661} 

 Player 1 19:51:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:51:47 $ACTION_MASSAGE_REMOVE:  
{"id":664} 

 Player 1 19:51:47 $ACTION_MASSAGE_REMOVE:  
{"id":662} 

 Player 1 19:51:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":665,"_text":"Stack Was Emptied "}} 

 Player 1 19:51:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:57 $NEXT_STACK_ID:  

 Player 1 19:51:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:51:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:51:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":85,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:51:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:51:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":85,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:51:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":666,"_text":"Add AttackRoll 85 "}} 

 Player 1 19:51:57 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:51:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:51:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:51:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:51:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:51:58 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 19:51:59 $UPDATE_STACK_VIS:  
{"stackId":85,"text":"player rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:51:59 $SHOW_DICE_ROLL:  
{"stackId":85} 

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":85,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":667,"_text":"Response Adding AttackRoll 85"},"childOfId":666} 

 Player 1 19:52:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":668,"_text":"Wait For Response From Player 1 "},"childOfId":666} 

 Player 1 19:52:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:02 $ACTION_MASSAGE_REMOVE:  
{"id":668} 

 Player 1 19:52:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":669,"_text":"Wait For Response From Player 2 "},"childOfId":666} 

 Player 1 19:52:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:02 $ACTION_MASSAGE_REMOVE:  
{"id":669} 

 Player 1 19:52:02 $ACTION_MASSAGE_REMOVE:  
{"id":667} 

 Player 1 19:52:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":670,"_text":"Resolve AttackRoll 85 "}} 

 Player 1 19:52:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":671,"_text":"Added 0 to original roll"}} 

 Player 1 19:52:02 $NEXT_STACK_ID:  

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":86,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":85,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":86,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":85,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:02 $REPLACE_STACK:  
{"currentStack":[{"entityId":86,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":85,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}]} 

 Player 1 19:52:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":20,"originStackId":85},"isAfterActivation":true,"index":20} 

 Player 1 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 2 vs Cod Worm<Monster>"} 

 Player 1 19:52:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":85,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 1 19:52:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":85,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":672,"_text":"Remove After Resolve AttackRoll 85  "}} 

 Player 1 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 1 19:52:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":85,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":673,"_text":"Response Remove After Resolve AttackRoll 85"},"childOfId":672} 

 Player 1 19:52:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":674,"_text":"Wait For Response From Player 1 "},"childOfId":672} 

 Player 1 19:52:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:03 $ACTION_MASSAGE_REMOVE:  
{"id":674} 

 Player 1 19:52:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":675,"_text":"Wait For Response From Player 2 "},"childOfId":672} 

 Player 1 19:52:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:03 $ACTION_MASSAGE_REMOVE:  
{"id":675} 

 Player 1 19:52:04 $ACTION_MASSAGE_REMOVE:  
{"id":673} 

 Player 1 19:52:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":676,"_text":"Resolve CombatDamage 86 "}} 

 Player 1 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to Samson"} 

 Player 1 19:52:04 $UPDATE_STACK_VIS:  
{"stackId":86,"text":"Cod Worm will deal 0 combat damage to Samson"} 

 Player 1 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to Samson"} 

 Player 1 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to Samson"} 

 Player 1 19:52:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":86,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":86,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":677,"_text":"Remove After Resolve CombatDamage 86  "}} 

 Player 1 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":86,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":678,"_text":"Response Remove After Resolve CombatDamage 86"},"childOfId":677} 

 Player 1 19:52:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":679,"_text":"Wait For Response From Player 2 "},"childOfId":677} 

 Player 1 19:52:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:04 $ACTION_MASSAGE_REMOVE:  
{"id":679} 

 Player 1 19:52:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":680,"_text":"Wait For Response From Player 1 "},"childOfId":677} 

 Player 1 19:52:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:04 $ACTION_MASSAGE_REMOVE:  
{"id":680} 

 Player 1 19:52:04 $ACTION_MASSAGE_REMOVE:  
{"id":678} 

 Player 1 19:52:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":681,"_text":"Stack Was Emptied "}} 

 Player 1 19:52:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:17 $NEXT_STACK_ID:  

 Player 1 19:52:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":87,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":87,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":682,"_text":"Add AttackRoll 87 "}} 

 Player 1 19:52:17 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:52:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:52:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:52:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:18 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 19:52:18 $UPDATE_STACK_VIS:  
{"stackId":87,"text":"player rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:18 $SHOW_DICE_ROLL:  
{"stackId":87} 

 Player 1 19:52:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":87,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":683,"_text":"Response Adding AttackRoll 87"},"childOfId":682} 

 Player 1 19:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":684,"_text":"Wait For Response From Player 1 "},"childOfId":682} 

 Player 1 19:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":684} 

 Player 1 19:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":685,"_text":"Wait For Response From Player 2 "},"childOfId":682} 

 Player 1 19:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":685} 

 Player 1 19:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":683} 

 Player 1 19:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":686,"_text":"Resolve AttackRoll 87 "}} 

 Player 1 19:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":687,"_text":"Added 0 to original roll"}} 

 Player 1 19:52:22 $NEXT_STACK_ID:  

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":88,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":87,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":88,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":87,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $REPLACE_STACK:  
{"currentStack":[{"entityId":88,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":87,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}]} 

 Player 1 19:52:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":21,"originStackId":87},"isAfterActivation":true,"index":21} 

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":87,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 1 19:52:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":87,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":688,"_text":"Remove After Resolve AttackRoll 87  "}} 

 Player 1 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 1 19:52:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":87,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":689,"_text":"Response Remove After Resolve AttackRoll 87"},"childOfId":688} 

 Player 1 19:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":690,"_text":"Wait For Response From Player 1 "},"childOfId":688} 

 Player 1 19:52:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:23 $ACTION_MASSAGE_REMOVE:  
{"id":690} 

 Player 1 19:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":691,"_text":"Wait For Response From Player 2 "},"childOfId":688} 

 Player 1 19:52:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:23 $ACTION_MASSAGE_REMOVE:  
{"id":691} 

 Player 1 19:52:23 $ACTION_MASSAGE_REMOVE:  
{"id":689} 

 Player 1 19:52:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":692,"_text":"Resolve CombatDamage 88 "}} 

 Player 1 19:52:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to Samson"} 

 Player 1 19:52:24 $UPDATE_STACK_VIS:  
{"stackId":88,"text":"Cod Worm will deal 0 combat damage to Samson"} 

 Player 1 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to Samson"} 

 Player 1 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm 0 combat damage to Samson"} 

 Player 1 19:52:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":88,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":88,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":693,"_text":"Remove After Resolve CombatDamage 88  "}} 

 Player 1 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":88,"creatorCardId":296,"entityToDoDamageCardId":236,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":694,"_text":"Response Remove After Resolve CombatDamage 88"},"childOfId":693} 

 Player 1 19:52:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":695,"_text":"Wait For Response From Player 2 "},"childOfId":693} 

 Player 1 19:52:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cod Worm combat damage to Samson"} 

 Player 2 19:52:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:24 $ACTION_MASSAGE_REMOVE:  
{"id":695} 

 Player 1 19:52:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":696,"_text":"Wait For Response From Player 1 "},"childOfId":693} 

 Player 1 19:52:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:24 $ACTION_MASSAGE_REMOVE:  
{"id":696} 

 Player 1 19:52:24 $ACTION_MASSAGE_REMOVE:  
{"id":694} 

 Player 1 19:52:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":697,"_text":"Stack Was Emptied "}} 

 Player 1 19:52:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:42 $NEXT_STACK_ID:  

 Player 1 19:52:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":698,"_text":"Add AttackRoll 89 "}} 

 Player 1 19:52:43 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:52:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:52:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:52:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:43 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 19:52:44 $UPDATE_STACK_VIS:  
{"stackId":89,"text":"player rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:44 $SHOW_DICE_ROLL:  
{"stackId":89} 

 Player 1 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":699,"_text":"Response Adding AttackRoll 89"},"childOfId":698} 

 Player 1 19:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":700,"_text":"Wait For Response From Player 1 "},"childOfId":698} 

 Player 1 19:52:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":700} 

 Player 1 19:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":701,"_text":"Wait For Response From Player 2 "},"childOfId":698} 

 Player 1 19:52:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":701} 

 Player 1 19:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":699} 

 Player 1 19:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":702,"_text":"Resolve AttackRoll 89 "}} 

 Player 1 19:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":703,"_text":"Added 0 to original roll"}} 

 Player 1 19:52:47 $NEXT_STACK_ID:  

 Player 1 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:48 $REPLACE_STACK:  
{"currentStack":[{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}]} 

 Player 1 19:52:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":22,"originStackId":89},"isAfterActivation":true,"index":22} 

 Player 1 19:52:48 $NEXT_STACK_ID:  

 Player 1 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster>"} 

 Player 1 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 19:52:48 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 19:52:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:52:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":704,"_text":"Add ActivatePassiveEffect 91 "}} 

 Player 1 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 19:52:48 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:52:48 $END_PUT_ON_STACK:  
{"playerId":1} 

 Player 1 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 19:52:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 19:52:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":705,"_text":"Response Adding ActivatePassiveEffect 91"},"childOfId":704} 

 Player 1 19:52:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":706,"_text":"Wait For Response From Player 1 "},"childOfId":704} 

 Player 1 19:52:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:49 $ACTION_MASSAGE_REMOVE:  
{"id":706} 

 Player 1 19:52:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":707,"_text":"Wait For Response From Player 2 "},"childOfId":704} 

 Player 1 19:52:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:49 $ACTION_MASSAGE_REMOVE:  
{"id":707} 

 Player 1 19:52:49 $ACTION_MASSAGE_REMOVE:  
{"id":705} 

 Player 1 19:52:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":708,"_text":"Resolve ActivatePassiveEffect 91 "}} 

 Player 1 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:49 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236},{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 19:52:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 19:52:51 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":290} 

 Player 2 19:52:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":36,"originStackId":-1},"isAfterActivation":true,"index":36} 

 Player 2 19:52:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":6}},{"type":2,"number":{"type":2,"number":1}},{"type":2,"number":{"type":2,"number":5}}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":22},"isAfterActivation":true,"index":22} 

 Player 2 19:52:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:52:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:51 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236},{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 19:52:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 rolled 3 vs Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 1 19:52:52 $REPLACE_STACK:  
{"currentStack":[{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236},{"effectCollectedData":null,"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:52:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":709,"_text":"Remove After Resolve ActivatePassiveEffect 91  "}} 

 Player 1 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":22,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:52:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":710,"_text":"Response Remove After Resolve ActivatePassiveEffect 91"},"childOfId":709} 

 Player 1 19:52:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":711,"_text":"Wait For Response From Player 2 "},"childOfId":709} 

 Player 1 19:52:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster> \n3:Activate Ipecac "} 

 Player 2 19:52:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:53 $ACTION_MASSAGE_REMOVE:  
{"id":711} 

 Player 1 19:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":712,"_text":"Wait For Response From Player 1 "},"childOfId":709} 

 Player 1 19:52:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:53 $ACTION_MASSAGE_REMOVE:  
{"id":712} 

 Player 1 19:52:53 $ACTION_MASSAGE_REMOVE:  
{"id":710} 

 Player 1 19:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":713,"_text":"Resolve AttackRoll 89 "}} 

 Player 1 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 1 19:52:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 1 19:52:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":714,"_text":"Remove After Resolve AttackRoll 89  "}} 

 Player 1 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 1 19:52:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":89,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":236}} 

 Player 1 19:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":715,"_text":"Response Remove After Resolve AttackRoll 89"},"childOfId":714} 

 Player 1 19:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":716,"_text":"Wait For Response From Player 1 "},"childOfId":714} 

 Player 1 19:52:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:53 $ACTION_MASSAGE_REMOVE:  
{"id":716} 

 Player 1 19:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":717,"_text":"Wait For Response From Player 2 "},"childOfId":714} 

 Player 1 19:52:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:Player 1 is rolling against Cod Worm<Monster>"} 

 Player 2 19:52:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:54 $ACTION_MASSAGE_REMOVE:  
{"id":717} 

 Player 1 19:52:54 $ACTION_MASSAGE_REMOVE:  
{"id":715} 

 Player 1 19:52:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":718,"_text":"Resolve CombatDamage 90 "}} 

 Player 1 19:52:54 $UPDATE_STACK_VIS:  
{"stackId":90,"text":"Samson will deal 3 combat damage to Cod Worm"} 

 Player 1 19:52:54 $MONSTER_GET_DAMAGED:  
{"cardId":236,"hpLeft":0,"damageDealerId":296} 

 Player 1 19:52:54 $NEXT_STACK_ID:  

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 1 19:52:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 1 19:52:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 1 19:52:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 1 19:52:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 1 19:52:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 1 19:52:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}]} 

 Player 1 19:52:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":236,"scopeIsPlayer":false,"index":23,"originStackId":-1},"isAfterActivation":true,"index":23} 

 Player 1 19:52:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":3},{"type":2},{"type":0,"number":296},{"type":0,"number":236}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":24,"originStackId":90},"isAfterActivation":true,"index":24} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 1 19:52:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 19:52:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":719,"_text":"Remove After Resolve CombatDamage 90  "}} 

 Player 1 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 19:52:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":90,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":236,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:52:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":720,"_text":"Response Remove After Resolve CombatDamage 90"},"childOfId":719} 

 Player 1 19:52:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":721,"_text":"Wait For Response From Player 1 "},"childOfId":719} 

 Player 1 19:52:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:54 $ACTION_MASSAGE_REMOVE:  
{"id":721} 

 Player 1 19:52:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":722,"_text":"Wait For Response From Player 2 "},"childOfId":719} 

 Player 1 19:52:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm"} 

 Player 2 19:52:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 2 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Cod Worm \n2:[object Object] killed by Samson"} 

 Player 2 19:52:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:55 $ACTION_MASSAGE_REMOVE:  
{"id":722} 

 Player 1 19:52:55 $ACTION_MASSAGE_REMOVE:  
{"id":720} 

 Player 1 19:52:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":723,"_text":"Resolve MonsterDeath 92 "}} 

 Player 1 19:52:55 $DISABLE_PARTICLE_EFFECT:  
{"cardId":236,"particleType":5} 

 Player 1 19:52:55 $CANCEL_ATTACK:  

 Player 1 19:52:55 $NEXT_STACK_ID:  

 Player 1 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 19:52:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:52:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":93,"creatorCardId":296,"monsterCardWithRewardId":236,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:52:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}} 

 Player 1 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:52:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":93,"creatorCardId":296,"monsterCardWithRewardId":236,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:52:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}} 

 Player 1 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:52:55 $REPLACE_STACK:  
{"currentStack":[{"entityId":93,"creatorCardId":296,"monsterCardWithRewardId":236,"playerCardIdToReward":296,"stackEffectType":7},{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}]} 

 Player 1 19:52:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:52:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}} 

 Player 1 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 1 19:52:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}} 

 Player 1 19:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":724,"_text":"Remove After Resolve MonsterDeath 92  "}} 

 Player 1 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 1 19:52:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":92,"creatorCardId":296,"monsterToDieCardId":236,"stackEffectType":5,"killerId":296}} 

 Player 1 19:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":725,"_text":"Response Remove After Resolve MonsterDeath 92"},"childOfId":724} 

 Player 1 19:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":726,"_text":"Wait For Response From Player 1 "},"childOfId":724} 

 Player 1 19:52:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:52:56 $ACTION_MASSAGE_REMOVE:  
{"id":726} 

 Player 1 19:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":727,"_text":"Wait For Response From Player 2 "},"childOfId":724} 

 Player 1 19:52:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:52:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:52:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:52:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:52:56 $ACTION_MASSAGE_REMOVE:  
{"id":727} 

 Player 1 19:52:56 $ACTION_MASSAGE_REMOVE:  
{"id":725} 

 Player 1 19:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":728,"_text":"Resolve MonsterRewardStackEffect 93 "}} 

 Player 1 19:52:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":236,"scopeIsPlayer":false,"index":25,"originStackId":93},"isAfterActivation":true,"index":25} 

 Player 1 19:52:57 $SET_MONEY:  
{"playerId":1,"numOfCoins":4} 

 Player 1 19:52:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":26,"originStackId":-1},"isAfterActivation":true,"index":26} 

 Player 1 19:52:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:52:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":93,"creatorCardId":296,"monsterCardWithRewardId":236,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 19:52:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":729,"_text":"Fizzle MonsterRewardStackEffect 93"}} 

 Player 1 19:52:57 $FIZZLE_STACK_EFFECT:  
{"entityId":93} 

 Player 1 19:52:57 $MOVE_CARD:  
{"moveIndex":57,"cardId":236,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:52:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Cod Worm<Monster> reward"} 

 Player 2 19:52:57 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:52:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:52:57 $MOVE_CARD_END:  
{"moveIndex":57,"cardId":236,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:52:57 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":236} 

 Player 1 19:52:57 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":236} 

 Player 1 19:52:57 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 1 19:52:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":730,"_text":"Stack Was Emptied "}} 

 Player 1 19:52:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:53:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:53:43 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 19:53:43 $END_TURN:  

 Player 1 19:53:43 $SET_TURN:  
{"playerId":2} 

 Player 1 19:53:43 $START_TURN:  
{"playerId":2} 

 Player 2 19:53:43 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:53:43 $RECHARGE_ITEM:  
{"cardId":291} 

 Player 2 19:53:43 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":291} 

 Player 2 19:53:43 $RECHARGE_ITEM:  
{"cardId":220} 

 Player 2 19:53:43 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":220} 

 Player 2 19:53:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:53:43 $NEXT_STACK_ID:  

 Player 2 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:53:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:53:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:53:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":731,"_text":"Add StartTurnLoot 94 "}} 

 Player 2 19:53:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:53:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:53:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":732,"_text":"Response Adding StartTurnLoot 94"},"childOfId":731} 

 Player 2 19:53:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":733,"_text":"Wait For Response From Player 2 "},"childOfId":731} 

 Player 2 19:53:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:53:43 $ACTION_MASSAGE_REMOVE:  
{"id":733} 

 Player 2 19:53:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":734,"_text":"Wait For Response From Player 1 "},"childOfId":731} 

 Player 2 19:53:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:53:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:53:43 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:53:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:53:44 $ACTION_MASSAGE_REMOVE:  
{"id":734} 

 Player 2 19:53:44 $ACTION_MASSAGE_REMOVE:  
{"id":732} 

 Player 2 19:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":735,"_text":"Resolve StartTurnLoot 94 "}} 

 Player 2 19:53:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:53:44 $MOVE_CARD:  
{"moveIndex":58,"cardId":15,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:53:44 $MOVE_CARD_END:  
{"moveIndex":58,"cardId":15,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:53:44 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":15} 

 Player 2 19:53:44 $FLIP_CARD:  
{"cardId":15} 

 Player 2 19:53:44 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":15} 

 Player 2 19:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:53:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:53:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:53:44 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":736,"_text":"Remove After Resolve StartTurnLoot 94  "}} 

 Player 2 19:53:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:53:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":94,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":737,"_text":"Response Remove After Resolve StartTurnLoot 94"},"childOfId":736} 

 Player 2 19:53:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":738,"_text":"Wait For Response From Player 1 "},"childOfId":736} 

 Player 2 19:53:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:53:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:53:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:53:45 $ACTION_MASSAGE_REMOVE:  
{"id":738} 

 Player 2 19:53:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":739,"_text":"Wait For Response From Player 2 "},"childOfId":736} 

 Player 2 19:53:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:53:45 $ACTION_MASSAGE_REMOVE:  
{"id":739} 

 Player 2 19:53:45 $ACTION_MASSAGE_REMOVE:  
{"id":737} 

 Player 2 19:53:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":740,"_text":"Stack Was Emptied "}} 

 Player 2 19:53:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:54:45 $SHOW_DECISION:  
{"startCardId":290,"endCardId":227} 

 Player 2 19:54:48 $NEXT_STACK_ID:  

 Player 2 19:54:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:54:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 19:54:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 19:54:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 19:54:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 19:54:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":741,"_text":"Add DeclareAttack 95 "}} 

 Player 2 19:54:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:54:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 19:54:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 19:54:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":742,"_text":"Response Adding DeclareAttack 95"},"childOfId":741} 

 Player 2 19:54:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":743,"_text":"Wait For Response From Player 2 "},"childOfId":741} 

 Player 2 19:54:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:54:48 $ACTION_MASSAGE_REMOVE:  
{"id":743} 

 Player 2 19:54:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":744,"_text":"Wait For Response From Player 1 "},"childOfId":741} 

 Player 2 19:54:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:54:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:54:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:54:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:54:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:54:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:54:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:54:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:54:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:54:49 $ACTION_MASSAGE_REMOVE:  
{"id":744} 

 Player 2 19:54:49 $ACTION_MASSAGE_REMOVE:  
{"id":742} 

 Player 2 19:54:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":745,"_text":"Resolve DeclareAttack 95 "}} 

 Player 2 19:54:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:54:49 $SHOW_CARD_PREVIEW:  
{"cardToShowId":274,"playerId":2} 

 Player 2 19:54:57 $FLIP_CARD:  
{"cardId":274} 

 Player 2 19:54:57 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":274} 

 Player 2 19:54:57 $NEW_MONSTER_ON_PLACE:  
{"cardId":274,"monsterPlaceId":2} 

 Player 2 19:54:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":274,"particleType":5} 

 Player 2 19:54:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":37,"originStackId":95},"isAfterActivation":true,"index":37} 

 Player 2 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 19:54:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 2 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:54:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 2 19:54:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":746,"_text":"Remove After Resolve DeclareAttack 95  "}} 

 Player 2 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:54:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":95,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":274,"stackEffectType":4}} 

 Player 2 19:54:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":747,"_text":"Response Remove After Resolve DeclareAttack 95"},"childOfId":746} 

 Player 2 19:54:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":748,"_text":"Wait For Response From Player 1 "},"childOfId":746} 

 Player 2 19:54:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:54:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on The Cage"} 

 Player 1 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on The Cage"} 

 Player 1 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on The Cage"} 

 Player 1 19:54:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on The Cage"} 

 Player 1 19:54:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:54:58 $ACTION_MASSAGE_REMOVE:  
{"id":748} 

 Player 2 19:54:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":749,"_text":"Wait For Response From Player 2 "},"childOfId":746} 

 Player 2 19:54:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:54:58 $ACTION_MASSAGE_REMOVE:  
{"id":749} 

 Player 2 19:54:58 $ACTION_MASSAGE_REMOVE:  
{"id":747} 

 Player 2 19:54:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":750,"_text":"Stack Was Emptied "}} 

 Player 2 19:54:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:55:03 $NEXT_STACK_ID:  

 Player 2 19:55:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:55:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:55:03 $ADD_TO_STACK:  
{"stackEffect":{"entityId":96,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:55:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:55:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":96,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:55:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":751,"_text":"Add AttackRoll 96 "}} 

 Player 2 19:55:03 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:55:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:55:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:55:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:55:05 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 19:55:05 $UPDATE_STACK_VIS:  
{"stackId":96,"text":"player rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:05 $SHOW_DICE_ROLL:  
{"stackId":96} 

 Player 2 19:55:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:55:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":752,"_text":"Response Adding AttackRoll 96"},"childOfId":751} 

 Player 2 19:55:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":753,"_text":"Wait For Response From Player 2 "},"childOfId":751} 

 Player 2 19:55:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:55:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:55:10 $SHOW_DECISION:  
{"startCardId":290,"endCardId":291} 

 Player 2 19:55:13 $NEXT_STACK_ID:  

 Player 2 19:55:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:55:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:55:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:55:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:55:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":754,"_text":"Add ActivateItem 97 "}} 

 Player 2 19:55:13 $USE_ITEM:  
{"cardId":291} 

 Player 2 19:55:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:55:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:55:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":755,"_text":"Response Adding ActivateItem 97"},"childOfId":754} 

 Player 2 19:55:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":756,"_text":"Wait For Response From Player 2 "},"childOfId":754} 

 Player 2 19:55:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:55:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:55:16 $ACTION_MASSAGE_REMOVE:  
{"id":756} 

 Player 2 19:55:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":757,"_text":"Wait For Response From Player 1 "},"childOfId":754} 

 Player 2 19:55:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:16 $ACTION_MASSAGE_REMOVE:  
{"id":757} 

 Player 2 19:55:16 $ACTION_MASSAGE_REMOVE:  
{"id":755} 

 Player 2 19:55:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":758,"_text":"Resolve ActivateItem 97 "}} 

 Player 2 19:55:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 19:55:18 $DISABLE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 19:55:18 $ROLL_DICE:  
{"playerId":2} 

 Player 2 19:55:19 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":0} 

 Player 2 19:55:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:55:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:55:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:55:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":759,"_text":"Remove After Resolve ActivateItem 97  "}} 

 Player 2 19:55:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":97,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:55:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":760,"_text":"Response Remove After Resolve ActivateItem 97"},"childOfId":759} 

 Player 2 19:55:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":761,"_text":"Wait For Response From Player 1 "},"childOfId":759} 

 Player 2 19:55:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:55:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:20 $ACTION_MASSAGE_REMOVE:  
{"id":761} 

 Player 2 19:55:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":762,"_text":"Wait For Response From Player 2 "},"childOfId":759} 

 Player 2 19:55:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:24 $ACTION_MASSAGE_REMOVE:  
{"id":762} 

 Player 2 19:55:24 $ACTION_MASSAGE_REMOVE:  
{"id":760} 

 Player 2 19:55:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":763,"_text":"Resolve AttackRoll 96 "}} 

 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":764,"_text":"Added -1 to original roll"}} 

 Player 2 19:55:25 $NEXT_STACK_ID:  

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:25 $REPLACE_STACK:  
{"currentStack":[{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}]} 

 Player 2 19:55:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":38,"originStackId":96},"isAfterActivation":true,"index":38} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 4 vs The Cage<Monster>"} 

 Player 2 19:55:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 2 19:55:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":765,"_text":"Remove After Resolve AttackRoll 96  "}} 

 Player 2 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 2 19:55:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":96,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":766,"_text":"Response Remove After Resolve AttackRoll 96"},"childOfId":765} 

 Player 2 19:55:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":767,"_text":"Wait For Response From Player 2 "},"childOfId":765} 

 Player 2 19:55:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:55:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:55:26 $ACTION_MASSAGE_REMOVE:  
{"id":767} 

 Player 2 19:55:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":768,"_text":"Wait For Response From Player 1 "},"childOfId":765} 

 Player 2 19:55:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:27 $ACTION_MASSAGE_REMOVE:  
{"id":768} 

 Player 2 19:55:27 $ACTION_MASSAGE_REMOVE:  
{"id":766} 

 Player 2 19:55:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":769,"_text":"Resolve CombatDamage 98 "}} 

 Player 2 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:55:27 $UPDATE_STACK_VIS:  
{"stackId":98,"text":"The Cage will deal 1 combat damage to Isaac"} 

 Player 2 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:55:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 

 Player 2 19:55:27 $NEXT_STACK_ID:  

 Player 2 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:27 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:55:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":770,"_text":"Add ActivatePassiveEffect 99 "}} 

 Player 2 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:55:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":771,"_text":"Response Adding ActivatePassiveEffect 99"},"childOfId":770} 

 Player 2 19:55:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":772,"_text":"Wait For Response From Player 1 "},"childOfId":770} 

 Player 2 19:55:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:28 $ACTION_MASSAGE_REMOVE:  
{"id":772} 

 Player 2 19:55:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":773,"_text":"Wait For Response From Player 2 "},"childOfId":770} 

 Player 2 19:55:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:29 $ACTION_MASSAGE_REMOVE:  
{"id":773} 

 Player 2 19:55:29 $ACTION_MASSAGE_REMOVE:  
{"id":771} 

 Player 2 19:55:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":774,"_text":"Resolve ActivatePassiveEffect 99 "}} 

 Player 2 19:55:29 $NEXT_STACK_ID:  

 Player 2 19:55:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 

 Player 2 19:55:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 

 Player 2 19:55:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 19:55:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 

 Player 2 19:55:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 

 Player 2 19:55:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 19:55:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":775,"_text":"Add RollDiceStackEffect 100 "}} 

 Player 2 19:55:30 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 2 19:55:31 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 19:55:31 $UPDATE_STACK_VIS:  
{"stackId":100,"text":"player 2 rolled 6"} 

 Player 2 19:55:31 $SHOW_DICE_ROLL:  
{"stackId":100} 

 Player 2 19:55:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 

 Player 2 19:55:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 

 Player 2 19:55:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 

 Player 2 19:55:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 2 19:55:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":776,"_text":"Response Adding RollDiceStackEffect 100"},"childOfId":775} 

 Player 2 19:55:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":777,"_text":"Wait For Response From Player 2 "},"childOfId":775} 

 Player 2 19:55:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:55:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 2 19:55:35 $ACTION_MASSAGE_REMOVE:  
{"id":777} 

 Player 2 19:55:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":778,"_text":"Wait For Response From Player 1 "},"childOfId":775} 

 Player 2 19:55:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:35 $ACTION_MASSAGE_REMOVE:  
{"id":778} 

 Player 2 19:55:35 $ACTION_MASSAGE_REMOVE:  
{"id":776} 

 Player 2 19:55:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":779,"_text":"Resolve RollDiceStackEffect 100 "}} 

 Player 2 19:55:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":39,"originStackId":100},"isAfterActivation":true,"index":39} 

 Player 2 19:55:35 $NEXT_STACK_ID:  

 Player 2 19:55:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 

 Player 2 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:55:36 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:55:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:55:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":780,"_text":"Add ActivatePassiveEffect 101 "}} 

 Player 2 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:55:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:55:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":781,"_text":"Response Adding ActivatePassiveEffect 101"},"childOfId":780} 

 Player 2 19:55:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":782,"_text":"Wait For Response From Player 1 "},"childOfId":780} 

 Player 2 19:55:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:36 $ACTION_MASSAGE_REMOVE:  
{"id":782} 

 Player 2 19:55:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":783,"_text":"Wait For Response From Player 2 "},"childOfId":780} 

 Player 2 19:55:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:37 $ACTION_MASSAGE_REMOVE:  
{"id":783} 

 Player 2 19:55:37 $ACTION_MASSAGE_REMOVE:  
{"id":781} 

 Player 2 19:55:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":784,"_text":"Resolve ActivatePassiveEffect 101 "}} 

 Player 2 19:55:37 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 19:55:39 $DISABLE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 19:55:39 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":290} 

 Player 2 19:55:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":40,"originStackId":-1},"isAfterActivation":true,"index":40} 

 Player 2 19:55:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":39,"originStackId":100},"isAfterActivation":true,"index":39} 

 Player 2 19:55:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6 \n4:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 2 19:55:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:55:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 

 Player 2 19:55:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:55:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":785,"_text":"Remove After Resolve ActivatePassiveEffect 101  "}} 

 Player 2 19:55:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 

 Player 2 19:55:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":101,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":39,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 19:55:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":786,"_text":"Response Remove After Resolve ActivatePassiveEffect 101"},"childOfId":785} 

 Player 2 19:55:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":787,"_text":"Wait For Response From Player 2 "},"childOfId":785} 

 Player 2 19:55:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:55:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 1 19:55:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice \n4:Activate Ipecac "} 

 Player 2 19:55:50 $ACTION_MASSAGE_REMOVE:  
{"id":787} 

 Player 2 19:55:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":788,"_text":"Wait For Response From Player 1 "},"childOfId":785} 

 Player 2 19:55:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:50 $ACTION_MASSAGE_REMOVE:  
{"id":788} 

 Player 2 19:55:50 $ACTION_MASSAGE_REMOVE:  
{"id":786} 

 Player 2 19:55:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":789,"_text":"Resolve RollDiceStackEffect 100 "}} 

 Player 2 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 

 Player 2 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 6"} 

 Player 2 19:55:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 2 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":790,"_text":"Remove After Resolve RollDiceStackEffect 100  "}} 

 Player 2 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":100,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":6,"stackEffectType":11}} 

 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":791,"_text":"Response Remove After Resolve RollDiceStackEffect 100"},"childOfId":790} 

 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":792,"_text":"Wait For Response From Player 1 "},"childOfId":790} 

 Player 2 19:55:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:55:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:51 $ACTION_MASSAGE_REMOVE:  
{"id":792} 

 Player 2 19:55:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":793,"_text":"Wait For Response From Player 2 "},"childOfId":790} 

 Player 2 19:55:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:53 $ACTION_MASSAGE_REMOVE:  
{"id":793} 

 Player 2 19:55:53 $ACTION_MASSAGE_REMOVE:  
{"id":791} 

 Player 2 19:55:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":794,"_text":"Resolve ActivatePassiveEffect 99 "}} 

 Player 2 19:55:53 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 19:55:55 $DISABLE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 19:55:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":0},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 

 Player 2 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:55:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:55:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:55:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":795,"_text":"Remove After Resolve ActivatePassiveEffect 99  "}} 

 Player 2 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:55:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":99,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:55:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":796,"_text":"Response Remove After Resolve ActivatePassiveEffect 99"},"childOfId":795} 

 Player 2 19:55:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":797,"_text":"Wait For Response From Player 2 "},"childOfId":795} 

 Player 2 19:55:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:55:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 2 19:55:56 $ACTION_MASSAGE_REMOVE:  
{"id":797} 

 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":798,"_text":"Wait For Response From Player 1 "},"childOfId":795} 

 Player 2 19:55:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:56 $ACTION_MASSAGE_REMOVE:  
{"id":798} 

 Player 2 19:55:56 $ACTION_MASSAGE_REMOVE:  
{"id":796} 

 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":799,"_text":"Resolve CombatDamage 98 "}} 

 Player 2 19:55:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":0},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:55:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:55:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":800,"_text":"Remove After Resolve CombatDamage 98  "}} 

 Player 2 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:55:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":98,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":801,"_text":"Response Remove After Resolve CombatDamage 98"},"childOfId":800} 

 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":802,"_text":"Wait For Response From Player 1 "},"childOfId":800} 

 Player 2 19:55:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:55:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:55:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:55:56 $ACTION_MASSAGE_REMOVE:  
{"id":802} 

 Player 2 19:55:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":803,"_text":"Wait For Response From Player 2 "},"childOfId":800} 

 Player 2 19:55:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:55:57 $ACTION_MASSAGE_REMOVE:  
{"id":803} 

 Player 2 19:55:57 $ACTION_MASSAGE_REMOVE:  
{"id":801} 

 Player 2 19:55:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":804,"_text":"Stack Was Emptied "}} 

 Player 2 19:55:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:55:57 $ACTION_MASSAGE_REMOVE:  
{"id":753} 

 Player 2 19:55:57 $ACTION_MASSAGE_REMOVE:  
{"id":752} 

 Player 2 19:56:00 $NEXT_STACK_ID:  

 Player 2 19:56:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:56:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:56:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:56:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":805,"_text":"Add AttackRoll 102 "}} 

 Player 2 19:56:00 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:56:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:56:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:56:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:56:02 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 19:56:02 $UPDATE_STACK_VIS:  
{"stackId":102,"text":"player rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:02 $SHOW_DICE_ROLL:  
{"stackId":102} 

 Player 2 19:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":806,"_text":"Response Adding AttackRoll 102"},"childOfId":805} 

 Player 2 19:56:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":807,"_text":"Wait For Response From Player 2 "},"childOfId":805} 

 Player 2 19:56:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:56:07 $SHOW_DECISION:  
{"startCardId":290,"endCardId":290} 

 Player 2 19:56:10 $NEXT_STACK_ID:  

 Player 2 19:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 19:56:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 19:56:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:56:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":808,"_text":"Add ActivateItem 103 "}} 

 Player 1 19:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 19:56:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 19:56:12 $SHOW_DECISION:  
{"startCardId":290,"endCardId":95,"flipEndCard":true} 

 Player 2 19:56:15 $USE_ITEM:  
{"cardId":290} 

 Player 2 19:56:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 19:56:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":809,"_text":"Response Adding ActivateItem 103"},"childOfId":808} 

 Player 2 19:56:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":810,"_text":"Wait For Response From Player 2 "},"childOfId":808} 

 Player 2 19:56:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 19:56:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 19:56:18 $ACTION_MASSAGE_REMOVE:  
{"id":810} 

 Player 2 19:56:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":811,"_text":"Wait For Response From Player 1 "},"childOfId":808} 

 Player 2 19:56:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:18 $ACTION_MASSAGE_REMOVE:  
{"id":811} 

 Player 2 19:56:18 $ACTION_MASSAGE_REMOVE:  
{"id":809} 

 Player 2 19:56:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":812,"_text":"Resolve ActivateItem 103 "}} 

 Player 2 19:56:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 19:56:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 19:56:20 $NEXT_STACK_ID:  

 Player 2 19:56:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 2 19:56:20 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":95} 

 Player 2 19:56:20 $MOVE_CARD:  
{"moveIndex":59,"cardId":95,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:56:21 $MOVE_CARD_END:  
{"moveIndex":59,"cardId":95,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:56:21 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":95} 

 Player 2 19:56:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:25 $SHOW_DECISION:  
{"startCardId":95,"endCardId":291} 

 Player 2 19:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":95,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":95,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $REPLACE_STACK:  
{"currentStack":[{"entityId":102,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274},{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":95,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects \n3:Player 2 activated Isaac"} 

 Player 2 19:56:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects"} 

 Player 2 19:56:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":813,"_text":"Remove After Resolve ActivateItem 103  "}} 

 Player 2 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects"} 

 Player 2 19:56:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":103,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":814,"_text":"Response Remove After Resolve ActivateItem 103"},"childOfId":813} 

 Player 2 19:56:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":815,"_text":"Wait For Response From Player 2 "},"childOfId":813} 

 Player 2 19:56:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated Isaac"} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny  \n3:Player 2 activated Isaac"} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny  \n3:Player 2 activated Isaac"} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny  \n3:Player 2 activated Isaac"} 

 Player 1 19:56:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny  \n3:Player 2 activated Isaac"} 

 Player 1 19:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny  \n3:Player 2 activated Isaac"} 

 Player 1 19:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny  \n3:Player 2 activated Isaac"} 

 Player 2 19:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":815} 

 Player 2 19:56:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":816,"_text":"Wait For Response From Player 1 "},"childOfId":813} 

 Player 2 19:56:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":816} 

 Player 2 19:56:29 $ACTION_MASSAGE_REMOVE:  
{"id":814} 

 Player 2 19:56:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":817,"_text":"Resolve PlayLootCardStackEffect 104 "}} 

 Player 2 19:56:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects"} 

 Player 2 19:56:29 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":95,"particleType":6} 

 Player 2 19:56:31 $DISABLE_PARTICLE_EFFECT:  
{"cardId":95,"particleType":6} 

 Player 2 19:56:31 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 19:56:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":41,"originStackId":-1},"isAfterActivation":true,"index":41} 

 Player 2 19:56:31 $RECHARGE_ITEM:  
{"cardId":291} 

 Player 2 19:56:31 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":291} 

 Player 2 19:56:31 $REMOVE_FROM_PILE:  
{"cardId":95} 

 Player 2 19:56:31 $MOVE_CARD:  
{"moveIndex":60,"cardId":95,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 19:56:32 $MOVE_CARD_END:  
{"moveIndex":60,"cardId":95,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:56:32 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":95} 

 Player 2 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 play Charged Penny: ChainEffects"} 

 Player 2 19:56:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:56:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":818,"_text":"Remove After Resolve PlayLootCardStackEffect 104  "}} 

 Player 2 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":104,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":95,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 19:56:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":819,"_text":"Response Remove After Resolve PlayLootCardStackEffect 104"},"childOfId":818} 

 Player 2 19:56:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":820,"_text":"Wait For Response From Player 1 "},"childOfId":818} 

 Player 2 19:56:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 play Charged Penny "} 

 Player 1 19:56:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:32 $ACTION_MASSAGE_REMOVE:  
{"id":820} 

 Player 2 19:56:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":821,"_text":"Wait For Response From Player 2 "},"childOfId":818} 

 Player 2 19:56:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:34 $SHOW_DECISION:  
{"startCardId":290,"endCardId":291} 

 Player 2 19:56:37 $NEXT_STACK_ID:  

 Player 2 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:56:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:56:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 19:56:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":822,"_text":"Add ActivateItem 105 "}} 

 Player 2 19:56:37 $USE_ITEM:  
{"cardId":291} 

 Player 2 19:56:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:56:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":823,"_text":"Response Adding ActivateItem 105"},"childOfId":822} 

 Player 2 19:56:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":824,"_text":"Wait For Response From Player 2 "},"childOfId":822} 

 Player 2 19:56:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:37 $ACTION_MASSAGE_REMOVE:  
{"id":824} 

 Player 2 19:56:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":825,"_text":"Wait For Response From Player 1 "},"childOfId":822} 

 Player 2 19:56:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:38 $ACTION_MASSAGE_REMOVE:  
{"id":825} 

 Player 2 19:56:38 $ACTION_MASSAGE_REMOVE:  
{"id":823} 

 Player 2 19:56:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":826,"_text":"Resolve ActivateItem 105 "}} 

 Player 2 19:56:38 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 19:56:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 19:56:40 $ROLL_DICE:  
{"playerId":2} 

 Player 2 19:56:41 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 19:56:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 2 19:56:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":827,"_text":"Remove After Resolve ActivateItem 105  "}} 

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":105,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":828,"_text":"Response Remove After Resolve ActivateItem 105"},"childOfId":827} 

 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":829,"_text":"Wait For Response From Player 1 "},"childOfId":827} 

 Player 2 19:56:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster> \n2:Player 2 activated The D6"} 

 Player 1 19:56:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:42 $ACTION_MASSAGE_REMOVE:  
{"id":829} 

 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":830,"_text":"Wait For Response From Player 2 "},"childOfId":827} 

 Player 2 19:56:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:42 $ACTION_MASSAGE_REMOVE:  
{"id":830} 

 Player 2 19:56:42 $ACTION_MASSAGE_REMOVE:  
{"id":828} 

 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":831,"_text":"Resolve AttackRoll 102 "}} 

 Player 2 19:56:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":832,"_text":"Added -1 to original roll"}} 

 Player 2 19:56:42 $NEXT_STACK_ID:  

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}]} 

 Player 2 19:56:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":42,"originStackId":102},"isAfterActivation":true,"index":42} 

 Player 2 19:56:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 1 vs The Cage<Monster>"} 

 Player 2 19:56:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 2 19:56:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":833,"_text":"Remove After Resolve AttackRoll 102  "}} 

 Player 2 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 2 19:56:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":102,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":834,"_text":"Response Remove After Resolve AttackRoll 102"},"childOfId":833} 

 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":835,"_text":"Wait For Response From Player 2 "},"childOfId":833} 

 Player 2 19:56:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:43 $ACTION_MASSAGE_REMOVE:  
{"id":835} 

 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":836,"_text":"Wait For Response From Player 1 "},"childOfId":833} 

 Player 2 19:56:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:43 $ACTION_MASSAGE_REMOVE:  
{"id":836} 

 Player 2 19:56:43 $ACTION_MASSAGE_REMOVE:  
{"id":834} 

 Player 2 19:56:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":837,"_text":"Resolve CombatDamage 106 "}} 

 Player 2 19:56:43 $UPDATE_STACK_VIS:  
{"stackId":106,"text":"Isaac will deal 4 combat damage to The Cage"} 

 Player 2 19:56:43 $MONSTER_GET_DAMAGED:  
{"cardId":274,"hpLeft":2,"damageDealerId":290} 

 Player 2 19:56:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":43,"originStackId":-1},"isAfterActivation":true,"index":43} 

 Player 2 19:56:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":4},{"type":0,"number":290},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":44,"originStackId":106},"isAfterActivation":true,"index":44} 

 Player 2 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 2 19:56:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:56:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:56:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":838,"_text":"Remove After Resolve CombatDamage 106  "}} 

 Player 2 19:56:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:56:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":106,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":839,"_text":"Response Remove After Resolve CombatDamage 106"},"childOfId":838} 

 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":840,"_text":"Wait For Response From Player 1 "},"childOfId":838} 

 Player 2 19:56:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:56:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  
{"id":840} 

 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":841,"_text":"Wait For Response From Player 2 "},"childOfId":838} 

 Player 2 19:56:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  
{"id":841} 

 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  
{"id":839} 

 Player 2 19:56:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":842,"_text":"Stack Was Emptied "}} 

 Player 2 19:56:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  
{"id":821} 

 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  
{"id":819} 

 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  
{"id":807} 

 Player 2 19:56:44 $ACTION_MASSAGE_REMOVE:  
{"id":806} 

 Player 2 19:56:48 $NEXT_STACK_ID:  

 Player 2 19:56:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:56:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:56:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":107,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:56:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":107,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":843,"_text":"Add AttackRoll 107 "}} 

 Player 2 19:56:48 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:56:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:56:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:56:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:56:49 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":0} 

 Player 2 19:56:49 $UPDATE_STACK_VIS:  
{"stackId":107,"text":"player rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:50 $SHOW_DICE_ROLL:  
{"stackId":107} 

 Player 2 19:56:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":844,"_text":"Response Adding AttackRoll 107"},"childOfId":843} 

 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":845,"_text":"Wait For Response From Player 2 "},"childOfId":843} 

 Player 2 19:56:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:53 $ACTION_MASSAGE_REMOVE:  
{"id":845} 

 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":846,"_text":"Wait For Response From Player 1 "},"childOfId":843} 

 Player 2 19:56:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:53 $ACTION_MASSAGE_REMOVE:  
{"id":846} 

 Player 2 19:56:53 $ACTION_MASSAGE_REMOVE:  
{"id":844} 

 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":847,"_text":"Resolve AttackRoll 107 "}} 

 Player 2 19:56:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":848,"_text":"Added -1 to original roll"}} 

 Player 2 19:56:53 $NEXT_STACK_ID:  

 Player 2 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}]} 

 Player 2 19:56:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":45,"originStackId":107},"isAfterActivation":true,"index":45} 

 Player 2 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 rolled 0 vs The Cage<Monster>"} 

 Player 2 19:56:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 2 19:56:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":849,"_text":"Remove After Resolve AttackRoll 107  "}} 

 Player 2 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 2 19:56:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":107,"creatorCardId":290,"numberRolled":0,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":850,"_text":"Response Remove After Resolve AttackRoll 107"},"childOfId":849} 

 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":851,"_text":"Wait For Response From Player 2 "},"childOfId":849} 

 Player 2 19:56:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:54 $ACTION_MASSAGE_REMOVE:  
{"id":851} 

 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":852,"_text":"Wait For Response From Player 1 "},"childOfId":849} 

 Player 2 19:56:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:56:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:54 $ACTION_MASSAGE_REMOVE:  
{"id":852} 

 Player 2 19:56:54 $ACTION_MASSAGE_REMOVE:  
{"id":850} 

 Player 2 19:56:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":853,"_text":"Resolve CombatDamage 108 "}} 

 Player 2 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:56:54 $UPDATE_STACK_VIS:  
{"stackId":108,"text":"The Cage will deal 1 combat damage to Isaac"} 

 Player 2 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:56:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 

 Player 2 19:56:54 $NEXT_STACK_ID:  

 Player 2 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:56:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:56:55 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:56:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":854,"_text":"Add ActivatePassiveEffect 109 "}} 

 Player 2 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:56:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":855,"_text":"Response Adding ActivatePassiveEffect 109"},"childOfId":854} 

 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":856,"_text":"Wait For Response From Player 1 "},"childOfId":854} 

 Player 2 19:56:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:56:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:56:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:56:55 $ACTION_MASSAGE_REMOVE:  
{"id":856} 

 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":857,"_text":"Wait For Response From Player 2 "},"childOfId":854} 

 Player 2 19:56:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:56:55 $ACTION_MASSAGE_REMOVE:  
{"id":857} 

 Player 2 19:56:55 $ACTION_MASSAGE_REMOVE:  
{"id":855} 

 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":858,"_text":"Resolve ActivatePassiveEffect 109 "}} 

 Player 2 19:56:55 $NEXT_STACK_ID:  

 Player 2 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 

 Player 2 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 

 Player 2 19:56:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 

 Player 2 19:56:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 roll a dice"} 

 Player 2 19:56:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 19:56:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":859,"_text":"Add RollDiceStackEffect 110 "}} 

 Player 2 19:56:55 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:56:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 2 19:56:57 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 19:56:57 $UPDATE_STACK_VIS:  
{"stackId":110,"text":"player 2 rolled 3"} 

 Player 2 19:56:57 $SHOW_DICE_ROLL:  
{"stackId":110} 

 Player 2 19:57:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 

 Player 2 19:57:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 

 Player 2 19:57:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 

 Player 2 19:57:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 2 19:57:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":860,"_text":"Response Adding RollDiceStackEffect 110"},"childOfId":859} 

 Player 2 19:57:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":861,"_text":"Wait For Response From Player 2 "},"childOfId":859} 

 Player 2 19:57:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:00 $ACTION_MASSAGE_REMOVE:  
{"id":861} 

 Player 2 19:57:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":862,"_text":"Wait For Response From Player 1 "},"childOfId":859} 

 Player 2 19:57:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:01 $ACTION_MASSAGE_REMOVE:  
{"id":862} 

 Player 2 19:57:01 $ACTION_MASSAGE_REMOVE:  
{"id":860} 

 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":863,"_text":"Resolve RollDiceStackEffect 110 "}} 

 Player 2 19:57:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":46,"originStackId":110},"isAfterActivation":true,"index":46} 

 Player 2 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 

 Player 2 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 2 rolled 3"} 

 Player 2 19:57:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 2 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:57:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":864,"_text":"Remove After Resolve RollDiceStackEffect 110  "}} 

 Player 2 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:57:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":110,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":865,"_text":"Response Remove After Resolve RollDiceStackEffect 110"},"childOfId":864} 

 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":866,"_text":"Wait For Response From Player 1 "},"childOfId":864} 

 Player 2 19:57:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball  \n3:Player 2 roll a dice"} 

 Player 1 19:57:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:01 $ACTION_MASSAGE_REMOVE:  
{"id":866} 

 Player 2 19:57:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":867,"_text":"Wait For Response From Player 2 "},"childOfId":864} 

 Player 2 19:57:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:01 $ACTION_MASSAGE_REMOVE:  
{"id":867} 

 Player 2 19:57:02 $ACTION_MASSAGE_REMOVE:  
{"id":865} 

 Player 2 19:57:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":868,"_text":"Resolve ActivatePassiveEffect 109 "}} 

 Player 2 19:57:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 19:57:03 $DISABLE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 19:57:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 

 Player 2 19:57:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 19:57:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:57:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":869,"_text":"Remove After Resolve ActivatePassiveEffect 109  "}} 

 Player 2 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:57:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":109,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":870,"_text":"Response Remove After Resolve ActivatePassiveEffect 109"},"childOfId":869} 

 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":871,"_text":"Wait For Response From Player 2 "},"childOfId":869} 

 Player 2 19:57:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:04 $ACTION_MASSAGE_REMOVE:  
{"id":871} 

 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":872,"_text":"Wait For Response From Player 1 "},"childOfId":869} 

 Player 2 19:57:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac \n2:Activate Guppys Hairball "} 

 Player 1 19:57:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:04 $ACTION_MASSAGE_REMOVE:  
{"id":872} 

 Player 2 19:57:04 $ACTION_MASSAGE_REMOVE:  
{"id":870} 

 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":873,"_text":"Resolve CombatDamage 108 "}} 

 Player 2 19:57:04 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":274} 

 Player 2 19:57:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 19:57:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":47,"originStackId":108},"isAfterActivation":true,"index":47} 

 Player 2 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage 1 combat damage to Isaac"} 

 Player 2 19:57:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":874,"_text":"Remove After Resolve CombatDamage 108  "}} 

 Player 2 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":108,"creatorCardId":290,"entityToDoDamageCardId":274,"entityToTakeDamageCardId":290,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":875,"_text":"Response Remove After Resolve CombatDamage 108"},"childOfId":874} 

 Player 2 19:57:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":876,"_text":"Wait For Response From Player 1 "},"childOfId":874} 

 Player 2 19:57:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:57:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:57:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:57:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:57:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:57:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:The Cage combat damage to Isaac"} 

 Player 1 19:57:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:05 $ACTION_MASSAGE_REMOVE:  
{"id":876} 

 Player 2 19:57:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":877,"_text":"Wait For Response From Player 2 "},"childOfId":874} 

 Player 2 19:57:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:05 $ACTION_MASSAGE_REMOVE:  
{"id":877} 

 Player 2 19:57:05 $ACTION_MASSAGE_REMOVE:  
{"id":875} 

 Player 2 19:57:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":878,"_text":"Stack Was Emptied "}} 

 Player 2 19:57:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:09 $NEXT_STACK_ID:  

 Player 2 19:57:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:57:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":111,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:57:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:57:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":111,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:57:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":879,"_text":"Add AttackRoll 111 "}} 

 Player 2 19:57:09 $ROLL_DICE:  
{"playerId":2} 

 Player 1 19:57:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 2 19:57:10 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 19:57:10 $UPDATE_STACK_VIS:  
{"stackId":111,"text":"player rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:10 $SHOW_DICE_ROLL:  
{"stackId":111} 

 Player 2 19:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":880,"_text":"Response Adding AttackRoll 111"},"childOfId":879} 

 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":881,"_text":"Wait For Response From Player 2 "},"childOfId":879} 

 Player 2 19:57:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:13 $ACTION_MASSAGE_REMOVE:  
{"id":881} 

 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":882,"_text":"Wait For Response From Player 1 "},"childOfId":879} 

 Player 2 19:57:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:13 $ACTION_MASSAGE_REMOVE:  
{"id":882} 

 Player 2 19:57:13 $ACTION_MASSAGE_REMOVE:  
{"id":880} 

 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":883,"_text":"Resolve AttackRoll 111 "}} 

 Player 2 19:57:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":884,"_text":"Added -1 to original roll"}} 

 Player 2 19:57:13 $NEXT_STACK_ID:  

 Player 2 19:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:14 $REPLACE_STACK:  
{"currentStack":[{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}]} 

 Player 2 19:57:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":48,"originStackId":111},"isAfterActivation":true,"index":48} 

 Player 2 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 rolled 5 vs The Cage<Monster>"} 

 Player 2 19:57:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 2 19:57:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:57:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":885,"_text":"Remove After Resolve AttackRoll 111  "}} 

 Player 2 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 2 19:57:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":111,"creatorCardId":290,"numberRolled":5,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":274}} 

 Player 2 19:57:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":886,"_text":"Response Remove After Resolve AttackRoll 111"},"childOfId":885} 

 Player 2 19:57:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":887,"_text":"Wait For Response From Player 2 "},"childOfId":885} 

 Player 2 19:57:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:14 $ACTION_MASSAGE_REMOVE:  
{"id":887} 

 Player 2 19:57:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":888,"_text":"Wait For Response From Player 1 "},"childOfId":885} 

 Player 2 19:57:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:Player 2 is rolling against The Cage<Monster>"} 

 Player 1 19:57:14 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:15 $ACTION_MASSAGE_REMOVE:  
{"id":888} 

 Player 2 19:57:15 $ACTION_MASSAGE_REMOVE:  
{"id":886} 

 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":889,"_text":"Resolve CombatDamage 112 "}} 

 Player 2 19:57:15 $UPDATE_STACK_VIS:  
{"stackId":112,"text":"Isaac will deal 4 combat damage to The Cage"} 

 Player 2 19:57:15 $MONSTER_GET_DAMAGED:  
{"cardId":274,"hpLeft":0,"damageDealerId":290} 

 Player 2 19:57:15 $NEXT_STACK_ID:  

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 2 19:57:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $REPLACE_STACK:  
{"currentStack":[{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}]} 

 Player 2 19:57:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":49,"originStackId":-1},"isAfterActivation":true,"index":49} 

 Player 2 19:57:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":4},{"type":0,"number":290},{"type":0,"number":274}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":50,"originStackId":112},"isAfterActivation":true,"index":50} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":890,"_text":"Remove After Resolve CombatDamage 112  "}} 

 Player 2 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:57:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":112,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":274,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":891,"_text":"Response Remove After Resolve CombatDamage 112"},"childOfId":890} 

 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":892,"_text":"Wait For Response From Player 2 "},"childOfId":890} 

 Player 2 19:57:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:15 $ACTION_MASSAGE_REMOVE:  
{"id":892} 

 Player 2 19:57:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":893,"_text":"Wait For Response From Player 1 "},"childOfId":890} 

 Player 2 19:57:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to The Cage \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:16 $ACTION_MASSAGE_REMOVE:  
{"id":893} 

 Player 2 19:57:16 $ACTION_MASSAGE_REMOVE:  
{"id":891} 

 Player 2 19:57:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":894,"_text":"Resolve MonsterDeath 113 "}} 

 Player 2 19:57:16 $DISABLE_PARTICLE_EFFECT:  
{"cardId":274,"particleType":5} 

 Player 2 19:57:16 $CANCEL_ATTACK:  

 Player 2 19:57:16 $NEXT_STACK_ID:  

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 19:57:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":114,"creatorCardId":290,"monsterCardWithRewardId":274,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":114,"creatorCardId":290,"monsterCardWithRewardId":274,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:16 $REPLACE_STACK:  
{"currentStack":[{"entityId":114,"creatorCardId":290,"monsterCardWithRewardId":274,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}]} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 19:57:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 2 19:57:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 

 Player 2 19:57:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":895,"_text":"Remove After Resolve MonsterDeath 113  "}} 

 Player 2 19:57:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 2 19:57:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":113,"creatorCardId":290,"monsterToDieCardId":274,"stackEffectType":5,"killerId":290}} 

 Player 2 19:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":896,"_text":"Response Remove After Resolve MonsterDeath 113"},"childOfId":895} 

 Player 2 19:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":897,"_text":"Wait For Response From Player 2 "},"childOfId":895} 

 Player 2 19:57:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:17 $ACTION_MASSAGE_REMOVE:  
{"id":897} 

 Player 2 19:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":898,"_text":"Wait For Response From Player 1 "},"childOfId":895} 

 Player 2 19:57:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:17 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 19:57:17 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:17 $ACTION_MASSAGE_REMOVE:  
{"id":898} 

 Player 2 19:57:17 $ACTION_MASSAGE_REMOVE:  
{"id":896} 

 Player 2 19:57:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":899,"_text":"Resolve MonsterRewardStackEffect 114 "}} 

 Player 2 19:57:17 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:57:17 $REGISTER_PASSIVE_ITEM:  
{"cardId":159} 

 Player 2 19:57:17 $MOVE_CARD:  
{"moveIndex":61,"cardId":159,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 19:57:18 $MOVE_CARD_END:  
{"moveIndex":61,"cardId":159,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:57:18 $ADD_AN_ITEM:  
{"playerId":2,"cardId":159,"isReward":true} 

 Player 2 19:57:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":159}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":51,"originStackId":-1},"isAfterActivation":true,"index":51} 

 Player 2 19:57:18 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:57:18 $REGISTER_PASSIVE_ITEM:  
{"cardId":199} 

 Player 2 19:57:18 $MOVE_CARD:  
{"moveIndex":62,"cardId":199,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 19:57:18 $MOVE_CARD_END:  
{"moveIndex":62,"cardId":199,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:57:18 $ADD_AN_ITEM:  
{"playerId":2,"cardId":199,"isReward":true} 

 Player 2 19:57:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":52,"originStackId":-1},"isAfterActivation":true,"index":52} 

 Player 2 19:57:18 $NEXT_STACK_ID:  

 Player 2 19:57:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 2 19:57:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 19:57:18 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 19:57:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":900,"_text":"Add ActivatePassiveEffect 115 "}} 

 Player 2 19:57:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 19:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 19:57:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":901,"_text":"Response Adding ActivatePassiveEffect 115"},"childOfId":900} 

 Player 2 19:57:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":902,"_text":"Wait For Response From Player 1 "},"childOfId":900} 

 Player 2 19:57:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:19 $ACTION_MASSAGE_REMOVE:  
{"id":902} 

 Player 2 19:57:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":903,"_text":"Wait For Response From Player 2 "},"childOfId":900} 

 Player 2 19:57:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:19 $ACTION_MASSAGE_REMOVE:  
{"id":903} 

 Player 2 19:57:19 $ACTION_MASSAGE_REMOVE:  
{"id":901} 

 Player 2 19:57:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":904,"_text":"Resolve ActivatePassiveEffect 115 "}} 

 Player 2 19:57:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 19:57:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 19:57:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":199}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":52,"originStackId":-1},"isAfterActivation":true,"index":52} 

 Player 2 19:57:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 19:57:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 2 19:57:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":905,"_text":"Remove After Resolve ActivatePassiveEffect 115  "}} 

 Player 2 19:57:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 2 19:57:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":115,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":true,"index":52,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 19:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":906,"_text":"Response Remove After Resolve ActivatePassiveEffect 115"},"childOfId":905} 

 Player 2 19:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":907,"_text":"Wait For Response From Player 2 "},"childOfId":905} 

 Player 2 19:57:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:21 $ACTION_MASSAGE_REMOVE:  
{"id":907} 

 Player 2 19:57:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":908,"_text":"Wait For Response From Player 1 "},"childOfId":905} 

 Player 2 19:57:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:57:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward \n2:Activate Polydactyly "} 

 Player 1 19:57:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:57:22 $ACTION_MASSAGE_REMOVE:  
{"id":908} 

 Player 2 19:57:22 $ACTION_MASSAGE_REMOVE:  
{"id":906} 

 Player 2 19:57:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":909,"_text":"Resolve MonsterRewardStackEffect 114 "}} 

 Player 2 19:57:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":274,"scopeIsPlayer":false,"index":53,"originStackId":114},"isAfterActivation":true,"index":53} 

 Player 2 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":114,"creatorCardId":290,"monsterCardWithRewardId":274,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 19:57:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":910,"_text":"Fizzle MonsterRewardStackEffect 114"}} 

 Player 2 19:57:22 $FIZZLE_STACK_EFFECT:  
{"entityId":114} 

 Player 2 19:57:22 $MOVE_CARD:  
{"moveIndex":63,"cardId":274,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"soulsLayout"} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get The Cage<Monster> reward"} 

 Player 1 19:57:22 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:57:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:23 $MOVE_CARD_END:  
{"moveIndex":63,"cardId":274,"flipIfFlipped":true,"playerId":2} 

 Player 2 19:57:23 $GET_SOUL:  
{"playerId":2,"cardId":274} 

 Player 2 19:57:23 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":274} 

 Player 2 19:57:23 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 2 19:57:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":911,"_text":"Stack Was Emptied "}} 

 Player 2 19:57:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:37 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 19:57:37 $END_TURN:  

 Player 2 19:57:37 $SET_TURN:  
{"playerId":1} 

 Player 2 19:57:37 $START_TURN:  
{"playerId":1} 

 Player 1 19:57:37 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:37 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 19:57:37 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 19:57:37 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":296} 

 Player 1 19:57:37 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 1 19:57:37 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":297} 

 Player 1 19:57:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:57:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 19:57:37 $NEXT_STACK_ID:  

 Player 1 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 19:57:37 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":116,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 19:57:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":116,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:57:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":912,"_text":"Add ActivatePassiveEffect 116 "}} 

 Player 1 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 19:57:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":116,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:57:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":913,"_text":"Response Adding ActivatePassiveEffect 116"},"childOfId":912} 

 Player 1 19:57:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":914,"_text":"Wait For Response From Player 1 "},"childOfId":912} 

 Player 1 19:57:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:57:37 $ACTION_MASSAGE_REMOVE:  
{"id":914} 

 Player 1 19:57:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":915,"_text":"Wait For Response From Player 2 "},"childOfId":912} 

 Player 1 19:57:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:57:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:57:37 $ACTION_MASSAGE_REMOVE:  
{"id":915} 

 Player 1 19:57:38 $ACTION_MASSAGE_REMOVE:  
{"id":913} 

 Player 1 19:57:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":916,"_text":"Resolve ActivatePassiveEffect 116 "}} 

 Player 1 19:57:38 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 19:57:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 19:57:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 19:57:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":116,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":116,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:57:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":917,"_text":"Remove After Resolve ActivatePassiveEffect 116  "}} 

 Player 1 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":116,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:57:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":918,"_text":"Response Remove After Resolve ActivatePassiveEffect 116"},"childOfId":917} 

 Player 1 19:57:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":919,"_text":"Wait For Response From Player 2 "},"childOfId":917} 

 Player 1 19:57:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:57:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 19:57:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:57:56 $ACTION_MASSAGE_REMOVE:  
{"id":919} 

 Player 1 19:57:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":920,"_text":"Wait For Response From Player 1 "},"childOfId":917} 

 Player 1 19:57:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:57:56 $ACTION_MASSAGE_REMOVE:  
{"id":920} 

 Player 1 19:57:56 $ACTION_MASSAGE_REMOVE:  
{"id":918} 

 Player 1 19:57:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":921,"_text":"Stack Was Emptied "}} 

 Player 1 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:56 $NEXT_STACK_ID:  

 Player 1 19:57:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:57:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":117,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:57:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":117,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:57:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":922,"_text":"Add StartTurnLoot 117 "}} 

 Player 1 19:57:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:57:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":117,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:57:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":923,"_text":"Response Adding StartTurnLoot 117"},"childOfId":922} 

 Player 1 19:57:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":924,"_text":"Wait For Response From Player 1 "},"childOfId":922} 

 Player 1 19:57:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:57:57 $ACTION_MASSAGE_REMOVE:  
{"id":924} 

 Player 1 19:57:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":925,"_text":"Wait For Response From Player 2 "},"childOfId":922} 

 Player 1 19:57:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:57:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:57:57 $ACTION_MASSAGE_REMOVE:  
{"id":925} 

 Player 1 19:57:57 $ACTION_MASSAGE_REMOVE:  
{"id":923} 

 Player 1 19:57:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":926,"_text":"Resolve StartTurnLoot 117 "}} 

 Player 1 19:57:57 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:57:57 $MOVE_CARD:  
{"moveIndex":64,"cardId":60,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:57:58 $MOVE_CARD_END:  
{"moveIndex":64,"cardId":60,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:57:58 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":60} 

 Player 1 19:57:58 $FLIP_CARD:  
{"cardId":60} 

 Player 1 19:57:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":60} 

 Player 1 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:57:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":117,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":117,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":927,"_text":"Remove After Resolve StartTurnLoot 117  "}} 

 Player 1 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:57:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":117,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 19:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":928,"_text":"Response Remove After Resolve StartTurnLoot 117"},"childOfId":927} 

 Player 1 19:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":929,"_text":"Wait For Response From Player 2 "},"childOfId":927} 

 Player 1 19:57:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:57:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:57:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:57:58 $ACTION_MASSAGE_REMOVE:  
{"id":929} 

 Player 1 19:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":930,"_text":"Wait For Response From Player 1 "},"childOfId":927} 

 Player 1 19:57:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:57:58 $ACTION_MASSAGE_REMOVE:  
{"id":930} 

 Player 1 19:57:58 $ACTION_MASSAGE_REMOVE:  
{"id":928} 

 Player 1 19:57:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":931,"_text":"Stack Was Emptied "}} 

 Player 1 19:57:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:00 $SHOW_DECISION:  
{"startCardId":296,"endCardId":297} 

 Player 1 19:58:03 $NEXT_STACK_ID:  

 Player 1 19:58:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:58:03 $ADD_TO_STACK:  
{"stackEffect":{"entityId":118,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:58:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:58:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":118,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:58:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":932,"_text":"Add ActivateItem 118 "}} 

 Player 2 19:58:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:58:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:58:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:58:07 $SHOW_DECISION:  
{"startCardId":297,"endCardId":296} 

 Player 1 19:58:10 $USE_ITEM:  
{"cardId":297} 

 Player 1 19:58:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:58:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":118,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:58:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":933,"_text":"Response Adding ActivateItem 118"},"childOfId":932} 

 Player 1 19:58:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":934,"_text":"Wait For Response From Player 1 "},"childOfId":932} 

 Player 1 19:58:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:10 $ACTION_MASSAGE_REMOVE:  
{"id":934} 

 Player 1 19:58:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":935,"_text":"Wait For Response From Player 2 "},"childOfId":932} 

 Player 1 19:58:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:58:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:58:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:10 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:58:10 $ACTION_MASSAGE_REMOVE:  
{"id":935} 

 Player 1 19:58:10 $ACTION_MASSAGE_REMOVE:  
{"id":933} 

 Player 1 19:58:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":936,"_text":"Resolve ActivateItem 118 "}} 

 Player 1 19:58:10 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 19:58:12 $DISABLE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 19:58:12 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":true} 

 Player 1 19:58:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 19:58:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":118,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:58:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":118,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:58:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":937,"_text":"Remove After Resolve ActivateItem 118  "}} 

 Player 1 19:58:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":118,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:58:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":938,"_text":"Response Remove After Resolve ActivateItem 118"},"childOfId":937} 

 Player 1 19:58:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":939,"_text":"Wait For Response From Player 2 "},"childOfId":937} 

 Player 1 19:58:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:58:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:58:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 19:58:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:58:13 $ACTION_MASSAGE_REMOVE:  
{"id":939} 

 Player 1 19:58:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":940,"_text":"Wait For Response From Player 1 "},"childOfId":937} 

 Player 1 19:58:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:13 $ACTION_MASSAGE_REMOVE:  
{"id":940} 

 Player 1 19:58:13 $ACTION_MASSAGE_REMOVE:  
{"id":938} 

 Player 1 19:58:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":941,"_text":"Stack Was Emptied "}} 

 Player 1 19:58:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:14 $SHOW_DECISION:  
{"startCardId":55,"endCardId":55,"flipEndCard":true} 

 Player 1 19:58:17 $NEXT_STACK_ID:  

 Player 1 19:58:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 1 19:58:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":119,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":55,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:58:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 1 19:58:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":119,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":55,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:58:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":942,"_text":"Add PlayLootCardStackEffect 119 "}} 

 Player 1 19:58:17 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":55} 

 Player 1 19:58:17 $MOVE_CARD:  
{"moveIndex":65,"cardId":55,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:58:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:58:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:58:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:18 $MOVE_CARD_END:  
{"moveIndex":65,"cardId":55,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:58:18 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":55} 

 Player 1 19:58:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17): addMoney"} 

 Player 1 19:58:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17): addMoney"} 

 Player 1 19:58:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":119,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":55,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":55,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:58:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":943,"_text":"Response Adding PlayLootCardStackEffect 119"},"childOfId":942} 

 Player 1 19:58:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":944,"_text":"Wait For Response From Player 1 "},"childOfId":942} 

 Player 1 19:58:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:18 $ACTION_MASSAGE_REMOVE:  
{"id":944} 

 Player 1 19:58:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":945,"_text":"Wait For Response From Player 2 "},"childOfId":942} 

 Player 1 19:58:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:58:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:58:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:58:18 $ACTION_MASSAGE_REMOVE:  
{"id":945} 

 Player 1 19:58:18 $ACTION_MASSAGE_REMOVE:  
{"id":943} 

 Player 1 19:58:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":946,"_text":"Resolve PlayLootCardStackEffect 119 "}} 

 Player 1 19:58:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17): addMoney"} 

 Player 1 19:58:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":55,"particleType":6} 

 Player 1 19:58:20 $DISABLE_PARTICLE_EFFECT:  
{"cardId":55,"particleType":6} 

 Player 1 19:58:20 $SET_MONEY:  
{"playerId":1,"numOfCoins":7} 

 Player 1 19:58:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 

 Player 1 19:58:21 $REMOVE_FROM_PILE:  
{"cardId":55} 

 Player 1 19:58:21 $MOVE_CARD:  
{"moveIndex":66,"cardId":55,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:58:21 $MOVE_CARD_END:  
{"moveIndex":66,"cardId":55,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:58:21 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":55} 

 Player 1 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17): addMoney"} 

 Player 1 19:58:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":119,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":55,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":119,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":55,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:58:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":947,"_text":"Remove After Resolve PlayLootCardStackEffect 119  "}} 

 Player 1 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":119,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":55,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:58:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":948,"_text":"Response Remove After Resolve PlayLootCardStackEffect 119"},"childOfId":947} 

 Player 1 19:58:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":949,"_text":"Wait For Response From Player 2 "},"childOfId":947} 

 Player 1 19:58:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:58:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(17) "} 

 Player 2 19:58:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:58:22 $ACTION_MASSAGE_REMOVE:  
{"id":949} 

 Player 1 19:58:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":950,"_text":"Wait For Response From Player 1 "},"childOfId":947} 

 Player 1 19:58:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:22 $ACTION_MASSAGE_REMOVE:  
{"id":950} 

 Player 1 19:58:22 $ACTION_MASSAGE_REMOVE:  
{"id":948} 

 Player 1 19:58:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":951,"_text":"Stack Was Emptied "}} 

 Player 1 19:58:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:23 $SHOW_DECISION:  
{"startCardId":296,"endCardId":227} 

 Player 1 19:58:26 $NEXT_STACK_ID:  

 Player 1 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:58:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":120,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:58:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":120,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:58:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":952,"_text":"Add DeclareAttack 120 "}} 

 Player 1 19:58:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:58:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":120,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 19:58:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":953,"_text":"Response Adding DeclareAttack 120"},"childOfId":952} 

 Player 1 19:58:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":954,"_text":"Wait For Response From Player 1 "},"childOfId":952} 

 Player 1 19:58:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:26 $ACTION_MASSAGE_REMOVE:  
{"id":954} 

 Player 1 19:58:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":955,"_text":"Wait For Response From Player 2 "},"childOfId":952} 

 Player 1 19:58:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:58:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:58:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:58:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:58:26 $ACTION_MASSAGE_REMOVE:  
{"id":955} 

 Player 1 19:58:27 $ACTION_MASSAGE_REMOVE:  
{"id":953} 

 Player 1 19:58:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":956,"_text":"Resolve DeclareAttack 120 "}} 

 Player 1 19:58:27 $DRAW_CARD:  
{"deckType":2} 

 Player 1 19:58:27 $SHOW_CARD_PREVIEW:  
{"cardToShowId":265,"playerId":1} 

 Player 1 19:58:40 $FLIP_CARD:  
{"cardId":265} 

 Player 1 19:58:40 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":265} 

 Player 1 19:58:40 $NEW_MONSTER_ON_PLACE:  
{"cardId":265,"monsterPlaceId":2} 

 Player 1 19:58:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":265,"particleType":5} 

 Player 1 19:58:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":28,"originStackId":120},"isAfterActivation":true,"index":28} 

 Player 1 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 19:58:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":120,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":265,"stackEffectType":4}} 

 Player 1 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":120,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":265,"stackEffectType":4}} 

 Player 1 19:58:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":957,"_text":"Remove After Resolve DeclareAttack 120  "}} 

 Player 1 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:58:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":120,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":265,"stackEffectType":4}} 

 Player 1 19:58:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":958,"_text":"Response Remove After Resolve DeclareAttack 120"},"childOfId":957} 

 Player 1 19:58:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":959,"_text":"Wait For Response From Player 2 "},"childOfId":957} 

 Player 1 19:58:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:58:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Red Host"} 

 Player 2 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Red Host"} 

 Player 2 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Red Host"} 

 Player 2 19:58:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Red Host"} 

 Player 2 19:58:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:58:41 $ACTION_MASSAGE_REMOVE:  
{"id":959} 

 Player 1 19:58:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":960,"_text":"Wait For Response From Player 1 "},"childOfId":957} 

 Player 1 19:58:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:58:41 $ACTION_MASSAGE_REMOVE:  
{"id":960} 

 Player 1 19:58:41 $ACTION_MASSAGE_REMOVE:  
{"id":958} 

 Player 1 19:58:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":961,"_text":"Stack Was Emptied "}} 

 Player 1 19:58:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:00 $NEXT_STACK_ID:  

 Player 1 19:59:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 

 Player 1 19:59:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":121,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}} 

 Player 1 19:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 

 Player 1 19:59:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":121,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}} 

 Player 1 19:59:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":962,"_text":"Add AttackRoll 121 "}} 

 Player 1 19:59:01 $ROLL_DICE:  
{"playerId":1} 

 Player 2 19:59:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 

 Player 1 19:59:02 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 19:59:02 $UPDATE_STACK_VIS:  
{"stackId":121,"text":"player rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:02 $SHOW_DICE_ROLL:  
{"stackId":121} 

 Player 1 19:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":121,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}} 

 Player 1 19:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":963,"_text":"Response Adding AttackRoll 121"},"childOfId":962} 

 Player 1 19:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":964,"_text":"Wait For Response From Player 1 "},"childOfId":962} 

 Player 1 19:59:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:05 $ACTION_MASSAGE_REMOVE:  
{"id":964} 

 Player 1 19:59:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":965,"_text":"Wait For Response From Player 2 "},"childOfId":962} 

 Player 1 19:59:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:06 $ACTION_MASSAGE_REMOVE:  
{"id":965} 

 Player 1 19:59:06 $ACTION_MASSAGE_REMOVE:  
{"id":963} 

 Player 1 19:59:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":966,"_text":"Resolve AttackRoll 121 "}} 

 Player 1 19:59:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":967,"_text":"Added 0 to original roll"}} 

 Player 1 19:59:06 $NEXT_STACK_ID:  

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":121,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":121,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":121,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}]} 

 Player 1 19:59:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":29,"originStackId":121},"isAfterActivation":true,"index":29} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 rolled 4 vs Red Host<Monster>"} 

 Player 1 19:59:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":121,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 1 19:59:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":121,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}} 

 Player 1 19:59:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":968,"_text":"Remove After Resolve AttackRoll 121  "}} 

 Player 1 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 1 19:59:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":121,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":265}} 

 Player 1 19:59:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":969,"_text":"Response Remove After Resolve AttackRoll 121"},"childOfId":968} 

 Player 1 19:59:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":970,"_text":"Wait For Response From Player 1 "},"childOfId":968} 

 Player 1 19:59:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:06 $ACTION_MASSAGE_REMOVE:  
{"id":970} 

 Player 1 19:59:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":971,"_text":"Wait For Response From Player 2 "},"childOfId":968} 

 Player 1 19:59:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:Player 1 is rolling against Red Host<Monster>"} 

 Player 2 19:59:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":971} 

 Player 1 19:59:07 $ACTION_MASSAGE_REMOVE:  
{"id":969} 

 Player 1 19:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":972,"_text":"Resolve CombatDamage 122 "}} 

 Player 1 19:59:07 $UPDATE_STACK_VIS:  
{"stackId":122,"text":"Samson will deal 4 combat damage to Red Host"} 

 Player 1 19:59:07 $MONSTER_GET_DAMAGED:  
{"cardId":265,"hpLeft":0,"damageDealerId":296} 

 Player 1 19:59:07 $NEXT_STACK_ID:  

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 1 19:59:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 1 19:59:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 1 19:59:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 1 19:59:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 1 19:59:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 1 19:59:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}]} 

 Player 1 19:59:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":4},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":false,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 

 Player 1 19:59:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":4},{"type":0,"number":296},{"type":0,"number":265}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":31,"originStackId":122},"isAfterActivation":true,"index":31} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 1 19:59:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 19:59:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:59:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":973,"_text":"Remove After Resolve CombatDamage 122  "}} 

 Player 1 19:59:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 19:59:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":122,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":265,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 19:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":974,"_text":"Response Remove After Resolve CombatDamage 122"},"childOfId":973} 

 Player 1 19:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":975,"_text":"Wait For Response From Player 1 "},"childOfId":973} 

 Player 1 19:59:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":975} 

 Player 1 19:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":976,"_text":"Wait For Response From Player 2 "},"childOfId":973} 

 Player 1 19:59:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 2 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Red Host \n2:[object Object] killed by Samson"} 

 Player 2 19:59:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":976} 

 Player 1 19:59:08 $ACTION_MASSAGE_REMOVE:  
{"id":974} 

 Player 1 19:59:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":977,"_text":"Resolve MonsterDeath 123 "}} 

 Player 1 19:59:08 $DISABLE_PARTICLE_EFFECT:  
{"cardId":265,"particleType":5} 

 Player 1 19:59:08 $CANCEL_ATTACK:  

 Player 1 19:59:08 $NEXT_STACK_ID:  

 Player 1 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 19:59:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:59:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":124,"creatorCardId":296,"monsterCardWithRewardId":265,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 19:59:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:59:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}} 

 Player 1 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:59:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":124,"creatorCardId":296,"monsterCardWithRewardId":265,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:59:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}} 

 Player 1 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:59:09 $REPLACE_STACK:  
{"currentStack":[{"entityId":124,"creatorCardId":296,"monsterCardWithRewardId":265,"playerCardIdToReward":296,"stackEffectType":7},{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}]} 

 Player 1 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 19:59:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}} 

 Player 1 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 1 19:59:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}} 

 Player 1 19:59:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":978,"_text":"Remove After Resolve MonsterDeath 123  "}} 

 Player 1 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 1 19:59:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":123,"creatorCardId":296,"monsterToDieCardId":265,"stackEffectType":5,"killerId":296}} 

 Player 1 19:59:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":979,"_text":"Response Remove After Resolve MonsterDeath 123"},"childOfId":978} 

 Player 1 19:59:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":980,"_text":"Wait For Response From Player 1 "},"childOfId":978} 

 Player 1 19:59:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:09 $ACTION_MASSAGE_REMOVE:  
{"id":980} 

 Player 1 19:59:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":981,"_text":"Wait For Response From Player 2 "},"childOfId":978} 

 Player 1 19:59:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:09 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:59:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 19:59:09 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:10 $ACTION_MASSAGE_REMOVE:  
{"id":981} 

 Player 1 19:59:10 $ACTION_MASSAGE_REMOVE:  
{"id":979} 

 Player 1 19:59:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":982,"_text":"Resolve MonsterRewardStackEffect 124 "}} 

 Player 1 19:59:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":false,"index":32,"originStackId":124},"isAfterActivation":true,"index":32} 

 Player 1 19:59:10 $SET_MONEY:  
{"playerId":1,"numOfCoins":12} 

 Player 1 19:59:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":33,"originStackId":-1},"isAfterActivation":true,"index":33} 

 Player 1 19:59:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":124,"creatorCardId":296,"monsterCardWithRewardId":265,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 19:59:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":983,"_text":"Fizzle MonsterRewardStackEffect 124"}} 

 Player 1 19:59:10 $FIZZLE_STACK_EFFECT:  
{"entityId":124} 

 Player 1 19:59:10 $MOVE_CARD:  
{"moveIndex":67,"cardId":265,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:59:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Red Host<Monster> reward"} 

 Player 2 19:59:10 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:59:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:10 $MOVE_CARD_END:  
{"moveIndex":67,"cardId":265,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:59:10 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":265} 

 Player 1 19:59:10 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":265} 

 Player 1 19:59:10 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 1 19:59:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":984,"_text":"Stack Was Emptied "}} 

 Player 1 19:59:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:15 $SHOW_DECISION:  
{"startCardId":296,"endCardId":144} 

 Player 1 19:59:18 $NEXT_STACK_ID:  

 Player 1 19:59:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 19:59:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":125,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 19:59:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 19:59:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":125,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 19:59:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":985,"_text":"Add PurchaseItem 125 "}} 

 Player 1 19:59:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 19:59:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":125,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 19:59:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":986,"_text":"Response Adding PurchaseItem 125"},"childOfId":985} 

 Player 1 19:59:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":987,"_text":"Wait For Response From Player 1 "},"childOfId":985} 

 Player 1 19:59:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:18 $ACTION_MASSAGE_REMOVE:  
{"id":987} 

 Player 1 19:59:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":988,"_text":"Wait For Response From Player 2 "},"childOfId":985} 

 Player 1 19:59:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:19 $ACTION_MASSAGE_REMOVE:  
{"id":988} 

 Player 1 19:59:19 $ACTION_MASSAGE_REMOVE:  
{"id":986} 

 Player 1 19:59:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":989,"_text":"Resolve PurchaseItem 125 "}} 

 Player 1 19:59:19 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 19:59:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":34,"originStackId":-1},"isAfterActivation":true,"index":34} 

 Player 1 19:59:19 $DRAW_CARD:  
{"deckType":5} 

 Player 1 19:59:19 $REGISTER_PASSIVE_ITEM:  
{"cardId":213} 

 Player 1 19:59:19 $MOVE_CARD:  
{"moveIndex":68,"cardId":213,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 19:59:19 $MOVE_CARD_END:  
{"moveIndex":68,"cardId":213,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:59:20 $ADD_AN_ITEM:  
{"playerId":1,"cardId":213,"isReward":false} 

 Player 1 19:59:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":213}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 

 Player 1 19:59:20 $NEXT_STACK_ID:  

 Player 1 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil effect GainStats<GainStats>"} 

 Player 1 19:59:20 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":126,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":213,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":213,"effctType":0},"isAfterActivation":true,"index":35,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil effect GainStats<GainStats>"} 

 Player 1 19:59:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":126,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":213,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":213,"effctType":0},"isAfterActivation":true,"index":35,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:59:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":990,"_text":"Add ActivatePassiveEffect 126 "}} 

 Player 1 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil effect GainStats<GainStats>"} 

 Player 1 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil effect GainStats<GainStats>"} 

 Player 1 19:59:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":126,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":213,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":213,"effctType":0},"isAfterActivation":true,"index":35,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:59:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":991,"_text":"Response Adding ActivatePassiveEffect 126"},"childOfId":990} 

 Player 1 19:59:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":992,"_text":"Wait For Response From Player 2 "},"childOfId":990} 

 Player 1 19:59:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:20 $ACTION_MASSAGE_REMOVE:  
{"id":992} 

 Player 1 19:59:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":993,"_text":"Wait For Response From Player 1 "},"childOfId":990} 

 Player 1 19:59:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:20 $ACTION_MASSAGE_REMOVE:  
{"id":993} 

 Player 1 19:59:20 $ACTION_MASSAGE_REMOVE:  
{"id":991} 

 Player 1 19:59:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":994,"_text":"Resolve ActivatePassiveEffect 126 "}} 

 Player 1 19:59:20 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":213,"particleType":6} 

 Player 1 19:59:22 $DISABLE_PARTICLE_EFFECT:  
{"cardId":213,"particleType":6} 

 Player 1 19:59:22 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  
{"playerId":1,"bonusToGain":1,"isTemp":false} 

 Player 1 19:59:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":213}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 

 Player 1 19:59:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil effect GainStats<GainStats>"} 

 Player 1 19:59:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":126,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":213,"isAfterActivation":true,"index":35,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:59:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 19:59:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":126,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":213,"isAfterActivation":true,"index":35,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:59:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":995,"_text":"Remove After Resolve ActivatePassiveEffect 126  "}} 

 Player 1 19:59:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 19:59:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":126,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":213,"isAfterActivation":true,"index":35,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:59:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":996,"_text":"Response Remove After Resolve ActivatePassiveEffect 126"},"childOfId":995} 

 Player 1 19:59:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":997,"_text":"Wait For Response From Player 1 "},"childOfId":995} 

 Player 1 19:59:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:23 $ACTION_MASSAGE_REMOVE:  
{"id":997} 

 Player 1 19:59:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":998,"_text":"Wait For Response From Player 2 "},"childOfId":995} 

 Player 1 19:59:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10 \n2:Activate Synthoil "} 

 Player 2 19:59:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:23 $ACTION_MASSAGE_REMOVE:  
{"id":998} 

 Player 1 19:59:23 $ACTION_MASSAGE_REMOVE:  
{"id":996} 

 Player 1 19:59:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":999,"_text":"Resolve PurchaseItem 125 "}} 

 Player 1 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":125,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 19:59:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1000,"_text":"Remove After Resolve PurchaseItem 125  "}} 

 Player 1 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":125,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 19:59:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1001,"_text":"Response Remove After Resolve PurchaseItem 125"},"childOfId":1000} 

 Player 1 19:59:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1002,"_text":"Wait For Response From Player 2 "},"childOfId":1000} 

 Player 1 19:59:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 19:59:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:24 $ACTION_MASSAGE_REMOVE:  
{"id":1002} 

 Player 1 19:59:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1003,"_text":"Wait For Response From Player 1 "},"childOfId":1000} 

 Player 1 19:59:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:24 $ACTION_MASSAGE_REMOVE:  
{"id":1003} 

 Player 1 19:59:24 $ACTION_MASSAGE_REMOVE:  
{"id":1001} 

 Player 1 19:59:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1004,"_text":"Stack Was Emptied "}} 

 Player 1 19:59:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:40 $SHOW_DECISION:  
{"startCardId":296,"endCardId":296} 

 Player 1 19:59:42 $NEXT_STACK_ID:  

 Player 1 19:59:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:59:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:59:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:59:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 19:59:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1005,"_text":"Add ActivateItem 127 "}} 

 Player 2 19:59:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:59:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:59:46 $SHOW_DECISION:  
{"startCardId":296,"endCardId":60,"flipEndCard":true} 

 Player 1 19:59:49 $USE_ITEM:  
{"cardId":296} 

 Player 1 19:59:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:59:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:59:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1006,"_text":"Response Adding ActivateItem 127"},"childOfId":1005} 

 Player 1 19:59:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1007,"_text":"Wait For Response From Player 1 "},"childOfId":1005} 

 Player 1 19:59:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:49 $ACTION_MASSAGE_REMOVE:  
{"id":1007} 

 Player 1 19:59:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1008,"_text":"Wait For Response From Player 2 "},"childOfId":1005} 

 Player 1 19:59:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:59:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:59:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:49 $ACTION_MASSAGE_REMOVE:  
{"id":1008} 

 Player 1 19:59:49 $ACTION_MASSAGE_REMOVE:  
{"id":1006} 

 Player 1 19:59:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1009,"_text":"Resolve ActivateItem 127 "}} 

 Player 1 19:59:50 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 19:59:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 19:59:51 $NEXT_STACK_ID:  

 Player 1 19:59:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 19:59:52 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":60} 

 Player 1 19:59:52 $MOVE_CARD:  
{"moveIndex":69,"cardId":60,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:59:52 $MOVE_CARD_END:  
{"moveIndex":69,"cardId":60,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:59:52 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":60} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney \n2:Player 1 activated Samson"} 

 Player 1 19:59:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney \n2:Player 1 activated Samson"} 

 Player 1 19:59:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":128,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney \n2:Player 1 activated Samson"} 

 Player 1 19:59:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney \n2:Player 1 activated Samson"} 

 Player 1 19:59:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":128,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney \n2:Player 1 activated Samson"} 

 Player 1 19:59:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney \n2:Player 1 activated Samson"} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney \n2:Player 1 activated Samson"} 

 Player 1 19:59:52 $REPLACE_STACK:  
{"currentStack":[{"entityId":128,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney \n2:Player 1 activated Samson"} 

 Player 1 19:59:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 

 Player 1 19:59:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:59:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1010,"_text":"Remove After Resolve ActivateItem 127  "}} 

 Player 1 19:59:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 

 Player 1 19:59:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":127,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 19:59:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1011,"_text":"Response Remove After Resolve ActivateItem 127"},"childOfId":1010} 

 Player 1 19:59:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1012,"_text":"Wait For Response From Player 1 "},"childOfId":1010} 

 Player 1 19:59:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:53 $ACTION_MASSAGE_REMOVE:  
{"id":1012} 

 Player 1 19:59:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1013,"_text":"Wait For Response From Player 2 "},"childOfId":1010} 

 Player 1 19:59:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 

 Player 2 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0)  \n2:Player 1 activated Samson"} 

 Player 2 19:59:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:53 $ACTION_MASSAGE_REMOVE:  
{"id":1013} 

 Player 1 19:59:53 $ACTION_MASSAGE_REMOVE:  
{"id":1011} 

 Player 1 19:59:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1014,"_text":"Resolve PlayLootCardStackEffect 128 "}} 

 Player 1 19:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 

 Player 1 19:59:53 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":60,"particleType":6} 

 Player 1 19:59:55 $DISABLE_PARTICLE_EFFECT:  
{"cardId":60,"particleType":6} 

 Player 1 19:59:55 $SET_MONEY:  
{"playerId":1,"numOfCoins":6} 

 Player 1 19:59:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":36,"originStackId":-1},"isAfterActivation":true,"index":36} 

 Player 1 19:59:55 $REMOVE_FROM_PILE:  
{"cardId":60} 

 Player 1 19:59:55 $MOVE_CARD:  
{"moveIndex":70,"cardId":60,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:59:56 $MOVE_CARD_END:  
{"moveIndex":70,"cardId":60,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:59:56 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":60} 

 Player 1 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0): addMoney"} 

 Player 1 19:59:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":128,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":128,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:59:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1015,"_text":"Remove After Resolve PlayLootCardStackEffect 128  "}} 

 Player 1 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":128,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:59:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1016,"_text":"Response Remove After Resolve PlayLootCardStackEffect 128"},"childOfId":1015} 

 Player 1 19:59:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1017,"_text":"Wait For Response From Player 2 "},"childOfId":1015} 

 Player 1 19:59:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:59:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 4 Cents(0) "} 

 Player 2 19:59:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:59:56 $ACTION_MASSAGE_REMOVE:  
{"id":1017} 

 Player 1 19:59:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1018,"_text":"Wait For Response From Player 1 "},"childOfId":1015} 

 Player 1 19:59:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:56 $ACTION_MASSAGE_REMOVE:  
{"id":1018} 

 Player 1 19:59:56 $ACTION_MASSAGE_REMOVE:  
{"id":1016} 

 Player 1 19:59:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1019,"_text":"Stack Was Emptied "}} 

 Player 1 19:59:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:59:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:58 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 19:59:58 $END_TURN:  

 Player 1 19:59:58 $SET_TURN:  
{"playerId":2} 

 Player 1 19:59:58 $START_TURN:  
{"playerId":2} 

 Player 2 19:59:58 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:59:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:58 $RECHARGE_ITEM:  
{"cardId":290} 

 Player 2 19:59:58 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":290} 

 Player 2 19:59:58 $RECHARGE_ITEM:  
{"cardId":291} 

 Player 2 19:59:58 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":291} 

 Player 2 19:59:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:59:58 $NEXT_STACK_ID:  

 Player 2 19:59:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:59:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:59:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:59:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:59:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1020,"_text":"Add StartTurnLoot 129 "}} 

 Player 2 19:59:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:59:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:59:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1021,"_text":"Response Adding StartTurnLoot 129"},"childOfId":1020} 

 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1022,"_text":"Wait For Response From Player 2 "},"childOfId":1020} 

 Player 2 19:59:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:59:59 $ACTION_MASSAGE_REMOVE:  
{"id":1022} 

 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1023,"_text":"Wait For Response From Player 1 "},"childOfId":1020} 

 Player 2 19:59:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:59:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:59:59 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:59:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:59:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:59:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:59:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:59:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:59:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:59:59 $ACTION_MASSAGE_REMOVE:  
{"id":1023} 

 Player 2 19:59:59 $ACTION_MASSAGE_REMOVE:  
{"id":1021} 

 Player 2 19:59:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1024,"_text":"Resolve StartTurnLoot 129 "}} 

 Player 2 19:59:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:59:59 $MOVE_CARD:  
{"moveIndex":71,"cardId":24,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:00:00 $MOVE_CARD_END:  
{"moveIndex":71,"cardId":24,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:00:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":24} 

 Player 2 20:00:00 $FLIP_CARD:  
{"cardId":24} 

 Player 2 20:00:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":24} 

 Player 2 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:00:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1025,"_text":"Remove After Resolve StartTurnLoot 129  "}} 

 Player 2 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":129,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1026,"_text":"Response Remove After Resolve StartTurnLoot 129"},"childOfId":1025} 

 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1027,"_text":"Wait For Response From Player 1 "},"childOfId":1025} 

 Player 2 20:00:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:00:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:00 $ACTION_MASSAGE_REMOVE:  
{"id":1027} 

 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1028,"_text":"Wait For Response From Player 2 "},"childOfId":1025} 

 Player 2 20:00:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:00 $ACTION_MASSAGE_REMOVE:  
{"id":1028} 

 Player 2 20:00:00 $ACTION_MASSAGE_REMOVE:  
{"id":1026} 

 Player 2 20:00:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1029,"_text":"Stack Was Emptied "}} 

 Player 2 20:00:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:07 $SHOW_DECISION:  
{"startCardId":290,"endCardId":227} 

 Player 2 20:00:10 $NEXT_STACK_ID:  

 Player 2 20:00:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:00:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:00:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:00:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:00:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1030,"_text":"Add DeclareAttack 130 "}} 

 Player 2 20:00:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:00:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:00:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1031,"_text":"Response Adding DeclareAttack 130"},"childOfId":1030} 

 Player 2 20:00:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1032,"_text":"Wait For Response From Player 2 "},"childOfId":1030} 

 Player 2 20:00:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:10 $ACTION_MASSAGE_REMOVE:  
{"id":1032} 

 Player 2 20:00:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1033,"_text":"Wait For Response From Player 1 "},"childOfId":1030} 

 Player 2 20:00:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:00:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:00:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:00:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:00:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:00:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:00:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:11 $ACTION_MASSAGE_REMOVE:  
{"id":1033} 

 Player 2 20:00:11 $ACTION_MASSAGE_REMOVE:  
{"id":1031} 

 Player 2 20:00:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1034,"_text":"Resolve DeclareAttack 130 "}} 

 Player 2 20:00:11 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:00:11 $SHOW_CARD_PREVIEW:  
{"cardToShowId":246,"playerId":2} 

 Player 2 20:00:16 $FLIP_CARD:  
{"cardId":246} 

 Player 2 20:00:16 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":246} 

 Player 2 20:00:16 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":2} 

 Player 2 20:00:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":5} 

 Player 2 20:00:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":54,"originStackId":130},"isAfterActivation":true,"index":54} 

 Player 2 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:00:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1035,"_text":"Remove After Resolve DeclareAttack 130  "}} 

 Player 2 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":130,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":246,"stackEffectType":4}} 

 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1036,"_text":"Response Remove After Resolve DeclareAttack 130"},"childOfId":1035} 

 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1037,"_text":"Wait For Response From Player 1 "},"childOfId":1035} 

 Player 2 20:00:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 20:00:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fatty"} 

 Player 1 20:00:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:16 $ACTION_MASSAGE_REMOVE:  
{"id":1037} 

 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1038,"_text":"Wait For Response From Player 2 "},"childOfId":1035} 

 Player 2 20:00:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:16 $ACTION_MASSAGE_REMOVE:  
{"id":1038} 

 Player 2 20:00:16 $ACTION_MASSAGE_REMOVE:  
{"id":1036} 

 Player 2 20:00:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1039,"_text":"Stack Was Emptied "}} 

 Player 2 20:00:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:26 $NEXT_STACK_ID:  

 Player 2 20:00:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 20:00:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":131,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 20:00:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 20:00:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":131,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 20:00:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1040,"_text":"Add AttackRoll 131 "}} 

 Player 2 20:00:26 $ROLL_DICE:  
{"playerId":2} 

 Player 1 20:00:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:00:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:00:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 2 20:00:27 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 20:00:27 $UPDATE_STACK_VIS:  
{"stackId":131,"text":"player rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:27 $SHOW_DICE_ROLL:  
{"stackId":131} 

 Player 2 20:00:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 20:00:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1041,"_text":"Response Adding AttackRoll 131"},"childOfId":1040} 

 Player 2 20:00:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1042,"_text":"Wait For Response From Player 2 "},"childOfId":1040} 

 Player 2 20:00:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:30 $ACTION_MASSAGE_REMOVE:  
{"id":1042} 

 Player 2 20:00:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1043,"_text":"Wait For Response From Player 1 "},"childOfId":1040} 

 Player 2 20:00:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:31 $ACTION_MASSAGE_REMOVE:  
{"id":1043} 

 Player 2 20:00:31 $ACTION_MASSAGE_REMOVE:  
{"id":1041} 

 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1044,"_text":"Resolve AttackRoll 131 "}} 

 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1045,"_text":"Added -1 to original roll"}} 

 Player 2 20:00:31 $NEXT_STACK_ID:  

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}]} 

 Player 2 20:00:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":55,"originStackId":131},"isAfterActivation":true,"index":55} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 rolled 4 vs Fatty<Monster>"} 

 Player 2 20:00:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 2 20:00:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1046,"_text":"Remove After Resolve AttackRoll 131  "}} 

 Player 2 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 2 20:00:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":131,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":246}} 

 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1047,"_text":"Response Remove After Resolve AttackRoll 131"},"childOfId":1046} 

 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1048,"_text":"Wait For Response From Player 2 "},"childOfId":1046} 

 Player 2 20:00:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:31 $ACTION_MASSAGE_REMOVE:  
{"id":1048} 

 Player 2 20:00:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1049,"_text":"Wait For Response From Player 1 "},"childOfId":1046} 

 Player 2 20:00:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Player 2 is rolling against Fatty<Monster>"} 

 Player 1 20:00:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:32 $ACTION_MASSAGE_REMOVE:  
{"id":1049} 

 Player 2 20:00:32 $ACTION_MASSAGE_REMOVE:  
{"id":1047} 

 Player 2 20:00:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1050,"_text":"Resolve CombatDamage 132 "}} 

 Player 2 20:00:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":132},"isAfterActivation":false,"index":4} 

 Player 2 20:00:32 $NEXT_STACK_ID:  

 Player 2 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 2 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:00:32 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:00:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:00:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1051,"_text":"Add ActivatePassiveEffect 133 "}} 

 Player 2 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:00:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:00:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1052,"_text":"Response Adding ActivatePassiveEffect 133"},"childOfId":1051} 

 Player 2 20:00:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1053,"_text":"Wait For Response From Player 1 "},"childOfId":1051} 

 Player 2 20:00:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:33 $ACTION_MASSAGE_REMOVE:  
{"id":1053} 

 Player 2 20:00:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1054,"_text":"Wait For Response From Player 2 "},"childOfId":1051} 

 Player 2 20:00:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:33 $ACTION_MASSAGE_REMOVE:  
{"id":1054} 

 Player 2 20:00:33 $ACTION_MASSAGE_REMOVE:  
{"id":1052} 

 Player 2 20:00:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1055,"_text":"Resolve ActivatePassiveEffect 133 "}} 

 Player 2 20:00:33 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 20:00:35 $DISABLE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 20:00:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":132},"isAfterActivation":false,"index":4} 

 Player 2 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:00:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 2 20:00:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:00:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1056,"_text":"Remove After Resolve ActivatePassiveEffect 133  "}} 

 Player 2 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 2 20:00:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":133,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:00:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1057,"_text":"Response Remove After Resolve ActivatePassiveEffect 133"},"childOfId":1056} 

 Player 2 20:00:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1058,"_text":"Wait For Response From Player 2 "},"childOfId":1056} 

 Player 2 20:00:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:35 $ACTION_MASSAGE_REMOVE:  
{"id":1058} 

 Player 2 20:00:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1059,"_text":"Wait For Response From Player 1 "},"childOfId":1056} 

 Player 2 20:00:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:Activate Polydactyly "} 

 Player 1 20:00:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:35 $ACTION_MASSAGE_REMOVE:  
{"id":1059} 

 Player 2 20:00:35 $ACTION_MASSAGE_REMOVE:  
{"id":1057} 

 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1060,"_text":"Resolve CombatDamage 132 "}} 

 Player 2 20:00:36 $UPDATE_STACK_VIS:  
{"stackId":132,"text":"Isaac will deal 5 combat damage to Fatty"} 

 Player 2 20:00:36 $MONSTER_GET_DAMAGED:  
{"cardId":246,"hpLeft":0,"damageDealerId":290} 

 Player 2 20:00:36 $NEXT_STACK_ID:  

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 2 20:00:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $REPLACE_STACK:  
{"currentStack":[{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}]} 

 Player 2 20:00:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":246,"scopeIsPlayer":false,"index":56,"originStackId":-1},"isAfterActivation":true,"index":56} 

 Player 2 20:00:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":246}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":132},"isAfterActivation":true,"index":4} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1061,"_text":"Remove After Resolve CombatDamage 132  "}} 

 Player 2 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 20:00:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":132,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":246,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1062,"_text":"Response Remove After Resolve CombatDamage 132"},"childOfId":1061} 

 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1063,"_text":"Wait For Response From Player 2 "},"childOfId":1061} 

 Player 2 20:00:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:36 $ACTION_MASSAGE_REMOVE:  
{"id":1063} 

 Player 2 20:00:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1064,"_text":"Wait For Response From Player 1 "},"childOfId":1061} 

 Player 2 20:00:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty"} 

 Player 1 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:37 $ACTION_MASSAGE_REMOVE:  
{"id":1064} 

 Player 2 20:00:37 $ACTION_MASSAGE_REMOVE:  
{"id":1062} 

 Player 2 20:00:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1065,"_text":"Resolve MonsterDeath 134 "}} 

 Player 2 20:00:37 $DISABLE_PARTICLE_EFFECT:  
{"cardId":246,"particleType":5} 

 Player 2 20:00:37 $CANCEL_ATTACK:  

 Player 2 20:00:37 $NEXT_STACK_ID:  

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 20:00:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":135,"creatorCardId":290,"monsterCardWithRewardId":246,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":135,"creatorCardId":290,"monsterCardWithRewardId":246,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:37 $REPLACE_STACK:  
{"currentStack":[{"entityId":135,"creatorCardId":290,"monsterCardWithRewardId":246,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}]} 

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:00:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 

 Player 2 20:00:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 2 20:00:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 

 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1066,"_text":"Remove After Resolve MonsterDeath 134  "}} 

 Player 2 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 2 20:00:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":134,"creatorCardId":290,"monsterToDieCardId":246,"stackEffectType":5,"killerId":290}} 

 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1067,"_text":"Response Remove After Resolve MonsterDeath 134"},"childOfId":1066} 

 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1068,"_text":"Wait For Response From Player 2 "},"childOfId":1066} 

 Player 2 20:00:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:38 $ACTION_MASSAGE_REMOVE:  
{"id":1068} 

 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1069,"_text":"Wait For Response From Player 1 "},"childOfId":1066} 

 Player 2 20:00:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:00:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:38 $ACTION_MASSAGE_REMOVE:  
{"id":1069} 

 Player 2 20:00:38 $ACTION_MASSAGE_REMOVE:  
{"id":1067} 

 Player 2 20:00:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1070,"_text":"Resolve MonsterRewardStackEffect 135 "}} 

 Player 2 20:00:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:00:38 $MOVE_CARD:  
{"moveIndex":72,"cardId":70,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:00:39 $MOVE_CARD_END:  
{"moveIndex":72,"cardId":70,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:00:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":70} 

 Player 2 20:00:39 $FLIP_CARD:  
{"cardId":70} 

 Player 2 20:00:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":70} 

 Player 2 20:00:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":246,"scopeIsPlayer":false,"index":57,"originStackId":135},"isAfterActivation":true,"index":57} 

 Player 2 20:00:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:39 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":135,"creatorCardId":290,"monsterCardWithRewardId":246,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 20:00:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1071,"_text":"Fizzle MonsterRewardStackEffect 135"}} 

 Player 2 20:00:39 $FIZZLE_STACK_EFFECT:  
{"entityId":135} 

 Player 2 20:00:39 $MOVE_CARD:  
{"moveIndex":73,"cardId":246,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:00:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Fatty<Monster> reward"} 

 Player 1 20:00:39 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:00:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:00:40 $MOVE_CARD_END:  
{"moveIndex":73,"cardId":246,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:00:40 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":246} 

 Player 2 20:00:40 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":246} 

 Player 2 20:00:40 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 2 20:00:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1072,"_text":"Stack Was Emptied "}} 

 Player 2 20:00:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:52 $SHOW_DECISION:  
{"startCardId":70,"endCardId":70,"flipEndCard":true} 

 Player 2 20:00:55 $NEXT_STACK_ID:  

 Player 2 20:00:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 2 20:00:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 20:00:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 2 20:00:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 20:00:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1073,"_text":"Add PlayLootCardStackEffect 136 "}} 

 Player 2 20:00:55 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":70} 

 Player 2 20:00:55 $MOVE_CARD:  
{"moveIndex":74,"cardId":70,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:00:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:00:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:00:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:56 $MOVE_CARD_END:  
{"moveIndex":74,"cardId":70,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:00:56 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":70} 

 Player 2 20:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10): addMoney"} 

 Player 2 20:00:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10): addMoney"} 

 Player 2 20:00:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":70,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:00:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1074,"_text":"Response Adding PlayLootCardStackEffect 136"},"childOfId":1073} 

 Player 2 20:00:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1075,"_text":"Wait For Response From Player 2 "},"childOfId":1073} 

 Player 2 20:00:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:00:56 $ACTION_MASSAGE_REMOVE:  
{"id":1075} 

 Player 2 20:00:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1076,"_text":"Wait For Response From Player 1 "},"childOfId":1073} 

 Player 2 20:00:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:00:56 $ACTION_MASSAGE_REMOVE:  
{"id":1076} 

 Player 2 20:00:56 $ACTION_MASSAGE_REMOVE:  
{"id":1074} 

 Player 2 20:00:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1077,"_text":"Resolve PlayLootCardStackEffect 136 "}} 

 Player 2 20:00:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10): addMoney"} 

 Player 2 20:00:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":70,"particleType":6} 

 Player 2 20:00:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":70,"particleType":6} 

 Player 2 20:00:58 $SET_MONEY:  
{"playerId":2,"numOfCoins":7} 

 Player 2 20:00:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":58,"originStackId":-1},"isAfterActivation":true,"index":58} 

 Player 2 20:00:58 $REMOVE_FROM_PILE:  
{"cardId":70} 

 Player 2 20:00:58 $MOVE_CARD:  
{"moveIndex":75,"cardId":70,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:00:59 $MOVE_CARD_END:  
{"moveIndex":75,"cardId":70,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:00:59 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":70} 

 Player 2 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10): addMoney"} 

 Player 2 20:00:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:00:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1078,"_text":"Remove After Resolve PlayLootCardStackEffect 136  "}} 

 Player 2 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:00:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":136,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":70,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:00:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1079,"_text":"Response Remove After Resolve PlayLootCardStackEffect 136"},"childOfId":1078} 

 Player 2 20:00:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1080,"_text":"Wait For Response From Player 1 "},"childOfId":1078} 

 Player 2 20:00:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:00:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 4 Cents(10) "} 

 Player 1 20:00:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:00 $ACTION_MASSAGE_REMOVE:  
{"id":1080} 

 Player 2 20:01:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1081,"_text":"Wait For Response From Player 2 "},"childOfId":1078} 

 Player 2 20:01:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:00 $ACTION_MASSAGE_REMOVE:  
{"id":1081} 

 Player 2 20:01:00 $ACTION_MASSAGE_REMOVE:  
{"id":1079} 

 Player 2 20:01:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1082,"_text":"Stack Was Emptied "}} 

 Player 2 20:01:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:01 $SHOW_DECISION:  
{"startCardId":290,"endCardId":290} 

 Player 2 20:01:04 $NEXT_STACK_ID:  

 Player 2 20:01:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:01:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:01:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:01:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:01:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1083,"_text":"Add ActivateItem 137 "}} 

 Player 1 20:01:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:01:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:01:06 $SHOW_DECISION:  
{"startCardId":290,"endCardId":54,"flipEndCard":true} 

 Player 2 20:01:09 $USE_ITEM:  
{"cardId":290} 

 Player 2 20:01:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:01:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:01:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1084,"_text":"Response Adding ActivateItem 137"},"childOfId":1083} 

 Player 2 20:01:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1085,"_text":"Wait For Response From Player 2 "},"childOfId":1083} 

 Player 2 20:01:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:10 $ACTION_MASSAGE_REMOVE:  
{"id":1085} 

 Player 2 20:01:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1086,"_text":"Wait For Response From Player 1 "},"childOfId":1083} 

 Player 2 20:01:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:01:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:01:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:01:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:01:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:10 $ACTION_MASSAGE_REMOVE:  
{"id":1086} 

 Player 2 20:01:10 $ACTION_MASSAGE_REMOVE:  
{"id":1084} 

 Player 2 20:01:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1087,"_text":"Resolve ActivateItem 137 "}} 

 Player 2 20:01:10 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 20:01:12 $DISABLE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 20:01:12 $NEXT_STACK_ID:  

 Player 2 20:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:01:12 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":54} 

 Player 2 20:01:12 $MOVE_CARD:  
{"moveIndex":76,"cardId":54,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:01:12 $MOVE_CARD_END:  
{"moveIndex":76,"cardId":54,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:01:12 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":54} 

 Player 2 20:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:01:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:01:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":54,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:01:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:01:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:01:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":54,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:01:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:01:13 $REPLACE_STACK:  
{"currentStack":[{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":54,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:01:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney"} 

 Player 2 20:01:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1088,"_text":"Remove After Resolve ActivateItem 137  "}} 

 Player 2 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney"} 

 Player 2 20:01:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":137,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1089,"_text":"Response Remove After Resolve ActivateItem 137"},"childOfId":1088} 

 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1090,"_text":"Wait For Response From Player 2 "},"childOfId":1088} 

 Player 2 20:01:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":1090} 

 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1091,"_text":"Wait For Response From Player 1 "},"childOfId":1088} 

 Player 2 20:01:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:01:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16)  \n2:Player 2 activated Isaac"} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16)  \n2:Player 2 activated Isaac"} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16)  \n2:Player 2 activated Isaac"} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16)  \n2:Player 2 activated Isaac"} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16)  \n2:Player 2 activated Isaac"} 

 Player 1 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16)  \n2:Player 2 activated Isaac"} 

 Player 1 20:01:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":1091} 

 Player 2 20:01:13 $ACTION_MASSAGE_REMOVE:  
{"id":1089} 

 Player 2 20:01:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1092,"_text":"Resolve PlayLootCardStackEffect 138 "}} 

 Player 2 20:01:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney"} 

 Player 2 20:01:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":54,"particleType":6} 

 Player 2 20:01:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":54,"particleType":6} 

 Player 2 20:01:15 $SET_MONEY:  
{"playerId":2,"numOfCoins":10} 

 Player 2 20:01:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":59,"originStackId":-1},"isAfterActivation":true,"index":59} 

 Player 2 20:01:15 $REMOVE_FROM_PILE:  
{"cardId":54} 

 Player 2 20:01:15 $MOVE_CARD:  
{"moveIndex":77,"cardId":54,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:01:16 $MOVE_CARD_END:  
{"moveIndex":77,"cardId":54,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:01:16 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":54} 

 Player 2 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16): addMoney"} 

 Player 2 20:01:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:01:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1093,"_text":"Remove After Resolve PlayLootCardStackEffect 138  "}} 

 Player 2 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":138,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":54,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:01:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1094,"_text":"Response Remove After Resolve PlayLootCardStackEffect 138"},"childOfId":1093} 

 Player 2 20:01:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1095,"_text":"Wait For Response From Player 1 "},"childOfId":1093} 

 Player 2 20:01:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:01:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(16) "} 

 Player 1 20:01:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:17 $ACTION_MASSAGE_REMOVE:  
{"id":1095} 

 Player 2 20:01:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1096,"_text":"Wait For Response From Player 2 "},"childOfId":1093} 

 Player 2 20:01:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:17 $ACTION_MASSAGE_REMOVE:  
{"id":1096} 

 Player 2 20:01:17 $ACTION_MASSAGE_REMOVE:  
{"id":1094} 

 Player 2 20:01:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1097,"_text":"Stack Was Emptied "}} 

 Player 2 20:01:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:19 $SHOW_DECISION:  
{"startCardId":290,"endCardId":165} 

 Player 2 20:01:22 $NEXT_STACK_ID:  

 Player 2 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 2 20:01:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 2 20:01:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1098,"_text":"Add PurchaseItem 139 "}} 

 Player 2 20:01:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 2 20:01:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1099,"_text":"Response Adding PurchaseItem 139"},"childOfId":1098} 

 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1100,"_text":"Wait For Response From Player 2 "},"childOfId":1098} 

 Player 2 20:01:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":1100} 

 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1101,"_text":"Wait For Response From Player 1 "},"childOfId":1098} 

 Player 2 20:01:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:01:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 1 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 1 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 1 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 1 20:01:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":1101} 

 Player 2 20:01:22 $ACTION_MASSAGE_REMOVE:  
{"id":1099} 

 Player 2 20:01:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1102,"_text":"Resolve PurchaseItem 139 "}} 

 Player 2 20:01:22 $SET_MONEY:  
{"playerId":2,"numOfCoins":0} 

 Player 2 20:01:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":60,"originStackId":-1},"isAfterActivation":true,"index":60} 

 Player 2 20:01:22 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":165} 

 Player 2 20:01:22 $NEXT_STACK_ID:  

 Player 2 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 2 20:01:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 2 20:01:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 2 20:01:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 2 20:01:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 2 20:01:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 2 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 2 20:01:23 $REPLACE_STACK:  
{"currentStack":[{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 20:01:23 $REGISTER_PASSIVE_ITEM:  
{"cardId":165} 

 Player 2 20:01:23 $MOVE_CARD:  
{"moveIndex":78,"cardId":165,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:23 $MOVE_CARD_END:  
{"moveIndex":78,"cardId":165,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:01:23 $ADD_AN_ITEM:  
{"playerId":2,"cardId":165,"isReward":false} 

 Player 2 20:01:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":165}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":61,"originStackId":-1},"isAfterActivation":true,"index":61} 

 Player 2 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 20:01:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:01:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1103,"_text":"Remove After Resolve PurchaseItem 139  "}} 

 Player 2 20:01:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 20:01:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":139,"creatorCardId":290,"itemToPurchaseCardId":165,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1104,"_text":"Response Remove After Resolve PurchaseItem 139"},"childOfId":1103} 

 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1105,"_text":"Wait For Response From Player 2 "},"childOfId":1103} 

 Player 2 20:01:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:24 $ACTION_MASSAGE_REMOVE:  
{"id":1105} 

 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1106,"_text":"Wait For Response From Player 1 "},"childOfId":1103} 

 Player 2 20:01:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:01:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:01:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 1 20:01:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 1 20:01:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 1 20:01:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Edens Blessing for 10 \n2:Refill Store slot"} 

 Player 1 20:01:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:24 $ACTION_MASSAGE_REMOVE:  
{"id":1106} 

 Player 2 20:01:24 $ACTION_MASSAGE_REMOVE:  
{"id":1104} 

 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1107,"_text":"Resolve RefillEmptySlot 140 "}} 

 Player 2 20:01:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:01:24 $FLIP_CARD:  
{"cardId":164} 

 Player 2 20:01:24 $ADD_STORE_CARD:  
{"cardId":164} 

 Player 2 20:01:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1108,"_text":"Remove After Resolve RefillEmptySlot 140  "}} 

 Player 2 20:01:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":140,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1109,"_text":"Response Remove After Resolve RefillEmptySlot 140"},"childOfId":1108} 

 Player 2 20:01:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1110,"_text":"Wait For Response From Player 1 "},"childOfId":1108} 

 Player 2 20:01:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:01:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:01:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:01:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:25 $ACTION_MASSAGE_REMOVE:  
{"id":1110} 

 Player 2 20:01:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1111,"_text":"Wait For Response From Player 2 "},"childOfId":1108} 

 Player 2 20:01:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:25 $ACTION_MASSAGE_REMOVE:  
{"id":1111} 

 Player 2 20:01:25 $ACTION_MASSAGE_REMOVE:  
{"id":1109} 

 Player 2 20:01:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1112,"_text":"Stack Was Emptied "}} 

 Player 2 20:01:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":false,"index":5} 

 Player 2 20:01:31 $NEXT_STACK_ID:  

 Player 2 20:01:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 

 Player 2 20:01:31 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":165,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:01:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 

 Player 2 20:01:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":165,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:01:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1113,"_text":"Add ActivatePassiveEffect 141 "}} 

 Player 2 20:01:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 

 Player 2 20:01:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 

 Player 2 20:01:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":165,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:01:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1114,"_text":"Response Adding ActivatePassiveEffect 141"},"childOfId":1113} 

 Player 2 20:01:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1115,"_text":"Wait For Response From Player 2 "},"childOfId":1113} 

 Player 2 20:01:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:32 $ACTION_MASSAGE_REMOVE:  
{"id":1115} 

 Player 2 20:01:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1116,"_text":"Wait For Response From Player 1 "},"childOfId":1113} 

 Player 2 20:01:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:01:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:01:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:32 $ACTION_MASSAGE_REMOVE:  
{"id":1116} 

 Player 2 20:01:32 $ACTION_MASSAGE_REMOVE:  
{"id":1114} 

 Player 2 20:01:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1117,"_text":"Resolve ActivatePassiveEffect 141 "}} 

 Player 2 20:01:32 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":165,"particleType":6} 

 Player 2 20:01:34 $DISABLE_PARTICLE_EFFECT:  
{"cardId":165,"particleType":6} 

 Player 2 20:01:34 $SET_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 2 20:01:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":62,"originStackId":-1},"isAfterActivation":true,"index":62} 

 Player 2 20:01:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":false,"index":5} 

 Player 2 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing effect AddMoney<AddMoney>"} 

 Player 2 20:01:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:01:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1118,"_text":"Remove After Resolve ActivatePassiveEffect 141  "}} 

 Player 2 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":141,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":165,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:01:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1119,"_text":"Response Remove After Resolve ActivatePassiveEffect 141"},"childOfId":1118} 

 Player 2 20:01:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1120,"_text":"Wait For Response From Player 1 "},"childOfId":1118} 

 Player 2 20:01:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:01:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Edens Blessing "} 

 Player 1 20:01:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:01:35 $ACTION_MASSAGE_REMOVE:  
{"id":1120} 

 Player 2 20:01:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1121,"_text":"Wait For Response From Player 2 "},"childOfId":1118} 

 Player 2 20:01:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:35 $ACTION_MASSAGE_REMOVE:  
{"id":1121} 

 Player 2 20:01:35 $ACTION_MASSAGE_REMOVE:  
{"id":1119} 

 Player 2 20:01:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1122,"_text":"Stack Was Emptied "}} 

 Player 2 20:01:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:01:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:35 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 20:01:35 $END_TURN:  

 Player 2 20:01:35 $SET_TURN:  
{"playerId":1} 

 Player 2 20:01:35 $START_TURN:  
{"playerId":1} 

 Player 1 20:01:35 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:01:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:35 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 20:01:35 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 20:01:35 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":296} 

 Player 1 20:01:35 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 1 20:01:35 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":297} 

 Player 1 20:01:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:01:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 

 Player 1 20:01:35 $NEXT_STACK_ID:  

 Player 1 20:01:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:01:35 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":142,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:01:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":142,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:01:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1123,"_text":"Add ActivatePassiveEffect 142 "}} 

 Player 1 20:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:01:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:01:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":142,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:01:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1124,"_text":"Response Adding ActivatePassiveEffect 142"},"childOfId":1123} 

 Player 1 20:01:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1125,"_text":"Wait For Response From Player 1 "},"childOfId":1123} 

 Player 1 20:01:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:01:36 $ACTION_MASSAGE_REMOVE:  
{"id":1125} 

 Player 1 20:01:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1126,"_text":"Wait For Response From Player 2 "},"childOfId":1123} 

 Player 1 20:01:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:01:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:01:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:01:36 $ACTION_MASSAGE_REMOVE:  
{"id":1126} 

 Player 1 20:01:36 $ACTION_MASSAGE_REMOVE:  
{"id":1124} 

 Player 1 20:01:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1127,"_text":"Resolve ActivatePassiveEffect 142 "}} 

 Player 1 20:01:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 20:01:38 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 20:01:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 

 Player 1 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:01:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":142,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":142,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:01:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1128,"_text":"Remove After Resolve ActivatePassiveEffect 142  "}} 

 Player 1 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":142,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:01:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1129,"_text":"Response Remove After Resolve ActivatePassiveEffect 142"},"childOfId":1128} 

 Player 1 20:01:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1130,"_text":"Wait For Response From Player 2 "},"childOfId":1128} 

 Player 1 20:01:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:01:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:01:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":1130} 

 Player 1 20:01:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1131,"_text":"Wait For Response From Player 1 "},"childOfId":1128} 

 Player 1 20:01:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":1131} 

 Player 1 20:01:57 $ACTION_MASSAGE_REMOVE:  
{"id":1129} 

 Player 1 20:01:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1132,"_text":"Stack Was Emptied "}} 

 Player 1 20:01:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:58 $NEXT_STACK_ID:  

 Player 1 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:01:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":143,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:01:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":143,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1133,"_text":"Add StartTurnLoot 143 "}} 

 Player 1 20:01:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:01:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":143,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1134,"_text":"Response Adding StartTurnLoot 143"},"childOfId":1133} 

 Player 1 20:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1135,"_text":"Wait For Response From Player 1 "},"childOfId":1133} 

 Player 1 20:01:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":1135} 

 Player 1 20:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1136,"_text":"Wait For Response From Player 2 "},"childOfId":1133} 

 Player 1 20:01:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:01:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":1136} 

 Player 1 20:01:58 $ACTION_MASSAGE_REMOVE:  
{"id":1134} 

 Player 1 20:01:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1137,"_text":"Resolve StartTurnLoot 143 "}} 

 Player 1 20:01:58 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:01:58 $MOVE_CARD:  
{"moveIndex":79,"cardId":90,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:01:59 $MOVE_CARD_END:  
{"moveIndex":79,"cardId":90,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:01:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":90} 

 Player 1 20:01:59 $FLIP_CARD:  
{"cardId":90} 

 Player 1 20:01:59 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":90} 

 Player 1 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:01:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":143,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":143,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:01:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1138,"_text":"Remove After Resolve StartTurnLoot 143  "}} 

 Player 1 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:01:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":143,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:01:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1139,"_text":"Response Remove After Resolve StartTurnLoot 143"},"childOfId":1138} 

 Player 1 20:01:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1140,"_text":"Wait For Response From Player 2 "},"childOfId":1138} 

 Player 1 20:01:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:01:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:01:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:01:59 $ACTION_MASSAGE_REMOVE:  
{"id":1140} 

 Player 1 20:01:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1141,"_text":"Wait For Response From Player 1 "},"childOfId":1138} 

 Player 1 20:01:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:01:59 $ACTION_MASSAGE_REMOVE:  
{"id":1141} 

 Player 1 20:01:59 $ACTION_MASSAGE_REMOVE:  
{"id":1139} 

 Player 1 20:01:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1142,"_text":"Stack Was Emptied "}} 

 Player 1 20:01:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:02 $SHOW_DECISION:  
{"startCardId":296,"endCardId":227} 

 Player 1 20:02:05 $NEXT_STACK_ID:  

 Player 1 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 20:02:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":144,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 20:02:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":144,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 20:02:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1143,"_text":"Add DeclareAttack 144 "}} 

 Player 1 20:02:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 20:02:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":144,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 20:02:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1144,"_text":"Response Adding DeclareAttack 144"},"childOfId":1143} 

 Player 1 20:02:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1145,"_text":"Wait For Response From Player 1 "},"childOfId":1143} 

 Player 1 20:02:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:05 $ACTION_MASSAGE_REMOVE:  
{"id":1145} 

 Player 1 20:02:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1146,"_text":"Wait For Response From Player 2 "},"childOfId":1143} 

 Player 1 20:02:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:02:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:02:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:02:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:02:06 $ACTION_MASSAGE_REMOVE:  
{"id":1146} 

 Player 1 20:02:06 $ACTION_MASSAGE_REMOVE:  
{"id":1144} 

 Player 1 20:02:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1147,"_text":"Resolve DeclareAttack 144 "}} 

 Player 1 20:02:06 $DRAW_CARD:  
{"deckType":2} 

 Player 1 20:02:06 $SHOW_CARD_PREVIEW:  
{"cardToShowId":257,"playerId":1} 

 Player 1 20:02:17 $FLIP_CARD:  
{"cardId":257} 

 Player 1 20:02:17 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":257} 

 Player 1 20:02:17 $NEW_MONSTER_ON_PLACE:  
{"cardId":257,"monsterPlaceId":2} 

 Player 1 20:02:17 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":5} 

 Player 1 20:02:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":37,"originStackId":144},"isAfterActivation":true,"index":37} 

 Player 1 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 1 20:02:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":144,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:17 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":144,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 20:02:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1148,"_text":"Remove After Resolve DeclareAttack 144  "}} 

 Player 1 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:17 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":144,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":257,"stackEffectType":4}} 

 Player 1 20:02:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1149,"_text":"Response Remove After Resolve DeclareAttack 144"},"childOfId":1148} 

 Player 1 20:02:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1150,"_text":"Wait For Response From Player 2 "},"childOfId":1148} 

 Player 1 20:02:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:02:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Monster Deck"} 

 Player 2 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Little Horn"} 

 Player 2 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Little Horn"} 

 Player 2 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Little Horn"} 

 Player 2 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Little Horn"} 

 Player 2 20:02:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:02:17 $ACTION_MASSAGE_REMOVE:  
{"id":1150} 

 Player 1 20:02:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1151,"_text":"Wait For Response From Player 1 "},"childOfId":1148} 

 Player 1 20:02:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:17 $ACTION_MASSAGE_REMOVE:  
{"id":1151} 

 Player 1 20:02:17 $ACTION_MASSAGE_REMOVE:  
{"id":1149} 

 Player 1 20:02:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1152,"_text":"Stack Was Emptied "}} 

 Player 1 20:02:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:22 $SHOW_DECISION:  
{"startCardId":296,"endCardId":297} 

 Player 1 20:02:25 $NEXT_STACK_ID:  

 Player 1 20:02:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:02:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":145,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:02:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:02:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":145,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:02:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1153,"_text":"Add ActivateItem 145 "}} 

 Player 2 20:02:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:02:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:02:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:02:34 $SHOW_DECISION:  
{"startCardId":297,"endCardId":296} 

 Player 1 20:02:37 $USE_ITEM:  
{"cardId":297} 

 Player 1 20:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:02:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":145,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1154,"_text":"Response Adding ActivateItem 145"},"childOfId":1153} 

 Player 1 20:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1155,"_text":"Wait For Response From Player 1 "},"childOfId":1153} 

 Player 1 20:02:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:37 $ACTION_MASSAGE_REMOVE:  
{"id":1155} 

 Player 1 20:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1156,"_text":"Wait For Response From Player 2 "},"childOfId":1153} 

 Player 1 20:02:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:02:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:02:38 $ACTION_MASSAGE_REMOVE:  
{"id":1156} 

 Player 1 20:02:38 $ACTION_MASSAGE_REMOVE:  
{"id":1154} 

 Player 1 20:02:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1157,"_text":"Resolve ActivateItem 145 "}} 

 Player 1 20:02:38 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 20:02:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 20:02:40 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":true} 

 Player 1 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:02:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":145,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":145,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:02:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1158,"_text":"Remove After Resolve ActivateItem 145  "}} 

 Player 1 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":145,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:02:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1159,"_text":"Response Remove After Resolve ActivateItem 145"},"childOfId":1158} 

 Player 1 20:02:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1160,"_text":"Wait For Response From Player 2 "},"childOfId":1158} 

 Player 1 20:02:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:02:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:02:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":1160} 

 Player 1 20:02:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1161,"_text":"Wait For Response From Player 1 "},"childOfId":1158} 

 Player 1 20:02:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":1161} 

 Player 1 20:02:40 $ACTION_MASSAGE_REMOVE:  
{"id":1159} 

 Player 1 20:02:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1162,"_text":"Stack Was Emptied "}} 

 Player 1 20:02:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:45 $SHOW_DECISION:  
{"startCardId":90,"endCardId":90,"flipEndCard":true} 

 Player 1 20:02:48 $NEXT_STACK_ID:  

 Player 1 20:02:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:02:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3) "} 

 Player 1 20:02:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 20:02:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3) "} 

 Player 1 20:02:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 20:02:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1163,"_text":"Add PlayLootCardStackEffect 146 "}} 

 Player 1 20:02:48 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":90} 

 Player 1 20:02:48 $MOVE_CARD:  
{"moveIndex":80,"cardId":90,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:02:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:02:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:02:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3) "} 

 Player 2 20:02:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3) "} 

 Player 2 20:02:49 $MOVE_CARD_END:  
{"moveIndex":80,"cardId":90,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:02:49 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":90} 

 Player 1 20:02:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage"} 

 Player 1 20:02:51 $SHOW_DECISION:  
{"startCardId":90,"endCardId":256} 

 Player 1 20:02:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage"} 

 Player 1 20:02:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1164,"_text":"Response Adding PlayLootCardStackEffect 146"},"childOfId":1163} 

 Player 1 20:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1165,"_text":"Wait For Response From Player 1 "},"childOfId":1163} 

 Player 1 20:02:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:54 $ACTION_MASSAGE_REMOVE:  
{"id":1165} 

 Player 1 20:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1166,"_text":"Wait For Response From Player 2 "},"childOfId":1163} 

 Player 1 20:02:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:02:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3) "} 

 Player 2 20:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3) "} 

 Player 2 20:02:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:02:54 $ACTION_MASSAGE_REMOVE:  
{"id":1166} 

 Player 1 20:02:54 $ACTION_MASSAGE_REMOVE:  
{"id":1164} 

 Player 1 20:02:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1167,"_text":"Resolve PlayLootCardStackEffect 146 "}} 

 Player 1 20:02:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage"} 

 Player 1 20:02:54 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":90,"particleType":6} 

 Player 1 20:02:56 $DISABLE_PARTICLE_EFFECT:  
{"cardId":90,"particleType":6} 

 Player 1 20:02:56 $MONSTER_GET_DAMAGED:  
{"cardId":256,"hpLeft":0,"damageDealerId":296} 

 Player 1 20:02:56 $NEXT_STACK_ID:  

 Player 1 20:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage"} 

 Player 1 20:02:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 

 Player 1 20:02:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}} 

 Player 1 20:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 

 Player 1 20:02:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 

 Player 1 20:02:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 

 Player 1 20:02:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}} 

 Player 1 20:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 

 Player 1 20:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 

 Player 1 20:02:56 $REPLACE_STACK:  
{"currentStack":[{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}]} 

 Player 1 20:02:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":256,"scopeIsPlayer":false,"index":38,"originStackId":-1},"isAfterActivation":true,"index":38} 

 Player 1 20:02:56 $REMOVE_FROM_PILE:  
{"cardId":90} 

 Player 1 20:02:56 $MOVE_CARD:  
{"moveIndex":81,"cardId":90,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:02:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3) "} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3) "} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:57 $MOVE_CARD_END:  
{"moveIndex":81,"cardId":90,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:02:57 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":90} 

 Player 1 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 

 Player 1 20:02:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:02:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:02:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1168,"_text":"Remove After Resolve PlayLootCardStackEffect 146  "}} 

 Player 1 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:02:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":146,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:02:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1169,"_text":"Response Remove After Resolve PlayLootCardStackEffect 146"},"childOfId":1168} 

 Player 1 20:02:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1170,"_text":"Wait For Response From Player 1 "},"childOfId":1168} 

 Player 1 20:02:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:57 $ACTION_MASSAGE_REMOVE:  
{"id":1170} 

 Player 1 20:02:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1171,"_text":"Wait For Response From Player 2 "},"childOfId":1168} 

 Player 1 20:02:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:02:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 

 Player 2 20:02:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Bomb(3)  \n2:[object Object] killed by Samson"} 

 Player 2 20:02:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:02:58 $ACTION_MASSAGE_REMOVE:  
{"id":1171} 

 Player 1 20:02:58 $ACTION_MASSAGE_REMOVE:  
{"id":1169} 

 Player 1 20:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1172,"_text":"Resolve MonsterDeath 147 "}} 

 Player 1 20:02:58 $NEXT_STACK_ID:  

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:02:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:02:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":148,"creatorCardId":296,"monsterCardWithRewardId":256,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:02:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:02:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":148,"creatorCardId":296,"monsterCardWithRewardId":256,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:02:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:02:58 $REPLACE_STACK:  
{"currentStack":[{"entityId":148,"creatorCardId":296,"monsterCardWithRewardId":256,"playerCardIdToReward":296,"stackEffectType":7},{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}]} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:02:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 1 20:02:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}} 

 Player 1 20:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1173,"_text":"Remove After Resolve MonsterDeath 147  "}} 

 Player 1 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 1 20:02:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":147,"creatorCardId":296,"monsterToDieCardId":256,"stackEffectType":5,"killerId":296}} 

 Player 1 20:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1174,"_text":"Response Remove After Resolve MonsterDeath 147"},"childOfId":1173} 

 Player 1 20:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1175,"_text":"Wait For Response From Player 1 "},"childOfId":1173} 

 Player 1 20:02:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:02:58 $ACTION_MASSAGE_REMOVE:  
{"id":1175} 

 Player 1 20:02:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1176,"_text":"Wait For Response From Player 2 "},"childOfId":1173} 

 Player 1 20:02:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:02:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:02:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:02:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":1176} 

 Player 1 20:02:59 $ACTION_MASSAGE_REMOVE:  
{"id":1174} 

 Player 1 20:02:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1177,"_text":"Resolve MonsterRewardStackEffect 148 "}} 

 Player 1 20:02:59 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:02:59 $MOVE_CARD:  
{"moveIndex":82,"cardId":123,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:02:59 $MOVE_CARD_END:  
{"moveIndex":82,"cardId":123,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:03:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":123} 

 Player 1 20:03:00 $FLIP_CARD:  
{"cardId":123} 

 Player 1 20:03:00 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":123} 

 Player 1 20:03:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":256,"scopeIsPlayer":false,"index":39,"originStackId":148},"isAfterActivation":true,"index":39} 

 Player 1 20:03:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":148,"creatorCardId":296,"monsterCardWithRewardId":256,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:03:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1178,"_text":"Fizzle MonsterRewardStackEffect 148"}} 

 Player 1 20:03:00 $FIZZLE_STACK_EFFECT:  
{"entityId":148} 

 Player 1 20:03:00 $MOVE_CARD:  
{"moveIndex":83,"cardId":256,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:03:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:03:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Leech<Monster> reward"} 

 Player 2 20:03:00 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:03:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:03:00 $MOVE_CARD_END:  
{"moveIndex":83,"cardId":256,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:03:00 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":256} 

 Player 1 20:03:00 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":256} 

 Player 1 20:03:00 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 1 20:03:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1179,"_text":"Stack Was Emptied "}} 

 Player 1 20:03:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:06 $SHOW_DECISION:  
{"startCardId":296,"endCardId":296} 

 Player 1 20:03:09 $NEXT_STACK_ID:  

 Player 1 20:03:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:03:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:03:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:03:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:03:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1180,"_text":"Add ActivateItem 149 "}} 

 Player 2 20:03:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:03:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:03:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:03:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:03:12 $SHOW_DECISION:  
{"startCardId":296,"endCardId":123,"flipEndCard":true} 

 Player 1 20:03:15 $USE_ITEM:  
{"cardId":296} 

 Player 1 20:03:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:03:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:03:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1181,"_text":"Response Adding ActivateItem 149"},"childOfId":1180} 

 Player 1 20:03:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1182,"_text":"Wait For Response From Player 1 "},"childOfId":1180} 

 Player 1 20:03:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:15 $ACTION_MASSAGE_REMOVE:  
{"id":1182} 

 Player 1 20:03:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1183,"_text":"Wait For Response From Player 2 "},"childOfId":1180} 

 Player 1 20:03:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:03:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:03:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:15 $ACTION_MASSAGE_REMOVE:  
{"id":1183} 

 Player 1 20:03:15 $ACTION_MASSAGE_REMOVE:  
{"id":1181} 

 Player 1 20:03:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1184,"_text":"Resolve ActivateItem 149 "}} 

 Player 1 20:03:15 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 20:03:17 $DISABLE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 20:03:17 $NEXT_STACK_ID:  

 Player 1 20:03:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:03:17 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":123} 

 Player 1 20:03:17 $MOVE_CARD:  
{"moveIndex":84,"cardId":123,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:03:17 $MOVE_CARD_END:  
{"moveIndex":84,"cardId":123,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:03:18 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":123} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot \n2:Player 1 activated Samson"} 

 Player 1 20:03:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot \n2:Player 1 activated Samson"} 

 Player 1 20:03:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":150,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":1,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot \n2:Player 1 activated Samson"} 

 Player 1 20:03:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot \n2:Player 1 activated Samson"} 

 Player 1 20:03:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":150,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":1,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot \n2:Player 1 activated Samson"} 

 Player 1 20:03:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot \n2:Player 1 activated Samson"} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot \n2:Player 1 activated Samson"} 

 Player 1 20:03:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":150,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":1,"effectToDo":{"effectName":"GainLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot \n2:Player 1 activated Samson"} 

 Player 1 20:03:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot"} 

 Player 1 20:03:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:03:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1185,"_text":"Remove After Resolve ActivateItem 149  "}} 

 Player 1 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot"} 

 Player 1 20:03:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":149,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:03:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1186,"_text":"Response Remove After Resolve ActivateItem 149"},"childOfId":1185} 

 Player 1 20:03:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1187,"_text":"Wait For Response From Player 1 "},"childOfId":1185} 

 Player 1 20:03:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:18 $ACTION_MASSAGE_REMOVE:  
{"id":1187} 

 Player 1 20:03:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1188,"_text":"Wait For Response From Player 2 "},"childOfId":1185} 

 Player 1 20:03:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 

 Player 2 20:03:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 

 Player 2 20:03:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 

 Player 2 20:03:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 

 Player 2 20:03:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack  \n2:Player 1 activated Samson"} 

 Player 2 20:03:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:19 $ACTION_MASSAGE_REMOVE:  
{"id":1188} 

 Player 1 20:03:19 $ACTION_MASSAGE_REMOVE:  
{"id":1186} 

 Player 1 20:03:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1189,"_text":"Resolve PlayLootCardStackEffect 150 "}} 

 Player 1 20:03:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot"} 

 Player 1 20:03:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 1 20:03:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":123,"particleType":6} 

 Player 1 20:03:21 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:03:21 $MOVE_CARD:  
{"moveIndex":85,"cardId":120,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:03:21 $MOVE_CARD_END:  
{"moveIndex":85,"cardId":120,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:03:21 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":120} 

 Player 1 20:03:21 $FLIP_CARD:  
{"cardId":120} 

 Player 1 20:03:21 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":120} 

 Player 1 20:03:21 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:03:21 $MOVE_CARD:  
{"moveIndex":86,"cardId":20,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:03:22 $MOVE_CARD_END:  
{"moveIndex":86,"cardId":20,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:03:22 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":20} 

 Player 1 20:03:22 $FLIP_CARD:  
{"cardId":20} 

 Player 1 20:03:22 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":20} 

 Player 1 20:03:22 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:03:22 $MOVE_CARD:  
{"moveIndex":87,"cardId":109,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:03:22 $MOVE_CARD_END:  
{"moveIndex":87,"cardId":109,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:03:22 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":109} 

 Player 1 20:03:22 $FLIP_CARD:  
{"cardId":109} 

 Player 1 20:03:23 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":109} 

 Player 1 20:03:23 $REMOVE_FROM_PILE:  
{"cardId":123} 

 Player 1 20:03:23 $MOVE_CARD:  
{"moveIndex":88,"cardId":123,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:03:23 $MOVE_CARD_END:  
{"moveIndex":88,"cardId":123,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:03:23 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":123} 

 Player 1 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack: GainLoot"} 

 Player 1 20:03:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":150,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":150,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:03:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1190,"_text":"Remove After Resolve PlayLootCardStackEffect 150  "}} 

 Player 1 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":150,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:03:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1191,"_text":"Response Remove After Resolve PlayLootCardStackEffect 150"},"childOfId":1190} 

 Player 1 20:03:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1192,"_text":"Wait For Response From Player 2 "},"childOfId":1190} 

 Player 1 20:03:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Sack "} 

 Player 2 20:03:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":1192} 

 Player 1 20:03:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1193,"_text":"Wait For Response From Player 1 "},"childOfId":1190} 

 Player 1 20:03:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":1193} 

 Player 1 20:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":1191} 

 Player 1 20:03:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1194,"_text":"Stack Was Emptied "}} 

 Player 1 20:03:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:42 $NEXT_STACK_ID:  

 Player 1 20:03:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 

 Player 1 20:03:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 

 Player 1 20:03:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1195,"_text":"Add AttackRoll 151 "}} 

 Player 1 20:03:42 $ROLL_DICE:  
{"playerId":1} 

 Player 2 20:03:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:03:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:03:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 

 Player 1 20:03:43 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 20:03:43 $UPDATE_STACK_VIS:  
{"stackId":151,"text":"player rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:43 $SHOW_DICE_ROLL:  
{"stackId":151} 

 Player 1 20:03:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1196,"_text":"Response Adding AttackRoll 151"},"childOfId":1195} 

 Player 1 20:03:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1197,"_text":"Wait For Response From Player 1 "},"childOfId":1195} 

 Player 1 20:03:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:47 $ACTION_MASSAGE_REMOVE:  
{"id":1197} 

 Player 1 20:03:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1198,"_text":"Wait For Response From Player 2 "},"childOfId":1195} 

 Player 1 20:03:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:47 $ACTION_MASSAGE_REMOVE:  
{"id":1198} 

 Player 1 20:03:47 $ACTION_MASSAGE_REMOVE:  
{"id":1196} 

 Player 1 20:03:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1199,"_text":"Resolve AttackRoll 151 "}} 

 Player 1 20:03:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1200,"_text":"Added 1 to original roll"}} 

 Player 1 20:03:47 $NEXT_STACK_ID:  

 Player 1 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:47 $REPLACE_STACK:  
{"currentStack":[{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}]} 

 Player 1 20:03:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":6}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":40,"originStackId":151},"isAfterActivation":true,"index":40} 

 Player 1 20:03:48 $NEXT_STACK_ID:  

 Player 1 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster>"} 

 Player 1 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 20:03:48 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 20:03:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:03:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1201,"_text":"Add ActivatePassiveEffect 153 "}} 

 Player 1 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 20:03:48 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:03:48 $END_PUT_ON_STACK:  
{"playerId":1} 

 Player 1 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 20:03:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac effect DealDamage<DealDamage>"} 

 Player 1 20:03:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1202,"_text":"Response Adding ActivatePassiveEffect 153"},"childOfId":1201} 

 Player 1 20:03:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1203,"_text":"Wait For Response From Player 1 "},"childOfId":1201} 

 Player 1 20:03:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:49 $ACTION_MASSAGE_REMOVE:  
{"id":1203} 

 Player 1 20:03:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1204,"_text":"Wait For Response From Player 2 "},"childOfId":1201} 

 Player 1 20:03:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:49 $ACTION_MASSAGE_REMOVE:  
{"id":1204} 

 Player 1 20:03:49 $ACTION_MASSAGE_REMOVE:  
{"id":1202} 

 Player 1 20:03:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1205,"_text":"Resolve ActivatePassiveEffect 153 "}} 

 Player 1 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:49 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257},{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 20:03:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":181,"particleType":6} 

 Player 2 20:03:51 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":290} 

 Player 2 20:03:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":63,"originStackId":-1},"isAfterActivation":true,"index":63} 

 Player 2 20:03:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":6}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":6}}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":40},"isAfterActivation":true,"index":40} 

 Player 2 20:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:51 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257},{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 20:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 rolled 6 vs Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":181,"effctType":0},"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 1 20:03:52 $REPLACE_STACK:  
{"currentStack":[{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257},{"effectCollectedData":null,"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 1 20:03:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:03:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1206,"_text":"Remove After Resolve ActivatePassiveEffect 153  "}} 

 Player 1 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 1 20:03:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":153,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":181,"isAfterActivation":true,"index":40,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:03:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1207,"_text":"Response Remove After Resolve ActivatePassiveEffect 153"},"childOfId":1206} 

 Player 1 20:03:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1208,"_text":"Wait For Response From Player 2 "},"childOfId":1206} 

 Player 1 20:03:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster> \n3:Activate Ipecac "} 

 Player 2 20:03:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:53 $ACTION_MASSAGE_REMOVE:  
{"id":1208} 

 Player 1 20:03:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1209,"_text":"Wait For Response From Player 1 "},"childOfId":1206} 

 Player 1 20:03:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:53 $ACTION_MASSAGE_REMOVE:  
{"id":1209} 

 Player 1 20:03:53 $ACTION_MASSAGE_REMOVE:  
{"id":1207} 

 Player 1 20:03:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1210,"_text":"Resolve AttackRoll 151 "}} 

 Player 1 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 1 20:03:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 1 20:03:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1211,"_text":"Remove After Resolve AttackRoll 151  "}} 

 Player 1 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 1 20:03:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":151,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":257}} 

 Player 1 20:03:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1212,"_text":"Response Remove After Resolve AttackRoll 151"},"childOfId":1211} 

 Player 1 20:03:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1213,"_text":"Wait For Response From Player 1 "},"childOfId":1211} 

 Player 1 20:03:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:53 $ACTION_MASSAGE_REMOVE:  
{"id":1213} 

 Player 1 20:03:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1214,"_text":"Wait For Response From Player 2 "},"childOfId":1211} 

 Player 1 20:03:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:Player 1 is rolling against Little Horn<Monster>"} 

 Player 2 20:03:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:54 $ACTION_MASSAGE_REMOVE:  
{"id":1214} 

 Player 1 20:03:54 $ACTION_MASSAGE_REMOVE:  
{"id":1212} 

 Player 1 20:03:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1215,"_text":"Resolve CombatDamage 152 "}} 

 Player 1 20:03:54 $UPDATE_STACK_VIS:  
{"stackId":152,"text":"Samson will deal 5 combat damage to Little Horn"} 

 Player 1 20:03:54 $MONSTER_GET_DAMAGED:  
{"cardId":257,"hpLeft":0,"damageDealerId":296} 

 Player 1 20:03:54 $NEXT_STACK_ID:  

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 1 20:03:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 1 20:03:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 1 20:03:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 1 20:03:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 1 20:03:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 1 20:03:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}]} 

 Player 1 20:03:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":41,"originStackId":-1},"isAfterActivation":true,"index":41} 

 Player 1 20:03:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2},{"type":0,"number":296},{"type":0,"number":257}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":42,"originStackId":152},"isAfterActivation":true,"index":42} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 1 20:03:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:03:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1216,"_text":"Remove After Resolve CombatDamage 152  "}} 

 Player 1 20:03:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:03:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":152,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":257,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:03:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1217,"_text":"Response Remove After Resolve CombatDamage 152"},"childOfId":1216} 

 Player 1 20:03:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1218,"_text":"Wait For Response From Player 1 "},"childOfId":1216} 

 Player 1 20:03:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:54 $ACTION_MASSAGE_REMOVE:  
{"id":1218} 

 Player 1 20:03:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1219,"_text":"Wait For Response From Player 2 "},"childOfId":1216} 

 Player 1 20:03:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 2 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Little Horn \n2:[object Object] killed by Samson"} 

 Player 2 20:03:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:55 $ACTION_MASSAGE_REMOVE:  
{"id":1219} 

 Player 1 20:03:55 $ACTION_MASSAGE_REMOVE:  
{"id":1217} 

 Player 1 20:03:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1220,"_text":"Resolve MonsterDeath 154 "}} 

 Player 1 20:03:55 $DISABLE_PARTICLE_EFFECT:  
{"cardId":257,"particleType":5} 

 Player 1 20:03:55 $CANCEL_ATTACK:  

 Player 1 20:03:55 $NEXT_STACK_ID:  

 Player 1 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:03:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:03:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":155,"creatorCardId":296,"monsterCardWithRewardId":257,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:03:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}} 

 Player 1 20:03:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:03:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":155,"creatorCardId":296,"monsterCardWithRewardId":257,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:03:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}} 

 Player 1 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:03:56 $REPLACE_STACK:  
{"currentStack":[{"entityId":155,"creatorCardId":296,"monsterCardWithRewardId":257,"playerCardIdToReward":296,"stackEffectType":7},{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}]} 

 Player 1 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:03:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}} 

 Player 1 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 1 20:03:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}} 

 Player 1 20:03:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1221,"_text":"Remove After Resolve MonsterDeath 154  "}} 

 Player 1 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 1 20:03:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":154,"creatorCardId":296,"monsterToDieCardId":257,"stackEffectType":5,"killerId":296}} 

 Player 1 20:03:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1222,"_text":"Response Remove After Resolve MonsterDeath 154"},"childOfId":1221} 

 Player 1 20:03:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1223,"_text":"Wait For Response From Player 1 "},"childOfId":1221} 

 Player 1 20:03:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:03:56 $ACTION_MASSAGE_REMOVE:  
{"id":1223} 

 Player 1 20:03:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1224,"_text":"Wait For Response From Player 2 "},"childOfId":1221} 

 Player 1 20:03:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:03:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:03:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:03:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:03:57 $ACTION_MASSAGE_REMOVE:  
{"id":1224} 

 Player 1 20:03:57 $ACTION_MASSAGE_REMOVE:  
{"id":1222} 

 Player 1 20:03:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1225,"_text":"Resolve MonsterRewardStackEffect 155 "}} 

 Player 1 20:03:57 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:03:57 $MOVE_CARD:  
{"moveIndex":89,"cardId":7,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:03:57 $MOVE_CARD_END:  
{"moveIndex":89,"cardId":7,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:03:57 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":7} 

 Player 1 20:03:57 $FLIP_CARD:  
{"cardId":7} 

 Player 1 20:03:57 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":7} 

 Player 1 20:03:57 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:03:57 $MOVE_CARD:  
{"moveIndex":90,"cardId":45,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:03:58 $MOVE_CARD_END:  
{"moveIndex":90,"cardId":45,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:03:58 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":45} 

 Player 1 20:03:58 $FLIP_CARD:  
{"cardId":45} 

 Player 1 20:03:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":45} 

 Player 1 20:03:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":257,"scopeIsPlayer":false,"index":43,"originStackId":155},"isAfterActivation":true,"index":43} 

 Player 1 20:03:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:03:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":155,"creatorCardId":296,"monsterCardWithRewardId":257,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:03:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1226,"_text":"Fizzle MonsterRewardStackEffect 155"}} 

 Player 1 20:03:58 $FIZZLE_STACK_EFFECT:  
{"entityId":155} 

 Player 1 20:03:58 $MOVE_CARD:  
{"moveIndex":91,"cardId":257,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"soulsLayout"} 

 Player 2 20:03:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Little Horn<Monster> reward"} 

 Player 2 20:03:58 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:03:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:03:58 $MOVE_CARD_END:  
{"moveIndex":91,"cardId":257,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:03:58 $GET_SOUL:  
{"playerId":1,"cardId":257} 

 Player 1 20:03:58 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":257} 

 Player 1 20:03:58 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 1 20:03:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1227,"_text":"Stack Was Emptied "}} 

 Player 1 20:03:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:04:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:04 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 20:04:04 $END_TURN:  

 Player 1 20:04:04 $SET_TURN:  
{"playerId":2} 

 Player 1 20:04:04 $START_TURN:  
{"playerId":2} 

 Player 2 20:04:04 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:04:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:05 $RECHARGE_ITEM:  
{"cardId":290} 

 Player 2 20:04:05 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":290} 

 Player 2 20:04:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:05 $NEXT_STACK_ID:  

 Player 2 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:04:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:04:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1228,"_text":"Add StartTurnLoot 156 "}} 

 Player 2 20:04:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:04:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1229,"_text":"Response Adding StartTurnLoot 156"},"childOfId":1228} 

 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1230,"_text":"Wait For Response From Player 2 "},"childOfId":1228} 

 Player 2 20:04:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:05 $ACTION_MASSAGE_REMOVE:  
{"id":1230} 

 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1231,"_text":"Wait For Response From Player 1 "},"childOfId":1228} 

 Player 2 20:04:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:04:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:04:05 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:05 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:04:05 $ACTION_MASSAGE_REMOVE:  
{"id":1231} 

 Player 2 20:04:05 $ACTION_MASSAGE_REMOVE:  
{"id":1229} 

 Player 2 20:04:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1232,"_text":"Resolve StartTurnLoot 156 "}} 

 Player 2 20:04:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:04:05 $MOVE_CARD:  
{"moveIndex":92,"cardId":81,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:04:06 $MOVE_CARD_END:  
{"moveIndex":92,"cardId":81,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:04:06 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":81} 

 Player 2 20:04:06 $FLIP_CARD:  
{"cardId":81} 

 Player 2 20:04:06 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":81} 

 Player 2 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:04:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1233,"_text":"Remove After Resolve StartTurnLoot 156  "}} 

 Player 2 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":156,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1234,"_text":"Response Remove After Resolve StartTurnLoot 156"},"childOfId":1233} 

 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1235,"_text":"Wait For Response From Player 1 "},"childOfId":1233} 

 Player 2 20:04:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:04:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:04:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:04:06 $ACTION_MASSAGE_REMOVE:  
{"id":1235} 

 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1236,"_text":"Wait For Response From Player 2 "},"childOfId":1233} 

 Player 2 20:04:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:06 $ACTION_MASSAGE_REMOVE:  
{"id":1236} 

 Player 2 20:04:06 $ACTION_MASSAGE_REMOVE:  
{"id":1234} 

 Player 2 20:04:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1237,"_text":"Stack Was Emptied "}} 

 Player 2 20:04:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:18 $SHOW_DECISION:  
{"startCardId":290,"endCardId":251} 

 Player 2 20:04:21 $NEXT_STACK_ID:  

 Player 2 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 2 20:04:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 2 20:04:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1238,"_text":"Add DeclareAttack 157 "}} 

 Player 2 20:04:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 2 20:04:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1239,"_text":"Response Adding DeclareAttack 157"},"childOfId":1238} 

 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1240,"_text":"Wait For Response From Player 2 "},"childOfId":1238} 

 Player 2 20:04:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:21 $ACTION_MASSAGE_REMOVE:  
{"id":1240} 

 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1241,"_text":"Wait For Response From Player 1 "},"childOfId":1238} 

 Player 2 20:04:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:04:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:04:21 $ACTION_MASSAGE_REMOVE:  
{"id":1241} 

 Player 2 20:04:21 $ACTION_MASSAGE_REMOVE:  
{"id":1239} 

 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1242,"_text":"Resolve DeclareAttack 157 "}} 

 Player 2 20:04:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":5} 

 Player 2 20:04:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":64,"originStackId":157},"isAfterActivation":true,"index":64} 

 Player 2 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 2 20:04:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1243,"_text":"Remove After Resolve DeclareAttack 157  "}} 

 Player 2 20:04:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":157,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1244,"_text":"Response Remove After Resolve DeclareAttack 157"},"childOfId":1243} 

 Player 2 20:04:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1245,"_text":"Wait For Response From Player 1 "},"childOfId":1243} 

 Player 2 20:04:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:04:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:04:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Greed"} 

 Player 1 20:04:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:04:22 $ACTION_MASSAGE_REMOVE:  
{"id":1245} 

 Player 2 20:04:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1246,"_text":"Wait For Response From Player 2 "},"childOfId":1243} 

 Player 2 20:04:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:22 $ACTION_MASSAGE_REMOVE:  
{"id":1246} 

 Player 2 20:04:22 $ACTION_MASSAGE_REMOVE:  
{"id":1244} 

 Player 2 20:04:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1247,"_text":"Stack Was Emptied "}} 

 Player 2 20:04:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:27 $NEXT_STACK_ID:  

 Player 2 20:04:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 20:04:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":158,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 20:04:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 20:04:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":158,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 20:04:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1248,"_text":"Add AttackRoll 158 "}} 

 Player 2 20:04:28 $ROLL_DICE:  
{"playerId":2} 

 Player 1 20:04:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 20:04:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 20:04:29 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 20:04:29 $UPDATE_STACK_VIS:  
{"stackId":158,"text":"player rolled 1 vs Greed<Monster>"} 

 Player 2 20:04:29 $SHOW_DICE_ROLL:  
{"stackId":158} 

 Player 2 20:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 20:04:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 20:04:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":158,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 20:04:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1249,"_text":"Response Adding AttackRoll 158"},"childOfId":1248} 

 Player 2 20:04:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1250,"_text":"Wait For Response From Player 2 "},"childOfId":1248} 

 Player 2 20:04:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 20:04:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 2 20:04:33 $SHOW_DECISION:  
{"startCardId":290,"endCardId":291} 

 Player 2 20:04:36 $NEXT_STACK_ID:  

 Player 2 20:04:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 20:04:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 2 20:04:37 $ADD_TO_STACK:  
{"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 2 20:04:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:04:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1251,"_text":"Add ActivateItem 159 "}} 

 Player 2 20:04:37 $USE_ITEM:  
{"cardId":291} 

 Player 2 20:04:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 2 20:04:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:04:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1252,"_text":"Response Adding ActivateItem 159"},"childOfId":1251} 

 Player 2 20:04:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1253,"_text":"Wait For Response From Player 2 "},"childOfId":1251} 

 Player 2 20:04:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 20:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 20:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 2 20:04:38 $ACTION_MASSAGE_REMOVE:  
{"id":1253} 

 Player 2 20:04:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1254,"_text":"Wait For Response From Player 1 "},"childOfId":1251} 

 Player 2 20:04:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:04:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:04:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:04:38 $ACTION_MASSAGE_REMOVE:  
{"id":1254} 

 Player 2 20:04:39 $ACTION_MASSAGE_REMOVE:  
{"id":1252} 

 Player 2 20:04:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1255,"_text":"Resolve ActivateItem 159 "}} 

 Player 2 20:04:39 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 20:04:40 $DISABLE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":6} 

 Player 2 20:04:41 $ROLL_DICE:  
{"playerId":2} 

 Player 2 20:04:42 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 20:04:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 2 20:04:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:04:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 20:04:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:04:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1256,"_text":"Remove After Resolve ActivateItem 159  "}} 

 Player 2 20:04:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 20:04:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":159,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":291,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:04:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1257,"_text":"Response Remove After Resolve ActivateItem 159"},"childOfId":1256} 

 Player 2 20:04:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1258,"_text":"Wait For Response From Player 1 "},"childOfId":1256} 

 Player 2 20:04:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:04:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Player 2 activated The D6"} 

 Player 1 20:04:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:04:43 $ACTION_MASSAGE_REMOVE:  
{"id":1258} 

 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1259,"_text":"Wait For Response From Player 2 "},"childOfId":1256} 

 Player 2 20:04:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:43 $ACTION_MASSAGE_REMOVE:  
{"id":1259} 

 Player 2 20:04:43 $ACTION_MASSAGE_REMOVE:  
{"id":1257} 

 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1260,"_text":"Resolve AttackRoll 158 "}} 

 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1261,"_text":"Added -1 to original roll"}} 

 Player 2 20:04:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":158},"isAfterActivation":false,"index":6} 

 Player 2 20:04:43 $NEXT_STACK_ID:  

 Player 2 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster>"} 

 Player 2 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 2 20:04:43 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":2,"cardId":159,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 2 20:04:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":2,"cardId":159,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:04:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1262,"_text":"Add ActivatePassiveEffect 160 "}} 

 Player 2 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 2 20:04:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 1 vs Greed<Monster> \n2:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 2 20:04:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"effectToDo":{"effectName":"EndTurn","cardEffectNum":1,"cardPlayerId":2,"cardId":159,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:04:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1263,"_text":"Response Adding ActivatePassiveEffect 160"},"childOfId":1262} 

 Player 2 20:04:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1264,"_text":"Wait For Response From Player 2 "},"childOfId":1262} 

 Player 2 20:04:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:44 $ACTION_MASSAGE_REMOVE:  
{"id":1264} 

 Player 2 20:04:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1265,"_text":"Wait For Response From Player 1 "},"childOfId":1262} 

 Player 2 20:04:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:04:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:04:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 20:04:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 

 Player 1 20:04:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Activate Cursed Eye "} 

 Player 1 20:04:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Activate Cursed Eye "} 

 Player 1 20:04:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Activate Cursed Eye "} 

 Player 1 20:04:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Activate Cursed Eye "} 

 Player 1 20:04:44 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:04:44 $ACTION_MASSAGE_REMOVE:  
{"id":1265} 

 Player 2 20:04:44 $ACTION_MASSAGE_REMOVE:  
{"id":1263} 

 Player 2 20:04:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1266,"_text":"Resolve ActivatePassiveEffect 160 "}} 

 Player 2 20:04:44 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":159,"particleType":6} 

 Player 2 20:04:46 $DISABLE_PARTICLE_EFFECT:  
{"cardId":159,"particleType":6} 

 Player 2 20:04:46 $DISABLE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":5} 

 Player 2 20:04:46 $CANCEL_ATTACK:  

 Player 2 20:04:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 2 20:04:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":158,"creatorCardId":290,"numberRolled":1,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 2 20:04:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1267,"_text":"Fizzle AttackRoll 158"}} 

 Player 2 20:04:46 $FIZZLE_STACK_EFFECT:  
{"entityId":158} 

 Player 2 20:04:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":6,"originStackId":158},"isAfterActivation":false,"index":6} 

 Player 2 20:04:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye effect EndTurn<EndTurn>"} 

 Player 2 20:04:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:04:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:04:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1268,"_text":"Remove After Resolve ActivatePassiveEffect 160  "}} 

 Player 2 20:04:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:46 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":160,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":159,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1269,"_text":"Response Remove After Resolve ActivatePassiveEffect 160"},"childOfId":1268} 

 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1270,"_text":"Wait For Response From Player 1 "},"childOfId":1268} 

 Player 2 20:04:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:04:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Activate Cursed Eye "} 

 Player 1 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Greed<Monster> \n2:Activate Cursed Eye "} 

 Player 1 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 1 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 1 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 1 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 1 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 1 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Cursed Eye "} 

 Player 1 20:04:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:04:47 $ACTION_MASSAGE_REMOVE:  
{"id":1270} 

 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1271,"_text":"Wait For Response From Player 2 "},"childOfId":1268} 

 Player 2 20:04:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:47 $ACTION_MASSAGE_REMOVE:  
{"id":1271} 

 Player 2 20:04:47 $ACTION_MASSAGE_REMOVE:  
{"id":1269} 

 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1272,"_text":"Stack Was Emptied "}} 

 Player 2 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:47 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 20:04:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1273,"_text":"Stack Was Emptied "}} 

 Player 2 20:04:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:47 $END_TURN:  

 Player 2 20:04:48 $SET_TURN:  
{"playerId":1} 

 Player 2 20:04:48 $START_TURN:  
{"playerId":1} 

 Player 2 20:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":1250} 

 Player 2 20:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":1249} 

 Player 1 20:04:48 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:48 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 20:04:48 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":296} 

 Player 1 20:04:48 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 1 20:04:48 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":297} 

 Player 1 20:04:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:04:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 

 Player 1 20:04:48 $NEXT_STACK_ID:  

 Player 1 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:04:48 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":161,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:04:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":161,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:04:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1274,"_text":"Add ActivatePassiveEffect 161 "}} 

 Player 1 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 2 20:04:48 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 1 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:04:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":161,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:04:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1275,"_text":"Response Adding ActivatePassiveEffect 161"},"childOfId":1274} 

 Player 1 20:04:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1276,"_text":"Wait For Response From Player 1 "},"childOfId":1274} 

 Player 1 20:04:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:04:48 $ACTION_MASSAGE_REMOVE:  
{"id":1276} 

 Player 1 20:04:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1277,"_text":"Wait For Response From Player 2 "},"childOfId":1274} 

 Player 1 20:04:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:04:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:04:49 $ACTION_MASSAGE_REMOVE:  
{"id":1277} 

 Player 1 20:04:49 $ACTION_MASSAGE_REMOVE:  
{"id":1275} 

 Player 1 20:04:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1278,"_text":"Resolve ActivatePassiveEffect 161 "}} 

 Player 1 20:04:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 20:04:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 20:04:58 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":278} 

 Player 1 20:04:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 

 Player 1 20:04:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:04:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":161,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:04:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":161,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:04:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1279,"_text":"Remove After Resolve ActivatePassiveEffect 161  "}} 

 Player 1 20:04:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":161,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:04:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1280,"_text":"Response Remove After Resolve ActivatePassiveEffect 161"},"childOfId":1279} 

 Player 1 20:04:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1281,"_text":"Wait For Response From Player 2 "},"childOfId":1279} 

 Player 1 20:04:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:04:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:04:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:04:59 $ACTION_MASSAGE_REMOVE:  
{"id":1281} 

 Player 1 20:04:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1282,"_text":"Wait For Response From Player 1 "},"childOfId":1279} 

 Player 1 20:04:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:04:59 $ACTION_MASSAGE_REMOVE:  
{"id":1282} 

 Player 1 20:04:59 $ACTION_MASSAGE_REMOVE:  
{"id":1280} 

 Player 1 20:04:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1283,"_text":"Stack Was Emptied "}} 

 Player 1 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:59 $NEXT_STACK_ID:  

 Player 1 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:04:59 $ADD_TO_STACK:  
{"stackEffect":{"entityId":162,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:04:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":162,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:04:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1284,"_text":"Add StartTurnLoot 162 "}} 

 Player 1 20:04:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:04:59 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":162,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:04:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1285,"_text":"Response Adding StartTurnLoot 162"},"childOfId":1284} 

 Player 1 20:04:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1286,"_text":"Wait For Response From Player 1 "},"childOfId":1284} 

 Player 1 20:04:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:04:59 $ACTION_MASSAGE_REMOVE:  
{"id":1286} 

 Player 1 20:04:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1287,"_text":"Wait For Response From Player 2 "},"childOfId":1284} 

 Player 1 20:04:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:04:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:04:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:04:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:05:00 $ACTION_MASSAGE_REMOVE:  
{"id":1287} 

 Player 1 20:05:00 $ACTION_MASSAGE_REMOVE:  
{"id":1285} 

 Player 1 20:05:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1288,"_text":"Resolve StartTurnLoot 162 "}} 

 Player 1 20:05:00 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:05:00 $MOVE_CARD:  
{"moveIndex":93,"cardId":96,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:05:00 $MOVE_CARD_END:  
{"moveIndex":93,"cardId":96,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:05:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":96} 

 Player 1 20:05:00 $FLIP_CARD:  
{"cardId":96} 

 Player 1 20:05:00 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":96} 

 Player 1 20:05:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:05:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":162,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:05:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":162,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:05:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1289,"_text":"Remove After Resolve StartTurnLoot 162  "}} 

 Player 1 20:05:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":162,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:05:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1290,"_text":"Response Remove After Resolve StartTurnLoot 162"},"childOfId":1289} 

 Player 1 20:05:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1291,"_text":"Wait For Response From Player 2 "},"childOfId":1289} 

 Player 1 20:05:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:05:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:05:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:05:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:05:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:05:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:05:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:05:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:05:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:05:01 $ACTION_MASSAGE_REMOVE:  
{"id":1291} 

 Player 1 20:05:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1292,"_text":"Wait For Response From Player 1 "},"childOfId":1289} 

 Player 1 20:05:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:01 $ACTION_MASSAGE_REMOVE:  
{"id":1292} 

 Player 1 20:05:01 $ACTION_MASSAGE_REMOVE:  
{"id":1290} 

 Player 1 20:05:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1293,"_text":"Stack Was Emptied "}} 

 Player 1 20:05:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:07 $SHOW_DECISION:  
{"startCardId":96,"endCardId":96,"flipEndCard":true} 

 Player 1 20:05:10 $NEXT_STACK_ID:  

 Player 1 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 1 20:05:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":163,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 1 20:05:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":163,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 20:05:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1294,"_text":"Add PlayLootCardStackEffect 163 "}} 

 Player 1 20:05:10 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":96} 

 Player 1 20:05:10 $MOVE_CARD:  
{"moveIndex":94,"cardId":96,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:10 $MOVE_CARD_END:  
{"moveIndex":94,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:05:10 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":96} 

 Player 1 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny: AddTrinket"} 

 Player 1 20:05:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny: AddTrinket"} 

 Player 1 20:05:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":163,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:05:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1295,"_text":"Response Adding PlayLootCardStackEffect 163"},"childOfId":1294} 

 Player 1 20:05:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1296,"_text":"Wait For Response From Player 1 "},"childOfId":1294} 

 Player 1 20:05:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:10 $ACTION_MASSAGE_REMOVE:  
{"id":1296} 

 Player 1 20:05:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1297,"_text":"Wait For Response From Player 2 "},"childOfId":1294} 

 Player 1 20:05:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:05:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:05:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:05:11 $ACTION_MASSAGE_REMOVE:  
{"id":1297} 

 Player 1 20:05:11 $ACTION_MASSAGE_REMOVE:  
{"id":1295} 

 Player 1 20:05:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1298,"_text":"Resolve PlayLootCardStackEffect 163 "}} 

 Player 1 20:05:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny: AddTrinket"} 

 Player 1 20:05:11 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:05:13 $DISABLE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:05:13 $CARD_ADD_TRINKET:  
{"cardId":96,"playerId":1,"addMuiliEffect":false} 

 Player 1 20:05:13 $REMOVE_FROM_PILE:  
{"cardId":96} 

 Player 1 20:05:13 $REGISTER_PASSIVE_ITEM:  
{"cardId":96} 

 Player 1 20:05:13 $MOVE_CARD:  
{"moveIndex":95,"cardId":96,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 20:05:13 $MOVE_CARD_END:  
{"moveIndex":95,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:05:13 $ADD_AN_ITEM:  
{"playerId":1,"cardId":96,"isReward":true} 

 Player 1 20:05:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":96}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":44,"originStackId":-1},"isAfterActivation":true,"index":44} 

 Player 1 20:05:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny: AddTrinket"} 

 Player 1 20:05:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":163,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:05:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":163,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:05:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1299,"_text":"Remove After Resolve PlayLootCardStackEffect 163  "}} 

 Player 1 20:05:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":163,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:05:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1300,"_text":"Response Remove After Resolve PlayLootCardStackEffect 163"},"childOfId":1299} 

 Player 1 20:05:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1301,"_text":"Wait For Response From Player 2 "},"childOfId":1299} 

 Player 1 20:05:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:05:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:05:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 20:05:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:05:14 $ACTION_MASSAGE_REMOVE:  
{"id":1301} 

 Player 1 20:05:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1302,"_text":"Wait For Response From Player 1 "},"childOfId":1299} 

 Player 1 20:05:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:14 $ACTION_MASSAGE_REMOVE:  
{"id":1302} 

 Player 1 20:05:14 $ACTION_MASSAGE_REMOVE:  
{"id":1300} 

 Player 1 20:05:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1303,"_text":"Stack Was Emptied "}} 

 Player 1 20:05:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:19 $SHOW_DECISION:  
{"startCardId":296,"endCardId":297} 

 Player 1 20:05:22 $NEXT_STACK_ID:  

 Player 1 20:05:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:05:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":164,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:05:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:05:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":164,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:05:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1304,"_text":"Add ActivateItem 164 "}} 

 Player 2 20:05:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:05:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:05:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:05:24 $SHOW_DECISION:  
{"startCardId":297,"endCardId":296} 

 Player 1 20:05:28 $USE_ITEM:  
{"cardId":297} 

 Player 1 20:05:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:05:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":164,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:05:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1305,"_text":"Response Adding ActivateItem 164"},"childOfId":1304} 

 Player 1 20:05:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1306,"_text":"Wait For Response From Player 1 "},"childOfId":1304} 

 Player 1 20:05:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:28 $ACTION_MASSAGE_REMOVE:  
{"id":1306} 

 Player 1 20:05:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1307,"_text":"Wait For Response From Player 2 "},"childOfId":1304} 

 Player 1 20:05:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:05:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:05:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:05:28 $ACTION_MASSAGE_REMOVE:  
{"id":1307} 

 Player 1 20:05:28 $ACTION_MASSAGE_REMOVE:  
{"id":1305} 

 Player 1 20:05:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1308,"_text":"Resolve ActivateItem 164 "}} 

 Player 1 20:05:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 20:05:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 20:05:30 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":true} 

 Player 1 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:05:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":164,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":164,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:05:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1309,"_text":"Remove After Resolve ActivateItem 164  "}} 

 Player 1 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":164,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:05:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1310,"_text":"Response Remove After Resolve ActivateItem 164"},"childOfId":1309} 

 Player 1 20:05:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1311,"_text":"Wait For Response From Player 2 "},"childOfId":1309} 

 Player 1 20:05:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:05:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:05:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:05:30 $ACTION_MASSAGE_REMOVE:  
{"id":1311} 

 Player 1 20:05:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1312,"_text":"Wait For Response From Player 1 "},"childOfId":1309} 

 Player 1 20:05:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:31 $ACTION_MASSAGE_REMOVE:  
{"id":1312} 

 Player 1 20:05:31 $ACTION_MASSAGE_REMOVE:  
{"id":1310} 

 Player 1 20:05:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1313,"_text":"Stack Was Emptied "}} 

 Player 1 20:05:31 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:35 $SHOW_DECISION:  
{"startCardId":296,"endCardId":296} 

 Player 1 20:05:38 $NEXT_STACK_ID:  

 Player 1 20:05:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:05:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:05:38 $ADD_TO_STACK:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:05:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:05:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:05:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1314,"_text":"Add ActivateItem 165 "}} 

 Player 2 20:05:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:05:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:05:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:05:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:05:43 $SHOW_DECISION:  
{"startCardId":296,"endCardId":45,"flipEndCard":true} 

 Player 1 20:05:46 $USE_ITEM:  
{"cardId":296} 

 Player 1 20:05:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:05:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:05:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1315,"_text":"Response Adding ActivateItem 165"},"childOfId":1314} 

 Player 1 20:05:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1316,"_text":"Wait For Response From Player 1 "},"childOfId":1314} 

 Player 1 20:05:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:05:47 $ACTION_MASSAGE_REMOVE:  
{"id":1316} 

 Player 1 20:05:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1317,"_text":"Wait For Response From Player 2 "},"childOfId":1314} 

 Player 1 20:05:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:05:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:05:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:05:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:05:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":true} 

 Player 2 20:05:50 $SHOW_DECISION:  
{"startCardId":290,"endCardId":290} 

 Player 1 20:05:50 $ACTION_MASSAGE_REMOVE:  
{"id":1317} 

 Player 1 20:05:50 $ACTION_MASSAGE_REMOVE:  
{"id":1315} 

 Player 2 20:05:53 $NEXT_STACK_ID:  

 Player 2 20:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 2 20:05:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 2 20:05:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:05:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1318,"_text":"Add ActivateItem 166 "}} 

 Player 1 20:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 1 20:05:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 2 20:05:55 $SHOW_DECISION:  
{"startCardId":290,"endCardId":24,"flipEndCard":true} 

 Player 2 20:05:58 $USE_ITEM:  
{"cardId":290} 

 Player 2 20:05:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:05:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 2 20:05:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:05:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1319,"_text":"Response Adding ActivateItem 166"},"childOfId":1318} 

 Player 2 20:05:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1320,"_text":"Wait For Response From Player 1 "},"childOfId":1318} 

 Player 2 20:05:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:05:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:05:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 1 20:05:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 1 20:05:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:05:59 $ACTION_MASSAGE_REMOVE:  
{"id":1320} 

 Player 2 20:05:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1321,"_text":"Wait For Response From Player 2 "},"childOfId":1318} 

 Player 2 20:05:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:06:00 $ACTION_MASSAGE_REMOVE:  
{"id":1321} 

 Player 2 20:06:00 $ACTION_MASSAGE_REMOVE:  
{"id":1319} 

 Player 2 20:06:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1322,"_text":"Resolve ActivateItem 166 "}} 

 Player 2 20:06:00 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 20:06:02 $DISABLE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 20:06:02 $NEXT_STACK_ID:  

 Player 2 20:06:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 2 20:06:02 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":24} 

 Player 2 20:06:02 $MOVE_CARD:  
{"moveIndex":96,"cardId":24,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:06:02 $MOVE_CARD_END:  
{"moveIndex":96,"cardId":24,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:06:02 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":24} 

 Player 2 20:06:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:06:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":24,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:02 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:06:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":24,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:03 $REPLACE_STACK:  
{"currentStack":[{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":24,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney \n3:Player 2 activated Isaac"} 

 Player 2 20:06:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney"} 

 Player 2 20:06:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1323,"_text":"Remove After Resolve ActivateItem 166  "}} 

 Player 2 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney"} 

 Player 2 20:06:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":166,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1324,"_text":"Response Remove After Resolve ActivateItem 166"},"childOfId":1323} 

 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1325,"_text":"Wait For Response From Player 1 "},"childOfId":1323} 

 Player 2 20:06:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:06:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 activated Isaac"} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Isaac"} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Isaac"} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Isaac"} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Isaac"} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Isaac"} 

 Player 1 20:06:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4)  \n3:Player 2 activated Isaac"} 

 Player 1 20:06:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:06:03 $ACTION_MASSAGE_REMOVE:  
{"id":1325} 

 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1326,"_text":"Wait For Response From Player 2 "},"childOfId":1323} 

 Player 2 20:06:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:06:03 $ACTION_MASSAGE_REMOVE:  
{"id":1326} 

 Player 2 20:06:03 $ACTION_MASSAGE_REMOVE:  
{"id":1324} 

 Player 2 20:06:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1327,"_text":"Resolve PlayLootCardStackEffect 167 "}} 

 Player 2 20:06:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney"} 

 Player 2 20:06:04 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":24,"particleType":6} 

 Player 2 20:06:05 $DISABLE_PARTICLE_EFFECT:  
{"cardId":24,"particleType":6} 

 Player 2 20:06:05 $SET_MONEY:  
{"playerId":2,"numOfCoins":8} 

 Player 2 20:06:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":65,"originStackId":-1},"isAfterActivation":true,"index":65} 

 Player 2 20:06:05 $REMOVE_FROM_PILE:  
{"cardId":24} 

 Player 2 20:06:05 $MOVE_CARD:  
{"moveIndex":97,"cardId":24,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:06:06 $MOVE_CARD_END:  
{"moveIndex":97,"cardId":24,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:06:06 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":24} 

 Player 2 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4): addMoney"} 

 Player 2 20:06:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:06:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1328,"_text":"Remove After Resolve PlayLootCardStackEffect 167  "}} 

 Player 2 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:06:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":167,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":24,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1329,"_text":"Response Remove After Resolve PlayLootCardStackEffect 167"},"childOfId":1328} 

 Player 2 20:06:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1330,"_text":"Wait For Response From Player 2 "},"childOfId":1328} 

 Player 2 20:06:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:06:06 $ACTION_MASSAGE_REMOVE:  
{"id":1330} 

 Player 2 20:06:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1331,"_text":"Wait For Response From Player 1 "},"childOfId":1328} 

 Player 2 20:06:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:06:06 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson \n2:Player 2 play 2 Cents(4) "} 

 Player 1 20:06:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":1331} 

 Player 2 20:06:07 $ACTION_MASSAGE_REMOVE:  
{"id":1329} 

 Player 2 20:06:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1332,"_text":"Resolve ActivateItem 165 "}} 

 Player 2 20:06:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:06:07 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 20:06:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:06:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:06:07 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 20:06:09 $DISABLE_PARTICLE_EFFECT:  
{"cardId":296,"particleType":6} 

 Player 1 20:06:09 $NEXT_STACK_ID:  

 Player 1 20:06:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 1 20:06:09 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":45} 

 Player 1 20:06:09 $MOVE_CARD:  
{"moveIndex":98,"cardId":45,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:06:09 $MOVE_CARD_END:  
{"moveIndex":98,"cardId":45,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:06:09 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":45} 

 Player 1 20:06:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $REPLACE_STACK:  
{"currentStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:10 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 2 20:06:10 $REPLACE_STACK:  
{"currentStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:06:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1333,"_text":"Remove After Resolve ActivateItem 165  "}} 

 Player 2 20:06:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":165,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1334,"_text":"Response Remove After Resolve ActivateItem 165"},"childOfId":1333} 

 Player 2 20:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1335,"_text":"Wait For Response From Player 1 "},"childOfId":1333} 

 Player 2 20:06:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:06:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Player 1 activated Samson"} 

 Player 1 20:06:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:06:11 $ACTION_MASSAGE_REMOVE:  
{"id":1335} 

 Player 2 20:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1336,"_text":"Wait For Response From Player 2 "},"childOfId":1333} 

 Player 2 20:06:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:06:11 $ACTION_MASSAGE_REMOVE:  
{"id":1336} 

 Player 2 20:06:11 $ACTION_MASSAGE_REMOVE:  
{"id":1334} 

 Player 2 20:06:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1337,"_text":"Resolve PlayLootCardStackEffect 168 "}} 

 Player 2 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:11 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 1 20:06:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:11 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":45,"particleType":6} 

 Player 1 20:06:13 $DISABLE_PARTICLE_EFFECT:  
{"cardId":45,"particleType":6} 

 Player 1 20:06:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":false,"index":4} 

 Player 1 20:06:13 $NEXT_STACK_ID:  

 Player 1 20:06:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:06:13 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":169,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:06:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:06:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":169,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:06:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1338,"_text":"Add ActivatePassiveEffect 169 "}} 

 Player 1 20:06:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:06:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:06:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":169,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:06:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1339,"_text":"Response Adding ActivatePassiveEffect 169"},"childOfId":1338} 

 Player 1 20:06:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1340,"_text":"Wait For Response From Player 2 "},"childOfId":1338} 

 Player 1 20:06:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:06:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:06:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:06:14 $ACTION_MASSAGE_REMOVE:  
{"id":1340} 

 Player 1 20:06:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1341,"_text":"Wait For Response From Player 1 "},"childOfId":1338} 

 Player 1 20:06:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:14 $ACTION_MASSAGE_REMOVE:  
{"id":1341} 

 Player 1 20:06:14 $ACTION_MASSAGE_REMOVE:  
{"id":1339} 

 Player 1 20:06:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1342,"_text":"Resolve ActivatePassiveEffect 169 "}} 

 Player 1 20:06:14 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:06:16 $DISABLE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:06:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":false,"index":4} 

 Player 1 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:06:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":169,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":169,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:06:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1343,"_text":"Remove After Resolve ActivatePassiveEffect 169  "}} 

 Player 1 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":169,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:06:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1344,"_text":"Response Remove After Resolve ActivatePassiveEffect 169"},"childOfId":1343} 

 Player 1 20:06:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1345,"_text":"Wait For Response From Player 1 "},"childOfId":1343} 

 Player 1 20:06:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:16 $ACTION_MASSAGE_REMOVE:  
{"id":1345} 

 Player 1 20:06:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1346,"_text":"Wait For Response From Player 2 "},"childOfId":1343} 

 Player 1 20:06:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:06:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7)  \n2:Activate Counterfiet Penny "} 

 Player 2 20:06:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:06:17 $ACTION_MASSAGE_REMOVE:  
{"id":1346} 

 Player 1 20:06:17 $ACTION_MASSAGE_REMOVE:  
{"id":1344} 

 Player 1 20:06:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1347,"_text":"Resolve PlayLootCardStackEffect 168 "}} 

 Player 1 20:06:17 $SET_MONEY:  
{"playerId":1,"numOfCoins":10} 

 Player 1 20:06:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 20:06:17 $REMOVE_FROM_PILE:  
{"cardId":45} 

 Player 1 20:06:17 $MOVE_CARD:  
{"moveIndex":99,"cardId":45,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:06:17 $MOVE_CARD_END:  
{"moveIndex":99,"cardId":45,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:06:17 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":45} 

 Player 1 20:06:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:06:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:17 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 20:06:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":45,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 2 20:06:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:06:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1348,"_text":"Remove After Resolve PlayLootCardStackEffect 168  "}} 

 Player 2 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:06:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":168,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":45,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1349,"_text":"Response Remove After Resolve PlayLootCardStackEffect 168"},"childOfId":1348} 

 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1350,"_text":"Wait For Response From Player 2 "},"childOfId":1348} 

 Player 2 20:06:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:06:18 $ACTION_MASSAGE_REMOVE:  
{"id":1350} 

 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1351,"_text":"Wait For Response From Player 1 "},"childOfId":1348} 

 Player 2 20:06:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:06:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7): addMoney"} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 1 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play 3 Cents(7) "} 

 Player 1 20:06:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:06:18 $ACTION_MASSAGE_REMOVE:  
{"id":1351} 

 Player 2 20:06:18 $ACTION_MASSAGE_REMOVE:  
{"id":1349} 

 Player 2 20:06:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1352,"_text":"Stack Was Emptied "}} 

 Player 2 20:06:18 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:06:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:06:18 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 1 20:06:20 $SHOW_DECISION:  
{"startCardId":296,"endCardId":144} 

 Player 1 20:06:23 $NEXT_STACK_ID:  

 Player 1 20:06:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 20:06:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":170,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 20:06:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":170,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:06:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1353,"_text":"Add PurchaseItem 170 "}} 

 Player 1 20:06:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 20:06:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":170,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:06:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1354,"_text":"Response Adding PurchaseItem 170"},"childOfId":1353} 

 Player 1 20:06:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1355,"_text":"Wait For Response From Player 1 "},"childOfId":1353} 

 Player 1 20:06:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:24 $ACTION_MASSAGE_REMOVE:  
{"id":1355} 

 Player 1 20:06:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1356,"_text":"Wait For Response From Player 2 "},"childOfId":1353} 

 Player 1 20:06:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:06:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:06:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:06:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:06:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:06:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:06:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:06:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:06:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:06:24 $ACTION_MASSAGE_REMOVE:  
{"id":1356} 

 Player 1 20:06:24 $ACTION_MASSAGE_REMOVE:  
{"id":1354} 

 Player 1 20:06:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1357,"_text":"Resolve PurchaseItem 170 "}} 

 Player 1 20:06:24 $SET_MONEY:  
{"playerId":1,"numOfCoins":0} 

 Player 1 20:06:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":45,"originStackId":-1},"isAfterActivation":true,"index":45} 

 Player 1 20:06:24 $DRAW_CARD:  
{"deckType":5} 

 Player 1 20:06:24 $MOVE_CARD:  
{"moveIndex":100,"cardId":210,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 20:06:25 $MOVE_CARD_END:  
{"moveIndex":100,"cardId":210,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:06:25 $ADD_AN_ITEM:  
{"playerId":1,"cardId":210,"isReward":false} 

 Player 1 20:06:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":210}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":46,"originStackId":-1},"isAfterActivation":true,"index":46} 

 Player 1 20:06:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:06:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":170,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:06:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1358,"_text":"Remove After Resolve PurchaseItem 170  "}} 

 Player 1 20:06:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:06:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":170,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:06:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1359,"_text":"Response Remove After Resolve PurchaseItem 170"},"childOfId":1358} 

 Player 1 20:06:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1360,"_text":"Wait For Response From Player 2 "},"childOfId":1358} 

 Player 1 20:06:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:06:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:06:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:06:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:06:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:06:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:06:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:06:25 $ACTION_MASSAGE_REMOVE:  
{"id":1360} 

 Player 1 20:06:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1361,"_text":"Wait For Response From Player 1 "},"childOfId":1358} 

 Player 1 20:06:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:25 $ACTION_MASSAGE_REMOVE:  
{"id":1361} 

 Player 1 20:06:25 $ACTION_MASSAGE_REMOVE:  
{"id":1359} 

 Player 1 20:06:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1362,"_text":"Stack Was Emptied "}} 

 Player 1 20:06:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:06:53 $SHOW_DECISION:  
{"startCardId":296,"endCardId":251} 

 Player 1 20:06:56 $NEXT_STACK_ID:  

 Player 1 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 20:06:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":171,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 20:06:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":171,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 20:06:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1363,"_text":"Add DeclareAttack 171 "}} 

 Player 1 20:06:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 20:06:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":171,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 20:06:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1364,"_text":"Response Adding DeclareAttack 171"},"childOfId":1363} 

 Player 1 20:06:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1365,"_text":"Wait For Response From Player 1 "},"childOfId":1363} 

 Player 1 20:06:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:56 $ACTION_MASSAGE_REMOVE:  
{"id":1365} 

 Player 1 20:06:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1366,"_text":"Wait For Response From Player 2 "},"childOfId":1363} 

 Player 1 20:06:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:06:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:06:56 $ACTION_MASSAGE_REMOVE:  
{"id":1366} 

 Player 1 20:06:56 $ACTION_MASSAGE_REMOVE:  
{"id":1364} 

 Player 1 20:06:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1367,"_text":"Resolve DeclareAttack 171 "}} 

 Player 1 20:06:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":5} 

 Player 1 20:06:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":47,"originStackId":171},"isAfterActivation":true,"index":47} 

 Player 1 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 1 20:06:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":171,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 20:06:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:06:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":171,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 20:06:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1368,"_text":"Remove After Resolve DeclareAttack 171  "}} 

 Player 1 20:06:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:06:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":171,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":251,"stackEffectType":4}} 

 Player 1 20:06:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1369,"_text":"Response Remove After Resolve DeclareAttack 171"},"childOfId":1368} 

 Player 1 20:06:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1370,"_text":"Wait For Response From Player 2 "},"childOfId":1368} 

 Player 1 20:06:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:06:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Greed"} 

 Player 2 20:06:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:06:57 $ACTION_MASSAGE_REMOVE:  
{"id":1370} 

 Player 1 20:06:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1371,"_text":"Wait For Response From Player 1 "},"childOfId":1368} 

 Player 1 20:06:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:06:57 $ACTION_MASSAGE_REMOVE:  
{"id":1371} 

 Player 1 20:06:57 $ACTION_MASSAGE_REMOVE:  
{"id":1369} 

 Player 1 20:06:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1372,"_text":"Stack Was Emptied "}} 

 Player 1 20:06:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:07:06 $NEXT_STACK_ID:  

 Player 1 20:07:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:07:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 20:07:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":172,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 20:07:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 20:07:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":172,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 20:07:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1373,"_text":"Add AttackRoll 172 "}} 

 Player 1 20:07:06 $ROLL_DICE:  
{"playerId":1} 

 Player 2 20:07:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:07:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:07:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 20:07:08 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 20:07:08 $UPDATE_STACK_VIS:  
{"stackId":172,"text":"player rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:08 $SHOW_DICE_ROLL:  
{"stackId":172} 

 Player 1 20:07:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":172,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 20:07:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1374,"_text":"Response Adding AttackRoll 172"},"childOfId":1373} 

 Player 1 20:07:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1375,"_text":"Wait For Response From Player 1 "},"childOfId":1373} 

 Player 1 20:07:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:07:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 1 20:07:15 $ACTION_MASSAGE_REMOVE:  
{"id":1375} 

 Player 1 20:07:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1376,"_text":"Wait For Response From Player 2 "},"childOfId":1373} 

 Player 1 20:07:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:15 $ACTION_MASSAGE_REMOVE:  
{"id":1376} 

 Player 1 20:07:15 $ACTION_MASSAGE_REMOVE:  
{"id":1374} 

 Player 1 20:07:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1377,"_text":"Resolve AttackRoll 172 "}} 

 Player 1 20:07:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1378,"_text":"Added 1 to original roll"}} 

 Player 1 20:07:15 $NEXT_STACK_ID:  

 Player 1 20:07:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:07:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":172,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 20:07:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:07:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":172,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 20:07:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:15 $REPLACE_STACK:  
{"currentStack":[{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":172,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}]} 

 Player 1 20:07:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":48,"originStackId":172},"isAfterActivation":true,"index":48} 

 Player 1 20:07:15 $NEXT_STACK_ID:  

 Player 1 20:07:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:07:16 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":174,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":48,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:07:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":174,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":48,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:07:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1379,"_text":"Add ActivatePassiveEffect 174 "}} 

 Player 1 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:07:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":174,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":48,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:07:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1380,"_text":"Response Adding ActivatePassiveEffect 174"},"childOfId":1379} 

 Player 1 20:07:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1381,"_text":"Wait For Response From Player 1 "},"childOfId":1379} 

 Player 1 20:07:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:16 $ACTION_MASSAGE_REMOVE:  
{"id":1381} 

 Player 1 20:07:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1382,"_text":"Wait For Response From Player 2 "},"childOfId":1379} 

 Player 1 20:07:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:16 $ACTION_MASSAGE_REMOVE:  
{"id":1382} 

 Player 1 20:07:17 $ACTION_MASSAGE_REMOVE:  
{"id":1380} 

 Player 1 20:07:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1383,"_text":"Resolve ActivatePassiveEffect 174 "}} 

 Player 1 20:07:17 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":272,"particleType":6} 

 Player 1 20:07:19 $DISABLE_PARTICLE_EFFECT:  
{"cardId":272,"particleType":6} 

 Player 1 20:07:19 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":272} 

 Player 1 20:07:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":49,"originStackId":-1},"isAfterActivation":true,"index":49} 

 Player 1 20:07:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":48,"originStackId":172},"isAfterActivation":true,"index":48} 

 Player 1 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:07:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":174,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":48,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":174,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":48,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1384,"_text":"Remove After Resolve ActivatePassiveEffect 174  "}} 

 Player 1 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":174,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":48,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1385,"_text":"Response Remove After Resolve ActivatePassiveEffect 174"},"childOfId":1384} 

 Player 1 20:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1386,"_text":"Wait For Response From Player 2 "},"childOfId":1384} 

 Player 1 20:07:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:07:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:19 $ACTION_MASSAGE_REMOVE:  
{"id":1386} 

 Player 1 20:07:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1387,"_text":"Wait For Response From Player 1 "},"childOfId":1384} 

 Player 1 20:07:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:52 $ACTION_MASSAGE_REMOVE:  
{"id":1387} 

 Player 1 20:07:52 $ACTION_MASSAGE_REMOVE:  
{"id":1385} 

 Player 1 20:07:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1388,"_text":"Resolve AttackRoll 172 "}} 

 Player 1 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 

 Player 1 20:07:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":172,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 1 20:07:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":172,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 20:07:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1389,"_text":"Remove After Resolve AttackRoll 172  "}} 

 Player 1 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 1 20:07:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":172,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":251}} 

 Player 1 20:07:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1390,"_text":"Response Remove After Resolve AttackRoll 172"},"childOfId":1389} 

 Player 1 20:07:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1391,"_text":"Wait For Response From Player 1 "},"childOfId":1389} 

 Player 1 20:07:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:52 $ACTION_MASSAGE_REMOVE:  
{"id":1391} 

 Player 1 20:07:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1392,"_text":"Wait For Response From Player 2 "},"childOfId":1389} 

 Player 1 20:07:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:Player 1 is rolling against Greed<Monster>"} 

 Player 2 20:07:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:52 $ACTION_MASSAGE_REMOVE:  
{"id":1392} 

 Player 1 20:07:52 $ACTION_MASSAGE_REMOVE:  
{"id":1390} 

 Player 1 20:07:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1393,"_text":"Resolve CombatDamage 173 "}} 

 Player 1 20:07:52 $UPDATE_STACK_VIS:  
{"stackId":173,"text":"Samson will deal 6 combat damage to Greed"} 

 Player 1 20:07:52 $MONSTER_GET_DAMAGED:  
{"cardId":251,"hpLeft":0,"damageDealerId":296} 

 Player 1 20:07:52 $NEXT_STACK_ID:  

 Player 1 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 1 20:07:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 1 20:07:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}} 

 Player 1 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 1 20:07:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 1 20:07:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 1 20:07:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}} 

 Player 1 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 1 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 1 20:07:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}]} 

 Player 1 20:07:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":6},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":251,"scopeIsPlayer":false,"index":50,"originStackId":-1},"isAfterActivation":true,"index":50} 

 Player 1 20:07:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":6},{"type":2,"number":5},{"type":0,"number":296},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":51,"originStackId":173},"isAfterActivation":true,"index":51} 

 Player 1 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 1 20:07:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:07:53 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:07:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1394,"_text":"Remove After Resolve CombatDamage 173  "}} 

 Player 1 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:07:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":173,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:07:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1395,"_text":"Response Remove After Resolve CombatDamage 173"},"childOfId":1394} 

 Player 1 20:07:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1396,"_text":"Wait For Response From Player 1 "},"childOfId":1394} 

 Player 1 20:07:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:53 $ACTION_MASSAGE_REMOVE:  
{"id":1396} 

 Player 1 20:07:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1397,"_text":"Wait For Response From Player 2 "},"childOfId":1394} 

 Player 1 20:07:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 2 20:07:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Greed \n2:[object Object] killed by Samson"} 

 Player 2 20:07:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:54 $ACTION_MASSAGE_REMOVE:  
{"id":1397} 

 Player 1 20:07:54 $ACTION_MASSAGE_REMOVE:  
{"id":1395} 

 Player 1 20:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1398,"_text":"Resolve MonsterDeath 175 "}} 

 Player 1 20:07:54 $DISABLE_PARTICLE_EFFECT:  
{"cardId":251,"particleType":5} 

 Player 1 20:07:54 $CANCEL_ATTACK:  

 Player 1 20:07:54 $NEXT_STACK_ID:  

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 1 20:07:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:07:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":176,"creatorCardId":296,"monsterCardWithRewardId":251,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:07:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:07:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":176,"creatorCardId":296,"monsterCardWithRewardId":251,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:07:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:07:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":176,"creatorCardId":296,"monsterCardWithRewardId":251,"playerCardIdToReward":296,"stackEffectType":7},{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}]} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 1 20:07:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 1 20:07:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}} 

 Player 1 20:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1399,"_text":"Remove After Resolve MonsterDeath 175  "}} 

 Player 1 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 1 20:07:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":175,"creatorCardId":296,"monsterToDieCardId":251,"stackEffectType":5,"killerId":296}} 

 Player 1 20:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1400,"_text":"Response Remove After Resolve MonsterDeath 175"},"childOfId":1399} 

 Player 1 20:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1401,"_text":"Wait For Response From Player 1 "},"childOfId":1399} 

 Player 1 20:07:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:54 $ACTION_MASSAGE_REMOVE:  
{"id":1401} 

 Player 1 20:07:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1402,"_text":"Wait For Response From Player 2 "},"childOfId":1399} 

 Player 1 20:07:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Samson"} 

 Player 2 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:[object Object] killed by Samson"} 

 Player 2 20:07:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:55 $ACTION_MASSAGE_REMOVE:  
{"id":1402} 

 Player 1 20:07:55 $ACTION_MASSAGE_REMOVE:  
{"id":1400} 

 Player 1 20:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1403,"_text":"Resolve MonsterRewardStackEffect 176 "}} 

 Player 1 20:07:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":251,"scopeIsPlayer":false,"index":52,"originStackId":176},"isAfterActivation":true,"index":52} 

 Player 1 20:07:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":9}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":false,"index":5} 

 Player 1 20:07:55 $NEXT_STACK_ID:  

 Player 1 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 1 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:55 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":177,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":177,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1404,"_text":"Add ActivatePassiveEffect 177 "}} 

 Player 1 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":176,"creatorCardId":296,"monsterCardWithRewardId":251,"playerCardIdToReward":296,"stackEffectType":7}} 

 Player 1 20:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1405,"_text":"Fizzle MonsterRewardStackEffect 176"}} 

 Player 1 20:07:55 $FIZZLE_STACK_EFFECT:  
{"entityId":176} 

 Player 1 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":177,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:07:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1406,"_text":"Response Adding ActivatePassiveEffect 177"},"childOfId":1404} 

 Player 1 20:07:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1407,"_text":"Wait For Response From Player 2 "},"childOfId":1404} 

 Player 1 20:07:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 20:07:56 $MOVE_CARD:  
{"moveIndex":101,"cardId":251,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"soulsLayout"} 

 Player 2 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward"} 

 Player 2 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny "} 

 Player 2 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny "} 

 Player 2 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny "} 

 Player 2 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Greed<Monster> reward \n2:Activate Counterfiet Penny "} 

 Player 2 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 20:07:56 $MOVE_CARD_END:  
{"moveIndex":101,"cardId":251,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:07:56 $ACTION_MASSAGE_REMOVE:  
{"id":1407} 

 Player 1 20:07:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1408,"_text":"Wait For Response From Player 1 "},"childOfId":1404} 

 Player 1 20:07:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:56 $ACTION_MASSAGE_REMOVE:  
{"id":1408} 

 Player 1 20:07:56 $ACTION_MASSAGE_REMOVE:  
{"id":1406} 

 Player 1 20:07:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1409,"_text":"Resolve ActivatePassiveEffect 177 "}} 

 Player 1 20:07:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:07:56 $GET_SOUL:  
{"playerId":1,"cardId":251} 

 Player 1 20:07:56 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":251} 

 Player 1 20:07:56 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":251} 

 Player 1 20:07:56 $NEXT_STACK_ID:  

 Player 1 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive> \n2:Refill holder1 slot"} 

 Player 1 20:07:56 $ADD_TO_STACK:  
{"stackEffect":{"entityId":178,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive> \n2:Refill holder1 slot"} 

 Player 1 20:07:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":178,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 20:07:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1410,"_text":"Add RefillEmptySlot 178 "}} 

 Player 1 20:07:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive> \n2:Refill holder1 slot"} 

 Player 1 20:07:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":178,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 20:07:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1411,"_text":"Response Adding RefillEmptySlot 178"},"childOfId":1410} 

 Player 1 20:07:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1412,"_text":"Wait For Response From Player 1 "},"childOfId":1410} 

 Player 1 20:07:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:56 $ACTION_MASSAGE_REMOVE:  
{"id":1412} 

 Player 1 20:07:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1413,"_text":"Wait For Response From Player 2 "},"childOfId":1410} 

 Player 1 20:07:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 

 Player 2 20:07:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:57 $ACTION_MASSAGE_REMOVE:  
{"id":1413} 

 Player 1 20:07:57 $ACTION_MASSAGE_REMOVE:  
{"id":1411} 

 Player 1 20:07:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1414,"_text":"Resolve RefillEmptySlot 178 "}} 

 Player 1 20:07:57 $DRAW_CARD:  
{"deckType":2} 

 Player 1 20:07:57 $FLIP_CARD:  
{"cardId":266} 

 Player 1 20:07:57 $REGISTER_PASSIVE_ITEM:  
{"cardId":266} 

 Player 1 20:07:57 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":266} 

 Player 1 20:07:57 $NEW_MONSTER_ON_PLACE:  
{"cardId":266,"monsterPlaceId":1} 

 Player 1 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":178,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 20:07:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1415,"_text":"Remove After Resolve RefillEmptySlot 178  "}} 

 Player 1 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":178,"creatorCardId":296,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 1 20:07:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1416,"_text":"Response Remove After Resolve RefillEmptySlot 178"},"childOfId":1415} 

 Player 1 20:07:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1417,"_text":"Wait For Response From Player 2 "},"childOfId":1415} 

 Player 1 20:07:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 

 Player 2 20:07:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny  \n2:Refill holder1 slot"} 

 Player 2 20:07:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":1417} 

 Player 1 20:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1418,"_text":"Wait For Response From Player 1 "},"childOfId":1415} 

 Player 1 20:07:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":1418} 

 Player 1 20:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":1416} 

 Player 1 20:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1419,"_text":"Resolve ActivatePassiveEffect 177 "}} 

 Player 1 20:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1420,"_text":"Resolve ActivatePassiveEffect 177 "}} 

 Player 1 20:07:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:07:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:07:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:07:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":11}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":false,"index":5} 

 Player 1 20:07:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":11}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":false,"index":5} 

 Player 1 20:07:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:07:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":177,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:07:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:07:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":177,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1421,"_text":"Remove After Resolve ActivatePassiveEffect 177  "}} 

 Player 1 20:07:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:07:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":177,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1422,"_text":"Response Remove After Resolve ActivatePassiveEffect 177"},"childOfId":1421} 

 Player 1 20:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1423,"_text":"Wait For Response From Player 1 "},"childOfId":1421} 

 Player 1 20:07:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1424,"_text":"Stack Was Emptied "}} 

 Player 1 20:07:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:07:58 $ACTION_MASSAGE_REMOVE:  
{"id":1423} 

 Player 1 20:07:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1425,"_text":"Wait For Response From Player 2 "},"childOfId":1421} 

 Player 1 20:07:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:07:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:07:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Counterfiet Penny "} 

 Player 2 20:07:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:07:59 $ACTION_MASSAGE_REMOVE:  
{"id":1425} 

 Player 1 20:07:59 $ACTION_MASSAGE_REMOVE:  
{"id":1422} 

 Player 1 20:07:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1426,"_text":"Stack Was Emptied "}} 

 Player 1 20:07:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:07:59 $SET_MONEY:  
{"playerId":1,"numOfCoins":11} 

 Player 1 20:07:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":11}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 20:08:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:08:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:08:10 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 20:08:10 $END_TURN:  

 Player 1 20:08:10 $SET_TURN:  
{"playerId":2} 

 Player 1 20:08:10 $START_TURN:  
{"playerId":2} 

 Player 2 20:08:10 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:08:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:10 $RECHARGE_ITEM:  
{"cardId":290} 

 Player 2 20:08:10 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":290} 

 Player 2 20:08:10 $RECHARGE_ITEM:  
{"cardId":291} 

 Player 2 20:08:10 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":291} 

 Player 2 20:08:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:10 $NEXT_STACK_ID:  

 Player 2 20:08:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:08:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:08:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:08:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1427,"_text":"Add StartTurnLoot 179 "}} 

 Player 2 20:08:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:08:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1428,"_text":"Response Adding StartTurnLoot 179"},"childOfId":1427} 

 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1429,"_text":"Wait For Response From Player 2 "},"childOfId":1427} 

 Player 2 20:08:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:11 $ACTION_MASSAGE_REMOVE:  
{"id":1429} 

 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1430,"_text":"Wait For Response From Player 1 "},"childOfId":1427} 

 Player 2 20:08:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:08:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:08:11 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:08:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:08:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:08:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:08:11 $ACTION_MASSAGE_REMOVE:  
{"id":1430} 

 Player 2 20:08:11 $ACTION_MASSAGE_REMOVE:  
{"id":1428} 

 Player 2 20:08:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1431,"_text":"Resolve StartTurnLoot 179 "}} 

 Player 2 20:08:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:08:11 $MOVE_CARD:  
{"moveIndex":102,"cardId":12,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:08:11 $MOVE_CARD_END:  
{"moveIndex":102,"cardId":12,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:08:11 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":12} 

 Player 2 20:08:11 $FLIP_CARD:  
{"cardId":12} 

 Player 2 20:08:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":12} 

 Player 2 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:08:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1432,"_text":"Remove After Resolve StartTurnLoot 179  "}} 

 Player 2 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":179,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1433,"_text":"Response Remove After Resolve StartTurnLoot 179"},"childOfId":1432} 

 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1434,"_text":"Wait For Response From Player 1 "},"childOfId":1432} 

 Player 2 20:08:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:08:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:08:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:08:12 $ACTION_MASSAGE_REMOVE:  
{"id":1434} 

 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1435,"_text":"Wait For Response From Player 2 "},"childOfId":1432} 

 Player 2 20:08:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:12 $ACTION_MASSAGE_REMOVE:  
{"id":1435} 

 Player 2 20:08:12 $ACTION_MASSAGE_REMOVE:  
{"id":1433} 

 Player 2 20:08:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1436,"_text":"Stack Was Emptied "}} 

 Player 2 20:08:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:18 $SHOW_DECISION:  
{"startCardId":12,"endCardId":12,"flipEndCard":true} 

 Player 2 20:08:21 $NEXT_STACK_ID:  

 Player 2 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 2 20:08:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 2 20:08:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 20:08:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1437,"_text":"Add PlayLootCardStackEffect 180 "}} 

 Player 2 20:08:21 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":12} 

 Player 2 20:08:21 $MOVE_CARD:  
{"moveIndex":103,"cardId":12,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:21 $MOVE_CARD_END:  
{"moveIndex":103,"cardId":12,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:08:21 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":12} 

 Player 2 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4): addMoney"} 

 Player 2 20:08:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4): addMoney"} 

 Player 2 20:08:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":12,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:08:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1438,"_text":"Response Adding PlayLootCardStackEffect 180"},"childOfId":1437} 

 Player 2 20:08:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1439,"_text":"Wait For Response From Player 2 "},"childOfId":1437} 

 Player 2 20:08:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:21 $ACTION_MASSAGE_REMOVE:  
{"id":1439} 

 Player 2 20:08:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1440,"_text":"Wait For Response From Player 1 "},"childOfId":1437} 

 Player 2 20:08:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:08:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:08:22 $ACTION_MASSAGE_REMOVE:  
{"id":1440} 

 Player 2 20:08:22 $ACTION_MASSAGE_REMOVE:  
{"id":1438} 

 Player 2 20:08:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1441,"_text":"Resolve PlayLootCardStackEffect 180 "}} 

 Player 2 20:08:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4): addMoney"} 

 Player 2 20:08:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":12,"particleType":6} 

 Player 2 20:08:24 $DISABLE_PARTICLE_EFFECT:  
{"cardId":12,"particleType":6} 

 Player 2 20:08:24 $SET_MONEY:  
{"playerId":2,"numOfCoins":9} 

 Player 2 20:08:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":66,"originStackId":-1},"isAfterActivation":true,"index":66} 

 Player 2 20:08:24 $REMOVE_FROM_PILE:  
{"cardId":12} 

 Player 2 20:08:24 $MOVE_CARD:  
{"moveIndex":104,"cardId":12,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:08:24 $MOVE_CARD_END:  
{"moveIndex":104,"cardId":12,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:08:24 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":12} 

 Player 2 20:08:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4): addMoney"} 

 Player 2 20:08:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1442,"_text":"Remove After Resolve PlayLootCardStackEffect 180  "}} 

 Player 2 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":180,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":12,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1443,"_text":"Response Remove After Resolve PlayLootCardStackEffect 180"},"childOfId":1442} 

 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1444,"_text":"Wait For Response From Player 1 "},"childOfId":1442} 

 Player 2 20:08:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:08:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 1 Penny(4) "} 

 Player 1 20:08:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:08:25 $ACTION_MASSAGE_REMOVE:  
{"id":1444} 

 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1445,"_text":"Wait For Response From Player 2 "},"childOfId":1442} 

 Player 2 20:08:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:25 $ACTION_MASSAGE_REMOVE:  
{"id":1445} 

 Player 2 20:08:25 $ACTION_MASSAGE_REMOVE:  
{"id":1443} 

 Player 2 20:08:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1446,"_text":"Stack Was Emptied "}} 

 Player 2 20:08:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:43 $SHOW_DECISION:  
{"startCardId":290,"endCardId":227} 

 Player 2 20:08:46 $NEXT_STACK_ID:  

 Player 2 20:08:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:08:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:08:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:08:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:08:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:08:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1447,"_text":"Add DeclareAttack 181 "}} 

 Player 2 20:08:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:08:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:08:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1448,"_text":"Response Adding DeclareAttack 181"},"childOfId":1447} 

 Player 2 20:08:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1449,"_text":"Wait For Response From Player 2 "},"childOfId":1447} 

 Player 2 20:08:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:08:47 $ACTION_MASSAGE_REMOVE:  
{"id":1449} 

 Player 2 20:08:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1450,"_text":"Wait For Response From Player 1 "},"childOfId":1447} 

 Player 2 20:08:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:08:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:08:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:08:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:08:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:08:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:08:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:08:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:08:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:08:47 $ACTION_MASSAGE_REMOVE:  
{"id":1450} 

 Player 2 20:08:47 $ACTION_MASSAGE_REMOVE:  
{"id":1448} 

 Player 2 20:08:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1451,"_text":"Resolve DeclareAttack 181 "}} 

 Player 2 20:08:47 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:08:47 $SHOW_CARD_PREVIEW:  
{"cardToShowId":278,"playerId":2} 

 Player 2 20:09:03 $FLIP_CARD:  
{"cardId":278} 

 Player 2 20:09:03 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":278} 

 Player 2 20:09:03 $NEW_MONSTER_ON_PLACE:  
{"cardId":278,"monsterPlaceId":2} 

 Player 2 20:09:03 $SHOW_DECISION:  
{"startCardId":290,"endCardId":278} 

 Player 2 20:09:06 $NEXT_STACK_ID:  

 Player 2 20:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:09:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:09:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1452,"_text":"Add ActivateItem 182 "}} 

 Player 2 20:09:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:09:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1453,"_text":"Response Adding ActivateItem 182"},"childOfId":1452} 

 Player 2 20:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1454,"_text":"Wait For Response From Player 2 "},"childOfId":1452} 

 Player 2 20:09:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:07 $ACTION_MASSAGE_REMOVE:  
{"id":1454} 

 Player 2 20:09:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1455,"_text":"Wait For Response From Player 1 "},"childOfId":1452} 

 Player 2 20:09:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:09:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:07 $ACTION_MASSAGE_REMOVE:  
{"id":1455} 

 Player 2 20:09:07 $ACTION_MASSAGE_REMOVE:  
{"id":1453} 

 Player 2 20:09:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1456,"_text":"Resolve ActivateItem 182 "}} 

 Player 2 20:09:07 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":278,"particleType":6} 

 Player 2 20:09:09 $DISABLE_PARTICLE_EFFECT:  
{"cardId":278,"particleType":6} 

 Player 2 20:09:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7} 

 Player 2 20:09:09 $NEXT_STACK_ID:  

 Player 2 20:09:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:09:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:09 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:09:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:09:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1457,"_text":"Add ActivatePassiveEffect 183 "}} 

 Player 2 20:09:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:09:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1458,"_text":"Response Adding ActivatePassiveEffect 183"},"childOfId":1457} 

 Player 2 20:09:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1459,"_text":"Wait For Response From Player 1 "},"childOfId":1457} 

 Player 2 20:09:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:10 $ACTION_MASSAGE_REMOVE:  
{"id":1459} 

 Player 2 20:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1460,"_text":"Wait For Response From Player 2 "},"childOfId":1457} 

 Player 2 20:09:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:10 $ACTION_MASSAGE_REMOVE:  
{"id":1460} 

 Player 2 20:09:10 $ACTION_MASSAGE_REMOVE:  
{"id":1458} 

 Player 2 20:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1461,"_text":"Resolve ActivatePassiveEffect 183 "}} 

 Player 2 20:09:10 $NEXT_STACK_ID:  

 Player 2 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 

 Player 2 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 

 Player 2 20:09:10 $ADD_TO_STACK:  
{"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 

 Player 2 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 roll a dice"} 

 Player 2 20:09:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 2 20:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1462,"_text":"Add RollDiceStackEffect 184 "}} 

 Player 2 20:09:10 $ROLL_DICE:  
{"playerId":2} 

 Player 1 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 2 20:09:11 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 20:09:11 $UPDATE_STACK_VIS:  
{"stackId":184,"text":"player 2 rolled 5"} 

 Player 2 20:09:11 $SHOW_DICE_ROLL:  
{"stackId":184} 

 Player 2 20:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 

 Player 2 20:09:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 

 Player 2 20:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 

 Player 2 20:09:14 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1463,"_text":"Response Adding RollDiceStackEffect 184"},"childOfId":1462} 

 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1464,"_text":"Wait For Response From Player 2 "},"childOfId":1462} 

 Player 2 20:09:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":1464} 

 Player 2 20:09:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1465,"_text":"Wait For Response From Player 1 "},"childOfId":1462} 

 Player 2 20:09:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:14 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  
{"id":1465} 

 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  
{"id":1463} 

 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1466,"_text":"Resolve RollDiceStackEffect 184 "}} 

 Player 2 20:09:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":67,"originStackId":184},"isAfterActivation":true,"index":67} 

 Player 2 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 

 Player 2 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n4:Player 2 rolled 5"} 

 Player 2 20:09:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 2 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1467,"_text":"Remove After Resolve RollDiceStackEffect 184  "}} 

 Player 2 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":184,"creatorCardId":290,"stackEffectToLock":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":2,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 

 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1468,"_text":"Response Remove After Resolve RollDiceStackEffect 184"},"childOfId":1467} 

 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1469,"_text":"Wait For Response From Player 1 "},"childOfId":1467} 

 Player 2 20:09:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball  \n4:Player 2 roll a dice"} 

 Player 1 20:09:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  
{"id":1469} 

 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1470,"_text":"Wait For Response From Player 2 "},"childOfId":1467} 

 Player 2 20:09:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  
{"id":1470} 

 Player 2 20:09:40 $ACTION_MASSAGE_REMOVE:  
{"id":1468} 

 Player 2 20:09:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1471,"_text":"Resolve ActivatePassiveEffect 183 "}} 

 Player 2 20:09:40 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 20:09:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":106,"particleType":6} 

 Player 2 20:09:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7} 

 Player 2 20:09:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 2 20:09:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:09:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:09:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:09:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1472,"_text":"Remove After Resolve ActivatePassiveEffect 183  "}} 

 Player 2 20:09:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:09:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":183,"creatorCardId":290,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":2,"cardWithEffectId":106,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1473,"_text":"Response Remove After Resolve ActivatePassiveEffect 183"},"childOfId":1472} 

 Player 2 20:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1474,"_text":"Wait For Response From Player 2 "},"childOfId":1472} 

 Player 2 20:09:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:43 $ACTION_MASSAGE_REMOVE:  
{"id":1474} 

 Player 2 20:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1475,"_text":"Wait For Response From Player 1 "},"childOfId":1472} 

 Player 2 20:09:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Activate Guppys Hairball "} 

 Player 1 20:09:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:43 $ACTION_MASSAGE_REMOVE:  
{"id":1475} 

 Player 2 20:09:43 $ACTION_MASSAGE_REMOVE:  
{"id":1473} 

 Player 2 20:09:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1476,"_text":"Resolve ActivateItem 182 "}} 

 Player 2 20:09:43 $PLAYER_GET_HIT:  
{"playerId":2,"damage":2,"damageDealerId":278} 

 Player 2 20:09:43 $NEXT_STACK_ID:  

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 2 20:09:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:43 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:43 $REPLACE_STACK:  
{"currentStack":[{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4},{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}]} 

 Player 2 20:09:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":278}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 20:09:44 $MOVE_CARD:  
{"moveIndex":105,"cardId":278,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:44 $MOVE_CARD_END:  
{"moveIndex":105,"cardId":278,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:09:44 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":278} 

 Player 2 20:09:44 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":278} 

 Player 2 20:09:44 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 2 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 2 20:09:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 20:09:44 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1477,"_text":"Remove After Resolve ActivateItem 182  "}} 

 Player 2 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 20:09:44 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":182,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":278,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1478,"_text":"Response Remove After Resolve ActivateItem 182"},"childOfId":1477} 

 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1479,"_text":"Wait For Response From Player 2 "},"childOfId":1477} 

 Player 2 20:09:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:44 $ACTION_MASSAGE_REMOVE:  
{"id":1479} 

 Player 2 20:09:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1480,"_text":"Wait For Response From Player 1 "},"childOfId":1477} 

 Player 2 20:09:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:44 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 1 20:09:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated Troll Bombs \n3:Player 2 is about to die"} 

 Player 1 20:09:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:45 $ACTION_MASSAGE_REMOVE:  
{"id":1480} 

 Player 2 20:09:45 $ACTION_MASSAGE_REMOVE:  
{"id":1478} 

 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1481,"_text":"Resolve PlayerDeath 185 "}} 

 Player 2 20:09:45 $NEXT_STACK_ID:  

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 2 20:09:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $REPLACE_STACK:  
{"currentStack":[{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4},{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278},{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}]} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 

 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1482,"_text":"Remove After Resolve PlayerDeath 185  "}} 

 Player 2 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 2 20:09:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":185,"creatorCardId":290,"playerToDieCardId":290,"stackEffectType":15,"killerId":278}} 

 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1483,"_text":"Response Remove After Resolve PlayerDeath 185"},"childOfId":1482} 

 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1484,"_text":"Wait For Response From Player 2 "},"childOfId":1482} 

 Player 2 20:09:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:45 $ACTION_MASSAGE_REMOVE:  
{"id":1484} 

 Player 2 20:09:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1485,"_text":"Wait For Response From Player 1 "},"childOfId":1482} 

 Player 2 20:09:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to die \n3:Player 2 is about to pay death penalties"} 

 Player 1 20:09:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:46 $ACTION_MASSAGE_REMOVE:  
{"id":1485} 

 Player 2 20:09:46 $ACTION_MASSAGE_REMOVE:  
{"id":1483} 

 Player 2 20:09:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1486,"_text":"Resolve PlayerDeathPenalties 186 "}} 

 Player 2 20:09:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1487,"_text":"Player 2 pays Penalties"}} 

 Player 2 20:09:46 $SET_MONEY:  
{"playerId":2,"numOfCoins":8} 

 Player 2 20:09:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":68,"originStackId":-1},"isAfterActivation":true,"index":68} 

 Player 2 20:09:51 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":15} 

 Player 2 20:09:51 $MOVE_CARD:  
{"moveIndex":106,"cardId":15,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:09:51 $MOVE_CARD_END:  
{"moveIndex":106,"cardId":15,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:09:51 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":15} 

 Player 2 20:09:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":220}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":69,"originStackId":-1},"isAfterActivation":true,"index":69} 

 Player 2 20:09:54 $MOVE_CARD:  
{"moveIndex":107,"cardId":220,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:09:55 $MOVE_CARD_END:  
{"moveIndex":107,"cardId":220,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:09:55 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":220} 

 Player 2 20:09:55 $USE_ITEM:  
{"cardId":290} 

 Player 2 20:09:55 $USE_ITEM:  
{"cardId":291} 

 Player 2 20:09:55 $PLAYER_DIED:  
{"playerId":2} 

 Player 2 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 2 20:09:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:09:55 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 20:09:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1488,"_text":"Remove After Resolve PlayerDeathPenalties 186  "}} 

 Player 2 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:09:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":186,"creatorCardId":290,"playerToPayCardId":290,"stackEffectType":16}} 

 Player 2 20:09:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1489,"_text":"Response Remove After Resolve PlayerDeathPenalties 186"},"childOfId":1488} 

 Player 2 20:09:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1490,"_text":"Wait For Response From Player 1 "},"childOfId":1488} 

 Player 2 20:09:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 is about to pay death penalties"} 

 Player 1 20:09:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:55 $ACTION_MASSAGE_REMOVE:  
{"id":1490} 

 Player 2 20:09:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1491,"_text":"Wait For Response From Player 2 "},"childOfId":1488} 

 Player 2 20:09:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  
{"id":1491} 

 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  
{"id":1489} 

 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1492,"_text":"Resolve DeclareAttack 181 "}} 

 Player 2 20:09:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":70,"originStackId":181},"isAfterActivation":true,"index":70} 

 Player 2 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:09:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":278,"stackEffectType":4}} 

 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1493,"_text":"Remove After Resolve DeclareAttack 181  "}} 

 Player 2 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:09:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":181,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":278,"stackEffectType":4}} 

 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1494,"_text":"Response Remove After Resolve DeclareAttack 181"},"childOfId":1493} 

 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1495,"_text":"Wait For Response From Player 2 "},"childOfId":1493} 

 Player 2 20:09:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  
{"id":1495} 

 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1496,"_text":"Wait For Response From Player 1 "},"childOfId":1493} 

 Player 2 20:09:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:09:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:09:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  
{"id":1496} 

 Player 2 20:09:56 $ACTION_MASSAGE_REMOVE:  
{"id":1494} 

 Player 2 20:09:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1497,"_text":"Stack Was Emptied "}} 

 Player 2 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:09:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:09:56 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 20:09:56 $END_TURN:  

 Player 2 20:09:56 $SET_TURN:  
{"playerId":1} 

 Player 2 20:09:56 $START_TURN:  
{"playerId":1} 

 Player 1 20:09:56 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:09:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:09:56 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 20:09:56 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":296} 

 Player 1 20:09:57 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 1 20:09:57 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":297} 

 Player 1 20:09:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:09:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":false,"index":6} 

 Player 1 20:09:57 $NEXT_STACK_ID:  

 Player 1 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:09:57 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:09:57 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":187,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:09:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":187,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:09:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1498,"_text":"Add ActivatePassiveEffect 187 "}} 

 Player 1 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:09:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":187,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:09:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1499,"_text":"Response Adding ActivatePassiveEffect 187"},"childOfId":1498} 

 Player 1 20:09:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1500,"_text":"Wait For Response From Player 1 "},"childOfId":1498} 

 Player 1 20:09:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:09:57 $ACTION_MASSAGE_REMOVE:  
{"id":1500} 

 Player 1 20:09:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1501,"_text":"Wait For Response From Player 2 "},"childOfId":1498} 

 Player 1 20:09:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:09:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:09:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:09:57 $ACTION_MASSAGE_REMOVE:  
{"id":1501} 

 Player 1 20:09:57 $ACTION_MASSAGE_REMOVE:  
{"id":1499} 

 Player 1 20:09:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1502,"_text":"Resolve ActivatePassiveEffect 187 "}} 

 Player 1 20:09:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 20:09:59 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 20:10:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":false,"index":6} 

 Player 1 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:10:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":187,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":187,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:10:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1503,"_text":"Remove After Resolve ActivatePassiveEffect 187  "}} 

 Player 1 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":187,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:10:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1504,"_text":"Response Remove After Resolve ActivatePassiveEffect 187"},"childOfId":1503} 

 Player 1 20:10:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1505,"_text":"Wait For Response From Player 2 "},"childOfId":1503} 

 Player 1 20:10:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:10:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:10:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":1505} 

 Player 1 20:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1506,"_text":"Wait For Response From Player 1 "},"childOfId":1503} 

 Player 1 20:10:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":1506} 

 Player 1 20:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":1504} 

 Player 1 20:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1507,"_text":"Stack Was Emptied "}} 

 Player 1 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:12 $NEXT_STACK_ID:  

 Player 1 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:10:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":188,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:10:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":188,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1508,"_text":"Add StartTurnLoot 188 "}} 

 Player 1 20:10:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:10:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":188,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1509,"_text":"Response Adding StartTurnLoot 188"},"childOfId":1508} 

 Player 1 20:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1510,"_text":"Wait For Response From Player 1 "},"childOfId":1508} 

 Player 1 20:10:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":1510} 

 Player 1 20:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1511,"_text":"Wait For Response From Player 2 "},"childOfId":1508} 

 Player 1 20:10:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:10:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":1511} 

 Player 1 20:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":1509} 

 Player 1 20:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1512,"_text":"Resolve StartTurnLoot 188 "}} 

 Player 1 20:10:12 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:10:12 $MOVE_CARD:  
{"moveIndex":108,"cardId":59,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:10:13 $MOVE_CARD_END:  
{"moveIndex":108,"cardId":59,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:10:13 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":59} 

 Player 1 20:10:13 $FLIP_CARD:  
{"cardId":59} 

 Player 1 20:10:13 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":59} 

 Player 1 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:10:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":188,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":188,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1513,"_text":"Remove After Resolve StartTurnLoot 188  "}} 

 Player 1 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":188,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1514,"_text":"Response Remove After Resolve StartTurnLoot 188"},"childOfId":1513} 

 Player 1 20:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1515,"_text":"Wait For Response From Player 2 "},"childOfId":1513} 

 Player 1 20:10:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:10:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:10:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":1515} 

 Player 1 20:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1516,"_text":"Wait For Response From Player 1 "},"childOfId":1513} 

 Player 1 20:10:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":1516} 

 Player 1 20:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":1514} 

 Player 1 20:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1517,"_text":"Stack Was Emptied "}} 

 Player 1 20:10:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:19 $SHOW_DECISION:  
{"startCardId":296,"endCardId":144} 

 Player 1 20:10:22 $NEXT_STACK_ID:  

 Player 1 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 20:10:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":189,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 20:10:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":189,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1518,"_text":"Add PurchaseItem 189 "}} 

 Player 1 20:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 1 20:10:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":189,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1519,"_text":"Response Adding PurchaseItem 189"},"childOfId":1518} 

 Player 1 20:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1520,"_text":"Wait For Response From Player 1 "},"childOfId":1518} 

 Player 1 20:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:22 $ACTION_MASSAGE_REMOVE:  
{"id":1520} 

 Player 1 20:10:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1521,"_text":"Wait For Response From Player 2 "},"childOfId":1518} 

 Player 1 20:10:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:10:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:10:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:10:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":1521} 

 Player 1 20:10:23 $ACTION_MASSAGE_REMOVE:  
{"id":1519} 

 Player 1 20:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1522,"_text":"Resolve PurchaseItem 189 "}} 

 Player 1 20:10:23 $SET_MONEY:  
{"playerId":1,"numOfCoins":1} 

 Player 1 20:10:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":53,"originStackId":-1},"isAfterActivation":true,"index":53} 

 Player 1 20:10:23 $DRAW_CARD:  
{"deckType":5} 

 Player 1 20:10:23 $MOVE_CARD:  
{"moveIndex":109,"cardId":196,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 20:10:23 $MOVE_CARD_END:  
{"moveIndex":109,"cardId":196,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:10:23 $ADD_AN_ITEM:  
{"playerId":1,"cardId":196,"isReward":false} 

 Player 1 20:10:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":196}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":54,"originStackId":-1},"isAfterActivation":true,"index":54} 

 Player 1 20:10:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":189,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1523,"_text":"Remove After Resolve PurchaseItem 189  "}} 

 Player 1 20:10:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":189,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 

 Player 1 20:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1524,"_text":"Response Remove After Resolve PurchaseItem 189"},"childOfId":1523} 

 Player 1 20:10:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1525,"_text":"Wait For Response From Player 2 "},"childOfId":1523} 

 Player 1 20:10:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:10:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:10:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Treasure Deck for 10"} 

 Player 2 20:10:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":1525} 

 Player 1 20:10:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1526,"_text":"Wait For Response From Player 1 "},"childOfId":1523} 

 Player 1 20:10:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":1526} 

 Player 1 20:10:24 $ACTION_MASSAGE_REMOVE:  
{"id":1524} 

 Player 1 20:10:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1527,"_text":"Stack Was Emptied "}} 

 Player 1 20:10:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:39 $SHOW_DECISION:  
{"startCardId":296,"endCardId":297} 

 Player 1 20:10:42 $NEXT_STACK_ID:  

 Player 1 20:10:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:10:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":190,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:10:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":190,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:10:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1528,"_text":"Add ActivateItem 190 "}} 

 Player 2 20:10:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:10:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:10:44 $SHOW_DECISION:  
{"startCardId":297,"endCardId":296} 

 Player 1 20:10:47 $USE_ITEM:  
{"cardId":297} 

 Player 1 20:10:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:10:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":190,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:10:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1529,"_text":"Response Adding ActivateItem 190"},"childOfId":1528} 

 Player 1 20:10:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1530,"_text":"Wait For Response From Player 1 "},"childOfId":1528} 

 Player 1 20:10:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":1530} 

 Player 1 20:10:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1531,"_text":"Wait For Response From Player 2 "},"childOfId":1528} 

 Player 1 20:10:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:10:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:10:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":1531} 

 Player 1 20:10:48 $ACTION_MASSAGE_REMOVE:  
{"id":1529} 

 Player 1 20:10:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1532,"_text":"Resolve ActivateItem 190 "}} 

 Player 1 20:10:48 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 20:10:50 $DISABLE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 20:10:50 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":true} 

 Player 1 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:10:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":190,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:50 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":190,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:10:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1533,"_text":"Remove After Resolve ActivateItem 190  "}} 

 Player 1 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:10:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":190,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:10:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1534,"_text":"Response Remove After Resolve ActivateItem 190"},"childOfId":1533} 

 Player 1 20:10:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1535,"_text":"Wait For Response From Player 2 "},"childOfId":1533} 

 Player 1 20:10:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:10:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:10:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":1535} 

 Player 1 20:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1536,"_text":"Wait For Response From Player 1 "},"childOfId":1533} 

 Player 1 20:10:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":1536} 

 Player 1 20:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":1534} 

 Player 1 20:10:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1537,"_text":"Stack Was Emptied "}} 

 Player 1 20:10:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:11:55 $SHOW_DECISION:  
{"startCardId":109,"endCardId":109,"flipEndCard":true} 

 Player 1 20:11:58 $NEXT_STACK_ID:  

 Player 1 20:11:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:11:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 1 20:11:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":191,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 20:11:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 1 20:11:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":191,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 20:11:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1538,"_text":"Add PlayLootCardStackEffect 191 "}} 

 Player 1 20:11:58 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":109} 

 Player 1 20:11:58 $MOVE_CARD:  
{"moveIndex":110,"cardId":109,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:11:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:11:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:11:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:11:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:11:58 $MOVE_CARD_END:  
{"moveIndex":110,"cardId":109,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:11:58 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":109} 

 Player 1 20:11:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker: ChainEffects"} 

 Player 1 20:12:01 $SHOW_DECISION:  
{"startCardId":109,"endCardId":290} 

 Player 1 20:12:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:12:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker: ChainEffects"} 

 Player 1 20:12:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":191,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":109,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:12:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1539,"_text":"Response Adding PlayLootCardStackEffect 191"},"childOfId":1538} 

 Player 1 20:12:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1540,"_text":"Wait For Response From Player 1 "},"childOfId":1538} 

 Player 1 20:12:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:12:04 $ACTION_MASSAGE_REMOVE:  
{"id":1540} 

 Player 1 20:12:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1541,"_text":"Wait For Response From Player 2 "},"childOfId":1538} 

 Player 1 20:12:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:12:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:12:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:12:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:12:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:12:04 $ACTION_MASSAGE_REMOVE:  
{"id":1541} 

 Player 1 20:12:04 $ACTION_MASSAGE_REMOVE:  
{"id":1539} 

 Player 1 20:12:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1542,"_text":"Resolve PlayLootCardStackEffect 191 "}} 

 Player 1 20:12:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker: ChainEffects"} 

 Player 1 20:12:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":109,"particleType":6} 

 Player 1 20:12:06 $DISABLE_PARTICLE_EFFECT:  
{"cardId":109,"particleType":6} 

 Player 1 20:12:22 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":100} 

 Player 1 20:12:22 $MOVE_CARD:  
{"moveIndex":111,"cardId":100,"placeID":1,"flipIfFlipped":false,"playerId":1,"placeType":"Hand"} 

 Player 2 20:12:23 $MOVE_CARD_END:  
{"moveIndex":111,"cardId":100,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:12:23 $FLIP_CARD:  
{"cardId":100} 

 Player 1 20:12:23 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":100} 

 Player 1 20:12:23 $REMOVE_FROM_PILE:  
{"cardId":109} 

 Player 1 20:12:23 $MOVE_CARD:  
{"moveIndex":112,"cardId":109,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:12:23 $MOVE_CARD_END:  
{"moveIndex":112,"cardId":109,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:12:23 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":109} 

 Player 1 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker: ChainEffects"} 

 Player 1 20:12:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":191,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:12:23 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":191,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1543,"_text":"Remove After Resolve PlayLootCardStackEffect 191  "}} 

 Player 1 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:12:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":191,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":109,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 20:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1544,"_text":"Response Remove After Resolve PlayLootCardStackEffect 191"},"childOfId":1543} 

 Player 1 20:12:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1545,"_text":"Wait For Response From Player 2 "},"childOfId":1543} 

 Player 1 20:12:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:12:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:12:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Joker "} 

 Player 2 20:12:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":1545} 

 Player 1 20:12:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1546,"_text":"Wait For Response From Player 1 "},"childOfId":1543} 

 Player 1 20:12:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":1546} 

 Player 1 20:12:24 $ACTION_MASSAGE_REMOVE:  
{"id":1544} 

 Player 1 20:12:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1547,"_text":"Stack Was Emptied "}} 

 Player 1 20:12:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:12:41 $SHOW_DECISION:  
{"startCardId":296,"endCardId":196} 

 Player 1 20:12:44 $NEXT_STACK_ID:  

 Player 1 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:12:44 $ADD_TO_STACK:  
{"stackEffect":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:12:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:12:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1548,"_text":"Add ActivateItem 192 "}} 

 Player 1 20:12:44 $USE_ITEM:  
{"cardId":196} 

 Player 1 20:12:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:12:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:12:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1549,"_text":"Response Adding ActivateItem 192"},"childOfId":1548} 

 Player 1 20:12:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1550,"_text":"Wait For Response From Player 1 "},"childOfId":1548} 

 Player 1 20:12:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:12:44 $ACTION_MASSAGE_REMOVE:  
{"id":1550} 

 Player 1 20:12:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1551,"_text":"Wait For Response From Player 2 "},"childOfId":1548} 

 Player 1 20:12:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:12:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:12:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:12:45 $ACTION_MASSAGE_REMOVE:  
{"id":1551} 

 Player 1 20:12:45 $ACTION_MASSAGE_REMOVE:  
{"id":1549} 

 Player 1 20:12:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1552,"_text":"Resolve ActivateItem 192 "}} 

 Player 1 20:12:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":196}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":55,"originStackId":-1},"isAfterActivation":true,"index":55} 

 Player 1 20:12:45 $MOVE_CARD:  
{"moveIndex":113,"cardId":196,"placeID":303,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:12:45 $MOVE_CARD_END:  
{"moveIndex":113,"cardId":196,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:12:45 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":196} 

 Player 1 20:12:45 $NEXT_STACK_ID:  

 Player 1 20:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:12:45 $NEXT_STACK_ID:  

 Player 1 20:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 1 20:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 1 20:12:45 $ADD_TO_STACK:  
{"stackEffect":{"entityId":194,"creatorCardId":296,"stackEffectToLock":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 20:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 1 20:12:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 1 20:12:45 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":194,"creatorCardId":296,"stackEffectToLock":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 20:12:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1553,"_text":"Add RollDiceStackEffect 194 "}} 

 Player 1 20:12:46 $ROLL_DICE:  
{"playerId":1} 

 Player 2 20:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 1 20:12:47 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 20:12:47 $UPDATE_STACK_VIS:  
{"stackId":194,"text":"player 1 rolled 3"} 

 Player 1 20:12:47 $SHOW_DICE_ROLL:  
{"stackId":194} 

 Player 1 20:12:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 rolled 3"} 

 Player 1 20:12:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:12:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 rolled 3"} 

 Player 1 20:12:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 rolled 3"} 

 Player 1 20:12:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":194,"creatorCardId":296,"stackEffectToLock":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 1 20:12:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1554,"_text":"Response Adding RollDiceStackEffect 194"},"childOfId":1553} 

 Player 1 20:12:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1555,"_text":"Wait For Response From Player 1 "},"childOfId":1553} 

 Player 1 20:12:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:12:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:12:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:12:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:12:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 1 20:13:01 $ACTION_MASSAGE_REMOVE:  
{"id":1555} 

 Player 1 20:13:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1556,"_text":"Wait For Response From Player 2 "},"childOfId":1553} 

 Player 1 20:13:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:13:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:13:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:13:01 $ACTION_MASSAGE_REMOVE:  
{"id":1556} 

 Player 1 20:13:01 $ACTION_MASSAGE_REMOVE:  
{"id":1554} 

 Player 1 20:13:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1557,"_text":"Resolve RollDiceStackEffect 194 "}} 

 Player 1 20:13:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1558,"_text":"Decreased 2 from original roll"}} 

 Player 1 20:13:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 decreased 2 from its original roll, rolled 1"} 

 Player 1 20:13:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":56,"originStackId":194},"isAfterActivation":true,"index":56} 

 Player 1 20:13:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 decreased 2 from its original roll, rolled 1"} 

 Player 1 20:13:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 decreased 2 from its original roll, rolled 1"} 

 Player 1 20:13:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":194,"creatorCardId":296,"stackEffectToLock":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 1 20:13:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:13:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:13:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":194,"creatorCardId":296,"stackEffectToLock":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 1 20:13:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1559,"_text":"Remove After Resolve RollDiceStackEffect 194  "}} 

 Player 1 20:13:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:13:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:13:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":194,"creatorCardId":296,"stackEffectToLock":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 1 20:13:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1560,"_text":"Response Remove After Resolve RollDiceStackEffect 194"},"childOfId":1559} 

 Player 1 20:13:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1561,"_text":"Wait For Response From Player 2 "},"childOfId":1559} 

 Player 1 20:13:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:13:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Player 1 roll a dice"} 

 Player 2 20:13:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:13:02 $ACTION_MASSAGE_REMOVE:  
{"id":1561} 

 Player 1 20:13:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1562,"_text":"Wait For Response From Player 1 "},"childOfId":1559} 

 Player 1 20:13:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:13:02 $ACTION_MASSAGE_REMOVE:  
{"id":1562} 

 Player 1 20:13:02 $ACTION_MASSAGE_REMOVE:  
{"id":1560} 

 Player 1 20:13:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1563,"_text":"Resolve ActivateItem 192 "}} 

 Player 1 20:13:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":196,"particleType":6} 

 Player 1 20:13:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":196,"particleType":6} 

 Player 1 20:13:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7} 

 Player 1 20:13:04 $NEXT_STACK_ID:  

 Player 1 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:13:04 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":195,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:13:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":195,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1564,"_text":"Add ActivatePassiveEffect 195 "}} 

 Player 1 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:13:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":195,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"effectToDo":{"effectName":"AddMoneyToReceive","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":0},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1565,"_text":"Response Adding ActivatePassiveEffect 195"},"childOfId":1564} 

 Player 1 20:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1566,"_text":"Wait For Response From Player 1 "},"childOfId":1564} 

 Player 1 20:13:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:13:04 $ACTION_MASSAGE_REMOVE:  
{"id":1566} 

 Player 1 20:13:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1567,"_text":"Wait For Response From Player 2 "},"childOfId":1564} 

 Player 1 20:13:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:13:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:13:05 $ACTION_MASSAGE_REMOVE:  
{"id":1567} 

 Player 1 20:13:05 $ACTION_MASSAGE_REMOVE:  
{"id":1565} 

 Player 1 20:13:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1568,"_text":"Resolve ActivatePassiveEffect 195 "}} 

 Player 1 20:13:05 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:13:07 $DISABLE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 20:13:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":false,"index":7} 

 Player 1 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny effect AddMoneyToRecive<AddMoneyToRecive>"} 

 Player 1 20:13:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":195,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:13:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":195,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1569,"_text":"Remove After Resolve ActivatePassiveEffect 195  "}} 

 Player 1 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:13:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":195,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":96,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1570,"_text":"Response Remove After Resolve ActivatePassiveEffect 195"},"childOfId":1569} 

 Player 1 20:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1571,"_text":"Wait For Response From Player 2 "},"childOfId":1569} 

 Player 1 20:13:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:13:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box \n2:Activate Counterfiet Penny "} 

 Player 2 20:13:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:13:07 $ACTION_MASSAGE_REMOVE:  
{"id":1571} 

 Player 1 20:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1572,"_text":"Wait For Response From Player 1 "},"childOfId":1569} 

 Player 1 20:13:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:13:07 $ACTION_MASSAGE_REMOVE:  
{"id":1572} 

 Player 1 20:13:07 $ACTION_MASSAGE_REMOVE:  
{"id":1570} 

 Player 1 20:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1573,"_text":"Resolve ActivateItem 192 "}} 

 Player 1 20:13:07 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 1 20:13:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 1 20:13:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:13:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:13:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:13:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1574,"_text":"Remove After Resolve ActivateItem 192  "}} 

 Player 1 20:13:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:13:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":192,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":196,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:13:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1575,"_text":"Response Remove After Resolve ActivateItem 192"},"childOfId":1574} 

 Player 1 20:13:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1576,"_text":"Wait For Response From Player 1 "},"childOfId":1574} 

 Player 1 20:13:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:13:08 $ACTION_MASSAGE_REMOVE:  
{"id":1576} 

 Player 1 20:13:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1577,"_text":"Wait For Response From Player 2 "},"childOfId":1574} 

 Player 1 20:13:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:13:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:13:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Pandora's Box"} 

 Player 2 20:13:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:13:08 $ACTION_MASSAGE_REMOVE:  
{"id":1577} 

 Player 1 20:13:08 $ACTION_MASSAGE_REMOVE:  
{"id":1575} 

 Player 1 20:13:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1578,"_text":"Stack Was Emptied "}} 

 Player 1 20:13:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:20:32 $SHOW_DECISION:  
{"startCardId":296,"endCardId":266} 

 Player 1 20:20:35 $NEXT_STACK_ID:  

 Player 1 20:20:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 1 20:20:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":196,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":266,"stackEffectType":4}} 

 Player 1 20:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 1 20:20:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":196,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":266,"stackEffectType":4}} 

 Player 1 20:20:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1579,"_text":"Add DeclareAttack 196 "}} 

 Player 1 20:20:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 1 20:20:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":196,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":266,"stackEffectType":4}} 

 Player 1 20:20:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1580,"_text":"Response Adding DeclareAttack 196"},"childOfId":1579} 

 Player 1 20:20:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1581,"_text":"Wait For Response From Player 1 "},"childOfId":1579} 

 Player 1 20:20:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":1581} 

 Player 1 20:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1582,"_text":"Wait For Response From Player 2 "},"childOfId":1579} 

 Player 1 20:20:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:20:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:20:36 $ACTION_MASSAGE_REMOVE:  
{"id":1582} 

 Player 1 20:20:36 $ACTION_MASSAGE_REMOVE:  
{"id":1580} 

 Player 1 20:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1583,"_text":"Resolve DeclareAttack 196 "}} 

 Player 1 20:20:36 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":266,"particleType":5} 

 Player 1 20:20:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":57,"originStackId":196},"isAfterActivation":true,"index":57} 

 Player 1 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 1 20:20:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":196,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":266,"stackEffectType":4}} 

 Player 1 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:20:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":196,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":266,"stackEffectType":4}} 

 Player 1 20:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1584,"_text":"Remove After Resolve DeclareAttack 196  "}} 

 Player 1 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:20:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":196,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":266,"stackEffectType":4}} 

 Player 1 20:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1585,"_text":"Response Remove After Resolve DeclareAttack 196"},"childOfId":1584} 

 Player 1 20:20:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1586,"_text":"Wait For Response From Player 2 "},"childOfId":1584} 

 Player 1 20:20:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:20:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Scolex"} 

 Player 2 20:20:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":1586} 

 Player 1 20:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1587,"_text":"Wait For Response From Player 1 "},"childOfId":1584} 

 Player 1 20:20:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":1587} 

 Player 1 20:20:37 $ACTION_MASSAGE_REMOVE:  
{"id":1585} 

 Player 1 20:20:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1588,"_text":"Stack Was Emptied "}} 

 Player 1 20:20:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:20:43 $NEXT_STACK_ID:  

 Player 1 20:20:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 20:20:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":197,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 20:20:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":197,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:20:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1589,"_text":"Add AttackRoll 197 "}} 

 Player 1 20:20:43 $ROLL_DICE:  
{"playerId":1} 

 Player 2 20:20:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:20:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:20:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 20:20:45 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":2} 

 Player 1 20:20:45 $UPDATE_STACK_VIS:  
{"stackId":197,"text":"player rolled 2 vs Scolex<Monster>"} 

 Player 1 20:20:45 $SHOW_DICE_ROLL:  
{"stackId":197} 

 Player 1 20:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:20:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:20:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":197,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1590,"_text":"Response Adding AttackRoll 197"},"childOfId":1589} 

 Player 1 20:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1591,"_text":"Wait For Response From Player 1 "},"childOfId":1589} 

 Player 1 20:20:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 20:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":1591} 

 Player 1 20:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1592,"_text":"Wait For Response From Player 2 "},"childOfId":1589} 

 Player 1 20:21:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:21:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:21:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":1592} 

 Player 1 20:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":1590} 

 Player 1 20:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1593,"_text":"Resolve AttackRoll 197 "}} 

 Player 1 20:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1594,"_text":"Added 1 to original roll"}} 

 Player 1 20:21:00 $NEXT_STACK_ID:  

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:21:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:21:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":198,"creatorCardId":296,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:21:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":197,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:21:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":198,"creatorCardId":296,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:21:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":197,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:21:00 $REPLACE_STACK:  
{"currentStack":[{"entityId":198,"creatorCardId":296,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":197,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}]} 

 Player 1 20:21:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":58,"originStackId":197},"isAfterActivation":true,"index":58} 

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 rolled 2 vs Scolex<Monster>"} 

 Player 1 20:21:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":197,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 1 20:21:00 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":197,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1595,"_text":"Remove After Resolve AttackRoll 197  "}} 

 Player 1 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 1 20:21:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":197,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1596,"_text":"Response Remove After Resolve AttackRoll 197"},"childOfId":1595} 

 Player 1 20:21:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1597,"_text":"Wait For Response From Player 1 "},"childOfId":1595} 

 Player 1 20:21:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:01 $ACTION_MASSAGE_REMOVE:  
{"id":1597} 

 Player 1 20:21:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1598,"_text":"Wait For Response From Player 2 "},"childOfId":1595} 

 Player 1 20:21:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:21:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:21:01 $ACTION_MASSAGE_REMOVE:  
{"id":1598} 

 Player 1 20:21:01 $ACTION_MASSAGE_REMOVE:  
{"id":1596} 

 Player 1 20:21:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1599,"_text":"Resolve CombatDamage 198 "}} 

 Player 1 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson"} 

 Player 1 20:21:01 $UPDATE_STACK_VIS:  
{"stackId":198,"text":"Scolex will deal 1 combat damage to Samson"} 

 Player 1 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson"} 

 Player 1 20:21:01 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":266} 

 Player 1 20:21:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":59,"originStackId":-1},"isAfterActivation":true,"index":59} 

 Player 1 20:21:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":60,"originStackId":198},"isAfterActivation":true,"index":60} 

 Player 1 20:21:01 $NEXT_STACK_ID:  

 Player 1 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson"} 

 Player 1 20:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson \n2:Activate Scolex effect DiscardLoot<DiscardLoot>"} 

 Player 1 20:21:02 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":199,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":266,"cardWithEffectId":266,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":266,"cardId":266,"effctType":0},"isAfterActivation":true,"index":60,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson \n2:Activate Scolex effect DiscardLoot<DiscardLoot>"} 

 Player 1 20:21:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":199,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":266,"cardWithEffectId":266,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":266,"cardId":266,"effctType":0},"isAfterActivation":true,"index":60,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:21:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1600,"_text":"Add ActivatePassiveEffect 199 "}} 

 Player 1 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson \n2:Activate Scolex effect DiscardLoot<DiscardLoot>"} 

 Player 1 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson \n2:Activate Scolex effect DiscardLoot<DiscardLoot>"} 

 Player 1 20:21:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":199,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":266,"cardWithEffectId":266,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":266,"cardId":266,"effctType":0},"isAfterActivation":true,"index":60,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:21:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1601,"_text":"Response Adding ActivatePassiveEffect 199"},"childOfId":1600} 

 Player 1 20:21:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1602,"_text":"Wait For Response From Player 2 "},"childOfId":1600} 

 Player 1 20:21:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:21:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:21:02 $ACTION_MASSAGE_REMOVE:  
{"id":1602} 

 Player 1 20:21:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1603,"_text":"Wait For Response From Player 1 "},"childOfId":1600} 

 Player 1 20:21:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:02 $ACTION_MASSAGE_REMOVE:  
{"id":1603} 

 Player 1 20:21:02 $ACTION_MASSAGE_REMOVE:  
{"id":1601} 

 Player 1 20:21:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1604,"_text":"Resolve ActivatePassiveEffect 199 "}} 

 Player 1 20:21:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":266,"particleType":6} 

 Player 1 20:21:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":266,"particleType":6} 

 Player 1 20:21:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":266}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":60,"originStackId":198},"isAfterActivation":true,"index":60} 

 Player 1 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson \n2:Activate Scolex effect DiscardLoot<DiscardLoot>"} 

 Player 1 20:21:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":199,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":266,"cardWithEffectId":266,"isAfterActivation":true,"index":60,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson"} 

 Player 1 20:21:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":199,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":266,"cardWithEffectId":266,"isAfterActivation":true,"index":60,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1605,"_text":"Remove After Resolve ActivatePassiveEffect 199  "}} 

 Player 1 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson"} 

 Player 1 20:21:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":199,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":266,"cardWithEffectId":266,"isAfterActivation":true,"index":60,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1606,"_text":"Response Remove After Resolve ActivatePassiveEffect 199"},"childOfId":1605} 

 Player 1 20:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1607,"_text":"Wait For Response From Player 1 "},"childOfId":1605} 

 Player 1 20:21:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:04 $ACTION_MASSAGE_REMOVE:  
{"id":1607} 

 Player 1 20:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1608,"_text":"Wait For Response From Player 2 "},"childOfId":1605} 

 Player 1 20:21:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:21:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson \n2:Activate Scolex "} 

 Player 2 20:21:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":1608} 

 Player 1 20:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":1606} 

 Player 1 20:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1609,"_text":"Resolve CombatDamage 198 "}} 

 Player 1 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex 1 combat damage to Samson"} 

 Player 1 20:21:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":198,"creatorCardId":296,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:21:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":198,"creatorCardId":296,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1610,"_text":"Remove After Resolve CombatDamage 198  "}} 

 Player 1 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:21:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":198,"creatorCardId":296,"entityToDoDamageCardId":266,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1611,"_text":"Response Remove After Resolve CombatDamage 198"},"childOfId":1610} 

 Player 1 20:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1612,"_text":"Wait For Response From Player 2 "},"childOfId":1610} 

 Player 1 20:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:21:05 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Scolex combat damage to Samson"} 

 Player 2 20:21:05 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":1612} 

 Player 1 20:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1613,"_text":"Wait For Response From Player 1 "},"childOfId":1610} 

 Player 1 20:21:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":1613} 

 Player 1 20:21:05 $ACTION_MASSAGE_REMOVE:  
{"id":1611} 

 Player 1 20:21:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1614,"_text":"Stack Was Emptied "}} 

 Player 1 20:21:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:21:08 $NEXT_STACK_ID:  

 Player 1 20:21:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:21:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 20:21:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":200,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 20:21:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":200,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1615,"_text":"Add AttackRoll 200 "}} 

 Player 1 20:21:09 $ROLL_DICE:  
{"playerId":1} 

 Player 2 20:21:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:21:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:21:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 20:21:10 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 20:21:10 $UPDATE_STACK_VIS:  
{"stackId":200,"text":"player rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:10 $SHOW_DICE_ROLL:  
{"stackId":200} 

 Player 1 20:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":200,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1616,"_text":"Response Adding AttackRoll 200"},"childOfId":1615} 

 Player 1 20:21:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1617,"_text":"Wait For Response From Player 1 "},"childOfId":1615} 

 Player 1 20:21:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:21:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 1 20:21:17 $SHOW_DECISION:  
{"startCardId":296,"endCardId":210} 

 Player 1 20:21:20 $NEXT_STACK_ID:  

 Player 1 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 1 20:21:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":201,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 1 20:21:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":201,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1618,"_text":"Add ActivateItem 201 "}} 

 Player 1 20:21:20 $USE_ITEM:  
{"cardId":210} 

 Player 1 20:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 1 20:21:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":201,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1619,"_text":"Response Adding ActivateItem 201"},"childOfId":1618} 

 Player 1 20:21:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1620,"_text":"Wait For Response From Player 1 "},"childOfId":1618} 

 Player 1 20:21:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 1 20:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":1620} 

 Player 1 20:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1621,"_text":"Wait For Response From Player 2 "},"childOfId":1618} 

 Player 1 20:21:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:21:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:21:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":1621} 

 Player 1 20:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":1619} 

 Player 1 20:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1622,"_text":"Resolve ActivateItem 201 "}} 

 Player 1 20:21:25 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":210,"particleType":6} 

 Player 1 20:21:27 $DISABLE_PARTICLE_EFFECT:  
{"cardId":210,"particleType":6} 

 Player 1 20:21:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 1 20:21:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":201,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:21:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":201,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1623,"_text":"Remove After Resolve ActivateItem 201  "}} 

 Player 1 20:21:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":201,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1624,"_text":"Response Remove After Resolve ActivateItem 201"},"childOfId":1623} 

 Player 1 20:21:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1625,"_text":"Wait For Response From Player 2 "},"childOfId":1623} 

 Player 1 20:21:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:21:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 activated Spoon Bender"} 

 Player 2 20:21:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:21:28 $ACTION_MASSAGE_REMOVE:  
{"id":1625} 

 Player 1 20:21:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1626,"_text":"Wait For Response From Player 1 "},"childOfId":1623} 

 Player 1 20:21:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:32 $ACTION_MASSAGE_REMOVE:  
{"id":1626} 

 Player 1 20:21:32 $ACTION_MASSAGE_REMOVE:  
{"id":1624} 

 Player 1 20:21:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1627,"_text":"Resolve AttackRoll 200 "}} 

 Player 1 20:21:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1628,"_text":"Added 1 to original roll"}} 

 Player 1 20:21:32 $NEXT_STACK_ID:  

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":202,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":266,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":200,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":202,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":266,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":200,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":202,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":266,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":200,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}]} 

 Player 1 20:21:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":61,"originStackId":200},"isAfterActivation":true,"index":61} 

 Player 1 20:21:32 $NEXT_STACK_ID:  

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster>"} 

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:21:32 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:21:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:21:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1629,"_text":"Add ActivatePassiveEffect 203 "}} 

 Player 1 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:21:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:21:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1630,"_text":"Response Adding ActivatePassiveEffect 203"},"childOfId":1629} 

 Player 1 20:21:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1631,"_text":"Wait For Response From Player 1 "},"childOfId":1629} 

 Player 1 20:21:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster>"} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:21:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 

 Player 1 20:22:31 $ACTION_MASSAGE_REMOVE:  
{"id":1631} 

 Player 1 20:22:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1632,"_text":"Wait For Response From Player 2 "},"childOfId":1629} 

 Player 1 20:22:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:22:31 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:22:31 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:22:31 $ACTION_MASSAGE_REMOVE:  
{"id":1632} 

 Player 1 20:22:32 $ACTION_MASSAGE_REMOVE:  
{"id":1630} 

 Player 1 20:22:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1633,"_text":"Resolve ActivatePassiveEffect 203 "}} 

 Player 1 20:22:32 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":272,"particleType":6} 

 Player 1 20:22:34 $DISABLE_PARTICLE_EFFECT:  
{"cardId":272,"particleType":6} 

 Player 1 20:22:34 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":272} 

 Player 1 20:22:34 $NEXT_STACK_ID:  

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage>"} 

 Player 1 20:22:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":202,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":266,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":61,"originStackId":200},"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":202,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":266,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":200,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":61,"originStackId":200},"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $REPLACE_STACK:  
{"currentStack":[{"entityId":202,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":266,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":200,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266},{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":272,"cardId":272,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":61,"originStackId":200},"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}]} 

 Player 1 20:22:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":62,"originStackId":-1},"isAfterActivation":true,"index":62} 

 Player 1 20:22:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":false,"index":61,"originStackId":200},"isAfterActivation":true,"index":61} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Activate Swarm of Flies effect DealDamage<DealDamage> \n4:Player 1 is about to die"} 

 Player 1 20:22:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 1 20:22:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:22:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1634,"_text":"Remove After Resolve ActivatePassiveEffect 203  "}} 

 Player 1 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 rolled 3 vs Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 1 20:22:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[296],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":272,"effectCardPlayer":272},"entityId":203,"creatorCardId":272,"hasLockingStackEffect":false,"cardActivatorId":272,"cardWithEffectId":272,"isAfterActivation":true,"index":61,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:22:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1635,"_text":"Response Remove After Resolve ActivatePassiveEffect 203"},"childOfId":1634} 

 Player 1 20:22:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1636,"_text":"Wait For Response From Player 1 "},"childOfId":1634} 

 Player 1 20:22:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies "} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 2 20:22:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Activate Swarm of Flies  \n4:Player 1 is about to die"} 

 Player 1 20:23:04 $ACTION_MASSAGE_REMOVE:  
{"id":1636} 

 Player 1 20:23:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1637,"_text":"Wait For Response From Player 2 "},"childOfId":1634} 

 Player 1 20:23:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:23:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:23:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:23:04 $ACTION_MASSAGE_REMOVE:  
{"id":1637} 

 Player 1 20:23:04 $ACTION_MASSAGE_REMOVE:  
{"id":1635} 

 Player 1 20:23:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1638,"_text":"Resolve PlayerDeath 204 "}} 

 Player 1 20:23:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":266,"particleType":5} 

 Player 1 20:23:04 $CANCEL_ATTACK:  

 Player 1 20:23:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Scolex<Monster> \n2:Player 1 is about to die"} 

 Player 1 20:23:04 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":202,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":266,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 20:23:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1639,"_text":"Fizzle CombatDamage 202"}} 

 Player 1 20:23:05 $FIZZLE_STACK_EFFECT:  
{"entityId":202} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 20:23:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":200,"creatorCardId":296,"numberRolled":4,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":266}} 

 Player 1 20:23:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1640,"_text":"Fizzle AttackRoll 200"}} 

 Player 1 20:23:05 $FIZZLE_STACK_EFFECT:  
{"entityId":200} 

 Player 1 20:23:05 $NEXT_STACK_ID:  

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 20:23:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":205,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":205,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $REPLACE_STACK:  
{"currentStack":[{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272},{"entityId":205,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}]} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 20:23:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1641,"_text":"Remove After Resolve PlayerDeath 204  "}} 

 Player 1 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 20:23:05 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":204,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":272}} 

 Player 1 20:23:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1642,"_text":"Response Remove After Resolve PlayerDeath 204"},"childOfId":1641} 

 Player 1 20:23:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1643,"_text":"Wait For Response From Player 1 "},"childOfId":1641} 

 Player 1 20:23:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Samson combat damage to Scolex \n2:Player 1 is rolling against Scolex<Monster> \n3:Player 1 is about to die"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 is about to die"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Scolex<Monster> \n2:Player 1 is about to die"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 20:23:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 20:23:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 20:23:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 20:23:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 20:23:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 20:23:14 $ACTION_MASSAGE_REMOVE:  
{"id":1643} 

 Player 1 20:23:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1644,"_text":"Wait For Response From Player 2 "},"childOfId":1641} 

 Player 1 20:23:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:23:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:23:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:23:14 $ACTION_MASSAGE_REMOVE:  
{"id":1644} 

 Player 1 20:23:14 $ACTION_MASSAGE_REMOVE:  
{"id":1642} 

 Player 1 20:23:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1645,"_text":"Resolve PlayerDeathPenalties 205 "}} 

 Player 1 20:23:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1646,"_text":"Player 1 pays Penalties"}} 

 Player 1 20:23:14 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 20:23:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":63,"originStackId":-1},"isAfterActivation":true,"index":63} 

 Player 1 20:23:17 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":7} 

 Player 1 20:23:17 $MOVE_CARD:  
{"moveIndex":114,"cardId":7,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:23:17 $MOVE_CARD_END:  
{"moveIndex":114,"cardId":7,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:23:17 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":7} 

 Player 1 20:23:37 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":96} 

 Player 1 20:23:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":96}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":64,"originStackId":-1},"isAfterActivation":true,"index":64} 

 Player 1 20:23:37 $MOVE_CARD:  
{"moveIndex":115,"cardId":96,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 20:23:37 $MOVE_CARD_END:  
{"moveIndex":115,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 20:23:37 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":96} 

 Player 1 20:23:37 $USE_ITEM:  
{"cardId":296} 

 Player 1 20:23:37 $USE_ITEM:  
{"cardId":297} 

 Player 1 20:23:37 $USE_ITEM:  
{"cardId":210} 

 Player 1 20:23:37 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 20:23:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 20:23:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":205,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 20:23:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":205,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 20:23:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1647,"_text":"Remove After Resolve PlayerDeathPenalties 205  "}} 

 Player 1 20:23:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":205,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 

 Player 1 20:23:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1648,"_text":"Response Remove After Resolve PlayerDeathPenalties 205"},"childOfId":1647} 

 Player 1 20:23:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1649,"_text":"Wait For Response From Player 2 "},"childOfId":1647} 

 Player 1 20:23:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:23:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 20:23:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:23:38 $ACTION_MASSAGE_REMOVE:  
{"id":1649} 

 Player 1 20:23:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1650,"_text":"Wait For Response From Player 1 "},"childOfId":1647} 

 Player 1 20:23:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:23:38 $ACTION_MASSAGE_REMOVE:  
{"id":1650} 

 Player 1 20:23:38 $ACTION_MASSAGE_REMOVE:  
{"id":1648} 

 Player 1 20:23:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1651,"_text":"Stack Was Emptied "}} 

 Player 1 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:38 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 20:23:38 $END_TURN:  

 Player 1 20:23:38 $SET_TURN:  
{"playerId":2} 

 Player 1 20:23:38 $START_TURN:  
{"playerId":2} 

 Player 1 20:23:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1652,"_text":"Stack Was Emptied "}} 

 Player 1 20:23:38 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:38 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 20:23:38 $ACTION_MASSAGE_REMOVE:  
{"id":1617} 

 Player 1 20:23:38 $ACTION_MASSAGE_REMOVE:  
{"id":1616} 

 Player 2 20:23:38 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:23:38 $RECHARGE_ITEM:  
{"cardId":290} 

 Player 2 20:23:38 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":290} 

 Player 2 20:23:38 $RECHARGE_ITEM:  
{"cardId":291} 

 Player 2 20:23:38 $PLAYER_RECHARGE_ITEM:  
{"playerId":2,"cardId":291} 

 Player 2 20:23:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:23:38 $NEXT_STACK_ID:  

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:23:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:23:38 $ADD_TO_STACK:  
{"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:23:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:23:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1652,"_text":"Add StartTurnLoot 206 "}} 

 Player 2 20:23:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:23:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:23:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1653,"_text":"Response Adding StartTurnLoot 206"},"childOfId":1652} 

 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1654,"_text":"Wait For Response From Player 2 "},"childOfId":1652} 

 Player 2 20:23:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:23:39 $ACTION_MASSAGE_REMOVE:  
{"id":1654} 

 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1655,"_text":"Wait For Response From Player 1 "},"childOfId":1652} 

 Player 2 20:23:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:23:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:23:39 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:23:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:23:39 $ACTION_MASSAGE_REMOVE:  
{"id":1655} 

 Player 2 20:23:39 $ACTION_MASSAGE_REMOVE:  
{"id":1653} 

 Player 2 20:23:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1657,"_text":"Resolve StartTurnLoot 206 "}} 

 Player 2 20:23:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:23:39 $MOVE_CARD:  
{"moveIndex":116,"cardId":140,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:23:40 $MOVE_CARD_END:  
{"moveIndex":116,"cardId":140,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:23:40 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":140} 

 Player 2 20:23:40 $FLIP_CARD:  
{"cardId":140} 

 Player 2 20:23:40 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":140} 

 Player 2 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 20:23:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:23:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1658,"_text":"Remove After Resolve StartTurnLoot 206  "}} 

 Player 2 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:23:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":206,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1659,"_text":"Response Remove After Resolve StartTurnLoot 206"},"childOfId":1658} 

 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1660,"_text":"Wait For Response From Player 1 "},"childOfId":1658} 

 Player 2 20:23:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:23:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 20:23:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:23:40 $ACTION_MASSAGE_REMOVE:  
{"id":1660} 

 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1661,"_text":"Wait For Response From Player 2 "},"childOfId":1658} 

 Player 2 20:23:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:23:40 $ACTION_MASSAGE_REMOVE:  
{"id":1661} 

 Player 2 20:23:40 $ACTION_MASSAGE_REMOVE:  
{"id":1659} 

 Player 2 20:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1662,"_text":"Stack Was Emptied "}} 

 Player 2 20:23:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:23:43 $SHOW_DECISION:  
{"startCardId":140,"endCardId":140,"flipEndCard":true} 

 Player 2 20:23:46 $NEXT_STACK_ID:  

 Player 2 20:23:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:23:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 2 20:23:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 20:23:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 2 20:23:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 20:23:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1663,"_text":"Add PlayLootCardStackEffect 207 "}} 

 Player 2 20:23:46 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":140} 

 Player 2 20:23:46 $MOVE_CARD:  
{"moveIndex":117,"cardId":140,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:23:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:23:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:47 $MOVE_CARD_END:  
{"moveIndex":117,"cardId":140,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:23:47 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":140} 

 Player 2 20:23:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World: ChainEffects"} 

 Player 2 20:23:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:23:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World: ChainEffects"} 

 Player 2 20:23:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":140,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:23:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1664,"_text":"Response Adding PlayLootCardStackEffect 207"},"childOfId":1663} 

 Player 2 20:23:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1665,"_text":"Wait For Response From Player 2 "},"childOfId":1663} 

 Player 2 20:23:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:23:47 $ACTION_MASSAGE_REMOVE:  
{"id":1665} 

 Player 2 20:23:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1666,"_text":"Wait For Response From Player 1 "},"childOfId":1663} 

 Player 2 20:23:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:23:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:23:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:23:47 $ACTION_MASSAGE_REMOVE:  
{"id":1666} 

 Player 2 20:23:48 $ACTION_MASSAGE_REMOVE:  
{"id":1664} 

 Player 2 20:23:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1667,"_text":"Resolve PlayLootCardStackEffect 207 "}} 

 Player 2 20:23:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World: ChainEffects"} 

 Player 2 20:23:48 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":140,"particleType":6} 

 Player 2 20:23:49 $DISABLE_PARTICLE_EFFECT:  
{"cardId":140,"particleType":6} 

 Player 2 20:23:55 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:23:55 $MOVE_CARD:  
{"moveIndex":118,"cardId":58,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:23:56 $MOVE_CARD_END:  
{"moveIndex":118,"cardId":58,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:23:56 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":58} 

 Player 2 20:23:56 $FLIP_CARD:  
{"cardId":58} 

 Player 2 20:23:56 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":58} 

 Player 2 20:23:56 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:23:56 $MOVE_CARD:  
{"moveIndex":119,"cardId":121,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:23:56 $MOVE_CARD_END:  
{"moveIndex":119,"cardId":121,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:23:56 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":121} 

 Player 2 20:23:56 $FLIP_CARD:  
{"cardId":121} 

 Player 2 20:23:56 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":121} 

 Player 2 20:23:56 $REMOVE_FROM_PILE:  
{"cardId":140} 

 Player 2 20:23:56 $MOVE_CARD:  
{"moveIndex":120,"cardId":140,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:23:57 $MOVE_CARD_END:  
{"moveIndex":120,"cardId":140,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:23:57 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":140} 

 Player 2 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World: ChainEffects"} 

 Player 2 20:23:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:23:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1668,"_text":"Remove After Resolve PlayLootCardStackEffect 207  "}} 

 Player 2 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:23:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":207,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":140,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1669,"_text":"Response Remove After Resolve PlayLootCardStackEffect 207"},"childOfId":1668} 

 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1670,"_text":"Wait For Response From Player 1 "},"childOfId":1668} 

 Player 2 20:23:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:23:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The World "} 

 Player 1 20:23:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":1670} 

 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1671,"_text":"Wait For Response From Player 2 "},"childOfId":1668} 

 Player 2 20:23:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":1671} 

 Player 2 20:23:57 $ACTION_MASSAGE_REMOVE:  
{"id":1669} 

 Player 2 20:23:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1672,"_text":"Stack Was Emptied "}} 

 Player 2 20:23:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:02 $SHOW_DECISION:  
{"startCardId":290,"endCardId":227} 

 Player 2 20:24:05 $NEXT_STACK_ID:  

 Player 2 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:24:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:24:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:24:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1673,"_text":"Add DeclareAttack 208 "}} 

 Player 2 20:24:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:24:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 20:24:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1674,"_text":"Response Adding DeclareAttack 208"},"childOfId":1673} 

 Player 2 20:24:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1675,"_text":"Wait For Response From Player 2 "},"childOfId":1673} 

 Player 2 20:24:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:05 $ACTION_MASSAGE_REMOVE:  
{"id":1675} 

 Player 2 20:24:05 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1676,"_text":"Wait For Response From Player 1 "},"childOfId":1673} 

 Player 2 20:24:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:05 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:24:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:24:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:24:06 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:06 $ACTION_MASSAGE_REMOVE:  
{"id":1676} 

 Player 2 20:24:06 $ACTION_MASSAGE_REMOVE:  
{"id":1674} 

 Player 2 20:24:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1677,"_text":"Resolve DeclareAttack 208 "}} 

 Player 2 20:24:06 $DRAW_CARD:  
{"deckType":2} 

 Player 2 20:24:06 $SHOW_CARD_PREVIEW:  
{"cardToShowId":237,"playerId":2} 

 Player 2 20:24:12 $FLIP_CARD:  
{"cardId":237} 

 Player 2 20:24:12 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":237} 

 Player 2 20:24:12 $NEW_MONSTER_ON_PLACE:  
{"cardId":237,"monsterPlaceId":2} 

 Player 2 20:24:12 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":237,"particleType":5} 

 Player 2 20:24:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":71,"originStackId":208},"isAfterActivation":true,"index":71} 

 Player 2 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 20:24:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":237,"stackEffectType":4}} 

 Player 2 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":237,"stackEffectType":4}} 

 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1678,"_text":"Remove After Resolve DeclareAttack 208  "}} 

 Player 2 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":208,"creatorCardId":290,"attackingPlayerCardId":290,"idOfCardBeingAttacked":237,"stackEffectType":4}} 

 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1679,"_text":"Response Remove After Resolve DeclareAttack 208"},"childOfId":1678} 

 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1680,"_text":"Wait For Response From Player 1 "},"childOfId":1678} 

 Player 2 20:24:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 

 Player 1 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 

 Player 1 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 

 Player 1 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 

 Player 1 20:24:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:12 $ACTION_MASSAGE_REMOVE:  
{"id":1680} 

 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1681,"_text":"Wait For Response From Player 2 "},"childOfId":1678} 

 Player 2 20:24:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:12 $ACTION_MASSAGE_REMOVE:  
{"id":1681} 

 Player 2 20:24:12 $ACTION_MASSAGE_REMOVE:  
{"id":1679} 

 Player 2 20:24:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1682,"_text":"Stack Was Emptied "}} 

 Player 2 20:24:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:20 $NEXT_STACK_ID:  

 Player 2 20:24:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 2 20:24:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":209,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 

 Player 2 20:24:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 2 20:24:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":209,"creatorCardId":290,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 

 Player 2 20:24:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1683,"_text":"Add AttackRoll 209 "}} 

 Player 2 20:24:20 $ROLL_DICE:  
{"playerId":2} 

 Player 1 20:24:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 2 20:24:22 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 20:24:22 $UPDATE_STACK_VIS:  
{"stackId":209,"text":"player rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:22 $SHOW_DICE_ROLL:  
{"stackId":209} 

 Player 2 20:24:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 

 Player 2 20:24:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1684,"_text":"Response Adding AttackRoll 209"},"childOfId":1683} 

 Player 2 20:24:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1685,"_text":"Wait For Response From Player 2 "},"childOfId":1683} 

 Player 2 20:24:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:25 $ACTION_MASSAGE_REMOVE:  
{"id":1685} 

 Player 2 20:24:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1686,"_text":"Wait For Response From Player 1 "},"childOfId":1683} 

 Player 2 20:24:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:26 $ACTION_MASSAGE_REMOVE:  
{"id":1686} 

 Player 2 20:24:26 $ACTION_MASSAGE_REMOVE:  
{"id":1684} 

 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1687,"_text":"Resolve AttackRoll 209 "}} 

 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1688,"_text":"Added -1 to original roll"}} 

 Player 2 20:24:26 $NEXT_STACK_ID:  

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}]} 

 Player 2 20:24:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":72,"originStackId":209},"isAfterActivation":true,"index":72} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 rolled 4 vs Conjoined Fatty<Monster>"} 

 Player 2 20:24:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 2 20:24:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 

 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1689,"_text":"Remove After Resolve AttackRoll 209  "}} 

 Player 2 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 2 20:24:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":209,"creatorCardId":290,"numberRolled":4,"rollingPlayerCardId":290,"stackEffectType":2,"attackedMonsterCardId":237}} 

 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1690,"_text":"Response Remove After Resolve AttackRoll 209"},"childOfId":1689} 

 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1691,"_text":"Wait For Response From Player 2 "},"childOfId":1689} 

 Player 2 20:24:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:26 $ACTION_MASSAGE_REMOVE:  
{"id":1691} 

 Player 2 20:24:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1692,"_text":"Wait For Response From Player 1 "},"childOfId":1689} 

 Player 2 20:24:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 

 Player 1 20:24:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:27 $ACTION_MASSAGE_REMOVE:  
{"id":1692} 

 Player 2 20:24:27 $ACTION_MASSAGE_REMOVE:  
{"id":1690} 

 Player 2 20:24:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1693,"_text":"Resolve CombatDamage 210 "}} 

 Player 2 20:24:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":4},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":210},"isAfterActivation":false,"index":8} 

 Player 2 20:24:27 $NEXT_STACK_ID:  

 Player 2 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 2 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:24:27 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:24:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:24:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1694,"_text":"Add ActivatePassiveEffect 211 "}} 

 Player 2 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:24:27 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"effectToDo":{"effectName":"AddDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":199,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:24:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1695,"_text":"Response Adding ActivatePassiveEffect 211"},"childOfId":1694} 

 Player 2 20:24:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1696,"_text":"Wait For Response From Player 1 "},"childOfId":1694} 

 Player 2 20:24:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:27 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:27 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:28 $ACTION_MASSAGE_REMOVE:  
{"id":1696} 

 Player 2 20:24:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1697,"_text":"Wait For Response From Player 2 "},"childOfId":1694} 

 Player 2 20:24:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:28 $ACTION_MASSAGE_REMOVE:  
{"id":1697} 

 Player 2 20:24:28 $ACTION_MASSAGE_REMOVE:  
{"id":1695} 

 Player 2 20:24:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1698,"_text":"Resolve ActivatePassiveEffect 211 "}} 

 Player 2 20:24:28 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 20:24:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":199,"particleType":6} 

 Player 2 20:24:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":210},"isAfterActivation":false,"index":8} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly effect AddDamage<AddDamage>"} 

 Player 2 20:24:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 2 20:24:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1699,"_text":"Remove After Resolve ActivatePassiveEffect 211  "}} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 2 20:24:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":211,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":199,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1700,"_text":"Response Remove After Resolve ActivatePassiveEffect 211"},"childOfId":1699} 

 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1701,"_text":"Wait For Response From Player 2 "},"childOfId":1699} 

 Player 2 20:24:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:30 $ACTION_MASSAGE_REMOVE:  
{"id":1701} 

 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1702,"_text":"Wait For Response From Player 1 "},"childOfId":1699} 

 Player 2 20:24:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:Activate Polydactyly "} 

 Player 1 20:24:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:30 $ACTION_MASSAGE_REMOVE:  
{"id":1702} 

 Player 2 20:24:30 $ACTION_MASSAGE_REMOVE:  
{"id":1700} 

 Player 2 20:24:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1703,"_text":"Resolve CombatDamage 210 "}} 

 Player 2 20:24:30 $UPDATE_STACK_VIS:  
{"stackId":210,"text":"Isaac will deal 5 combat damage to Conjoined Fatty"} 

 Player 2 20:24:30 $MONSTER_GET_DAMAGED:  
{"cardId":237,"hpLeft":0,"damageDealerId":290} 

 Player 2 20:24:30 $NEXT_STACK_ID:  

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 2 20:24:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:30 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:30 $REPLACE_STACK:  
{"currentStack":[{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}]} 

 Player 2 20:24:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":5},{"type":0,"number":290}],"result":null,"preventMethod":false,"methodScopeId":237,"scopeIsPlayer":false,"index":73,"originStackId":-1},"isAfterActivation":true,"index":73} 

 Player 2 20:24:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":5},{"type":2,"number":3},{"type":0,"number":290},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":8,"originStackId":210},"isAfterActivation":true,"index":8} 

 Player 2 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 20:24:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1704,"_text":"Remove After Resolve CombatDamage 210  "}} 

 Player 2 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 20:24:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":210,"creatorCardId":290,"entityToDoDamageCardId":290,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1705,"_text":"Response Remove After Resolve CombatDamage 210"},"childOfId":1704} 

 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1706,"_text":"Wait For Response From Player 2 "},"childOfId":1704} 

 Player 2 20:24:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:31 $ACTION_MASSAGE_REMOVE:  
{"id":1706} 

 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1707,"_text":"Wait For Response From Player 1 "},"childOfId":1704} 

 Player 2 20:24:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Conjoined Fatty \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:31 $ACTION_MASSAGE_REMOVE:  
{"id":1707} 

 Player 2 20:24:31 $ACTION_MASSAGE_REMOVE:  
{"id":1705} 

 Player 2 20:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1708,"_text":"Resolve MonsterDeath 212 "}} 

 Player 2 20:24:32 $DISABLE_PARTICLE_EFFECT:  
{"cardId":237,"particleType":5} 

 Player 2 20:24:32 $CANCEL_ATTACK:  

 Player 2 20:24:32 $NEXT_STACK_ID:  

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 2 20:24:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":213,"creatorCardId":290,"monsterCardWithRewardId":237,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":213,"creatorCardId":290,"monsterCardWithRewardId":237,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":213,"creatorCardId":290,"monsterCardWithRewardId":237,"playerCardIdToReward":290,"stackEffectType":7},{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}]} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 2 20:24:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 2 20:24:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 

 Player 2 20:24:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1709,"_text":"Remove After Resolve MonsterDeath 212  "}} 

 Player 2 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 2 20:24:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":212,"creatorCardId":290,"monsterToDieCardId":237,"stackEffectType":5,"killerId":290}} 

 Player 2 20:24:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1710,"_text":"Response Remove After Resolve MonsterDeath 212"},"childOfId":1709} 

 Player 2 20:24:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1711,"_text":"Wait For Response From Player 2 "},"childOfId":1709} 

 Player 2 20:24:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:32 $ACTION_MASSAGE_REMOVE:  
{"id":1711} 

 Player 2 20:24:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1712,"_text":"Wait For Response From Player 1 "},"childOfId":1709} 

 Player 2 20:24:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Isaac"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward \n2:[object Object] killed by Isaac"} 

 Player 1 20:24:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:33 $ACTION_MASSAGE_REMOVE:  
{"id":1712} 

 Player 2 20:24:33 $ACTION_MASSAGE_REMOVE:  
{"id":1710} 

 Player 2 20:24:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1713,"_text":"Resolve MonsterRewardStackEffect 213 "}} 

 Player 2 20:24:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:24:33 $MOVE_CARD:  
{"moveIndex":121,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:24:33 $MOVE_CARD_END:  
{"moveIndex":121,"cardId":137,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:24:33 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":137} 

 Player 2 20:24:33 $FLIP_CARD:  
{"cardId":137} 

 Player 2 20:24:33 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":137} 

 Player 2 20:24:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 20:24:33 $MOVE_CARD:  
{"moveIndex":122,"cardId":43,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 20:24:34 $MOVE_CARD_END:  
{"moveIndex":122,"cardId":43,"flipIfFlipped":false,"playerId":2} 

 Player 2 20:24:34 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":43} 

 Player 2 20:24:34 $FLIP_CARD:  
{"cardId":43} 

 Player 2 20:24:34 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":43} 

 Player 2 20:24:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":237,"scopeIsPlayer":false,"index":74,"originStackId":213},"isAfterActivation":true,"index":74} 

 Player 2 20:24:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":213,"creatorCardId":290,"monsterCardWithRewardId":237,"playerCardIdToReward":290,"stackEffectType":7}} 

 Player 2 20:24:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1714,"_text":"Fizzle MonsterRewardStackEffect 213"}} 

 Player 2 20:24:34 $FIZZLE_STACK_EFFECT:  
{"entityId":213} 

 Player 2 20:24:34 $MOVE_CARD:  
{"moveIndex":123,"cardId":237,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:24:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Conjoined Fatty<Monster> reward"} 

 Player 1 20:24:34 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:24:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:35 $MOVE_CARD_END:  
{"moveIndex":123,"cardId":237,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:24:35 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":237} 

 Player 2 20:24:35 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":237} 

 Player 2 20:24:35 $GET_NEXT_MONSTER:  
{"monsterPlaceId":2} 

 Player 2 20:24:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1715,"_text":"Stack Was Emptied "}} 

 Player 2 20:24:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:46 $SHOW_DECISION:  
{"startCardId":290,"endCardId":290} 

 Player 2 20:24:49 $NEXT_STACK_ID:  

 Player 2 20:24:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:24:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:24:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:24:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:24:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 20:24:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1716,"_text":"Add ActivateItem 214 "}} 

 Player 1 20:24:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:24:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:24:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:24:51 $SHOW_DECISION:  
{"startCardId":290,"endCardId":58,"flipEndCard":true} 

 Player 2 20:24:54 $USE_ITEM:  
{"cardId":290} 

 Player 2 20:24:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:24:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:24:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1717,"_text":"Response Adding ActivateItem 214"},"childOfId":1716} 

 Player 2 20:24:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1718,"_text":"Wait For Response From Player 2 "},"childOfId":1716} 

 Player 2 20:24:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:54 $ACTION_MASSAGE_REMOVE:  
{"id":1718} 

 Player 2 20:24:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1719,"_text":"Wait For Response From Player 1 "},"childOfId":1716} 

 Player 2 20:24:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:24:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:24:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:54 $ACTION_MASSAGE_REMOVE:  
{"id":1719} 

 Player 2 20:24:54 $ACTION_MASSAGE_REMOVE:  
{"id":1717} 

 Player 2 20:24:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1720,"_text":"Resolve ActivateItem 214 "}} 

 Player 2 20:24:54 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 20:24:56 $DISABLE_PARTICLE_EFFECT:  
{"cardId":290,"particleType":6} 

 Player 2 20:24:56 $NEXT_STACK_ID:  

 Player 2 20:24:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 2 20:24:56 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":58} 

 Player 2 20:24:57 $MOVE_CARD:  
{"moveIndex":124,"cardId":58,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:24:57 $MOVE_CARD_END:  
{"moveIndex":124,"cardId":58,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:24:57 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":58} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:24:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:24:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":58,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:24:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:24:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":58,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:24:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:24:57 $REPLACE_STACK:  
{"currentStack":[{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":58,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney \n2:Player 2 activated Isaac"} 

 Player 2 20:24:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney"} 

 Player 2 20:24:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1721,"_text":"Remove After Resolve ActivateItem 214  "}} 

 Player 2 20:24:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney"} 

 Player 2 20:24:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":214,"creatorCardId":290,"hasLockingStackEffect":false,"itemToPlayCardId":290,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 20:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1722,"_text":"Response Remove After Resolve ActivateItem 214"},"childOfId":1721} 

 Player 2 20:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1723,"_text":"Wait For Response From Player 2 "},"childOfId":1721} 

 Player 2 20:24:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:24:57 $ACTION_MASSAGE_REMOVE:  
{"id":1723} 

 Player 2 20:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1724,"_text":"Wait For Response From Player 1 "},"childOfId":1721} 

 Player 2 20:24:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:24:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Isaac"} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20)  \n2:Player 2 activated Isaac"} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20)  \n2:Player 2 activated Isaac"} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20)  \n2:Player 2 activated Isaac"} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20)  \n2:Player 2 activated Isaac"} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20)  \n2:Player 2 activated Isaac"} 

 Player 1 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20)  \n2:Player 2 activated Isaac"} 

 Player 1 20:24:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:24:58 $ACTION_MASSAGE_REMOVE:  
{"id":1724} 

 Player 2 20:24:58 $ACTION_MASSAGE_REMOVE:  
{"id":1722} 

 Player 2 20:24:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1725,"_text":"Resolve PlayLootCardStackEffect 215 "}} 

 Player 2 20:24:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney"} 

 Player 2 20:24:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":58,"particleType":6} 

 Player 2 20:25:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":58,"particleType":6} 

 Player 2 20:25:00 $SET_MONEY:  
{"playerId":2,"numOfCoins":11} 

 Player 2 20:25:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":75,"originStackId":-1},"isAfterActivation":true,"index":75} 

 Player 2 20:25:00 $REMOVE_FROM_PILE:  
{"cardId":58} 

 Player 2 20:25:00 $MOVE_CARD:  
{"moveIndex":125,"cardId":58,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 20:25:00 $MOVE_CARD_END:  
{"moveIndex":125,"cardId":58,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:25:01 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":58} 

 Player 2 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20): addMoney"} 

 Player 2 20:25:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1726,"_text":"Remove After Resolve PlayLootCardStackEffect 215  "}} 

 Player 2 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":215,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":58,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1727,"_text":"Response Remove After Resolve PlayLootCardStackEffect 215"},"childOfId":1726} 

 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1728,"_text":"Wait For Response From Player 1 "},"childOfId":1726} 

 Player 2 20:25:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(20) "} 

 Player 1 20:25:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:01 $ACTION_MASSAGE_REMOVE:  
{"id":1728} 

 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1729,"_text":"Wait For Response From Player 2 "},"childOfId":1726} 

 Player 2 20:25:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:01 $ACTION_MASSAGE_REMOVE:  
{"id":1729} 

 Player 2 20:25:01 $ACTION_MASSAGE_REMOVE:  
{"id":1727} 

 Player 2 20:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1730,"_text":"Stack Was Emptied "}} 

 Player 2 20:25:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:04 $SHOW_DECISION:  
{"startCardId":290,"endCardId":164} 

 Player 2 20:25:07 $NEXT_STACK_ID:  

 Player 2 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 2 20:25:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 2 20:25:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1731,"_text":"Add PurchaseItem 216 "}} 

 Player 2 20:25:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 2 20:25:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1732,"_text":"Response Adding PurchaseItem 216"},"childOfId":1731} 

 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1733,"_text":"Wait For Response From Player 2 "},"childOfId":1731} 

 Player 2 20:25:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:07 $ACTION_MASSAGE_REMOVE:  
{"id":1733} 

 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1734,"_text":"Wait For Response From Player 1 "},"childOfId":1731} 

 Player 2 20:25:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:07 $ACTION_MASSAGE_REMOVE:  
{"id":1734} 

 Player 2 20:25:07 $ACTION_MASSAGE_REMOVE:  
{"id":1732} 

 Player 2 20:25:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1735,"_text":"Resolve PurchaseItem 216 "}} 

 Player 2 20:25:07 $SET_MONEY:  
{"playerId":2,"numOfCoins":1} 

 Player 2 20:25:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":76,"originStackId":-1},"isAfterActivation":true,"index":76} 

 Player 2 20:25:07 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":164} 

 Player 2 20:25:07 $NEXT_STACK_ID:  

 Player 2 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 2 20:25:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 20:25:08 $REGISTER_PASSIVE_ITEM:  
{"cardId":164} 

 Player 2 20:25:08 $MOVE_CARD:  
{"moveIndex":126,"cardId":164,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 20:25:08 $MOVE_CARD_END:  
{"moveIndex":126,"cardId":164,"flipIfFlipped":true,"playerId":2} 

 Player 2 20:25:08 $ADD_AN_ITEM:  
{"playerId":2,"cardId":164,"isReward":false} 

 Player 2 20:25:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":77,"originStackId":-1},"isAfterActivation":true,"index":77} 

 Player 2 20:25:08 $NEXT_STACK_ID:  

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 

 Player 2 20:25:08 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 

 Player 2 20:25:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 20:25:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1736,"_text":"Add ActivatePassiveEffect 218 "}} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 

 Player 2 20:25:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 

 Player 2 20:25:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":164,"effctType":0},"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:25:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1737,"_text":"Response Adding ActivatePassiveEffect 218"},"childOfId":1736} 

 Player 2 20:25:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1738,"_text":"Wait For Response From Player 2 "},"childOfId":1736} 

 Player 2 20:25:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:08 $ACTION_MASSAGE_REMOVE:  
{"id":1738} 

 Player 2 20:25:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1739,"_text":"Wait For Response From Player 1 "},"childOfId":1736} 

 Player 2 20:25:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 1 20:25:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 1 20:25:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:09 $ACTION_MASSAGE_REMOVE:  
{"id":1739} 

 Player 2 20:25:09 $ACTION_MASSAGE_REMOVE:  
{"id":1737} 

 Player 2 20:25:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1740,"_text":"Resolve ActivatePassiveEffect 218 "}} 

 Player 2 20:25:09 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":164,"particleType":6} 

 Player 2 20:25:11 $DISABLE_PARTICLE_EFFECT:  
{"cardId":164,"particleType":6} 

 Player 2 20:25:11 $PLAYER_GAIN_HP:  
{"playerId":2,"hpToGain":1,"isTemp":false} 

 Player 2 20:25:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":77,"originStackId":-1},"isAfterActivation":true,"index":77} 

 Player 2 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner effect GainStats<GainStats>"} 

 Player 2 20:25:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1741,"_text":"Remove After Resolve ActivatePassiveEffect 218  "}} 

 Player 2 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 2 20:25:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[290],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":218,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":164,"isAfterActivation":true,"index":77,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1742,"_text":"Response Remove After Resolve ActivatePassiveEffect 218"},"childOfId":1741} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1743,"_text":"Wait For Response From Player 1 "},"childOfId":1741} 

 Player 2 20:25:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot \n3:Activate Dinner "} 

 Player 1 20:25:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  
{"id":1743} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1744,"_text":"Wait For Response From Player 2 "},"childOfId":1741} 

 Player 2 20:25:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  
{"id":1744} 

 Player 2 20:25:11 $ACTION_MASSAGE_REMOVE:  
{"id":1742} 

 Player 2 20:25:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1745,"_text":"Resolve RefillEmptySlot 217 "}} 

 Player 2 20:25:11 $DRAW_CARD:  
{"deckType":5} 

 Player 2 20:25:11 $FLIP_CARD:  
{"cardId":160} 

 Player 2 20:25:11 $ADD_STORE_CARD:  
{"cardId":160} 

 Player 2 20:25:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 2 20:25:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1746,"_text":"Remove After Resolve RefillEmptySlot 217  "}} 

 Player 2 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 2 20:25:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":217,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1747,"_text":"Response Remove After Resolve RefillEmptySlot 217"},"childOfId":1746} 

 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1748,"_text":"Wait For Response From Player 2 "},"childOfId":1746} 

 Player 2 20:25:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:12 $ACTION_MASSAGE_REMOVE:  
{"id":1748} 

 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1749,"_text":"Wait For Response From Player 1 "},"childOfId":1746} 

 Player 2 20:25:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 1 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 1 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 1 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10 \n2:Refill Store slot"} 

 Player 1 20:25:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:12 $ACTION_MASSAGE_REMOVE:  
{"id":1749} 

 Player 2 20:25:12 $ACTION_MASSAGE_REMOVE:  
{"id":1747} 

 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1750,"_text":"Resolve PurchaseItem 216 "}} 

 Player 2 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:12 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1751,"_text":"Remove After Resolve PurchaseItem 216  "}} 

 Player 2 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":216,"creatorCardId":290,"itemToPurchaseCardId":164,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1752,"_text":"Response Remove After Resolve PurchaseItem 216"},"childOfId":1751} 

 Player 2 20:25:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1753,"_text":"Wait For Response From Player 1 "},"childOfId":1751} 

 Player 2 20:25:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 20:25:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Dinner for 10"} 

 Player 1 20:25:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 20:25:13 $ACTION_MASSAGE_REMOVE:  
{"id":1753} 

 Player 2 20:25:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1754,"_text":"Wait For Response From Player 2 "},"childOfId":1751} 

 Player 2 20:25:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:13 $ACTION_MASSAGE_REMOVE:  
{"id":1754} 

 Player 2 20:25:13 $ACTION_MASSAGE_REMOVE:  
{"id":1752} 

 Player 2 20:25:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1755,"_text":"Stack Was Emptied "}} 

 Player 2 20:25:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 20:25:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:16 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 20:25:16 $END_TURN:  

 Player 2 20:25:16 $SET_TURN:  
{"playerId":1} 

 Player 2 20:25:16 $START_TURN:  
{"playerId":1} 

 Player 1 20:25:16 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 20:25:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:25:16 $RECHARGE_ITEM:  
{"cardId":296} 

 Player 1 20:25:16 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":296} 

 Player 1 20:25:16 $RECHARGE_ITEM:  
{"cardId":297} 

 Player 2 20:25:16 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 20:25:16 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":297} 

 Player 1 20:25:16 $RECHARGE_ITEM:  
{"cardId":210} 

 Player 1 20:25:16 $PLAYER_RECHARGE_ITEM:  
{"playerId":1,"cardId":210} 

 Player 1 20:25:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:25:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":false,"index":8} 

 Player 1 20:25:16 $NEXT_STACK_ID:  

 Player 1 20:25:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:25:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:25:16 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":219,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:25:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:25:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":219,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 20:25:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1756,"_text":"Add ActivatePassiveEffect 219 "}} 

 Player 1 20:25:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:25:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:25:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":219,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":122,"effctType":0},"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:25:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1757,"_text":"Response Adding ActivatePassiveEffect 219"},"childOfId":1756} 

 Player 1 20:25:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1758,"_text":"Wait For Response From Player 1 "},"childOfId":1756} 

 Player 1 20:25:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:25:16 $ACTION_MASSAGE_REMOVE:  
{"id":1758} 

 Player 1 20:25:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1759,"_text":"Wait For Response From Player 2 "},"childOfId":1756} 

 Player 1 20:25:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:25:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:25:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:25:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:25:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:25:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:25:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:25:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:25:17 $ACTION_MASSAGE_REMOVE:  
{"id":1759} 

 Player 1 20:25:17 $ACTION_MASSAGE_REMOVE:  
{"id":1757} 

 Player 1 20:25:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1760,"_text":"Resolve ActivatePassiveEffect 219 "}} 

 Player 1 20:25:17 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 20:25:19 $DISABLE_PARTICLE_EFFECT:  
{"cardId":122,"particleType":6} 

 Player 1 20:26:18 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":230} 

 Player 1 20:26:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":false,"index":8} 

 Player 1 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart effect ChainEffects<ChainEffects>"} 

 Player 1 20:26:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":219,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":219,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:26:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1761,"_text":"Remove After Resolve ActivatePassiveEffect 219  "}} 

 Player 1 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":296,"effectCardPlayer":296},"entityId":219,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":122,"isAfterActivation":false,"index":8,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 20:26:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1762,"_text":"Response Remove After Resolve ActivatePassiveEffect 219"},"childOfId":1761} 

 Player 1 20:26:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1763,"_text":"Wait For Response From Player 2 "},"childOfId":1761} 

 Player 1 20:26:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:26:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:26:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Purple Heart "} 

 Player 2 20:26:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":1763} 

 Player 1 20:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1764,"_text":"Wait For Response From Player 1 "},"childOfId":1761} 

 Player 1 20:26:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":1764} 

 Player 1 20:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":1762} 

 Player 1 20:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1765,"_text":"Stack Was Emptied "}} 

 Player 1 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:19 $NEXT_STACK_ID:  

 Player 1 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:26:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":220,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:26:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":220,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1766,"_text":"Add StartTurnLoot 220 "}} 

 Player 1 20:26:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:26:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":220,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1767,"_text":"Response Adding StartTurnLoot 220"},"childOfId":1766} 

 Player 1 20:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1768,"_text":"Wait For Response From Player 1 "},"childOfId":1766} 

 Player 1 20:26:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:26:19 $ACTION_MASSAGE_REMOVE:  
{"id":1768} 

 Player 1 20:26:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1769,"_text":"Wait For Response From Player 2 "},"childOfId":1766} 

 Player 1 20:26:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:26:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":1769} 

 Player 1 20:26:20 $ACTION_MASSAGE_REMOVE:  
{"id":1767} 

 Player 1 20:26:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1770,"_text":"Resolve StartTurnLoot 220 "}} 

 Player 1 20:26:20 $DRAW_CARD:  
{"deckType":1} 

 Player 1 20:26:20 $MOVE_CARD:  
{"moveIndex":127,"cardId":48,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 20:26:20 $MOVE_CARD_END:  
{"moveIndex":127,"cardId":48,"flipIfFlipped":false,"playerId":1} 

 Player 1 20:26:20 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":48} 

 Player 1 20:26:20 $FLIP_CARD:  
{"cardId":48} 

 Player 1 20:26:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":48} 

 Player 1 20:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 20:26:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":220,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:26:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:20 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":220,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:26:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1771,"_text":"Remove After Resolve StartTurnLoot 220  "}} 

 Player 1 20:26:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":220,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 20:26:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1772,"_text":"Response Remove After Resolve StartTurnLoot 220"},"childOfId":1771} 

 Player 1 20:26:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1773,"_text":"Wait For Response From Player 2 "},"childOfId":1771} 

 Player 1 20:26:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:26:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 20:26:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:26:21 $ACTION_MASSAGE_REMOVE:  
{"id":1773} 

 Player 1 20:26:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1774,"_text":"Wait For Response From Player 1 "},"childOfId":1771} 

 Player 1 20:26:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:26:21 $ACTION_MASSAGE_REMOVE:  
{"id":1774} 

 Player 1 20:26:21 $ACTION_MASSAGE_REMOVE:  
{"id":1772} 

 Player 1 20:26:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1775,"_text":"Stack Was Emptied "}} 

 Player 1 20:26:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:25 $SHOW_DECISION:  
{"startCardId":296,"endCardId":297} 

 Player 1 20:26:28 $NEXT_STACK_ID:  

 Player 1 20:26:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:26:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":221,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:26:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:26:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":221,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1776,"_text":"Add ActivateItem 221 "}} 

 Player 2 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:26:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:26:48 $SHOW_DECISION:  
{"startCardId":296,"endCardId":227} 

 Player 1 20:26:51 $NEXT_STACK_ID:  

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 1 20:26:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":222,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 20:26:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 1 20:26:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":222,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 20:26:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1777,"_text":"Add DeclareAttack 222 "}} 

 Player 1 20:26:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:26:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 1 20:26:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":222,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 20:26:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1778,"_text":"Response Adding DeclareAttack 222"},"childOfId":1777} 

 Player 1 20:26:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1779,"_text":"Wait For Response From Player 1 "},"childOfId":1777} 

 Player 1 20:26:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:26:52 $ACTION_MASSAGE_REMOVE:  
{"id":1779} 

 Player 1 20:26:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1780,"_text":"Wait For Response From Player 2 "},"childOfId":1777} 

 Player 1 20:26:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:26:52 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:26:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:26:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:26:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 2 20:26:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 2 20:26:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 2 20:26:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 2 20:26:52 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:26:52 $ACTION_MASSAGE_REMOVE:  
{"id":1780} 

 Player 1 20:26:52 $ACTION_MASSAGE_REMOVE:  
{"id":1778} 

 Player 1 20:26:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1781,"_text":"Resolve DeclareAttack 222 "}} 

 Player 1 20:26:52 $DRAW_CARD:  
{"deckType":2} 

 Player 1 20:26:52 $SHOW_CARD_PREVIEW:  
{"cardToShowId":249,"playerId":1} 

 Player 1 20:27:14 $SHOW_DECISION:  
{"startCardId":297,"endCardId":296} 

 Player 1 20:27:14 $FLIP_CARD:  
{"cardId":249} 

 Player 1 20:27:14 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":249} 

 Player 1 20:27:14 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":2} 

 Player 1 20:27:14 $SHOW_DECISION:  
{"startCardId":296,"endCardId":249} 

 Player 1 20:27:16 $NEXT_STACK_ID:  

 Player 1 20:27:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 1 20:27:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1782,"_text":"Add ActivateItem 223 "}} 

 Player 1 20:27:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1783,"_text":"Response Adding ActivateItem 223"},"childOfId":1782} 

 Player 1 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1784,"_text":"Wait For Response From Player 1 "},"childOfId":1782} 

 Player 1 20:27:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:17 $USE_ITEM:  
{"cardId":297} 

 Player 1 20:27:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":221,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1785,"_text":"Response Adding ActivateItem 221"},"childOfId":1776} 

 Player 1 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1786,"_text":"Wait For Response From Player 1 "},"childOfId":1776} 

 Player 1 20:27:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:17 $ACTION_MASSAGE_REMOVE:  
{"id":1784} 

 Player 1 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1787,"_text":"Wait For Response From Player 2 "},"childOfId":1782} 

 Player 1 20:27:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 20:27:17 $ACTION_MASSAGE_REMOVE:  
{"id":1786} 

 Player 1 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1788,"_text":"Wait For Response From Player 2 "},"childOfId":1776} 

 Player 1 20:27:17 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:17 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 2 20:27:17 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:27:17 $ACTION_MASSAGE_REMOVE:  
{"id":1787} 

 Player 1 20:27:17 $ACTION_MASSAGE_REMOVE:  
{"id":1788} 

 Player 1 20:27:17 $ACTION_MASSAGE_REMOVE:  
{"id":1783} 

 Player 1 20:27:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1789,"_text":"Resolve ActivateItem 223 "}} 

 Player 1 20:27:17 $NEXT_STACK_ID:  

 Player 1 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:17 $NEXT_STACK_ID:  

 Player 1 20:27:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 1 20:27:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":225,"creatorCardId":296,"stackEffectToLock":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 1 20:27:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":225,"creatorCardId":296,"stackEffectToLock":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 20:27:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1790,"_text":"Add RollDiceStackEffect 225 "}} 

 Player 1 20:27:18 $ROLL_DICE:  
{"playerId":1} 

 Player 1 20:27:18 $ACTION_MASSAGE_REMOVE:  
{"id":1785} 

 Player 1 20:27:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1791,"_text":"Resolve RollDiceStackEffect 225 "}} 

 Player 1 20:27:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1792,"_text":"Decreased NaN from original roll"}} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 decreased NaN from its original roll, rolled NaN"} 

 Player 1 20:27:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":null},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":65,"originStackId":225},"isAfterActivation":true,"index":65} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 decreased NaN from its original roll, rolled NaN"} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 decreased NaN from its original roll, rolled NaN"} 

 Player 1 20:27:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":225,"creatorCardId":296,"stackEffectToLock":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":225,"creatorCardId":296,"stackEffectToLock":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 20:27:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1793,"_text":"Remove After Resolve RollDiceStackEffect 225  "}} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 1 20:27:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":225,"creatorCardId":296,"stackEffectToLock":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 20:27:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1794,"_text":"Response Remove After Resolve RollDiceStackEffect 225"},"childOfId":1793} 

 Player 1 20:27:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1795,"_text":"Wait For Response From Player 2 "},"childOfId":1793} 

 Player 1 20:27:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 20:27:18 $ACTION_MASSAGE_REMOVE:  
{"id":1795} 

 Player 1 20:27:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1796,"_text":"Wait For Response From Player 1 "},"childOfId":1793} 

 Player 1 20:27:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:18 $ACTION_MASSAGE_REMOVE:  
{"id":1796} 

 Player 1 20:27:18 $ACTION_MASSAGE_REMOVE:  
{"id":1794} 

 Player 1 20:27:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1797,"_text":"Resolve ActivateItem 223 "}} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1) \n4:Player 1 roll a dice"} 

 Player 2 20:27:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:27:19 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":0} 

 Player 1 20:27:19 $LOG_ERROR:  
"error while resolving stack effect 223" 
//////Error From Player 1////
  

 Player 1 20:27:19 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 20:27:20 $LOG_ERROR:  
{"message":"\"trying to update stack effect 225 preview with text: player 1 rolled 0\"","stack":"\"Error: trying to update stack effect 225 preview with text: player 1 rolled 0\\n    at StackEffectVisManager.updatePreviewByStackId (src/project.dev.js:27312:29)\\n    at RollDiceStackEffect.<anonymous> (src/project.dev.js:25060:49)\\n    at step (src/cocos2d-jsb.js:70997:23)\\n    at Object.next (src/cocos2d-jsb.js:70941:20)\\n    at fulfilled (src/cocos2d-jsb.js:70902:30)\""} 
//////Error From Player 1////
  

 Player 1 20:27:20 $LOG_ERROR:  
//////Error From Player 1////

 "\"trying to update stack effect 225 preview with text: player 1 rolled 0\""

 + "\"Error: trying to update stack effect 225 preview with text: player 1 rolled 0\
    at StackEffectVisManager.updatePreviewByStackId (src/project.dev.js:27312:29)\
    at RollDiceStackEffect.<anonymous> (src/project.dev.js:25060:49)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\
    at fulfilled (src/cocos2d-jsb.js:70902:30)\""

////// 
//////Error From Player 1////

 "\"trying to update stack effect 225 preview with text: player 1 rolled 0\""

 + "\"Error: trying to update stack effect 225 preview with text: player 1 rolled 0\
    at StackEffectVisManager.updatePreviewByStackId (src/project.dev.js:27312:29)\
    at RollDiceStackEffect.<anonymous> (src/project.dev.js:25060:49)\
    at step (src/cocos2d-jsb.js:70997:23)\
    at Object.next (src/cocos2d-jsb.js:70941:20)\
    at fulfilled (src/cocos2d-jsb.js:70902:30)\""

////// 

 Player 1 20:27:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 1 20:27:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:27:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1798,"_text":"Remove After Resolve ActivateItem 223  "}} 

 Player 1 20:27:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 1 20:27:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":223,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":249,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 20:27:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1799,"_text":"Response Remove After Resolve ActivateItem 223"},"childOfId":1798} 

 Player 1 20:27:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1800,"_text":"Wait For Response From Player 1 "},"childOfId":1798} 

 Player 1 20:27:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:24 $ACTION_MASSAGE_REMOVE:  
{"id":1800} 

 Player 1 20:27:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1801,"_text":"Wait For Response From Player 2 "},"childOfId":1798} 

 Player 1 20:27:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:27:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck \n3:Player 1 activated Gold Chest (1)"} 

 Player 2 20:27:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:27:27 $ACTION_MASSAGE_REMOVE:  
{"id":1801} 

 Player 1 20:27:27 $ACTION_MASSAGE_REMOVE:  
{"id":1799} 

 Player 1 20:27:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1802,"_text":"Resolve DeclareAttack 222 "}} 

 Player 1 20:27:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":66,"originStackId":222},"isAfterActivation":true,"index":66} 

 Player 1 20:27:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 1 20:27:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":222,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:27:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":222,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1803,"_text":"Remove After Resolve DeclareAttack 222  "}} 

 Player 1 20:27:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:27:30 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":222,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1804,"_text":"Response Remove After Resolve DeclareAttack 222"},"childOfId":1803} 

 Player 1 20:27:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1805,"_text":"Wait For Response From Player 2 "},"childOfId":1803} 

 Player 1 20:27:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 2 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Monster Deck"} 

 Player 2 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust \n2:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:27:32 $ACTION_MASSAGE_REMOVE:  
{"id":1805} 

 Player 1 20:27:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1806,"_text":"Wait For Response From Player 1 "},"childOfId":1803} 

 Player 1 20:27:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:32 $ACTION_MASSAGE_REMOVE:  
{"id":1806} 

 Player 1 20:27:32 $ACTION_MASSAGE_REMOVE:  
{"id":1804} 

 Player 1 20:27:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1807,"_text":"Resolve ActivateItem 221 "}} 

 Player 1 20:27:32 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 20:27:34 $DISABLE_PARTICLE_EFFECT:  
{"cardId":297,"particleType":6} 

 Player 1 20:27:34 $PLAYER_GAIN_DMG:  
{"playerId":1,"DMGToGain":1,"isTemp":true} 

 Player 1 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 1 20:27:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":221,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":221,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:27:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1808,"_text":"Remove After Resolve ActivateItem 221  "}} 

 Player 1 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":221,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":297,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 20:27:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1809,"_text":"Response Remove After Resolve ActivateItem 221"},"childOfId":1808} 

 Player 1 20:27:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1810,"_text":"Wait For Response From Player 1 "},"childOfId":1808} 

 Player 1 20:27:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:34 $ACTION_MASSAGE_REMOVE:  
{"id":1810} 

 Player 1 20:27:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1811,"_text":"Wait For Response From Player 2 "},"childOfId":1808} 

 Player 1 20:27:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:27:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:27:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:27:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Blood Lust"} 

 Player 2 20:27:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:27:35 $ACTION_MASSAGE_REMOVE:  
{"id":1811} 

 Player 1 20:27:35 $ACTION_MASSAGE_REMOVE:  
{"id":1809} 

 Player 1 20:27:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1812,"_text":"Stack Was Emptied "}} 

 Player 1 20:27:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:38 $SHOW_DECISION:  
{"startCardId":296,"endCardId":249} 

 Player 1 20:27:41 $NEXT_STACK_ID:  

 Player 1 20:27:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 1 20:27:41 $ADD_TO_STACK:  
{"stackEffect":{"entityId":226,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 1 20:27:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":226,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1813,"_text":"Add DeclareAttack 226 "}} 

 Player 1 20:27:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 1 20:27:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":226,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1814,"_text":"Response Adding DeclareAttack 226"},"childOfId":1813} 

 Player 1 20:27:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1815,"_text":"Wait For Response From Player 1 "},"childOfId":1813} 

 Player 1 20:27:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:41 $ACTION_MASSAGE_REMOVE:  
{"id":1815} 

 Player 1 20:27:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1816,"_text":"Wait For Response From Player 2 "},"childOfId":1813} 

 Player 1 20:27:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:27:42 $ACTION_MASSAGE_REMOVE:  
{"id":1816} 

 Player 1 20:27:42 $ACTION_MASSAGE_REMOVE:  
{"id":1814} 

 Player 1 20:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1817,"_text":"Resolve DeclareAttack 226 "}} 

 Player 1 20:27:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":67,"originStackId":226},"isAfterActivation":true,"index":67} 

 Player 1 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 1 20:27:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":226,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":226,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1818,"_text":"Remove After Resolve DeclareAttack 226  "}} 

 Player 1 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 20:27:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":226,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":249,"stackEffectType":4}} 

 Player 1 20:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1819,"_text":"Response Remove After Resolve DeclareAttack 226"},"childOfId":1818} 

 Player 1 20:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1820,"_text":"Wait For Response From Player 2 "},"childOfId":1818} 

 Player 1 20:27:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 20:27:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Gold Chest (1)"} 

 Player 2 20:27:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 20:27:43 $ACTION_MASSAGE_REMOVE:  
{"id":1820} 

 Player 1 20:27:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1821,"_text":"Wait For Response From Player 1 "},"childOfId":1818} 

 Player 1 20:27:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 20:27:43 $ACTION_MASSAGE_REMOVE:  
{"id":1821} 

 Player 1 20:27:43 $ACTION_MASSAGE_REMOVE:  
{"id":1819} 

 Player 1 20:27:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1822,"_text":"Stack Was Emptied "}} 

 Player 1 20:27:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 23:13:41 $MATCH: 