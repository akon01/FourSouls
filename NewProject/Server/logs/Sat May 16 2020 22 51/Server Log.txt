Start Log 

 Player 1 22:51:56 $MATCH:  

 Player 1 22:51:57 $START_GAME:  

 Player 1 22:51:57 $MOVE_TO_TABLE:  

 Player 2 22:51:57 $MOVE_TO_TABLE:  

 Player 1 22:52:05 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 22:52:05 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 22:52:05 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 22:52:06 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[168,155,185,211,203,218,213,160,143,142,194,153,156,146,204,149,183,207,181,212,151,179,221,201,164,148,216,214,174,199,182,198,197,196,186,200,177,219,193,215,150,152,217,171,184,175,195,180,178,210,191,202,166,162,169,188,154,159,176,192,157,209,208,206,144,161,147,172,163,173,145,187,190,189,158,141,220,170,165,205,167]} 

 Player 1 22:52:46 $EDEN_CHOSEN:  
{"cardId":185,"playerId":2} 

 Player 2 22:52:46 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[168,155,211,203,218,213,160,143,142,194,153,156,146,204,149,183,207,181,212,151,179,221,201,164,148,216,214,174,199,182,198,197,196,186,200,177,219,193,215,150,152,217,171,184,175,195,180,178,210,191,202,166,162,169,188,154,159,176,192,157,209,208,206,144,161,147,172,163,173,145,187,190,189,158,141,220,170,165,205,167]} 

 Player 2 22:52:46 $FLIP_CARD:  
{"cardId":185} 

 Player 2 22:52:46 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":327,"itemCardId":185} 

 Player 1 22:52:46 $REGISTER_PASSIVE_ITEM:  
{"cardId":185} 

 Player 1 22:52:46 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":327,"itemCardId":185} 

 Player 1 22:52:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":185}],"result":true,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 22:52:46 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 22:52:46 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":333,"itemCardId":334} 

 Player 2 22:52:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":328}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 22:52:46 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[56,9,80,88,128,110,49,111,39,130,124,53,94,133,116,27,118,47,121,82,75,96,91,92,18,136,87,20,34,44,77,4,65,84,122,108,23,55,113,73,6,78,54,59,74,71,66,31,93,36,103,90,37,131,132,10,112,86,61,100,35,95,51,104,48,89,99,101,83,109,81,138,85,5,11,68,67,58,57,43,28,123,32,114,135,22,97,33,16,139,134,46,24,137,70,45,52,13,29,79,127,129,60,21,40,63,30,98,14,105,17,115,76,64,38,7,15,126,125,50,102,26,42,69,72,120,107,41,117,119,62,19,106,25,12,8]} 

 Player 2 22:52:46 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[289,252,309,231,224,284,292,301,278,299,316,294,275,276,312,298,227,232,265,306,279,285,273,262,226,313,267,264,280,287,307,272,256,311,295,270,244,234,248,261,271,258,235,260,237,281,288,277,296,274,223,247,229,251,290,269,225,246,254,286,291,238,236,266,308,240,305,300,253,228,304,257,239,241,230,283,255,250,259,314,263,293,242,297,315,310,302,245,243,233,282,249,268,303]} 

 Player 2 22:52:46 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[203,205,186,159,169,147,173,194,166,156,201,207,215,141,151,165,155,176,193,144,218,214,148,198,160,184,146,179,206,212,154,197,200,163,167,213,216,152,190,175,189,149,145,221,158,177,174,150,209,220,161,164,204,195,208,153,219,162,180,191,196,199,172,188,171,202,187,143,210,157,178,170,181,142,183,182,211,217,168,192]} 

 Player 2 22:52:46 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:52:46 $FLIP_CARD:  
{"cardId":192} 

 Player 2 22:52:46 $ADD_STORE_CARD:  
{"cardId":192} 

 Player 2 22:52:46 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:52:46 $FLIP_CARD:  
{"cardId":168} 

 Player 2 22:52:46 $ADD_STORE_CARD:  
{"cardId":168} 

 Player 2 22:52:46 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:52:46 $FLIP_CARD:  
{"cardId":303} 

 Player 2 22:52:47 $REGISTER_PASSIVE_ITEM:  
{"cardId":303} 

 Player 2 22:52:47 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":303} 

 Player 2 22:52:47 $NEW_MONSTER_ON_PLACE:  
{"cardId":303,"monsterPlaceId":1} 

 Player 2 22:52:47 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:52:47 $FLIP_CARD:  
{"cardId":268} 

 Player 2 22:52:47 $REGISTER_PASSIVE_ITEM:  
{"cardId":268} 

 Player 2 22:52:47 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":268} 

 Player 2 22:52:47 $NEW_MONSTER_ON_PLACE:  
{"cardId":268,"monsterPlaceId":2} 

 Player 2 22:52:47 $REGISTER_PASSIVE_ITEM:  
{"cardId":318} 

 Player 2 22:52:47 $REGISTER_PASSIVE_ITEM:  
{"cardId":319} 

 Player 2 22:52:47 $REGISTER_PASSIVE_ITEM:  
{"cardId":320} 

 Player 2 22:52:47 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 22:52:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 22:52:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:52:47 $MOVE_CARD:  
{"moveIndex":1,"cardId":8,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:52:47 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":8,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:52:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":8} 

 Player 2 22:52:47 $FLIP_CARD:  
{"cardId":8} 

 Player 2 22:52:47 $FLIP_CARD:  
{"cardId":8} 

 Player 2 22:52:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":8} 

 Player 2 22:52:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":8}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 22:52:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:52:47 $MOVE_CARD:  
{"moveIndex":2,"cardId":12,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:52:48 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":12,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:52:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":12} 

 Player 2 22:52:48 $FLIP_CARD:  
{"cardId":12} 

 Player 2 22:52:48 $FLIP_CARD:  
{"cardId":12} 

 Player 2 22:52:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":12} 

 Player 2 22:52:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":12}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 22:52:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:52:48 $MOVE_CARD:  
{"moveIndex":3,"cardId":25,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:52:48 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":25,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:52:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":25} 

 Player 2 22:52:48 $FLIP_CARD:  
{"cardId":25} 

 Player 2 22:52:48 $FLIP_CARD:  
{"cardId":25} 

 Player 2 22:52:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":25} 

 Player 2 22:52:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":25}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 22:52:48 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 22:52:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 22:52:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:52:49 $MOVE_CARD:  
{"moveIndex":4,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:52:49 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":106,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:52:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":106} 

 Player 2 22:52:49 $FLIP_CARD:  
{"cardId":106} 

 Player 2 22:52:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 22:52:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":106}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 22:52:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:52:49 $MOVE_CARD:  
{"moveIndex":5,"cardId":19,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:52:49 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":19,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:52:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":19} 

 Player 2 22:52:50 $FLIP_CARD:  
{"cardId":19} 

 Player 2 22:52:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":19} 

 Player 2 22:52:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":19}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 22:52:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:52:50 $MOVE_CARD:  
{"moveIndex":6,"cardId":62,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:52:50 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:52:50 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":62} 

 Player 2 22:52:50 $FLIP_CARD:  
{"cardId":62} 

 Player 2 22:52:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":62} 

 Player 2 22:52:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":62}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 22:52:50 $GAME_HAS_STARTED:  

 Player 2 22:52:50 $SET_TURN:  
{"playerId":2} 

 Player 2 22:52:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:52:50 $NEXT_STACK_ID:  

 Player 2 22:52:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":333,"turnPlayerCardId":333,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:52:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":333,"turnPlayerCardId":333,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:52:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:52:50 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 22:52:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:52:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":333,"turnPlayerCardId":333,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 22:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 22:52:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 22:52:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:52:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:52:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[327]} 

 Player 1 22:52:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:52:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 22:52:53 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":333,"turnPlayerCardId":333,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 22:52:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:52:53 $MOVE_CARD:  
{"moveIndex":7,"cardId":119,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:52:54 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":119,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:52:54 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":119} 

 Player 2 22:52:54 $FLIP_CARD:  
{"cardId":119} 

 Player 2 22:52:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":119} 

 Player 2 22:52:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":119}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 22:52:54 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 22:52:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":333,"turnPlayerCardId":333,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 22:52:54 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:52:54 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:52:54 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:52:57 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 22:52:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 22:52:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":333,"turnPlayerCardId":333,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 22:52:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 22:52:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 22:52:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:52:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:52:57 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[327]} 

 Player 1 22:52:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:52:57 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 22:52:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 22:52:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:52:57 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 22:52:57 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 22:52:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 22:52:57 $CLEAR_SE_VIS:  

 Player 2 22:52:57 $UPDATE_ACTIONS:  

 Player 2 22:53:20 $MOVE_CARD:  
{"moveIndex":8,"cardId":176,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 22:53:20 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":176,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:53:20 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[203,205,186,159,169,147,173,194,166,156,201,207,215,141,151,165,155,193,144,218,214,148,198,160,184,146,179,206,212,154,197,200,163,167,213,216,152,190,175,189,149,145,221,158,177,174,150,209,220,161,164,204,195,208,153,219,162,180,191,196,199,172,188,171,202,187,143,210,157,178,170,181,142,183,182,211,217]} 

 Player 2 22:53:20 $REGISTER_PASSIVE_ITEM:  
{"cardId":176} 

 Player 2 22:53:20 $MOVE_CARD:  
{"moveIndex":9,"cardId":176,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 22:53:21 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":176,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:53:21 $ADD_AN_ITEM:  
{"playerId":2,"cardId":176,"isReward":true} 

 Player 2 22:53:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":176}],"result":true,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 22:53:25 $NEXT_STACK_ID:  

 Player 2 22:53:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":333,"attackingPlayerCardId":333,"idOfCardBeingAttacked":268,"stackEffectType":4,"lable":"Player 2 declared attack on Gurdy Jr."}} 

 Player 2 22:53:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":333,"attackingPlayerCardId":333,"idOfCardBeingAttacked":268,"stackEffectType":4,"lable":"Player 2 declared attack on Gurdy Jr."}} 

 Player 2 22:53:25 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:53:25 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:53:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Player Declare Attack On Monster 2 "}} 

 Player 2 22:53:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":333,"attackingPlayerCardId":333,"idOfCardBeingAttacked":268,"stackEffectType":4,"lable":"Player 2 declared attack on Gurdy Jr."}} 

 Player 2 22:53:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Player Declare Attack On Monster 2"},"childOfId":10} 

 Player 2 22:53:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 22:53:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:28 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 22:53:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 22:53:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:29 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[327]} 

 Player 1 22:53:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:29 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 22:53:29 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 22:53:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Player Declare Attack On Monster 2 "}} 

 Player 2 22:53:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":333,"attackingPlayerCardId":333,"idOfCardBeingAttacked":268,"stackEffectType":4,"lable":"Player 2 declared attack on Gurdy Jr."}]} 

 Player 2 22:53:29 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":268,"particleType":5} 

 Player 2 22:53:29 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Has Entered Battle with Gurdy Jr."} 

 Player 2 22:53:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":12,"originStackId":2},"isAfterActivation":true,"index":12} 

 Player 2 22:53:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":333,"attackingPlayerCardId":333,"idOfCardBeingAttacked":268,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Gurdy Jr."}} 

 Player 2 22:53:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:53:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:53:29 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:53:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 22:53:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Player Declare Attack On Monster 2  "}} 

 Player 2 22:53:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":333,"attackingPlayerCardId":333,"idOfCardBeingAttacked":268,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Gurdy Jr."}} 

 Player 2 22:53:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Player Declare Attack On Monster 2"},"childOfId":15} 

 Player 2 22:53:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 22:53:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[327]} 

 Player 1 22:53:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:32 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 22:53:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 22:53:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:32 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 22:53:32 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 22:53:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 22:53:32 $CLEAR_SE_VIS:  

 Player 2 22:53:35 $NEXT_STACK_ID:  

 Player 2 22:53:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":333,"rollingPlayerCardId":333,"stackEffectType":2,"attackedMonsterCardId":268,"lable":"Player 2 is rolling against Gurdy Jr.<Monster>"}} 

 Player 2 22:53:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":333,"rollingPlayerCardId":333,"stackEffectType":2,"attackedMonsterCardId":268,"lable":"Player 2 is rolling against Gurdy Jr.<Monster>"}} 

 Player 2 22:53:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:53:35 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:53:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Attack Roll On Monster 3 "}} 

 Player 2 22:53:38 $ROLL_DICE:  
{"playerId":2} 

 Player 2 22:53:39 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 22:53:39 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 4 vs Gurdy Jr.<Monster>"} 

 Player 2 22:53:39 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 22:53:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 rolled 4 vs Gurdy Jr.<Monster>"} 

 Player 2 22:53:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":333,"numberRolled":4,"rollingPlayerCardId":333,"stackEffectType":2,"attackedMonsterCardId":268,"lable":"Player 2 rolled 4 vs Gurdy Jr.<Monster>"}} 

 Player 2 22:53:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Attack Roll On Monster 3"},"childOfId":20} 

 Player 2 22:53:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 22:53:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:43 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 22:53:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 22:53:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:43 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[327]} 

 Player 1 22:53:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:43 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 22:53:43 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 22:53:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 2 22:53:43 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":333,"numberRolled":4,"rollingPlayerCardId":333,"stackEffectType":2,"attackedMonsterCardId":268,"lable":"Player 2 rolled 4 vs Gurdy Jr.<Monster>"}]} 

 Player 2 22:53:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 22:53:43 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Rolled 2 Against Gurdy Jr.<Monster> 5"} 

 Player 2 22:53:43 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Roll Miss"} 

 Player 2 22:53:43 $NEXT_STACK_ID:  

 Player 2 22:53:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:43 $CLEAR_SE_VIS:  

 Player 2 22:53:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":333,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":333,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Gurdy Jr. is going to hurt Maggy"}} 

 Player 2 22:53:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":333,"numberRolled":4,"rollingPlayerCardId":333,"stackEffectType":2,"attackedMonsterCardId":268,"lable":"Player 2 Roll Miss"}} 

 Player 2 22:53:43 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":333,"entityToDoDamageCardId":268,"entityToTakeDamageCardId":333,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Gurdy Jr. is going to hurt Maggy"},{"entityId":3,"creatorCardId":333,"numberRolled":4,"rollingPlayerCardId":333,"stackEffectType":2,"attackedMonsterCardId":268,"lable":"Player 2 Roll Miss"}]} 

 Player 2 22:53:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:53:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":333,"scopeIsPlayer":true,"index":13,"originStackId":3},"isAfterActivation":true,"index":13} 

 Player 2 22:53:43 $NEXT_STACK_ID:  

 Player 2 22:53:43 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":333,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"effectToDo":{"effectName":"DeactivateItem","cardEffectNum":0,"cardPlayerId":2,"cardId":176,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Hourglass Effect DeactivateITem<DeactivateITem>"}} 

 Player 2 22:53:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":333,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"effectToDo":{"effectName":"DeactivateItem","cardEffectNum":0,"cardPlayerId":2,"cardId":176,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Hourglass Effect DeactivateITem<DeactivateITem>"}} 

 Player 2 22:53:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:53:43 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:53:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add Activate Passive Effect 5 "}} 

 Player 2 22:53:52 $SHOW_ANNOUNCEMENT:  
{} 

 Player 2 22:53:52 $LOG_ERROR:  
{"message":"\"ITEM_TYPE is not defined\"","stack":"\"ReferenceError: ITEM_TYPE is not defined\\n    at eval (eval at ChooseCard.applyFilterToCards (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32)), <anonymous>:5:57)\\n    at Array.filter (<anonymous>)\\n    at ChooseCard.applyFilterToCards (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:424:22)\\n    at ChooseCard.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:159:58)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at ChooseCard.collectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:126:16)\""} 
//////Error From Player 2////
  

 Player 2 22:53:52 $LOG_ERROR:  
//////Error From Player 2////

 "\"ITEM_TYPE is not defined\""

 + "\"ReferenceError: ITEM_TYPE is not defined\
    at eval (eval at ChooseCard.applyFilterToCards (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32)), <anonymous>:5:57)\
    at Array.filter (<anonymous>)\
    at ChooseCard.applyFilterToCards (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:424:22)\
    at ChooseCard.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:159:58)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at ChooseCard.collectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:126:16)\""

////// 
//////Error From Player 2////

 "\"ITEM_TYPE is not defined\""

 + "\"ReferenceError: ITEM_TYPE is not defined\
    at eval (eval at ChooseCard.applyFilterToCards (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32)), <anonymous>:5:57)\
    at Array.filter (<anonymous>)\
    at ChooseCard.applyFilterToCards (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:424:22)\
    at ChooseCard.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:159:58)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\
    at new Promise (<anonymous>)\
    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\
    at ChooseCard.collectData (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:230:32), <anonymous>:126:16)\""

////// 

 Player 2 22:53:52 $SHOW_ANNOUNCEMENT:  
{"text":"\"ITEM_TYPE is not defined\""} 

 Player 2 22:53:52 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Activate Hourglass effect DeactivateITem<DeactivateITem>"} 

 Player 2 22:53:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":333,"effectCardPlayer":333},"entityId":5,"creatorCardId":333,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"effectToDo":{"effectName":"DeactivateItem","cardEffectNum":0,"cardPlayerId":2,"cardId":176,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Hourglass effect DeactivateITem<DeactivateITem>"}} 

 Player 2 22:53:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding Activate Passive Effect 5"},"childOfId":26} 

 Player 2 22:53:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 22:53:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:53:52 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 22:53:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 22:53:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:53:52 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:53:52 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[327]} 

 Player 1 22:53:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:53:52 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 22:53:52 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 22:53:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve Activate Passive Effect 5 "}} 

 Player 2 22:53:52 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":333,"numberRolled":4,"rollingPlayerCardId":333,"stackEffectType":2,"attackedMonsterCardId":268,"lable":"Player 2 Roll Miss"},{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":333,"effectCardPlayer":333},"entityId":5,"creatorCardId":333,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":176,"effectToDo":{"effectName":"DeactivateItem","cardEffectNum":0,"cardPlayerId":2,"cardId":176,"effctType":0},"isAfterActivation":true,"index":13,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Hourglass effect DeactivateITem<DeactivateITem>"}]} 

 Player 2 22:53:53 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":176,"particleType":6} 

 Player 2 22:53:54 $DISABLE_PARTICLE_EFFECT:  
{"cardId":176,"particleType":6} 

 Player 2 22:53:55 $HIDE_ANNOUNCEMENT:  

 Player 2 22:53:55 $HIDE_ANNOUNCEMENT:  

 Player 2 22:55:13 $MATCH: 