Start Log 

 Player 1 17:59:38 $MATCH:  

 Player 1 17:59:39 $START_GAME:  

 Player 1 17:59:39 $MOVE_TO_TABLE:  

 Player 2 17:59:39 $MOVE_TO_TABLE:  

 Player 1 17:59:47 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:59:48 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 17:59:48 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":284,"itemCardId":285} 

 Player 2 17:59:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:59:48 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":292,"itemCardId":293} 

 Player 2 17:59:48 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[58,42,78,25,97,111,137,117,20,112,114,33,9,139,87,76,40,19,86,102,70,129,10,79,69,124,116,31,101,21,17,106,24,14,73,85,57,35,13,93,88,105,94,125,95,22,38,107,65,43,127,53,142,39,136,28,52,134,75,26,135,141,23,128,131,83,89,44,41,15,11,51,74,64,60,12,18,81,110,62,118,46,55,98,92,7,109,8,99,56,66,119,80,54,59,37,34,133,132,29,121,130,120,47,16,140,90,82,123,50,48,77,108,122,103,96,104,71,100,45,67,27,61,32,126,49,30,115,113,63,84,68,36,91,72,138]} 

 Player 2 17:59:48 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[269,277,278,238,261,234,244,264,268,229,270,232,254,259,266,233,230,280,241,273,239,253,245,235,231,243,260,279,265,281,249,248,258,255,267,251,250,271,256,252,275,236,257,274,263,247,237,228,272,246,262,276,240,242]} 

 Player 2 17:59:48 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[221,150,157,182,219,160,220,158,165,199,209,170,201,213,214,177,176,195,222,153,161,208,152,175,194,163,172,154,162,215,218,204,202,174,184,151,188,210,223,206,189,166,198,200,207,146,167,191,185,169,183,225,173,196,171,192,186,148,168,155,224,178,179,205,147,145,203,217,149,187,212,181,211,216,164,190,156,159,197,193,180]} 

 Player 2 17:59:48 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:59:48 $FLIP_CARD:  
{"cardId":180} 

 Player 2 17:59:48 $ADD_STORE_CARD:  
{"cardId":180} 

 Player 2 17:59:48 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:59:48 $FLIP_CARD:  
{"cardId":193} 

 Player 2 17:59:48 $ADD_STORE_CARD:  
{"cardId":193} 

 Player 2 17:59:48 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:59:48 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":242} 

 Player 2 17:59:48 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:59:48 $FLIP_CARD:  
{"cardId":240} 

 Player 2 17:59:49 $REGISTER_PASSIVE_ITEM:  
{"cardId":240} 

 Player 2 17:59:49 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":240} 

 Player 2 17:59:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":240,"monsterPlaceId":1} 

 Player 2 17:59:49 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:59:49 $FLIP_CARD:  
{"cardId":276} 

 Player 2 17:59:49 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":276} 

 Player 2 17:59:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":276,"monsterPlaceId":2} 

 Player 2 17:59:49 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:59:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:59:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:59:49 $MOVE_CARD:  
{"moveIndex":1,"cardId":138,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:59:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:59:49 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":138,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:59:49 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":138} 

 Player 2 17:59:49 $FLIP_CARD:  
{"cardId":138} 

 Player 2 17:59:49 $FLIP_CARD:  
{"cardId":138} 

 Player 2 17:59:49 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":138} 

 Player 2 17:59:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:59:49 $MOVE_CARD:  
{"moveIndex":2,"cardId":72,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:59:50 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":72,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:59:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":72} 

 Player 2 17:59:51 $FLIP_CARD:  
{"cardId":72} 

 Player 2 17:59:51 $FLIP_CARD:  
{"cardId":72} 

 Player 2 17:59:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":72} 

 Player 2 17:59:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:59:51 $MOVE_CARD:  
{"moveIndex":3,"cardId":91,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:59:51 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":91,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:59:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":91} 

 Player 2 17:59:51 $FLIP_CARD:  
{"cardId":91} 

 Player 2 17:59:51 $FLIP_CARD:  
{"cardId":91} 

 Player 2 17:59:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":91} 

 Player 2 17:59:51 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:59:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 17:59:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:59:51 $MOVE_CARD:  
{"moveIndex":4,"cardId":36,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:59:52 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":36,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:59:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":36} 

 Player 2 17:59:52 $FLIP_CARD:  
{"cardId":36} 

 Player 2 17:59:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":36} 

 Player 2 17:59:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:59:52 $MOVE_CARD:  
{"moveIndex":5,"cardId":68,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:59:52 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":68,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:59:52 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":68} 

 Player 2 17:59:52 $FLIP_CARD:  
{"cardId":68} 

 Player 2 17:59:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":68} 

 Player 2 17:59:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:59:52 $MOVE_CARD:  
{"moveIndex":6,"cardId":84,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:59:53 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":84,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:59:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":84} 

 Player 2 17:59:53 $FLIP_CARD:  
{"cardId":84} 

 Player 2 17:59:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":84} 

 Player 2 17:59:53 $GAME_HAS_STARTED:  

 Player 2 17:59:53 $SET_TURN:  
{"playerId":1} 

 Player 2 17:59:53 $START_TURN:  
{"playerId":1} 

 Player 2 17:59:53 $UPDATE_ACTIONS:  

 Player 1 17:59:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:59:53 $NEXT_STACK_ID:  

 Player 1 17:59:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:59:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 17:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:59:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 17:59:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 17:59:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:59:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:59:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 17:59:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:59:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 17:59:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 17:59:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:59:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:59:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 17:59:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:59:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:59:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:59:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:59:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:59:54 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:59:54 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:59:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 17:59:54 $DRAW_CARD:  
{"deckType":1} 

 Player 1 17:59:54 $MOVE_CARD:  
{"moveIndex":7,"cardId":63,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 17:59:54 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":63,"flipIfFlipped":false,"playerId":1} 

 Player 1 17:59:54 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":63} 

 Player 1 17:59:54 $FLIP_CARD:  
{"cardId":63} 

 Player 1 17:59:54 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":63} 

 Player 1 17:59:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 17:59:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 17:59:54 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:59:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:59:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 17:59:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 17:59:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:59:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 17:59:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 17:59:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 17:59:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:59:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:59:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 17:59:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 17:59:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 17:59:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 17:59:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 17:59:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 17:59:55 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:59:56 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 17:59:57 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:00:47 $MOVE_CARD:  
{"moveIndex":8,"cardId":96,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 18:00:48 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 18:00:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":96} 

 Player 1 18:00:51 $SHOW_DECISION:  
{"startCardId":96,"endCardId":96,"flipEndCard":true} 

 Player 1 18:00:54 $NEXT_STACK_ID:  

 Player 1 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 1 18:00:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 1 18:00:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 18:00:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 1 18:00:54 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":96} 

 Player 1 18:00:54 $MOVE_CARD:  
{"moveIndex":9,"cardId":96,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:54 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 18:00:54 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":96} 

 Player 1 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny: AddTrinket"} 

 Player 1 18:00:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:00:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny: AddTrinket"} 

 Player 1 18:00:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":96,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 18:00:54 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 18:00:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 1 18:00:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 18:00:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:00:55 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 18:00:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 18:00:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:00:55 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:00:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:55 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:00:55 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 18:00:55 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 18:00:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 1 18:00:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny: AddTrinket"} 

 Player 1 18:00:55 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 18:00:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":96,"particleType":6} 

 Player 1 18:00:57 $CARD_ADD_TRINKET:  
{"cardId":96,"playerId":1,"addMuiliEffect":false} 

 Player 1 18:00:57 $REMOVE_FROM_PILE:  
{"cardId":96} 

 Player 1 18:00:57 $REGISTER_PASSIVE_ITEM:  
{"cardId":96} 

 Player 1 18:00:57 $MOVE_CARD:  
{"moveIndex":10,"cardId":96,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 18:00:57 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 18:00:57 $ADD_AN_ITEM:  
{"playerId":1,"cardId":96,"isReward":true} 

 Player 1 18:00:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":96}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 18:00:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny: AddTrinket"} 

 Player 1 18:00:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 18:00:57 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 18:00:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:00:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 18:00:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 1 18:00:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:00:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":96,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 18:00:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 1 18:00:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 18:00:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:00:58 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:00:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play Counterfiet Penny "} 

 Player 2 18:00:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 18:00:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 18:00:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 18:00:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 18:00:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 18:00:58 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 18:00:59 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 18:01:00 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 18:02:09 $SHOW_DECISION:  
{"startCardId":284,"endCardId":276} 

 Player 1 18:02:12 $NEXT_STACK_ID:  

 Player 1 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 1 18:02:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 1 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 1 18:02:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 1 18:02:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 1 18:02:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 1 18:02:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 1 18:02:12 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 18:02:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 1 18:02:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 18:02:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:12 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 18:02:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 18:02:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:12 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 18:02:12 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 18:02:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 1 18:02:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":5} 

 Player 1 18:02:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 1 18:02:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 1 18:02:13 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 1 18:02:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 1 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":276,"stackEffectType":4}} 

 Player 1 18:02:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 1 18:02:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 18:02:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Trite"} 

 Player 2 18:02:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:13 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 18:02:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 18:02:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:13 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 18:02:13 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 18:02:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 18:02:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 18:02:14 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 18:02:15 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 18:02:15 $NEXT_STACK_ID:  

 Player 1 18:02:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 1 18:02:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 1 18:02:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 1 18:02:15 $ROLL_DICE:  
{"playerId":1} 

 Player 1 18:02:16 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:02:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:02:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:02:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 1 18:02:17 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 18:02:17 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:17 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 1 18:02:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:20 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 18:02:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 1 18:02:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 18:02:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:20 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 18:02:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 18:02:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:20 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:21 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 18:02:21 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 18:02:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 1 18:02:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 1 18:02:21 $NEXT_STACK_ID:  

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:21 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}]} 

 Player 1 18:02:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 1 vs Trite<Monster>"} 

 Player 1 18:02:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:21 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 1 18:02:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 1 18:02:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 1 18:02:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"numberRolled":1,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 

 Player 1 18:02:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 18:02:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:21 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 18:02:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 18:02:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:22 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 18:02:22 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 18:02:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby"} 

 Player 1 18:02:22 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Trite will deal 1 combat damage to Blue Baby"} 

 Player 1 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby"} 

 Player 1 18:02:22 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":276} 

 Player 1 18:02:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby"} 

 Player 1 18:02:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:22 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 18:02:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:22 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 18:02:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:23 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 1 18:02:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 18:02:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 18:02:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 18:02:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 18:02:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 18:02:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 18:02:23 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 18:02:24 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 18:02:25 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 18:02:27 $NEXT_STACK_ID:  

 Player 1 18:02:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 1 18:02:27 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 1 18:02:27 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 

 Player 1 18:02:27 $ROLL_DICE:  
{"playerId":1} 

 Player 2 18:02:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:02:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 1 18:02:28 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":5} 

 Player 1 18:02:28 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:28 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 1 18:02:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:31 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 18:02:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 

 Player 1 18:02:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 18:02:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:32 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 18:02:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 18:02:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:32 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 18:02:32 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 18:02:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve AttackRoll 6 "}} 

 Player 1 18:02:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 1 18:02:32 $NEXT_STACK_ID:  

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}]} 

 Player 1 18:02:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 rolled 5 vs Trite<Monster>"} 

 Player 1 18:02:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:32 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 18:02:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 1 18:02:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 1 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 1 18:02:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":284,"numberRolled":5,"rollingPlayerCardId":284,"stackEffectType":2,"attackedMonsterCardId":276}} 

 Player 1 18:02:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":52} 

 Player 1 18:02:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 1 18:02:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:33 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 18:02:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 1 18:02:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is rolling against Trite<Monster>"} 

 Player 2 18:02:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:33 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 18:02:33 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 18:02:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve CombatDamage 7 "}} 

 Player 1 18:02:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby"} 

 Player 1 18:02:33 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Trite will deal 1 combat damage to Blue Baby"} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby"} 

 Player 1 18:02:34 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":276} 

 Player 1 18:02:34 $NEXT_STACK_ID:  

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby"} 

 Player 1 18:02:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 18:02:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276}} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 18:02:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 18:02:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 18:02:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276}} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite 1 combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 1 18:02:34 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276}]} 

 Player 1 18:02:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":276}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 18:02:34 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 18:02:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 1 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 18:02:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":284,"entityToDoDamageCardId":276,"entityToTakeDamageCardId":284,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 18:02:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":57} 

 Player 1 18:02:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 1 18:02:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:34 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 18:02:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 1 18:02:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:34 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 2 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Trite combat damage to Blue Baby \n2:Player 1 is about to die"} 

 Player 2 18:02:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:35 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 18:02:35 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 18:02:35 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 18:02:35 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 18:02:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve PlayerDeath 8 "}} 

 Player 1 18:02:35 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":5} 

 Player 1 18:02:35 $CANCEL_ATTACK:  

 Player 1 18:02:35 $NEXT_STACK_ID:  

 Player 1 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 18:02:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:02:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:02:35 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276}} 

 Player 1 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:02:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276}} 

 Player 1 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:02:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:02:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:02:35 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276},{"entityId":9,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}]} 

 Player 1 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 18:02:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276}} 

 Player 1 18:02:36 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 18:02:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276}} 

 Player 1 18:02:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve PlayerDeath 8  "}} 

 Player 1 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 18:02:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":284,"playerToDieCardId":284,"stackEffectType":15,"killerId":276}} 

 Player 1 18:02:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve PlayerDeath 8"},"childOfId":62} 

 Player 1 18:02:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 1 18:02:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:02:36 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 18:02:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 1 18:02:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:02:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 18:02:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:02:36 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 18:02:36 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 18:02:36 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 18:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve PlayerDeathPenalties 9 "}} 

 Player 1 18:02:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Player 1 pays Penalties"}} 

 Player 1 18:02:37 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 18:02:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 1 18:02:38 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 18:03:18 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":63} 

 Player 1 18:03:18 $MOVE_CARD:  
{"moveIndex":11,"cardId":63,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 18:03:18 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":63,"flipIfFlipped":true,"playerId":1} 

 Player 1 18:03:18 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":63} 

 Player 1 18:03:21 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":96} 

 Player 1 18:03:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":96}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 1 18:03:21 $MOVE_CARD:  
{"moveIndex":12,"cardId":96,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 18:03:21 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":96,"flipIfFlipped":true,"playerId":1} 

 Player 1 18:03:21 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":96} 

 Player 1 18:03:21 $USE_ITEM:  
{"cardId":284} 

 Player 1 18:03:21 $USE_ITEM:  
{"cardId":285} 

 Player 1 18:03:21 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 18:03:21 $PLAYER_DIED:  
{"playerId":1} 

 Player 1 18:03:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 18:03:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 18:03:21 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 18:03:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:03:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 18:03:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve PlayerDeathPenalties 9  "}} 

 Player 1 18:03:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:03:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":284,"playerToPayCardId":284,"stackEffectType":16}} 

 Player 1 18:03:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve PlayerDeathPenalties 9"},"childOfId":68} 

 Player 1 18:03:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 1 18:03:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:03:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:03:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:03:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:03:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:03:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:03:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:03:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 18:03:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 18:03:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 1 18:03:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 18:03:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Stack Was Emptied "}} 

 Player 1 18:03:22 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 18:03:22 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 18:03:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:03:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 18:03:23 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 18:03:24 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 18:03:24 $END_TURN:  

 Player 1 18:03:24 $SET_TURN:  
{"playerId":2} 

 Player 1 18:03:24 $START_TURN:  
{"playerId":2} 

 Player 1 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 18:03:24 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 18:03:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:03:24 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 18:03:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:03:25 $NEXT_STACK_ID:  

 Player 2 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:03:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:03:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 18:03:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Add StartTurnLoot 10 "}} 

 Player 2 18:03:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:03:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 18:03:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Adding StartTurnLoot 10"},"childOfId":73} 

 Player 2 18:03:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 2 18:03:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 18:03:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 2 18:03:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:03:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 18:03:25 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 18:03:25 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 18:03:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Resolve StartTurnLoot 10 "}} 

 Player 2 18:03:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:03:26 $MOVE_CARD:  
{"moveIndex":13,"cardId":113,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:03:26 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":113,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:03:26 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":113} 

 Player 2 18:03:26 $FLIP_CARD:  
{"cardId":113} 

 Player 2 18:03:26 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":113} 

 Player 2 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:03:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 18:03:26 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:03:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 18:03:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Remove After Resolve StartTurnLoot 10  "}} 

 Player 2 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:03:26 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 18:03:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Remove After Resolve StartTurnLoot 10"},"childOfId":78} 

 Player 2 18:03:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 2 18:03:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:03:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:03:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:03:26 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 18:03:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 2 18:03:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 18:03:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Stack Was Emptied "}} 

 Player 2 18:03:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 18:03:27 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 18:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 18:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 18:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 18:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 18:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 18:03:28 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 18:03:29 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 19:14:25 $MATCH: 