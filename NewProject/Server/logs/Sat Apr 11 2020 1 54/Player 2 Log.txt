Start Log 
 Player 2 01:54:24 $START_GAME:  
 Player 2 01:54:24 $MOVE_TO_TABLE:  
 Player 2 01:54:32 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 01:54:32 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":309,"itemCardId":310} 
 Player 2 01:54:32 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":325,"itemCardId":326} 
 Player 2 01:54:32 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[15,59,99,104,93,21,118,28,111,122,98,95,86,33,25,138,48,92,83,97,124,6,39,11,80,123,125,24,109,114,101,12,47,96,51,137,32,76,19,52,58,132,105,106,73,70,18,54,120,82,53,117,91,62,14,69,107,85,63,84,79,77,29,71,4,102,115,119,45,130,38,17,133,34,44,35,49,46,55,110,65,78,5,67,126,94,103,50,127,116,41,139,74,16,57,31,87,26,113,135,43,10,23,81,42,9,112,66,100,131,88,134,75,128,13,72,30,56,136,61,129,20,37,89,7,36,64,121,8,40,90,108,27,68,22,60]} 
 Player 2 01:54:32 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[256,274,279,228,275,259,224,245,301,252,237,227,287,267,282,290,296,284,300,244,235,291,247,258,240,270,272,264,255,288,251,246,280,292,231,223,297,265,276,222,269,230,305,302,260,248,243,241,286,238,306,278,299,307,225,281,289,303,263,283,262,268,249,226,271,285,236,293,239,261,273,233,253,298,242,295,304,250,257,232,308,294,266,254,277,234,229]} 
 Player 2 01:54:32 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[194,166,146,184,185,147,202,182,206,169,204,201,187,207,161,219,183,209,199,177,190,205,168,178,220,167,197,214,179,150,192,180,155,200,148,145,160,142,195,176,163,218,141,174,156,171,211,175,157,189,170,198,193,213,162,191,153,159,181,186,149,152,212,165,154,203,215,158,196,144,172,151,143,216,208,188,173,210,217,164]} 
 Player 2 01:54:32 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:54:32 $FLIP_CARD:  

 {"cardId":164} 
 Player 2 01:54:32 $ADD_STORE_CARD:  

 {"cardId":164} 
 Player 2 01:54:32 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:54:32 $FLIP_CARD:  

 {"cardId":217} 
 Player 2 01:54:32 $ADD_STORE_CARD:  

 {"cardId":217} 
 Player 2 01:54:32 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:54:32 $FLIP_CARD:  

 {"cardId":229} 
 Player 2 01:54:32 $REGISTER_PASSIVE_ITEM:  

 {"cardId":229} 
 Player 2 01:54:32 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":229} 
 Player 2 01:54:32 $NEW_MONSTER_ON_PLACE:  

 {"cardId":229,"monsterPlaceId":1} 
 Player 2 01:54:32 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:54:32 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":234} 
 Player 2 01:54:32 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:54:32 $FLIP_CARD:  

 {"cardId":277} 
 Player 2 01:54:32 $REGISTER_PASSIVE_ITEM:  

 {"cardId":277} 
 Player 2 01:54:32 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":277} 
 Player 2 01:54:32 $NEW_MONSTER_ON_PLACE:  

 {"cardId":277,"monsterPlaceId":2} 
 Player 2 01:54:32 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 01:54:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":309,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 01:54:32 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:32 $MOVE_CARD:  

 {"moveIndex":1,"cardId":60,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:33 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":60} 
 Player 2 01:54:33 $FLIP_CARD:  

 {"cardId":60} 
 Player 2 01:54:33 $FLIP_CARD:  

 {"cardId":60} 
 Player 2 01:54:33 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":60} 
 Player 2 01:54:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:33 $MOVE_CARD:  

 {"moveIndex":2,"cardId":22,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:33 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":22} 
 Player 2 01:54:33 $FLIP_CARD:  

 {"cardId":22} 
 Player 2 01:54:33 $FLIP_CARD:  

 {"cardId":22} 
 Player 2 01:54:34 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":22} 
 Player 2 01:54:34 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:34 $MOVE_CARD:  

 {"moveIndex":3,"cardId":68,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:34 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":68} 
 Player 2 01:54:34 $FLIP_CARD:  

 {"cardId":68} 
 Player 2 01:54:34 $FLIP_CARD:  

 {"cardId":68} 
 Player 2 01:54:34 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":68} 
 Player 2 01:54:34 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 01:54:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 01:54:34 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:34 $MOVE_CARD:  

 {"moveIndex":4,"cardId":27,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:35 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":27} 
 Player 2 01:54:35 $FLIP_CARD:  

 {"cardId":27} 
 Player 2 01:54:35 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":27} 
 Player 2 01:54:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:35 $MOVE_CARD:  

 {"moveIndex":5,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:35 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":108} 
 Player 2 01:54:35 $FLIP_CARD:  

 {"cardId":108} 
 Player 2 01:54:35 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":108} 
 Player 2 01:54:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:54:35 $MOVE_CARD:  

 {"moveIndex":6,"cardId":90,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:54:36 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":90} 
 Player 2 01:54:36 $FLIP_CARD:  

 {"cardId":90} 
 Player 2 01:54:36 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":90} 
 Player 2 01:54:36 $GAME_HAS_STARTED:  
 Player 2 01:54:36 $SET_TURN:  

 {"playerId":1} 
 Player 2 01:54:36 $START_TURN:  

 {"playerId":1} 
 Player 2 01:54:36 $UPDATE_ACTIONS:  
 Player 2 01:54:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:54:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:54:39 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 01:54:39 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:54:40 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":40,"flipIfFlipped":false,"playerId":1} 
 Player 2 01:54:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:54:43 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 01:54:43 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:55:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:55:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3) "} 
 Player 2 01:55:12 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":60,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:55:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3) "} 
 Player 2 01:55:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3) "} 
 Player 2 01:55:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 
 Player 2 01:55:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 
 Player 2 01:55:44 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 01:55:46 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":true} 
 Player 2 01:55:46 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 01:55:46 $NEXT_STACK_ID:  
 Player 2 01:55:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 
 Player 2 01:55:46 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 01:55:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 01:55:46 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:55:46 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 01:55:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Add ActivateItem 4 "}} 
 Player 2 01:55:51 $SHOW_DECISION:  

 {"startCardId":325,"endCardId":27,"flipEndCard":true} 
 Player 2 01:55:51 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 01:55:51 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Player 2 01:55:54 $USE_ITEM:  

 {"cardId":325} 
 Player 2 01:55:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 
 Player 2 01:55:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:55:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Response Adding ActivateItem 4"},"childOfId":17} 
 Player 2 01:55:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Wait For Response From Player 1 "},"childOfId":17} 
 Player 2 01:55:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:55:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:55:58 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 01:55:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Wait For Response From Player 2 "},"childOfId":17} 
 Player 2 01:55:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:55:58 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 01:55:58 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 01:55:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Resolve ActivateItem 4 "}} 
 Player 2 01:55:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 
 Player 2 01:55:58 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:55:58 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":325,"particleType":6} 
 Player 2 01:56:00 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":325,"particleType":6} 
 Player 2 01:56:00 $NEXT_STACK_ID:  
 Player 2 01:56:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 activated The Lost"} 
 Player 2 01:56:00 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":27} 
 Player 2 01:56:00 $MOVE_CARD:  

 {"moveIndex":9,"cardId":27,"placeID":327,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:56:00 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":27} 
 Player 2 01:56:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney \n4:Player 2 activated The Lost"} 
 Player 2 01:56:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:56:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:00 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:56:00 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 2 01:56:03 $CLEAR_SE_VIS:  
 Player 2 01:56:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney \n4:Player 2 activated The Lost"} 
 Player 2 01:56:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:56:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:56:03 $REPLACE_STACK:  

 {"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 01:56:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":325}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 01:56:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:56:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 2 01:56:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:56:03 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 01:56:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 2 01:56:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Remove After Resolve ActivateItem 4  "}} 
 Player 2 01:56:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney"} 
 Player 2 01:56:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":325,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:56:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":22} 
 Player 2 01:56:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Wait For Response From Player 1 "},"childOfId":22} 
 Player 2 01:56:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:56:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:56:06 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 01:56:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Wait For Response From Player 2 "},"childOfId":22} 
 Player 2 01:56:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:56:07 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 01:56:07 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 01:56:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Resolve PlayLootCardStackEffect 5 "}} 
 Player 2 01:56:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney"} 
 Player 2 01:56:07 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":27,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:07 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":27,"particleType":6} 
 Player 2 01:56:08 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":27,"particleType":6} 
 Player 2 01:56:08 $SET_MONEY:  

 {"playerId":2,"numOfCoins":5} 
 Player 2 01:56:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 01:56:09 $REMOVE_FROM_PILE:  

 {"cardId":27} 
 Player 2 01:56:09 $MOVE_CARD:  

 {"moveIndex":10,"cardId":27,"placeID":328,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:56:09 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":27} 
 Player 2 01:56:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel \n3:Player 2 play 2 Cents(10): addMoney"} 
 Player 2 01:56:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:09 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 2 01:56:09 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:56:09 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 2 01:56:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Remove After Resolve PlayLootCardStackEffect 5  "}} 
 Player 2 01:56:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 
 Player 2 01:56:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":27,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Response Remove After Resolve PlayLootCardStackEffect 5"},"childOfId":27} 
 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":27} 
 Player 2 01:56:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:56:12 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Wait For Response From Player 1 "},"childOfId":27} 
 Player 2 01:56:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:56:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:56:12 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 01:56:12 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 01:56:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Resolve ActivateItem 3 "}} 
 Player 2 01:56:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 
 Player 2 01:56:12 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 01:56:15 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":68,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:56:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 
 Player 2 01:56:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 activated Azazel"} 
 Player 2 01:56:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11)  \n3:Player 1 activated Azazel"} 
 Player 2 01:56:19 $CLEAR_SE_VIS:  
 Player 2 01:56:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:56:19 $REPLACE_STACK:  

 {"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 01:56:19 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:56:19 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 01:56:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 2 01:56:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11) "} 
 Player 2 01:56:22 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":309,"hasLockingStackEffect":false,"itemToPlayCardId":309,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":32} 
 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":32} 
 Player 2 01:56:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:56:22 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:56:22 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Wait For Response From Player 2 "},"childOfId":32} 
 Player 2 01:56:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:56:22 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 01:56:22 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 01:56:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Resolve PlayLootCardStackEffect 6 "}} 
 Player 2 01:56:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11) "} 
 Player 2 01:56:22 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":68,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Player 2 01:56:25 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":68,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:56:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3)  \n2:Player 1 play 4 Cents(11) "} 
 Player 2 01:56:25 $CLEAR_SE_VIS:  
 Player 2 01:56:25 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:25 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:25 $REPLACE_STACK:  

 {"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Player 2 01:56:25 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:56:25 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 2 01:56:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":6} 
 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Remove After Resolve PlayLootCardStackEffect 6  "}} 
 Player 2 01:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3) "} 
 Player 2 01:56:28 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":68,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Response Remove After Resolve PlayLootCardStackEffect 6"},"childOfId":37} 
 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":37} 
 Player 2 01:56:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:56:28 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Wait For Response From Player 1 "},"childOfId":37} 
 Player 2 01:56:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:56:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:56:28 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 01:56:28 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 01:56:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 01:56:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3) "} 
 Player 2 01:56:28 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":60,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Player 2 01:56:31 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":60,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:56:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 4 Cents(3) "} 
 Player 2 01:56:31 $CLEAR_SE_VIS:  
 Player 2 01:56:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:31 $REPLACE_STACK:  

 {"currentStack":[{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Player 2 01:56:31 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:56:31 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 01:56:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 2 01:56:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 01:56:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:56:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":309,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":60,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:56:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":42} 
 Player 2 01:56:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":42} 
 Player 2 01:56:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:56:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:56:34 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 01:56:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Wait For Response From Player 2 "},"childOfId":42} 
 Player 2 01:56:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:56:35 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 01:56:35 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 01:56:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Stack Was Emptied "}} 
 Player 2 01:56:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:56:35 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":1} 
 Player 2 01:56:35 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 01:56:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:56:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 
 Player 2 01:56:55 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:56:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:56:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 
 Player 2 01:56:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 
 Player 2 01:56:59 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":164,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:57:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Refill Store slot"} 
 Player 2 01:57:02 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:57:02 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 
 Player 2 01:57:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 
 Player 2 01:57:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:57:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 
 Player 2 01:57:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1  declared attack on Hopper"} 
 Player 2 01:57:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1  declared attack on Hopper"} 
 Player 2 01:57:29 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:57:29 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1  declared attack on Hopper"} 
 Player 2 01:57:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1  declared attack on Hopper"} 
 Player 2 01:57:33 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:57:33 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10"} 
 Player 2 01:57:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:57:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:57:43 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:57:43 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:57:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:57:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to buy Fanny Pack for 10 \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:57:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:57:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:57:49 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:57:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel"} 
 Player 2 01:57:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 
 Player 2 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 
 Player 2 01:57:53 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:57:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 
 Player 2 01:57:55 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":8,"flipIfFlipped":false,"playerId":1} 
 Player 2 01:57:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 
 Player 2 01:57:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel \n2:Activate Fanny Pack "} 
 Player 2 01:57:59 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:57:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:57:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel"} 
 Player 2 01:58:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Hopper combat damage to Azazel"} 
 Player 2 01:58:02 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:58:02 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:23 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:58:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:32 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:58:32 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:58:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper"} 
 Player 2 01:58:36 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:58:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:58:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:54 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:58:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:58:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:58:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:59:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper \n2:Player 1 is rolling against Hopper<Monster>"} 
 Player 2 01:59:01 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:59:01 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper"} 
 Player 2 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper"} 
 Player 2 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper \n2:[object Object] killed by Azazel"} 
 Player 2 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper \n2:[object Object] killed by Azazel"} 
 Player 2 01:59:07 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:59:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper"} 
 Player 2 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper"} 
 Player 2 01:59:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Hopper"} 
 Player 2 01:59:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Hopper<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get Hopper<Monster> reward \n2:[object Object] killed by Azazel"} 
 Player 2 01:59:14 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:59:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:14 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 01:59:15 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":277,"flipIfFlipped":true,"playerId":1} 
 Player 2 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 01:59:18 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:59:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 01:59:22 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[326]} 
 Player 2 01:59:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:28 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 01:59:28 $RECHARGE_ITEM:  

 {"cardId":325} 
 Player 2 01:59:28 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":325} 
 Player 2 01:59:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:28 $NEXT_STACK_ID:  
 Player 2 01:59:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:59:28 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 01:59:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 01:59:28 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 01:59:28 $SHOW_STACK_EFFECT:  

 {"effectId":20} 
 Player 2 01:59:29 $CLEAR_SE_VIS:  
 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":147,"_text":"Add StartTurnLoot 20 "}} 
 Player 2 01:59:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":148,"_text":"Response Adding StartTurnLoot 20"},"childOfId":147} 
 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":147} 
 Player 2 01:59:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:31 $ACTION_MASSAGE_REMOVE:  

 {"id":149} 
 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":150,"_text":"Wait For Response From Player 1 "},"childOfId":147} 
 Player 2 01:59:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:32 $ACTION_MASSAGE_REMOVE:  

 {"id":150} 
 Player 2 01:59:32 $ACTION_MASSAGE_REMOVE:  

 {"id":148} 
 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":151,"_text":"Resolve StartTurnLoot 20 "}} 
 Player 2 01:59:32 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 01:59:32 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:59:32 $MOVE_CARD:  

 {"moveIndex":17,"cardId":121,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:59:32 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":121} 
 Player 2 01:59:32 $FLIP_CARD:  

 {"cardId":121} 
 Player 2 01:59:32 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":121} 
 Player 2 01:59:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 01:59:32 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":20} 
 Player 2 01:59:32 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 01:59:32 $SHOW_STACK_EFFECT:  

 {"effectId":20} 
 Player 2 01:59:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":20} 
 Player 2 01:59:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":152,"_text":"Remove After Resolve StartTurnLoot 20  "}} 
 Player 2 01:59:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 01:59:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":153,"_text":"Response Remove After Resolve StartTurnLoot 20"},"childOfId":152} 
 Player 2 01:59:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":154,"_text":"Wait For Response From Player 1 "},"childOfId":152} 
 Player 2 01:59:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:36 $ACTION_MASSAGE_REMOVE:  

 {"id":154} 
 Player 2 01:59:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":155,"_text":"Wait For Response From Player 2 "},"childOfId":152} 
 Player 2 01:59:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:36 $ACTION_MASSAGE_REMOVE:  

 {"id":155} 
 Player 2 01:59:36 $ACTION_MASSAGE_REMOVE:  

 {"id":153} 
 Player 2 01:59:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":156,"_text":"Stack Was Emptied "}} 
 Player 2 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:36 $CLEAR_SE_VIS:  
 Player 2 02:01:04 $NEXT_STACK_ID:  
 Player 2 02:01:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Boom Fly"} 
 Player 2 02:01:04 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 02:01:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 02:01:04 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:01:04 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Player 2 02:01:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":157,"_text":"Add DeclareAttack 21 "}} 
 Player 2 02:01:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 02:01:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":158,"_text":"Response Adding DeclareAttack 21"},"childOfId":157} 
 Player 2 02:01:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":159,"_text":"Wait For Response From Player 2 "},"childOfId":157} 
 Player 2 02:01:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:07 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,108,90,121]} 
 Player 2 02:01:11 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,108,90,121]} 
 Player 2 02:01:11 $ACTION_MASSAGE_REMOVE:  

 {"id":159} 
 Player 2 02:01:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":160,"_text":"Wait For Response From Player 1 "},"childOfId":157} 
 Player 2 02:01:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":160} 
 Player 2 02:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":158} 
 Player 2 02:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":161,"_text":"Resolve DeclareAttack 21 "}} 
 Player 2 02:01:13 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 02:01:13 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":229,"particleType":5} 
 Player 2 02:01:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":21},"isAfterActivation":true,"index":5} 
 Player 2 02:01:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 02:01:13 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":21} 
 Player 2 02:01:13 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:01:13 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Player 2 02:01:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":21} 
 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":162,"_text":"Remove After Resolve DeclareAttack 21  "}} 
 Player 2 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":21,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":229,"stackEffectType":4}} 
 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":163,"_text":"Response Remove After Resolve DeclareAttack 21"},"childOfId":162} 
 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":164,"_text":"Wait For Response From Player 1 "},"childOfId":162} 
 Player 2 02:01:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":164} 
 Player 2 02:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":165,"_text":"Wait For Response From Player 2 "},"childOfId":162} 
 Player 2 02:01:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":165} 
 Player 2 02:01:39 $ACTION_MASSAGE_REMOVE:  

 {"id":163} 
 Player 2 02:01:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":166,"_text":"Stack Was Emptied "}} 
 Player 2 02:01:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:39 $CLEAR_SE_VIS:  
 Player 2 02:01:47 $NEXT_STACK_ID:  
 Player 2 02:01:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Boom Fly<Monster>"} 
 Player 2 02:01:47 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 02:01:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 02:01:47 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:01:47 $SHOW_STACK_EFFECT:  

 {"effectId":22} 
 Player 2 02:01:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":167,"_text":"Add AttackRoll 22 "}} 
 Player 2 02:01:50 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:01:52 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 02:01:52 $UPDATE_STACK_VIS:  

 {"stackId":22,"text":"player rolled 1 vs Boom Fly<Monster>"} 
 Player 2 02:01:52 $SHOW_DICE_ROLL:  

 {"stackId":22} 
 Player 2 02:01:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster>"} 
 Player 2 02:01:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 02:01:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":168,"_text":"Response Adding AttackRoll 22"},"childOfId":167} 
 Player 2 02:01:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":169,"_text":"Wait For Response From Player 2 "},"childOfId":167} 
 Player 2 02:01:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:55 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,108,90,121]} 
 Player 2 02:01:59 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,108,90,121]} 
 Player 2 02:01:59 $NEXT_STACK_ID:  
 Player 2 02:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster>"} 
 Player 2 02:01:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 02:01:59 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:01:59 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:01:59 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:01:59 $SHOW_STACK_EFFECT:  

 {"effectId":23} 
 Player 2 02:02:01 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,108,90,121]} 
 Player 2 02:02:01 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Player 2 02:02:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":170,"_text":"Add ActivateItem 23 "}} 
 Player 2 02:02:05 $SHOW_DECISION:  

 {"startCardId":326,"endCardId":325} 
 Player 2 02:02:08 $USE_ITEM:  

 {"cardId":326} 
 Player 2 02:02:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 02:02:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:02:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":171,"_text":"Response Adding ActivateItem 23"},"childOfId":170} 
 Player 2 02:02:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":172,"_text":"Wait For Response From Player 2 "},"childOfId":170} 
 Player 2 02:02:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:08 $ACTION_MASSAGE_REMOVE:  

 {"id":172} 
 Player 2 02:02:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":173,"_text":"Wait For Response From Player 1 "},"childOfId":170} 
 Player 2 02:02:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:09 $ACTION_MASSAGE_REMOVE:  

 {"id":173} 
 Player 2 02:02:09 $ACTION_MASSAGE_REMOVE:  

 {"id":171} 
 Player 2 02:02:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":174,"_text":"Resolve ActivateItem 23 "}} 
 Player 2 02:02:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 02:02:09 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:02:09 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:02:11 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:02:11 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  

 {"cardId":326,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":326,"effectCardOwner":325,"effectCardPlayer":325}]} 
 Player 2 02:02:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":326}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 02:02:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster> \n2:Player 2 activated HolyMantle"} 
 Player 2 02:02:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:02:11 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":23} 
 Player 2 02:02:11 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:02:11 $SHOW_STACK_EFFECT:  

 {"effectId":23} 
 Player 2 02:02:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":23} 
 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":175,"_text":"Remove After Resolve ActivateItem 23  "}} 
 Player 2 02:02:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster>"} 
 Player 2 02:02:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":23,"creatorCardId":325,"hasLockingStackEffect":false,"itemToPlayCardId":326,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":176,"_text":"Response Remove After Resolve ActivateItem 23"},"childOfId":175} 
 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":177,"_text":"Wait For Response From Player 1 "},"childOfId":175} 
 Player 2 02:02:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:14 $ACTION_MASSAGE_REMOVE:  

 {"id":177} 
 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":178,"_text":"Wait For Response From Player 2 "},"childOfId":175} 
 Player 2 02:02:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:14 $ACTION_MASSAGE_REMOVE:  

 {"id":178} 
 Player 2 02:02:14 $ACTION_MASSAGE_REMOVE:  

 {"id":176} 
 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":179,"_text":"Resolve AttackRoll 22 "}} 
 Player 2 02:02:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Boom Fly<Monster>"} 
 Player 2 02:02:14 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 02:02:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":180,"_text":"Added 0 to original roll"}} 
 Player 2 02:02:14 $NEXT_STACK_ID:  
 Player 2 02:02:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Player 2 rolled 1 vs Boom Fly<Monster>"} 
 Player 2 02:02:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 02:02:14 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:02:14 $SHOW_STACK_EFFECT:  

 {"effectId":24} 
 Player 2 02:02:17 $CLEAR_SE_VIS:  
 Player 2 02:02:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Boom Fly combat damage to The Lost \n2:Player 2 rolled 1 vs Boom Fly<Monster>"} 
 Player 2 02:02:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 02:02:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 02:02:17 $REPLACE_STACK:  

 {"currentStack":[{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}]} 
 Player 2 02:02:17 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":22},"isAfterActivation":true,"index":7} 
 Player 2 02:02:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 02:02:17 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":22} 
 Player 2 02:02:17 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:02:17 $SHOW_STACK_EFFECT:  

 {"effectId":22} 
 Player 2 02:02:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":22} 
 Player 2 02:02:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":181,"_text":"Remove After Resolve AttackRoll 22  "}} 
 Player 2 02:02:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Boom Fly combat damage to The Lost"} 
 Player 2 02:02:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":22,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":229}} 
 Player 2 02:02:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":182,"_text":"Response Remove After Resolve AttackRoll 22"},"childOfId":181} 
 Player 2 02:02:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":183,"_text":"Wait For Response From Player 2 "},"childOfId":181} 
 Player 2 02:02:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:20 $ACTION_MASSAGE_REMOVE:  

 {"id":183} 
 Player 2 02:02:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":184,"_text":"Wait For Response From Player 1 "},"childOfId":181} 
 Player 2 02:02:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:20 $ACTION_MASSAGE_REMOVE:  

 {"id":184} 
 Player 2 02:02:20 $ACTION_MASSAGE_REMOVE:  

 {"id":182} 
 Player 2 02:02:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":185,"_text":"Resolve CombatDamage 24 "}} 
 Player 2 02:02:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Boom Fly combat damage to The Lost"} 
 Player 2 02:02:21 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 02:02:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Boom Fly 1 combat damage to The Lost"} 
 Player 2 02:02:21 $UPDATE_STACK_VIS:  

 {"stackId":24,"text":"Boom Fly will deal 1 combat damage to The Lost"} 
 Player 2 02:02:21 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":229} 
 Player 2 02:02:21 $NEXT_STACK_ID:  
 Player 2 02:02:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Boom Fly 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 02:02:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:02:21 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:02:21 $SHOW_STACK_EFFECT:  

 {"effectId":25} 
 Player 2 02:02:23 $CLEAR_SE_VIS:  
 Player 2 02:02:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Boom Fly 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 02:02:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 02:02:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:02:24 $REPLACE_STACK:  

 {"currentStack":[{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}]} 
 Player 2 02:02:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 2 02:02:24 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":229}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":9,"originStackId":24},"isAfterActivation":true,"index":9} 
 Player 2 02:02:24 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":24} 
 Player 2 02:02:24 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:02:24 $SHOW_STACK_EFFECT:  

 {"effectId":24} 
 Player 2 02:02:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":24} 
 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":186,"_text":"Remove After Resolve CombatDamage 24  "}} 
 Player 2 02:02:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:02:27 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":24,"creatorCardId":325,"entityToDoDamageCardId":229,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":187,"_text":"Response Remove After Resolve CombatDamage 24"},"childOfId":186} 
 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":188,"_text":"Wait For Response From Player 2 "},"childOfId":186} 
 Player 2 02:02:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:27 $ACTION_MASSAGE_REMOVE:  

 {"id":188} 
 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":189,"_text":"Wait For Response From Player 1 "},"childOfId":186} 
 Player 2 02:02:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:27 $ACTION_MASSAGE_REMOVE:  

 {"id":189} 
 Player 2 02:02:27 $ACTION_MASSAGE_REMOVE:  

 {"id":187} 
 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":190,"_text":"Resolve PlayerDeath 25 "}} 
 Player 2 02:02:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:02:27 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:02:27 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":229,"particleType":5} 
 Player 2 02:02:27 $CANCEL_ATTACK:  
 Player 2 02:02:27 $NEXT_STACK_ID:  
 Player 2 02:02:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":1,"originStackId":26},"isAfterActivation":false,"index":1} 
 Player 2 02:02:27 $NEXT_STACK_ID:  
 Player 2 02:02:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 02:02:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:27 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:27 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:02:27 $SHOW_STACK_EFFECT:  

 {"effectId":27} 
 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":191,"_text":"Add ActivatePassiveEffect 27 "}} 
 Player 2 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":192,"_text":"Response Adding ActivatePassiveEffect 27"},"childOfId":191} 
 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":193,"_text":"Wait For Response From Player 1 "},"childOfId":191} 
 Player 2 02:02:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  

 {"id":193} 
 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":194,"_text":"Wait For Response From Player 2 "},"childOfId":191} 
 Player 2 02:02:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  

 {"id":194} 
 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  

 {"id":192} 
 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":195,"_text":"Resolve ActivatePassiveEffect 27 "}} 
 Player 2 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:30 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:30 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:02:32 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:02:32 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":26} 
 Player 2 02:02:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":26} 
 Player 2 02:02:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":196,"_text":"Fizzle PlayerDeathPenalties 26"}} 
 Player 2 02:02:32 $FIZZLE_STACK_EFFECT:  

 {"entityId":26} 
 Player 2 02:02:32 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1,"healDown":true} 
 Player 2 02:02:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":1,"originStackId":26},"isAfterActivation":false,"index":1} 
 Player 2 02:02:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:32 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":27} 
 Player 2 02:02:33 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:02:33 $SHOW_STACK_EFFECT:  

 {"effectId":27} 
 Player 2 02:02:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":27} 
 Player 2 02:02:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":197,"_text":"Remove After Resolve ActivatePassiveEffect 27  "}} 
 Player 2 02:02:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:02:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":27,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":198,"_text":"Response Remove After Resolve ActivatePassiveEffect 27"},"childOfId":197} 
 Player 2 02:02:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":199,"_text":"Wait For Response From Player 2 "},"childOfId":197} 
 Player 2 02:02:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:35 $ACTION_MASSAGE_REMOVE:  

 {"id":199} 
 Player 2 02:02:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":200,"_text":"Wait For Response From Player 1 "},"childOfId":197} 
 Player 2 02:02:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:36 $ACTION_MASSAGE_REMOVE:  

 {"id":200} 
 Player 2 02:02:36 $ACTION_MASSAGE_REMOVE:  

 {"id":198} 
 Player 2 02:02:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":201,"_text":"Resolve PlayerDeath 25 "}} 
 Player 2 02:02:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:02:36 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:02:36 $NEXT_STACK_ID:  
 Player 2 02:02:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":28},"isAfterActivation":false,"index":2} 
 Player 2 02:02:36 $NEXT_STACK_ID:  
 Player 2 02:02:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 02:02:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:36 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:36 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:02:36 $SHOW_STACK_EFFECT:  

 {"effectId":29} 
 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":202,"_text":"Add ActivatePassiveEffect 29 "}} 
 Player 2 02:02:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":203,"_text":"Response Adding ActivatePassiveEffect 29"},"childOfId":202} 
 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":204,"_text":"Wait For Response From Player 1 "},"childOfId":202} 
 Player 2 02:02:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:39 $ACTION_MASSAGE_REMOVE:  

 {"id":204} 
 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":205,"_text":"Wait For Response From Player 2 "},"childOfId":202} 
 Player 2 02:02:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:39 $ACTION_MASSAGE_REMOVE:  

 {"id":205} 
 Player 2 02:02:39 $ACTION_MASSAGE_REMOVE:  

 {"id":203} 
 Player 2 02:02:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":206,"_text":"Resolve ActivatePassiveEffect 29 "}} 
 Player 2 02:02:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:39 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:39 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:02:41 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:02:41 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":28} 
 Player 2 02:02:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":28} 
 Player 2 02:02:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":207,"_text":"Fizzle PlayerDeathPenalties 28"}} 
 Player 2 02:02:41 $FIZZLE_STACK_EFFECT:  

 {"entityId":28} 
 Player 2 02:02:41 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1,"healDown":true} 
 Player 2 02:02:41 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":28},"isAfterActivation":false,"index":2} 
 Player 2 02:02:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:41 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:41 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":29} 
 Player 2 02:02:41 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:02:41 $SHOW_STACK_EFFECT:  

 {"effectId":29} 
 Player 2 02:02:44 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":29} 
 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":208,"_text":"Remove After Resolve ActivatePassiveEffect 29  "}} 
 Player 2 02:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:02:44 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":29,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":209,"_text":"Response Remove After Resolve ActivatePassiveEffect 29"},"childOfId":208} 
 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":210,"_text":"Wait For Response From Player 2 "},"childOfId":208} 
 Player 2 02:02:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:44 $ACTION_MASSAGE_REMOVE:  

 {"id":210} 
 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":211,"_text":"Wait For Response From Player 1 "},"childOfId":208} 
 Player 2 02:02:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:44 $ACTION_MASSAGE_REMOVE:  

 {"id":211} 
 Player 2 02:02:44 $ACTION_MASSAGE_REMOVE:  

 {"id":209} 
 Player 2 02:02:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":212,"_text":"Resolve PlayerDeath 25 "}} 
 Player 2 02:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:02:44 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:02:44 $NEXT_STACK_ID:  
 Player 2 02:02:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":30},"isAfterActivation":false,"index":3} 
 Player 2 02:02:44 $NEXT_STACK_ID:  
 Player 2 02:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 02:02:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:45 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:45 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:02:45 $SHOW_STACK_EFFECT:  

 {"effectId":31} 
 Player 2 02:02:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":213,"_text":"Add ActivatePassiveEffect 31 "}} 
 Player 2 02:02:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":214,"_text":"Response Adding ActivatePassiveEffect 31"},"childOfId":213} 
 Player 2 02:02:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":215,"_text":"Wait For Response From Player 1 "},"childOfId":213} 
 Player 2 02:02:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:48 $ACTION_MASSAGE_REMOVE:  

 {"id":215} 
 Player 2 02:02:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":216,"_text":"Wait For Response From Player 2 "},"childOfId":213} 
 Player 2 02:02:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:48 $ACTION_MASSAGE_REMOVE:  

 {"id":216} 
 Player 2 02:02:48 $ACTION_MASSAGE_REMOVE:  

 {"id":214} 
 Player 2 02:02:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":217,"_text":"Resolve ActivatePassiveEffect 31 "}} 
 Player 2 02:02:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:48 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:48 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:02:50 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:02:50 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":30} 
 Player 2 02:02:50 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":30} 
 Player 2 02:02:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":218,"_text":"Fizzle PlayerDeathPenalties 30"}} 
 Player 2 02:02:50 $FIZZLE_STACK_EFFECT:  

 {"entityId":30} 
 Player 2 02:02:50 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1,"healDown":true} 
 Player 2 02:02:50 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":30},"isAfterActivation":false,"index":3} 
 Player 2 02:02:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:50 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":31} 
 Player 2 02:02:50 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:02:50 $SHOW_STACK_EFFECT:  

 {"effectId":31} 
 Player 2 02:02:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":31} 
 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":219,"_text":"Remove After Resolve ActivatePassiveEffect 31  "}} 
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:02:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":31,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":220,"_text":"Response Remove After Resolve ActivatePassiveEffect 31"},"childOfId":219} 
 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":221,"_text":"Wait For Response From Player 2 "},"childOfId":219} 
 Player 2 02:02:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  

 {"id":221} 
 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":222,"_text":"Wait For Response From Player 1 "},"childOfId":219} 
 Player 2 02:02:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  

 {"id":222} 
 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  

 {"id":220} 
 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":223,"_text":"Resolve PlayerDeath 25 "}} 
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:02:53 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:02:53 $NEXT_STACK_ID:  
 Player 2 02:02:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":32},"isAfterActivation":false,"index":4} 
 Player 2 02:02:53 $NEXT_STACK_ID:  
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:53 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:53 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:02:53 $SHOW_STACK_EFFECT:  

 {"effectId":33} 
 Player 2 02:02:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":224,"_text":"Add ActivatePassiveEffect 33 "}} 
 Player 2 02:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:02:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:02:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":225,"_text":"Response Adding ActivatePassiveEffect 33"},"childOfId":224} 
 Player 2 02:02:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":226,"_text":"Wait For Response From Player 1 "},"childOfId":224} 
 Player 2 02:02:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:56 $ACTION_MASSAGE_REMOVE:  

 {"id":226} 
 Player 2 02:02:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":227,"_text":"Wait For Response From Player 2 "},"childOfId":224} 
 Player 2 02:02:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:56 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:03:29 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:03:29 $ACTION_MASSAGE_REMOVE:  

 {"id":227} 
 Player 2 02:03:29 $ACTION_MASSAGE_REMOVE:  

 {"id":225} 
 Player 2 02:03:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":228,"_text":"Resolve ActivatePassiveEffect 33 "}} 
 Player 2 02:03:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:03:29 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:03:29 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:03:31 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:03:31 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":32} 
 Player 2 02:03:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":32} 
 Player 2 02:03:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":229,"_text":"Fizzle PlayerDeathPenalties 32"}} 
 Player 2 02:03:31 $FIZZLE_STACK_EFFECT:  

 {"entityId":32} 
 Player 2 02:03:31 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1,"healDown":true} 
 Player 2 02:03:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":32},"isAfterActivation":false,"index":4} 
 Player 2 02:03:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:03:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:03:31 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":33} 
 Player 2 02:03:32 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:03:32 $SHOW_STACK_EFFECT:  

 {"effectId":33} 
 Player 2 02:03:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":33} 
 Player 2 02:03:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":230,"_text":"Remove After Resolve ActivatePassiveEffect 33  "}} 
 Player 2 02:03:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:03:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":33,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:03:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":231,"_text":"Response Remove After Resolve ActivatePassiveEffect 33"},"childOfId":230} 
 Player 2 02:03:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":232,"_text":"Wait For Response From Player 2 "},"childOfId":230} 
 Player 2 02:03:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:03:34 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:03:37 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:03:37 $ACTION_MASSAGE_REMOVE:  

 {"id":232} 
 Player 2 02:03:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":233,"_text":"Wait For Response From Player 1 "},"childOfId":230} 
 Player 2 02:03:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:03:37 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:03:37 $ACTION_MASSAGE_REMOVE:  

 {"id":233} 
 Player 2 02:03:37 $ACTION_MASSAGE_REMOVE:  

 {"id":231} 
 Player 2 02:03:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":234,"_text":"Resolve PlayerDeath 25 "}} 
 Player 2 02:03:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:03:37 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:03:37 $NEXT_STACK_ID:  
 Player 2 02:03:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":34},"isAfterActivation":false,"index":5} 
 Player 2 02:03:37 $NEXT_STACK_ID:  
 Player 2 02:03:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 02:03:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:03:38 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:03:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:03:38 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:03:38 $SHOW_STACK_EFFECT:  

 {"effectId":35} 
 Player 2 02:03:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":235,"_text":"Add ActivatePassiveEffect 35 "}} 
 Player 2 02:03:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:03:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:03:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":236,"_text":"Response Adding ActivatePassiveEffect 35"},"childOfId":235} 
 Player 2 02:03:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":237,"_text":"Wait For Response From Player 1 "},"childOfId":235} 
 Player 2 02:03:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:03:40 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:03:41 $ACTION_MASSAGE_REMOVE:  

 {"id":237} 
 Player 2 02:03:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":238,"_text":"Wait For Response From Player 2 "},"childOfId":235} 
 Player 2 02:03:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:03:41 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:04:08 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:04:08 $ACTION_MASSAGE_REMOVE:  

 {"id":238} 
 Player 2 02:04:08 $ACTION_MASSAGE_REMOVE:  

 {"id":236} 
 Player 2 02:04:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":239,"_text":"Resolve ActivatePassiveEffect 35 "}} 
 Player 2 02:04:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:04:08 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:04:08 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:04:10 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:04:10 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":34} 
 Player 2 02:04:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":34} 
 Player 2 02:04:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":240,"_text":"Fizzle PlayerDeathPenalties 34"}} 
 Player 2 02:04:10 $FIZZLE_STACK_EFFECT:  

 {"entityId":34} 
 Player 2 02:04:10 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1,"healDown":true} 
 Player 2 02:04:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":34},"isAfterActivation":false,"index":5} 
 Player 2 02:04:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:04:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:04:10 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":35} 
 Player 2 02:04:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:04:10 $SHOW_STACK_EFFECT:  

 {"effectId":35} 
 Player 2 02:04:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":35} 
 Player 2 02:04:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":241,"_text":"Remove After Resolve ActivatePassiveEffect 35  "}} 
 Player 2 02:04:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:04:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:04:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":242,"_text":"Response Remove After Resolve ActivatePassiveEffect 35"},"childOfId":241} 
 Player 2 02:04:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":243,"_text":"Wait For Response From Player 2 "},"childOfId":241} 
 Player 2 02:04:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:04:13 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:04:17 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:04:17 $ACTION_MASSAGE_REMOVE:  

 {"id":243} 
 Player 2 02:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":244,"_text":"Wait For Response From Player 1 "},"childOfId":241} 
 Player 2 02:04:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:04:18 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:04:18 $ACTION_MASSAGE_REMOVE:  

 {"id":244} 
 Player 2 02:04:18 $ACTION_MASSAGE_REMOVE:  

 {"id":242} 
 Player 2 02:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":245,"_text":"Resolve PlayerDeath 25 "}} 
 Player 2 02:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:04:18 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:04:18 $NEXT_STACK_ID:  
 Player 2 02:04:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":36},"isAfterActivation":false,"index":6} 
 Player 2 02:04:18 $NEXT_STACK_ID:  
 Player 2 02:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 02:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:04:18 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:04:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:04:18 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:04:18 $SHOW_STACK_EFFECT:  

 {"effectId":37} 
 Player 2 02:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":246,"_text":"Add ActivatePassiveEffect 37 "}} 
 Player 2 02:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:04:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":247,"_text":"Response Adding ActivatePassiveEffect 37"},"childOfId":246} 
 Player 2 02:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":248,"_text":"Wait For Response From Player 1 "},"childOfId":246} 
 Player 2 02:04:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:04:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:04:21 $ACTION_MASSAGE_REMOVE:  

 {"id":248} 
 Player 2 02:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":249,"_text":"Wait For Response From Player 2 "},"childOfId":246} 
 Player 2 02:04:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:04:21 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:05:51 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":249} 
 Player 2 02:05:51 $ACTION_MASSAGE_REMOVE:  

 {"id":247} 
 Player 2 02:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":250,"_text":"Resolve ActivatePassiveEffect 37 "}} 
 Player 2 02:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:05:51 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:05:51 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:05:53 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:05:53 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":36} 
 Player 2 02:05:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":36} 
 Player 2 02:05:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":251,"_text":"Fizzle PlayerDeathPenalties 36"}} 
 Player 2 02:05:53 $FIZZLE_STACK_EFFECT:  

 {"entityId":36} 
 Player 2 02:05:53 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1,"healDown":true} 
 Player 2 02:05:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":36},"isAfterActivation":false,"index":6} 
 Player 2 02:05:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:05:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:05:53 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":37} 
 Player 2 02:05:53 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:05:53 $SHOW_STACK_EFFECT:  

 {"effectId":37} 
 Player 2 02:05:56 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":37} 
 Player 2 02:05:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":252,"_text":"Remove After Resolve ActivatePassiveEffect 37  "}} 
 Player 2 02:05:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:05:56 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":37,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:05:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":253,"_text":"Response Remove After Resolve ActivatePassiveEffect 37"},"childOfId":252} 
 Player 2 02:05:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":254,"_text":"Wait For Response From Player 2 "},"childOfId":252} 
 Player 2 02:05:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:05:56 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:07:26 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:07:26 $ACTION_MASSAGE_REMOVE:  

 {"id":254} 
 Player 2 02:07:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":255,"_text":"Wait For Response From Player 1 "},"childOfId":252} 
 Player 2 02:07:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:07:26 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:07:26 $ACTION_MASSAGE_REMOVE:  

 {"id":255} 
 Player 2 02:07:26 $ACTION_MASSAGE_REMOVE:  

 {"id":253} 
 Player 2 02:07:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":256,"_text":"Resolve PlayerDeath 25 "}} 
 Player 2 02:07:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:07:26 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":229}} 
 Player 2 02:07:27 $NEXT_STACK_ID:  
 Player 2 02:07:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":38},"isAfterActivation":false,"index":7} 
 Player 2 02:07:27 $NEXT_STACK_ID:  
 Player 2 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 02:07:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:07:27 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:07:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:07:27 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 02:07:27 $SHOW_STACK_EFFECT:  

 {"effectId":39} 
 Player 2 02:07:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":257,"_text":"Add ActivatePassiveEffect 39 "}} 
 Player 2 02:07:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:07:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:07:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":258,"_text":"Response Adding ActivatePassiveEffect 39"},"childOfId":257} 
 Player 2 02:07:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":259,"_text":"Wait For Response From Player 1 "},"childOfId":257} 
 Player 2 02:07:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:07:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:07:30 $ACTION_MASSAGE_REMOVE:  

 {"id":259} 
 Player 2 02:07:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":260,"_text":"Wait For Response From Player 2 "},"childOfId":257} 
 Player 2 02:07:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:07:30 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:09:01 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:09:01 $ACTION_MASSAGE_REMOVE:  

 {"id":260} 
 Player 2 02:09:01 $ACTION_MASSAGE_REMOVE:  

 {"id":258} 
 Player 2 02:09:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":261,"_text":"Resolve ActivatePassiveEffect 39 "}} 
 Player 2 02:09:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:09:01 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":326,"effctType":3},"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:09:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:09:03 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":326,"particleType":6} 
 Player 2 02:09:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":38} 
 Player 2 02:09:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":38} 
 Player 2 02:09:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":262,"_text":"Fizzle PlayerDeathPenalties 38"}} 
 Player 2 02:09:03 $FIZZLE_STACK_EFFECT:  

 {"entityId":38} 
 Player 2 02:09:03 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1,"healDown":true} 
 Player 2 02:09:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":38},"isAfterActivation":false,"index":7} 
 Player 2 02:09:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 2 02:09:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:09:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":39} 
 Player 2 02:09:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 02:09:03 $SHOW_STACK_EFFECT:  

 {"effectId":39} 
 Player 2 02:09:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":39} 
 Player 2 02:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":263,"_text":"Remove After Resolve ActivatePassiveEffect 39  "}} 
 Player 2 02:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 02:09:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":39,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":326,"isAfterActivation":false,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 02:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":264,"_text":"Response Remove After Resolve ActivatePassiveEffect 39"},"childOfId":263} 
 Player 2 02:09:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":265,"_text":"Wait For Response From Player 2 "},"childOfId":263} 
 Player 2 02:09:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:09:06 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[325,108,90,121]} 
 Player 2 02:10:41 $MATCH: 