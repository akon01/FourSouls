Start Log 
 Player 1 19:04:39 $START_GAME:  
 Player 1 19:04:39 $MOVE_TO_TABLE:  
 Player 1 19:04:48 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 19:04:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 19:04:50 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":122,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:04:50 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":141,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:04:51 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":20,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:04:51 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":48,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:04:52 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":142,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:04:52 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":114,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:53 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:04:54 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":94,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:04:54 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:00 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":273,"flipIfFlipped":true,"playerId":2} 
 Player 1 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on The Bloat"} 
 Player 1 19:05:07 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:13 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is rolling against The Bloat<Monster>"} 
 Player 1 19:05:15 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die"} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:16 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die \n3:Activate The Bloat "} 
 Player 1 19:05:19 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Cain \n2:Player 2 is about to die"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 19:05:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:28 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":48,"flipIfFlipped":true,"playerId":2} 
 Player 1 19:05:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 19:05:29 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:05:29 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:29 $NEXT_STACK_ID:  
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:05:29 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:05:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 
 Player 1 19:05:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Add StartTurnLoot 8 "}} 
 Player 1 19:05:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:05:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 
 Player 1 19:05:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Response Adding StartTurnLoot 8"},"childOfId":53} 
 Player 1 19:05:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":53} 
 Player 1 19:05:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:29 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 19:05:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Wait For Response From Player 2 "},"childOfId":53} 
 Player 1 19:05:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:05:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:05:30 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 1 19:05:30 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 19:05:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Resolve StartTurnLoot 8 "}} 
 Player 1 19:05:30 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 19:05:30 $MOVE_CARD:  

 {"moveIndex":10,"cardId":62,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 19:05:30 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":62} 
 Player 1 19:05:30 $FLIP_CARD:  

 {"cardId":62} 
 Player 1 19:05:30 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":62} 
 Player 1 19:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:05:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 
 Player 1 19:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 
 Player 1 19:05:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Remove After Resolve StartTurnLoot 8  "}} 
 Player 1 19:05:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 
 Player 1 19:05:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Response Remove After Resolve StartTurnLoot 8"},"childOfId":59} 
 Player 1 19:05:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Wait For Response From Player 2 "},"childOfId":59} 
 Player 1 19:05:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:05:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:05:31 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 1 19:05:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":59} 
 Player 1 19:05:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:31 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 19:05:31 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 19:05:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Stack Was Emptied "}} 
 Player 1 19:05:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:42 $MOVE_CARD:  

 {"moveIndex":11,"cardId":106,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 19:05:43 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":106} 
 Player 1 19:05:45 $SHOW_DECISION:  

 {"startCardId":106,"endCardId":106,"flipEndCard":true} 
 Player 1 19:05:48 $NEXT_STACK_ID:  
 Player 1 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 1 19:05:48 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball "} 
 Player 1 19:05:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 19:05:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Add PlayLootCardStackEffect 9 "}} 
 Player 1 19:05:48 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":106} 
 Player 1 19:05:48 $MOVE_CARD:  

 {"moveIndex":12,"cardId":106,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 19:05:48 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":106} 
 Player 1 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball: AddTrinket"} 
 Player 1 19:05:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball: AddTrinket"} 
 Player 1 19:05:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 19:05:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Response Adding PlayLootCardStackEffect 9"},"childOfId":64} 
 Player 1 19:05:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Wait For Response From Player 1 "},"childOfId":64} 
 Player 1 19:05:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:48 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 19:05:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":64} 
 Player 1 19:05:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:05:49 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:05:49 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 1 19:05:49 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 19:05:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Resolve PlayLootCardStackEffect 9 "}} 
 Player 1 19:05:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball: AddTrinket"} 
 Player 1 19:05:49 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 1 19:05:51 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 1 19:05:51 $CARD_ADD_TRINKET:  

 {"cardId":106,"playerId":1,"addMuiliEffect":true} 
 Player 1 19:05:51 $REMOVE_FROM_PILE:  

 {"cardId":106} 
 Player 1 19:05:51 $REGISTER_PASSIVE_ITEM:  

 {"cardId":106} 
 Player 1 19:05:51 $MOVE_CARD:  

 {"moveIndex":13,"cardId":106,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 19:05:51 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":106,"isReward":true} 
 Player 1 19:05:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":106}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play Guppys Hairball: AddTrinket"} 
 Player 1 19:05:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 19:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Remove After Resolve PlayLootCardStackEffect 9  "}} 
 Player 1 19:05:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:51 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":292,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":106,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 19:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Response Remove After Resolve PlayLootCardStackEffect 9"},"childOfId":69} 
 Player 1 19:05:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Wait For Response From Player 2 "},"childOfId":69} 
 Player 1 19:05:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:05:52 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:05:52 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 19:05:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Wait For Response From Player 1 "},"childOfId":69} 
 Player 1 19:05:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:05:52 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 1 19:05:52 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 19:05:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Stack Was Emptied "}} 
 Player 1 19:05:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:05:58 $SHOW_DECISION:  

 {"startCardId":292,"endCardId":273} 
 Player 1 19:06:01 $NEXT_STACK_ID:  
 Player 1 19:06:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 1 19:06:01 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 1 19:06:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 1 19:06:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 1 19:06:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Add DeclareAttack 10 "}} 
 Player 1 19:06:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 1 19:06:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 1 19:06:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Response Adding DeclareAttack 10"},"childOfId":74} 
 Player 1 19:06:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":74} 
 Player 1 19:06:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:02 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 19:06:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":74} 
 Player 1 19:06:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:02 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:02 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 1 19:06:02 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 19:06:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Resolve DeclareAttack 10 "}} 
 Player 1 19:06:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":273,"particleType":5} 
 Player 1 19:06:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":10},"isAfterActivation":true,"index":3} 
 Player 1 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on The Bloat"} 
 Player 1 19:06:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 1 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:02 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 1 19:06:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Remove After Resolve DeclareAttack 10  "}} 
 Player 1 19:06:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:02 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":292,"attackingPlayerCardId":292,"idOfCardBeingAttacked":273,"stackEffectType":4}} 
 Player 1 19:06:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Response Remove After Resolve DeclareAttack 10"},"childOfId":79} 
 Player 1 19:06:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 
 Player 1 19:06:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:02 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:03 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 19:06:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 
 Player 1 19:06:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:03 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 1 19:06:03 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 19:06:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Stack Was Emptied "}} 
 Player 1 19:06:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:04 $NEXT_STACK_ID:  
 Player 1 19:06:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against The Bloat<Monster>"} 
 Player 1 19:06:04 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 1 19:06:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against The Bloat<Monster>"} 
 Player 1 19:06:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":292,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 1 19:06:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Add AttackRoll 11 "}} 
 Player 1 19:06:04 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 19:06:06 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":1} 
 Player 1 19:06:06 $UPDATE_STACK_VIS:  

 {"stackId":11,"text":"player rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:06 $SHOW_DICE_ROLL:  

 {"stackId":11} 
 Player 1 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":292,"numberRolled":1,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 1 19:06:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Response Adding AttackRoll 11"},"childOfId":84} 
 Player 1 19:06:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 1 "},"childOfId":84} 
 Player 1 19:06:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 19:06:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Wait For Response From Player 2 "},"childOfId":84} 
 Player 1 19:06:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:09 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 1 19:06:09 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 19:06:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Resolve AttackRoll 11 "}} 
 Player 1 19:06:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Added 0 to original roll"}} 
 Player 1 19:06:09 $NEXT_STACK_ID:  
 Player 1 19:06:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":292,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":292,"numberRolled":1,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":292,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":292,"numberRolled":1,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:10 $REPLACE_STACK:  

 {"currentStack":[{"entityId":12,"creatorCardId":292,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":292,"numberRolled":1,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}]} 
 Player 1 19:06:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":4,"originStackId":11},"isAfterActivation":true,"index":4} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith \n2:Player 1 rolled 1 vs The Bloat<Monster>"} 
 Player 1 19:06:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":292,"numberRolled":1,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 1 19:06:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":292,"numberRolled":1,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 1 19:06:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Remove After Resolve AttackRoll 11  "}} 
 Player 1 19:06:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat combat damage to Lilith"} 
 Player 1 19:06:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":292,"numberRolled":1,"rollingPlayerCardId":292,"stackEffectType":2,"attackedMonsterCardId":273}} 
 Player 1 19:06:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Response Remove After Resolve AttackRoll 11"},"childOfId":90} 
 Player 1 19:06:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Wait For Response From Player 1 "},"childOfId":90} 
 Player 1 19:06:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:10 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 1 19:06:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Wait For Response From Player 2 "},"childOfId":90} 
 Player 1 19:06:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:11 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 1 19:06:11 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 19:06:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Resolve CombatDamage 12 "}} 
 Player 1 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith"} 
 Player 1 19:06:11 $UPDATE_STACK_VIS:  

 {"stackId":12,"text":"The Bloat will deal 2 combat damage to Lilith"} 
 Player 1 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith"} 
 Player 1 19:06:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 19:06:11 $NEXT_STACK_ID:  
 Player 1 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith"} 
 Player 1 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:11 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 19:06:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Add ActivatePassiveEffect 13 "}} 
 Player 1 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 19:06:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Response Adding ActivatePassiveEffect 13"},"childOfId":95} 
 Player 1 19:06:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":95} 
 Player 1 19:06:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:11 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:12 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 1 19:06:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":95} 
 Player 1 19:06:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:12 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 1 19:06:12 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 1 19:06:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Resolve ActivatePassiveEffect 13 "}} 
 Player 1 19:06:12 $NEXT_STACK_ID:  
 Player 1 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 roll a dice"} 
 Player 1 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 roll a dice"} 
 Player 1 19:06:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":292,"stackEffectToLock":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 1 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 roll a dice"} 
 Player 1 19:06:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 roll a dice"} 
 Player 1 19:06:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":292,"stackEffectToLock":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 1 19:06:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Add RollDiceStackEffect 14 "}} 
 Player 1 19:06:12 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 19:06:14 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 19:06:14 $UPDATE_STACK_VIS:  

 {"stackId":14,"text":"player 1 rolled 5"} 
 Player 1 19:06:14 $SHOW_DICE_ROLL:  

 {"stackId":14} 
 Player 1 19:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 rolled 5"} 
 Player 1 19:06:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 rolled 5"} 
 Player 1 19:06:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 rolled 5"} 
 Player 1 19:06:17 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":292,"stackEffectToLock":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 1 19:06:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Response Adding RollDiceStackEffect 14"},"childOfId":100} 
 Player 1 19:06:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Wait For Response From Player 1 "},"childOfId":100} 
 Player 1 19:06:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:17 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Player 1 19:06:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Wait For Response From Player 2 "},"childOfId":100} 
 Player 1 19:06:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:17 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Player 1 19:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 19:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Resolve RollDiceStackEffect 14 "}} 
 Player 1 19:06:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":5,"originStackId":14},"isAfterActivation":true,"index":5} 
 Player 1 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 rolled 5"} 
 Player 1 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect> \n3:Player 1 rolled 5"} 
 Player 1 19:06:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":292,"stackEffectToLock":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 1 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":292,"stackEffectToLock":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 1 19:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Remove After Resolve RollDiceStackEffect 14  "}} 
 Player 1 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":292,"stackEffectToLock":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":106,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":106,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"hasLockingStackEffect":false,"numberRolled":5,"stackEffectType":11}} 
 Player 1 19:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Response Remove After Resolve RollDiceStackEffect 14"},"childOfId":105} 
 Player 1 19:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":105} 
 Player 1 19:06:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":107} 
 Player 1 19:06:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Wait For Response From Player 1 "},"childOfId":105} 
 Player 1 19:06:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":108} 
 Player 1 19:06:18 $ACTION_MASSAGE_REMOVE:  

 {"id":106} 
 Player 1 19:06:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Resolve ActivatePassiveEffect 13 "}} 
 Player 1 19:06:19 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 1 19:06:20 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":106,"particleType":6} 
 Player 1 19:06:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 19:06:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith \n2:Activate Guppys Hairball effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 
 Player 1 19:06:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith"} 
 Player 1 19:06:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 19:06:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Remove After Resolve ActivatePassiveEffect 13  "}} 
 Player 1 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith"} 
 Player 1 19:06:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":292,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":106,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 19:06:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Response Remove After Resolve ActivatePassiveEffect 13"},"childOfId":110} 
 Player 1 19:06:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Wait For Response From Player 1 "},"childOfId":110} 
 Player 1 19:06:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:21 $ACTION_MASSAGE_REMOVE:  

 {"id":112} 
 Player 1 19:06:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Wait For Response From Player 2 "},"childOfId":110} 
 Player 1 19:06:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:21 $ACTION_MASSAGE_REMOVE:  

 {"id":113} 
 Player 1 19:06:21 $ACTION_MASSAGE_REMOVE:  

 {"id":111} 
 Player 1 19:06:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Resolve CombatDamage 12 "}} 
 Player 1 19:06:21 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":273} 
 Player 1 19:06:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":273}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Bloat 2 combat damage to Lilith"} 
 Player 1 19:06:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":292,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":292,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 19:06:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Remove After Resolve CombatDamage 12  "}} 
 Player 1 19:06:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:06:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":292,"entityToDoDamageCardId":273,"entityToTakeDamageCardId":292,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 19:06:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Response Remove After Resolve CombatDamage 12"},"childOfId":115} 
 Player 1 19:06:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Wait For Response From Player 2 "},"childOfId":115} 
 Player 1 19:06:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:06:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:06:22 $ACTION_MASSAGE_REMOVE:  

 {"id":117} 
 Player 1 19:06:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Wait For Response From Player 1 "},"childOfId":115} 
 Player 1 19:06:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:06:22 $ACTION_MASSAGE_REMOVE:  

 {"id":118} 
 Player 1 19:06:22 $ACTION_MASSAGE_REMOVE:  

 {"id":116} 
 Player 1 19:06:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":119,"_text":"Stack Was Emptied "}} 
 Player 1 19:06:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"}