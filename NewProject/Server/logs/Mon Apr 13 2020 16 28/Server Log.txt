Start Log 

 Player 1 16:28:19 $MATCH:  

 Player 1 16:28:19 $START_GAME:  

 Player 2 16:28:19 $MOVE_TO_TABLE:  

 Player 1 16:28:19 $MOVE_TO_TABLE:  

 Player 2 16:28:28 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:28:28 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:28:28 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":325,"itemCardId":326} 

 Player 1 16:28:28 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":325,"itemCardId":326} 

 Player 1 16:28:28 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 16:28:28 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 2 16:28:28 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[146,209,217,200,162,212,188,219,169,191,205,170,192,154,202,148,166,183,159,216,218,151,142,211,167,185,206,157,195,208,196,184,145,207,181,143,201,158,190,176,144,177,174,203,168,171,164,186,180,215,150,147,220,197,182,141,175,149,172,165,178,161,155,153,204,199,210,179,213,214,156,187,152,189,198,163,193,160,194,173]} 

 Player 2 16:28:36 $EDEN_CHOSEN:  
{"cardId":209,"playerId":2} 

 Player 2 16:28:36 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[146,217,200,162,212,188,219,169,191,205,170,192,154,202,148,166,183,159,216,218,151,142,211,167,185,206,157,195,208,196,184,145,207,181,143,201,158,190,176,144,177,174,203,168,171,164,186,180,215,150,147,220,197,182,141,175,149,172,165,178,161,155,153,204,199,210,179,213,214,156,187,152,189,198,163,193,160,194,173]} 

 Player 2 16:28:36 $FLIP_CARD:  
{"cardId":209} 

 Player 2 16:28:37 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":315,"itemCardId":209} 

 Player 2 16:28:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":316}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:28:37 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[80,120,99,21,37,104,76,33,4,139,22,34,68,9,57,47,81,50,85,5,96,30,35,74,36,103,86,97,54,8,117,17,71,51,118,27,49,136,130,127,135,92,38,112,106,129,46,7,40,56,24,13,32,26,29,10,137,16,15,102,79,107,132,59,108,126,83,43,42,125,123,98,114,12,119,60,109,31,82,110,48,70,53,134,63,11,52,105,66,6,58,116,121,87,115,138,44,61,88,73,45,133,122,18,64,128,95,111,89,124,77,41,75,93,84,78,23,100,91,72,101,14,67,39,19,131,20,69,90,113,28,62,25,65,55,94]} 

 Player 2 16:28:37 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[300,296,305,286,263,301,256,251,303,278,248,290,230,274,294,234,281,231,304,242,299,307,268,239,247,240,282,246,250,228,285,225,229,273,271,255,272,267,280,306,224,293,233,264,297,226,262,254,236,253,235,284,245,276,288,243,298,265,244,241,259,252,302,270,260,295,308,292,232,237,287,257,223,227,277,269,266,258,261,289,238,279,275,291,222,249,283]} 

 Player 2 16:28:37 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[202,215,211,192,149,147,184,188,217,208,148,168,196,185,191,155,167,153,190,181,157,204,152,162,213,175,164,199,189,201,142,150,214,170,161,151,206,178,194,220,180,156,166,195,141,172,218,171,182,210,165,183,186,143,144,154,176,179,219,187,216,193,198,159,200,174,173,163,207,160,203,169,145,146,212,177,158,197,205]} 

 Player 2 16:28:37 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:28:37 $FLIP_CARD:  
{"cardId":205} 

 Player 2 16:28:37 $ADD_STORE_CARD:  
{"cardId":205} 

 Player 2 16:28:37 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:28:37 $FLIP_CARD:  
{"cardId":197} 

 Player 2 16:28:37 $ADD_STORE_CARD:  
{"cardId":197} 

 Player 2 16:28:37 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:28:37 $FLIP_CARD:  
{"cardId":283} 

 Player 2 16:28:37 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":283} 

 Player 2 16:28:37 $NEW_MONSTER_ON_PLACE:  
{"cardId":283,"monsterPlaceId":1} 

 Player 2 16:28:37 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:28:37 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":249} 

 Player 2 16:28:37 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:28:37 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":222} 

 Player 2 16:28:37 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:28:37 $FLIP_CARD:  
{"cardId":291} 

 Player 2 16:28:37 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":291} 

 Player 2 16:28:37 $NEW_MONSTER_ON_PLACE:  
{"cardId":291,"monsterPlaceId":2} 

 Player 2 16:28:37 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:28:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:28:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:28:37 $MOVE_CARD:  
{"moveIndex":1,"cardId":94,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:28:37 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":94,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:28:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":94} 

 Player 2 16:28:37 $FLIP_CARD:  
{"cardId":94} 

 Player 2 16:28:37 $FLIP_CARD:  
{"cardId":94} 

 Player 2 16:28:38 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":94} 

 Player 2 16:28:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:28:38 $MOVE_CARD:  
{"moveIndex":2,"cardId":55,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:28:38 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":55,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:28:38 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":55} 

 Player 2 16:28:38 $FLIP_CARD:  
{"cardId":55} 

 Player 2 16:28:38 $FLIP_CARD:  
{"cardId":55} 

 Player 2 16:28:38 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":55} 

 Player 2 16:28:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:28:38 $MOVE_CARD:  
{"moveIndex":3,"cardId":65,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:28:38 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":65,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:28:38 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":65} 

 Player 2 16:28:38 $FLIP_CARD:  
{"cardId":65} 

 Player 2 16:28:38 $FLIP_CARD:  
{"cardId":65} 

 Player 2 16:28:38 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":65} 

 Player 2 16:28:39 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:28:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 16:28:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:28:39 $MOVE_CARD:  
{"moveIndex":4,"cardId":25,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:28:39 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":25,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:28:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":25} 

 Player 2 16:28:39 $FLIP_CARD:  
{"cardId":25} 

 Player 2 16:28:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":25} 

 Player 2 16:28:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:28:39 $MOVE_CARD:  
{"moveIndex":5,"cardId":62,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:28:39 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:28:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":62} 

 Player 2 16:28:39 $FLIP_CARD:  
{"cardId":62} 

 Player 2 16:28:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":62} 

 Player 2 16:28:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:28:39 $MOVE_CARD:  
{"moveIndex":6,"cardId":28,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:28:40 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":28,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:28:40 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":28} 

 Player 2 16:28:40 $FLIP_CARD:  
{"cardId":28} 

 Player 2 16:28:40 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":28} 

 Player 2 16:28:40 $GAME_HAS_STARTED:  

 Player 2 16:28:40 $SET_TURN:  
{"playerId":1} 

 Player 2 16:28:40 $START_TURN:  
{"playerId":1} 

 Player 2 16:28:40 $UPDATE_ACTIONS:  

 Player 1 16:28:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:28:40 $NEXT_STACK_ID:  

 Player 1 16:28:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:28:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:28:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 1 16:28:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 1 16:28:40 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:28:40 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:28:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:28:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 16:28:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:28:43 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 16:28:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 16:28:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:28:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:28:43 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,209,209]} 

 Player 2 16:28:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:28:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 16:28:43 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 1 16:28:43 $DRAW_CARD:  
{"deckType":1} 

 Player 1 16:28:43 $MOVE_CARD:  
{"moveIndex":7,"cardId":113,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 16:28:44 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":113,"flipIfFlipped":false,"playerId":1} 

 Player 1 16:28:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":113} 

 Player 1 16:28:44 $FLIP_CARD:  
{"cardId":113} 

 Player 1 16:28:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":113} 

 Player 1 16:28:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 1 16:28:44 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 16:28:44 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:28:44 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 16:28:47 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 16:28:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:28:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 

 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 16:28:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:28:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:28:47 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,209,209]} 

 Player 2 16:28:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 16:28:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 16:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 16:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 16:28:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:28:47 $CLEAR_SE_VIS:  

 Player 1 16:28:57 $NEXT_STACK_ID:  

 Player 1 16:28:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 1 16:28:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 

 Player 1 16:28:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 

 Player 1 16:28:57 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:28:57 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:28:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:28:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 16:29:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 

 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 16:29:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 16:29:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:29:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:29:00 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,209,209]} 

 Player 2 16:29:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 16:29:00 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 16:29:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 16:29:00 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 

 Player 1 16:29:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":5} 

 Player 1 16:29:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 

 Player 1 16:29:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 

 Player 1 16:29:01 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 16:29:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:29:01 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 16:29:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 16:29:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 16:29:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:29:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":291,"stackEffectType":4}} 

 Player 1 16:29:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 16:29:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 16:29:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:29:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:29:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Pooter"} 

 Player 2 16:29:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,209,209]} 

 Player 2 16:29:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:29:04 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 16:29:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 16:29:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:04 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 16:29:04 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 16:29:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 16:29:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:29:04 $CLEAR_SE_VIS:  

 Player 1 16:29:16 $NEXT_STACK_ID:  

 Player 1 16:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 16:29:16 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 

 Player 1 16:29:16 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 

 Player 1 16:29:16 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:29:16 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 16:29:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:29:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 16:29:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 16:29:19 $ROLL_DICE:  
{"playerId":1} 

 Player 1 16:29:20 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 16:29:20 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 1 vs Pooter<Monster>"} 

 Player 1 16:29:20 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 16:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Pooter<Monster>"} 

 Player 1 16:29:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 

 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 16:29:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 16:29:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:29:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 16:29:23 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,209,209]} 

 Player 2 16:29:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 16:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 16:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 1 vs Pooter<Monster>"} 

 Player 1 16:29:23 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 

 Player 1 16:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 16:29:23 $NEXT_STACK_ID:  

 Player 1 16:29:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:23 $CLEAR_SE_VIS:  

 Player 1 16:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost \n2:Player 1 rolled 1 vs Pooter<Monster>"} 

 Player 1 16:29:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 16:29:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 

 Player 1 16:29:24 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}]} 

 Player 1 16:29:24 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:29:24 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:29:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 16:29:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 16:29:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 16:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost \n2:Player 1 rolled 1 vs Pooter<Monster>"} 

 Player 1 16:29:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 

 Player 1 16:29:26 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 16:29:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:29:26 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 16:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 1 16:29:29 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 16:29:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 16:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost"} 

 Player 1 16:29:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":291}} 

 Player 1 16:29:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 16:29:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 16:29:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:29 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 16:29:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 16:29:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:29:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost \n2:Player 1 is rolling against Pooter<Monster>"} 

 Player 2 16:29:30 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,209,209]} 

 Player 2 16:29:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:29:30 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 16:29:30 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:29:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 16:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost"} 

 Player 1 16:29:30 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 16:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to The Lost"} 

 Player 1 16:29:30 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Pooter will deal 1 combat damage to The Lost"} 

 Player 1 16:29:30 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":291} 

 Player 1 16:29:30 $NEXT_STACK_ID:  

 Player 1 16:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 16:29:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 

 Player 1 16:29:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:29:30 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 16:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost"} 

 Player 2 16:29:30 $LOG_ERROR:  
"no stack effect to show" 
//////Error From Player 2////
  

 Player 2 16:29:30 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 16:29:30 $SHOW_ANNOUNCEMENT:  
{"text":"no stack effect to show"} 

 Player 1 16:29:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:33 $CLEAR_SE_VIS:  

 Player 1 16:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 16:29:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 16:29:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 

 Player 1 16:29:33 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}]} 

 Player 1 16:29:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":291}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 16:29:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":291}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 16:29:33 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 16:29:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:29:33 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost"} 

 Player 1 16:29:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 16:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 16:29:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"entityToDoDamageCardId":291,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 

 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 16:29:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:36 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 16:29:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:29:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 16:29:36 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,209,209]} 

 Player 2 16:29:36 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:29:36 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 16:29:36 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve PlayerDeath 5 "}} 

 Player 1 16:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 16:29:36 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 

 Player 1 16:29:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":291,"particleType":5} 

 Player 1 16:29:36 $CANCEL_ATTACK:  

 Player 1 16:29:36 $NEXT_STACK_ID:  

 Player 1 16:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 16:29:37 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 

 Player 1 16:29:37 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 16:29:37 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 16:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost"} 

 Player 2 16:29:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost"} 

 Player 2 16:29:37 $LOG_ERROR:  
"no stack effect to show" 
//////Error From Player 2////
  

 Player 2 16:29:37 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 16:29:37 $SHOW_ANNOUNCEMENT:  
{"text":"no stack effect to show"} 

 Player 1 16:29:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:39 $CLEAR_SE_VIS:  

 Player 1 16:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 16:29:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 

 Player 1 16:29:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 

 Player 1 16:29:39 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291},{"entityId":6,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 

 Player 1 16:29:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 

 Player 1 16:29:39 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 16:29:40 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 16:29:40 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 16:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Pooter combat damage to The Lost"} 

 Player 2 16:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 16:29:42 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 16:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve PlayerDeath 5  "}} 

 Player 1 16:29:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 16:29:42 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":291}} 

 Player 1 16:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve PlayerDeath 5"},"childOfId":36} 

 Player 1 16:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 16:29:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 16:29:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 16:29:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:29:43 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:29:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 2 16:29:43 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[315,209,209]} 

 Player 2 16:29:43 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 16:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 16:29:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve PlayerDeathPenalties 6 "}} 

 Player 1 16:29:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 1 16:29:43 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 

 Player 1 16:29:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Player 1 pays Penalties"}} 

 Player 1 16:29:43 $SET_MONEY:  
{"playerId":1,"numOfCoins":2} 

 Player 1 16:29:43 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 16:29:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 16:32:34 $MATCH: 