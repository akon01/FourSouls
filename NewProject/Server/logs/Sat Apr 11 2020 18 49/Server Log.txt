Start Log 

 Player 1 18:49:30 $MATCH:  

 Player 1 18:49:30 $START_GAME:  

 Player 2 18:49:30 $MOVE_TO_TABLE:  

 Player 1 18:49:30 $MOVE_TO_TABLE:  

 Player 2 18:49:39 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 18:49:39 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 18:49:39 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":321,"itemCardId":322} 

 Player 1 18:49:39 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":321,"itemCardId":322} 

 Player 1 18:49:39 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 18:49:39 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":317,"itemCardId":318} 

 Player 2 18:49:39 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[52,90,43,28,95,41,20,44,87,42,81,66,32,111,5,128,30,18,88,9,26,27,37,101,24,80,110,119,68,86,126,83,104,57,98,39,105,21,58,70,103,131,135,96,108,13,115,102,55,117,75,7,38,63,79,137,118,62,94,82,29,51,10,120,8,91,23,134,53,12,85,139,40,45,17,92,77,22,136,133,49,138,100,76,72,84,129,89,47,48,69,59,50,34,31,106,125,130,97,74,46,107,15,16,4,124,93,60,132,78,65,6,33,14,64,11,54,114,36,121,71,127,122,61,19,67,113,116,25,123,99,112,109,35,73,56]} 

 Player 2 18:49:39 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[255,240,266,228,241,305,248,251,243,237,307,273,285,244,299,223,290,279,277,267,293,281,250,230,249,288,297,300,286,269,265,284,247,233,304,261,235,246,238,239,294,272,282,289,275,301,229,224,292,278,263,268,245,259,232,308,303,236,296,274,306,264,256,291,262,302,260,270,298,242,287,276,283,295,280,225,254,271,253,231,227,222,226,252,258,234,257]} 

 Player 2 18:49:39 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[182,159,219,152,168,196,205,166,185,177,144,148,216,217,150,165,201,190,200,180,174,154,211,184,206,153,156,192,188,199,187,191,220,213,155,210,209,183,172,203,160,141,195,215,167,212,146,202,208,207,193,151,179,143,175,145,149,186,147,204,169,164,158,142,176,214,170,163,173,178,157,161,189,197,181,171,198,162,194,218]} 

 Player 2 18:49:39 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:49:39 $FLIP_CARD:  
{"cardId":218} 

 Player 2 18:49:39 $ADD_STORE_CARD:  
{"cardId":218} 

 Player 2 18:49:39 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:49:40 $FLIP_CARD:  
{"cardId":194} 

 Player 2 18:49:40 $ADD_STORE_CARD:  
{"cardId":194} 

 Player 2 18:49:40 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:49:40 $FLIP_CARD:  
{"cardId":257} 

 Player 2 18:49:40 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":257} 

 Player 2 18:49:40 $NEW_MONSTER_ON_PLACE:  
{"cardId":257,"monsterPlaceId":1} 

 Player 2 18:49:40 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:49:40 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":234} 

 Player 2 18:49:40 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:49:40 $FLIP_CARD:  
{"cardId":258} 

 Player 2 18:49:40 $REGISTER_PASSIVE_ITEM:  
{"cardId":258} 

 Player 2 18:49:40 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":258} 

 Player 2 18:49:40 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":2} 

 Player 2 18:49:40 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 18:49:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:49:40 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:49:40 $MOVE_CARD:  
{"moveIndex":1,"cardId":56,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:49:40 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":56,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:49:40 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":56} 

 Player 2 18:49:40 $FLIP_CARD:  
{"cardId":56} 

 Player 2 18:49:40 $FLIP_CARD:  
{"cardId":56} 

 Player 2 18:49:40 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":56} 

 Player 2 18:49:40 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:49:40 $MOVE_CARD:  
{"moveIndex":2,"cardId":73,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:49:41 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":73,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:49:41 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":73} 

 Player 2 18:49:41 $FLIP_CARD:  
{"cardId":73} 

 Player 2 18:49:41 $FLIP_CARD:  
{"cardId":73} 

 Player 2 18:49:41 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":73} 

 Player 2 18:49:41 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:49:41 $MOVE_CARD:  
{"moveIndex":3,"cardId":35,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:49:41 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:49:41 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":35} 

 Player 2 18:49:41 $FLIP_CARD:  
{"cardId":35} 

 Player 2 18:49:41 $FLIP_CARD:  
{"cardId":35} 

 Player 2 18:49:41 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":35} 

 Player 2 18:49:41 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 18:49:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 18:49:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:49:42 $MOVE_CARD:  
{"moveIndex":4,"cardId":109,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:49:42 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":109,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:49:42 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":109} 

 Player 2 18:49:42 $FLIP_CARD:  
{"cardId":109} 

 Player 2 18:49:42 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":109} 

 Player 2 18:49:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:49:42 $MOVE_CARD:  
{"moveIndex":5,"cardId":112,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:49:42 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:49:42 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":112} 

 Player 2 18:49:42 $FLIP_CARD:  
{"cardId":112} 

 Player 2 18:49:43 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":112} 

 Player 2 18:49:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:49:43 $MOVE_CARD:  
{"moveIndex":6,"cardId":99,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:49:43 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":99,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:49:43 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":99} 

 Player 2 18:49:43 $FLIP_CARD:  
{"cardId":99} 

 Player 2 18:49:43 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":99} 

 Player 2 18:49:43 $GAME_HAS_STARTED:  

 Player 2 18:49:43 $SET_TURN:  
{"playerId":2} 

 Player 2 18:49:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:49:43 $NEXT_STACK_ID:  

 Player 2 18:49:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:49:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:49:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 2 18:49:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 2 18:49:43 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 18:49:43 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 18:49:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:49:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:49:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 18:49:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:49:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 2 18:49:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 18:49:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 18:49:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:49:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 18:49:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:49:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:49:46 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 18:49:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:49:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 18:49:46 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 2 18:49:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:49:46 $MOVE_CARD:  
{"moveIndex":7,"cardId":123,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:49:47 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":123,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:49:47 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":123} 

 Player 2 18:49:47 $FLIP_CARD:  
{"cardId":123} 

 Player 2 18:49:47 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":123} 

 Player 2 18:49:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 2 18:49:47 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 18:49:47 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 18:49:47 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 18:49:50 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 18:49:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 18:49:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:49:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":317,"turnPlayerCardId":317,"stackEffectType":13}} 

 Player 2 18:49:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 18:49:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 18:49:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:49:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:49:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:49:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 18:49:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:49:50 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 18:49:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 18:49:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:49:50 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 18:49:50 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 18:49:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 18:49:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:49:51 $CLEAR_SE_VIS:  

 Player 2 18:49:51 $UPDATE_ACTIONS:  

 Player 2 18:49:53 $NEXT_STACK_ID:  

 Player 2 18:49:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fistula"} 

 Player 2 18:49:53 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 18:49:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 18:49:53 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 18:49:53 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 18:49:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:49:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fistula"} 

 Player 2 18:49:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 18:49:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:49:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 18:49:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 18:49:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 18:49:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:49:57 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 18:49:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 18:49:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:49:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:49:57 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 18:49:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:49:57 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 18:49:57 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 18:49:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 18:49:57 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 18:49:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":5} 

 Player 2 18:49:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 18:49:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 18:49:57 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 18:49:57 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 18:49:57 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 18:50:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 18:50:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 18:50:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:50:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":317,"attackingPlayerCardId":317,"idOfCardBeingAttacked":258,"stackEffectType":4}} 

 Player 2 18:50:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 18:50:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 18:50:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:50:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:50:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fistula"} 

 Player 1 18:50:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 18:50:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:50:00 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 18:50:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 18:50:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:50:00 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 18:50:00 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 18:50:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 18:50:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:50:00 $CLEAR_SE_VIS:  

 Player 2 18:50:00 $NEXT_STACK_ID:  

 Player 2 18:50:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster>"} 

 Player 2 18:50:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 18:50:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 18:50:00 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 18:50:00 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 18:50:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:50:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster>"} 

 Player 2 18:50:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 18:50:03 $ROLL_DICE:  
{"playerId":2} 

 Player 2 18:50:05 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 18:50:05 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 2 vs Fistula<Monster>"} 

 Player 2 18:50:06 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 18:50:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Fistula<Monster>"} 

 Player 2 18:50:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:50:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 18:50:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 18:50:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 18:50:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:50:09 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 18:50:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 18:50:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:50:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:50:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster>"} 

 Player 1 18:50:09 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 18:50:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":true} 

 Player 1 18:50:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321,322]} 

 Player 1 18:50:10 $NEXT_STACK_ID:  

 Player 1 18:50:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 1 18:50:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 18:50:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 18:50:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 18:50:11 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 18:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 18:50:11 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 18:50:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Fistula<Monster>"} 

 Player 2 18:50:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 1 18:50:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Add ActivateItem 4 "}} 

 Player 1 18:50:15 $SHOW_DECISION:  
{"startCardId":322,"endCardId":258} 

 Player 1 18:50:18 $USE_ITEM:  
{"cardId":322} 

 Player 1 18:50:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:50:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 1 18:50:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:50:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Response Adding ActivateItem 4"},"childOfId":24} 

 Player 1 18:50:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Wait For Response From Player 2 "},"childOfId":24} 

 Player 1 18:50:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:50:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:50:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 2 18:50:18 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[317,318,109,112,99,123]} 

 Player 2 18:50:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:50:18 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 18:50:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":24} 

 Player 1 18:50:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:50:18 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[321]} 

 Player 1 18:50:24 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321]} 

 Player 1 18:50:24 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321]} 

 Player 1 18:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 18:50:24 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 18:50:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Resolve ActivateItem 4 "}} 

 Player 1 18:50:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 1 18:50:24 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:50:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":322,"particleType":6} 

 Player 2 18:50:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 1 18:50:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":322,"particleType":6} 

 Player 1 18:50:26 $MONSTER_ADD_DMG_PREVENTION:  
{"cardId":258,"dmgToPrevent":1} 

 Player 1 18:50:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":322}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 18:50:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 1 18:50:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:50:26 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 18:50:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:50:26 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 18:50:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 1 18:50:29 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 18:50:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Remove After Resolve ActivateItem 4  "}} 

 Player 1 18:50:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster>"} 

 Player 1 18:50:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":322,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 18:50:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Response Remove After Resolve ActivateItem 4"},"childOfId":29} 

 Player 1 18:50:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Wait For Response From Player 1 "},"childOfId":29} 

 Player 1 18:50:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:50:29 $SHOW_REACTIONS:  
{"playerId":1,"cardsIds":[321]} 

 Player 2 18:50:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Fistula<Monster> \n2:Player 1 activated Yum Heart"} 

 Player 1 18:50:37 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321]} 

 Player 1 18:50:37 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 18:50:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":29} 

 Player 1 18:50:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:50:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:50:37 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[317,318,109,112,99,123]} 

 Player 2 18:50:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:50:37 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 18:50:37 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 18:50:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 18:50:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster>"} 

 Player 1 18:50:37 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 2 18:50:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Fistula<Monster>"} 

 Player 2 18:50:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Added 0 to original roll"}} 

 Player 2 18:50:37 $NEXT_STACK_ID:  

 Player 2 18:50:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster>"} 

 Player 2 18:50:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:50:37 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 18:50:37 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 18:50:37 $LOG_ERROR:  
"no stack effect to show" 
//////Error From Player 1////
  

 Player 1 18:50:37 $LOG_ERROR:  
//////Error From Player 1////
 [object Object]
////// 

 Player 1 18:50:37 $SHOW_ANNOUNCEMENT:  
{"text":"no stack effect to show"} 

 Player 2 18:50:40 $CLEAR_SE_VIS:  

 Player 2 18:50:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Player 2 is rolling against Fistula<Monster>"} 

 Player 2 18:50:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 18:50:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 18:50:40 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 2 18:50:40 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 18:50:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 2 18:50:40 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 18:50:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fistula<Monster>"} 

 Player 1 18:50:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Player 2 is rolling against Fistula<Monster>"} 

 Player 1 18:50:40 $CLEAR_SE_VIS:  

 Player 1 18:50:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 1 18:50:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 18:50:40 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}]} 

 Player 1 18:50:41 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:50:41 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 18:50:43 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 18:50:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 18:50:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula"} 

 Player 1 18:50:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":317,"numberRolled":2,"rollingPlayerCardId":317,"stackEffectType":2,"attackedMonsterCardId":258}} 

 Player 1 18:50:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":35} 

 Player 1 18:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 18:50:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:50:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Player 2 is rolling against Fistula<Monster>"} 

 Player 2 18:50:44 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[317,109,112,99,123]} 

 Player 2 18:50:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:50:44 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 18:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 18:50:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:50:44 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 18:50:44 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 18:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 18:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula"} 

 Player 1 18:50:44 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}]} 

 Player 2 18:50:44 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Isaac will deal 1 combat damage to Fistula"} 

 Player 2 18:50:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":317},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 18:50:44 $NEXT_STACK_ID:  

 Player 2 18:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula effect GainStats<GainStats>"} 

 Player 2 18:50:44 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":258,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":258,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 18:50:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":258,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":258,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 18:50:44 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 18:50:44 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 18:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula"} 

 Player 1 18:50:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula "} 

 Player 2 18:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Add ActivatePassiveEffect 6 "}} 

 Player 2 18:50:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula effect GainStats<GainStats>"} 

 Player 2 18:50:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[258],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":6,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":258,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":258,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 18:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":40} 

 Player 2 18:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 18:50:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:50:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:50:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula "} 

 Player 1 18:50:47 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321]} 

 Player 1 18:50:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 18:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 18:50:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 18:50:47 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 18:50:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve ActivatePassiveEffect 6 "}} 

 Player 2 18:50:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula effect GainStats<GainStats>"} 

 Player 2 18:50:48 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[258],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":6,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":258,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":258,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 18:50:48 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 1 18:50:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula "} 

 Player 2 18:50:49 $DISABLE_PARTICLE_EFFECT:  
{"cardId":258,"particleType":6} 

 Player 2 18:50:49 $MONSTER_GAIN_ROLL_BONUS:  
{"cardId":258,"bonusToGain":1} 

 Player 2 18:50:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":317},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 18:50:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula effect GainStats<GainStats>"} 

 Player 2 18:50:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[258],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":6,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":258,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 18:50:50 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 2 18:50:50 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 18:50:50 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 1 18:50:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula "} 

 Player 2 18:50:52 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 18:50:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 

 Player 2 18:50:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula"} 

 Player 2 18:50:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[258],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":258,"effectCardPlayer":258},"entityId":6,"creatorCardId":317,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":258,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 18:50:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":45} 

 Player 2 18:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 18:50:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 18:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 18:50:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:50:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:50:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula \n2:Activate Fistula "} 

 Player 1 18:50:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[321]} 

 Player 1 18:50:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 18:50:53 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:50:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve CombatDamage 5 "}} 

 Player 2 18:50:53 $MONSTER_GET_DAMAGED:  
{"cardId":258,"hpLeft":3,"damageDealerId":317} 

 Player 2 18:50:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":317},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":258,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:50:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":317},{"type":0,"number":258}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 

 Player 2 18:50:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula"} 

 Player 2 18:50:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 18:50:53 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}]} 

 Player 1 18:50:53 $CLEAR_SE_VIS:  

 Player 1 18:50:53 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 1 18:50:53 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}]} 

 Player 1 18:50:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 18:50:53 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 1 18:50:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 18:50:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 18:50:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:50:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":317,"entityToDoDamageCardId":317,"entityToTakeDamageCardId":258,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 1 18:50:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":50} 

 Player 1 18:50:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 1 18:50:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 18:50:56 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 18:50:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 1 18:50:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 18:50:56 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 18:50:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Isaac combat damage to Fistula"} 

 Player 2 18:50:56 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[317,109,112,99,123]} 

 Player 2 18:50:56 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 18:50:56 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 18:50:56 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 18:50:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Stack Was Emptied "}} 

 Player 1 18:50:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:50:57 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":2} 

 Player 1 18:50:57 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 18:50:57 $CLEAR_SE_VIS:  

 Player 2 18:55:11 $MATCH: 