"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
var DecoratorFactory_1 = require("./DecoratorFactory");
var DecoratorType_1 = require("./DecoratorType");
var utils_1 = require("../../utils");
/**
 * create parameter decorator.
 *
 * @export
 * @template T metadata type.
 * @param {string} name decorator name.
 * @param {MetadataAdapter} [adapter]  metadata adapter
 * @param {MetadataExtends<T>} [metadataExtends] add extents for metadata.
 * @returns
 */
function createParamDecorator(name, adapter, metadataExtends) {
    var paramAdapter = (function (args) {
        if (adapter) {
            adapter(args);
        }
        args.next({
            isMetadata: function (arg) { return utils_1.isProvideMetadata(arg, 'index'); },
            match: function (arg) { return utils_1.isToken(arg); },
            setMetadata: function (metadata, arg) {
                metadata.provider = arg;
            }
        });
        // args.next<T>({
        //     match: (arg) => isString(arg),
        //     setMetadata: (metadata, arg) => {
        //         metadata.alias = arg;
        //     }
        // });
    });
    var decorator = DecoratorFactory_1.createDecorator(name, paramAdapter, metadataExtends);
    decorator.decoratorType = DecoratorType_1.DecoratorType.Parameter;
    return decorator;
}
exports.createParamDecorator = createParamDecorator;

//# sourceMappingURL=../../sourcemaps/core/factories/ParamDecoratorFactory.js.map
