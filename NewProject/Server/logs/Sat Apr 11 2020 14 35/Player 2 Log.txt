Start Log 
 Player 2 14:35:23 $MOVE_TO_TABLE:  
 Player 2 14:35:33 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 14:35:33 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":318} 
 Player 2 14:35:33 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":325,"itemCardId":326} 
 Player 2 14:35:33 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[77,63,83,93,91,87,115,45,25,8,26,81,23,58,37,90,71,49,42,110,108,27,55,124,5,74,117,137,30,24,114,33,29,106,64,107,6,36,131,59,102,118,39,127,68,94,56,95,20,97,18,62,17,69,10,123,41,119,14,136,72,89,82,38,22,52,104,61,122,101,128,60,109,125,100,32,105,57,15,85,19,80,121,111,103,28,16,132,88,34,120,75,126,130,54,67,98,112,96,113,43,46,21,73,133,99,76,138,31,44,66,4,51,134,92,65,47,86,78,129,12,84,50,135,40,13,79,35,48,139,7,70,11,9,53,116]} 
 Player 2 14:35:33 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[277,305,291,278,261,290,292,289,225,295,267,232,266,268,274,265,272,245,297,271,224,288,307,243,227,238,285,255,298,222,240,257,306,282,263,293,246,256,233,283,258,308,248,252,273,276,253,294,303,262,296,269,264,254,259,302,260,247,287,270,231,281,244,239,241,301,275,237,249,250,299,280,242,279,229,284,230,235,300,251,223,236,234,228,286,304,226]} 
 Player 2 14:35:33 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[216,172,199,144,218,186,198,204,215,206,203,167,147,219,202,200,161,205,212,175,183,164,171,208,176,148,177,188,166,163,178,182,207,194,193,173,145,184,181,150,165,196,141,191,174,214,210,211,157,153,179,192,156,154,189,160,180,190,142,187,220,169,170,155,143,146,162,209,158,213,197,195,152,201,168,149,185,151,159,217]} 
 Player 2 14:35:33 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 14:35:33 $FLIP_CARD:  

 {"cardId":217} 
 Player 2 14:35:33 $ADD_STORE_CARD:  

 {"cardId":217} 
 Player 2 14:35:33 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 14:35:33 $FLIP_CARD:  

 {"cardId":159} 
 Player 2 14:35:33 $ADD_STORE_CARD:  

 {"cardId":159} 
 Player 2 14:35:33 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 14:35:33 $FLIP_CARD:  

 {"cardId":226} 
 Player 2 14:35:33 $REGISTER_PASSIVE_ITEM:  

 {"cardId":226} 
 Player 2 14:35:33 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":226} 
 Player 2 14:35:33 $NEW_MONSTER_ON_PLACE:  

 {"cardId":226,"monsterPlaceId":1} 
 Player 2 14:35:33 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 14:35:33 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":304} 
 Player 2 14:35:33 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 14:35:33 $FLIP_CARD:  

 {"cardId":286} 
 Player 2 14:35:33 $REGISTER_PASSIVE_ITEM:  

 {"cardId":286} 
 Player 2 14:35:33 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":286} 
 Player 2 14:35:33 $NEW_MONSTER_ON_PLACE:  

 {"cardId":286,"monsterPlaceId":2} 
 Player 2 14:35:33 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 14:35:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 14:35:34 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 14:35:34 $MOVE_CARD:  

 {"moveIndex":1,"cardId":116,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 14:35:34 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":116} 
 Player 2 14:35:34 $FLIP_CARD:  

 {"cardId":116} 
 Player 2 14:35:34 $FLIP_CARD:  

 {"cardId":116} 
 Player 2 14:35:34 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":116} 
 Player 2 14:35:34 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 14:35:34 $MOVE_CARD:  

 {"moveIndex":2,"cardId":53,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 14:35:34 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":53} 
 Player 2 14:35:34 $FLIP_CARD:  

 {"cardId":53} 
 Player 2 14:35:35 $FLIP_CARD:  

 {"cardId":53} 
 Player 2 14:35:35 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":53} 
 Player 2 14:35:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 14:35:35 $MOVE_CARD:  

 {"moveIndex":3,"cardId":9,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 14:35:35 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":9} 
 Player 2 14:35:35 $FLIP_CARD:  

 {"cardId":9} 
 Player 2 14:35:35 $FLIP_CARD:  

 {"cardId":9} 
 Player 2 14:35:35 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":9} 
 Player 2 14:35:35 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 14:35:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 14:35:35 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 14:35:35 $MOVE_CARD:  

 {"moveIndex":4,"cardId":11,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 14:35:36 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":11} 
 Player 2 14:35:36 $FLIP_CARD:  

 {"cardId":11} 
 Player 2 14:35:36 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":11} 
 Player 2 14:35:36 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 14:35:36 $MOVE_CARD:  

 {"moveIndex":5,"cardId":70,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 14:35:36 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":70} 
 Player 2 14:35:36 $FLIP_CARD:  

 {"cardId":70} 
 Player 2 14:35:36 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":70} 
 Player 2 14:35:36 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 14:35:36 $MOVE_CARD:  

 {"moveIndex":6,"cardId":7,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 14:35:37 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":7} 
 Player 2 14:35:37 $FLIP_CARD:  

 {"cardId":7} 
 Player 2 14:35:37 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":7} 
 Player 2 14:35:37 $GAME_HAS_STARTED:  
 Player 2 14:35:37 $SET_TURN:  

 {"playerId":1} 
 Player 2 14:35:37 $START_TURN:  

 {"playerId":1} 
 Player 2 14:35:37 $UPDATE_ACTIONS:  
 Player 2 14:35:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:35:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 14:35:40 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 14:35:40 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:35:40 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":139,"flipIfFlipped":false,"playerId":1} 
 Player 2 14:35:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 14:35:44 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 14:35:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:35:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:35:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(4) "} 
 Player 2 14:36:00 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":9,"flipIfFlipped":true,"playerId":1} 
 Player 2 14:36:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(4) "} 
 Player 2 14:36:00 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 14:36:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:36:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(4) "} 
 Player 2 14:36:03 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":9,"flipIfFlipped":true,"playerId":1} 
 Player 2 14:36:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(4) "} 
 Player 2 14:36:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 play 1 Penny(4) "} 
 Player 2 14:36:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326]} 
 Player 2 14:36:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:36:07 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 14:36:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:07 $NEXT_STACK_ID:  
 Player 2 14:36:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 14:36:07 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 14:36:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 14:36:07 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 14:36:07 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 14:36:07 $CLEAR_SE_VIS:  
 Player 2 14:36:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add StartTurnLoot 3 "}} 
 Player 2 14:36:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 14:36:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding StartTurnLoot 3"},"childOfId":20} 
 Player 2 14:36:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 14:36:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:10 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 14:36:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 14:36:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 14:36:10 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 14:36:10 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 14:36:11 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 14:36:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve StartTurnLoot 3 "}} 
 Player 2 14:36:11 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 14:36:11 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 14:36:11 $MOVE_CARD:  

 {"moveIndex":10,"cardId":48,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 14:36:11 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":48} 
 Player 2 14:36:11 $FLIP_CARD:  

 {"cardId":48} 
 Player 2 14:36:11 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":48} 
 Player 2 14:36:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 14:36:11 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 2 14:36:11 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 14:36:11 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 14:36:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 2 14:36:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve StartTurnLoot 3  "}} 
 Player 2 14:36:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:36:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13}} 
 Player 2 14:36:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve StartTurnLoot 3"},"childOfId":25} 
 Player 2 14:36:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 14:36:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 14:36:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 14:36:14 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 14:36:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 14:36:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:15 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 14:36:15 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 14:36:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 2 14:36:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:36:15 $CLEAR_SE_VIS:  
 Player 2 14:36:16 $NEXT_STACK_ID:  
 Player 2 14:36:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Blastocyst"} 
 Player 2 14:36:16 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":226,"stackEffectType":4}} 
 Player 2 14:36:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":226,"stackEffectType":4}} 
 Player 2 14:36:16 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 14:36:16 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 14:36:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Add DeclareAttack 4 "}} 
 Player 2 14:36:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":226,"stackEffectType":4}} 
 Player 2 14:36:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Adding DeclareAttack 4"},"childOfId":30} 
 Player 2 14:36:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 14:36:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:19 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 14:36:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 14:36:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 14:36:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 14:36:19 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 14:36:20 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 14:36:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve DeclareAttack 4 "}} 
 Player 2 14:36:20 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":226,"stackEffectType":4}} 
 Player 2 14:36:20 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":226,"particleType":5} 
 Player 2 14:36:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 
 Player 2 14:36:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":226,"stackEffectType":4}} 
 Player 2 14:36:20 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 2 14:36:20 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 14:36:20 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 14:36:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 2 14:36:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Remove After Resolve DeclareAttack 4  "}} 
 Player 2 14:36:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:36:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":226,"stackEffectType":4}} 
 Player 2 14:36:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":35} 
 Player 2 14:36:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 14:36:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 14:36:23 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 14:36:23 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 14:36:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 14:36:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:23 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 14:36:23 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 14:36:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 2 14:36:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:36:23 $CLEAR_SE_VIS:  
 Player 2 14:36:25 $NEXT_STACK_ID:  
 Player 2 14:36:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Blastocyst<Monster>"} 
 Player 2 14:36:25 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":226}} 
 Player 2 14:36:25 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":226}} 
 Player 2 14:36:25 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 14:36:25 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 2 14:36:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Add AttackRoll 5 "}} 
 Player 2 14:36:28 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 14:36:30 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 14:36:30 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"player rolled 1 vs Blastocyst<Monster>"} 
 Player 2 14:36:30 $SHOW_DICE_ROLL:  

 {"stackId":5} 
 Player 2 14:36:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Blastocyst<Monster>"} 
 Player 2 14:36:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":226}} 
 Player 2 14:36:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Response Adding AttackRoll 5"},"childOfId":40} 
 Player 2 14:36:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 14:36:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:33 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 14:36:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 14:36:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 14:36:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 14:36:36 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 14:36:36 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 14:36:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Blastocyst<Monster>"} 
 Player 2 14:36:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Blastocyst<Monster> \n2:Player 1 activated The D6"} 
 Player 2 14:36:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Blastocyst<Monster> \n2:Player 1 activated The D6"} 
 Player 2 14:36:39 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,11,70,7,48]} 
 Player 2 14:36:39 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:36:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Blastocyst<Monster> \n2:Player 1 activated The D6"} 
 Player 2 14:36:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Blastocyst<Monster> \n2:Player 1 activated The D6"} 
 Player 2 14:36:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Blastocyst<Monster> \n2:Player 1 activated The D6"} 
 Player 2 14:36:49 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,11,70,7,48]} 
 Player 2 14:36:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:36:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Blastocyst<Monster>"} 
 Player 2 14:36:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Added 0 to original roll"}} 
 Player 2 14:36:49 $NEXT_STACK_ID:  
 Player 2 14:36:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Blastocyst<Monster>"} 
 Player 2 14:36:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst combat damage to The Lost \n2:Player 2 is rolling against Blastocyst<Monster>"} 
 Player 2 14:36:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":226,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 14:36:50 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 14:36:50 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Player 2 14:36:52 $CLEAR_SE_VIS:  
 Player 2 14:36:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst combat damage to The Lost \n2:Player 2 is rolling against Blastocyst<Monster>"} 
 Player 2 14:36:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":226,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 14:36:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":226}} 
 Player 2 14:36:53 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":226,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":5,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":226}]} 
 Player 2 14:36:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":4,"originStackId":5},"isAfterActivation":true,"index":4} 
 Player 2 14:36:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":226}} 
 Player 2 14:36:53 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":226,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":5,"creatorCardId":325,"numberRolled":1,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":226}]} 
 Player 2 14:36:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst combat damage to The Lost \n2:Player 2 is rolling against Blastocyst<Monster>"} 
 Player 2 14:36:56 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,11,70,7,48]} 
 Player 2 14:36:56 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:36:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst 1 combat damage to The Lost"} 
 Player 2 14:36:57 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"Blastocyst will deal 1 combat damage to The Lost"} 
 Player 2 14:36:57 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":226} 
 Player 2 14:36:57 $NEXT_STACK_ID:  
 Player 2 14:36:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:36:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 14:36:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":226}} 
 Player 2 14:36:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 14:36:57 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 2 14:37:00 $CLEAR_SE_VIS:  
 Player 2 14:37:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 14:37:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":226,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1}} 
 Player 2 14:37:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":226}} 
 Player 2 14:37:00 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":226,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":226}]} 
 Player 2 14:37:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":226}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 14:37:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":226}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 
 Player 2 14:37:00 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":226,"entityToTakeDamageCardId":325,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1},{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":226}]} 
 Player 2 14:37:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst 1 combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 14:37:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst combat damage to The Lost \n2:Player 2 is about to die"} 
 Player 2 14:37:03 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,11,70,7,48]} 
 Player 2 14:37:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blastocyst combat damage to The Lost"} 
 Player 2 14:37:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":226,"particleType":5} 
 Player 2 14:37:04 $CANCEL_ATTACK:  
 Player 2 14:37:04 $NEXT_STACK_ID:  
 Player 2 14:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 14:37:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:37:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 14:37:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 14:37:04 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 14:37:04 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 2 14:37:07 $CLEAR_SE_VIS:  
 Player 2 14:37:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 14:37:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":226}} 
 Player 2 14:37:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 14:37:07 $REPLACE_STACK:  

 {"currentStack":[{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":226},{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 2 14:37:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":226}} 
 Player 2 14:37:07 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":8,"creatorCardId":325,"playerToDieCardId":325,"stackEffectType":15,"killerId":226},{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 2 14:37:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 14:37:11 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[325,326,11,70,7,48]} 
 Player 2 14:37:11 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:37:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 14:37:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Player 2 pays Penalties"}} 
 Player 2 14:37:11 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Player 2 14:37:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 14:37:55 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":7} 
 Player 2 14:37:55 $MOVE_CARD:  

 {"moveIndex":11,"cardId":7,"placeID":328,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 14:37:56 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":7} 
 Player 2 14:37:56 $USE_ITEM:  

 {"cardId":325} 
 Player 2 14:37:56 $USE_ITEM:  

 {"cardId":326} 
 Player 2 14:37:56 $PLAYER_DIED:  

 {"playerId":2} 
 Player 2 14:37:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 14:37:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}} 
 Player 2 14:37:56 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":9,"creatorCardId":325,"playerToPayCardId":325,"stackEffectType":16}]} 
 Player 2 14:38:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 14:38:00 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[11,70,48]} 
 Player 2 14:38:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:38:00 $CLEAR_SE_VIS:  
 Player 2 14:38:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 14:38:00 $CLEAR_SE_VIS:  
 Player 2 14:38:00 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 14:38:00 $CLEAR_SE_VIS:  
 Player 2 14:38:00 $END_TURN:  
 Player 2 14:38:00 $SET_TURN:  

 {"playerId":1} 
 Player 2 14:38:00 $START_TURN:  

 {"playerId":1} 
 Player 2 14:38:00 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 14:38:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:38:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 14:38:03 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 14:38:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:38:04 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":35,"flipIfFlipped":false,"playerId":1} 
 Player 2 14:38:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 14:38:07 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 14:38:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:38:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Mega Fatty"} 
 Player 2 14:38:15 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 14:38:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:38:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Mega Fatty"} 
 Player 2 14:38:18 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 14:38:18 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:38:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 14:38:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster>"} 
 Player 2 14:38:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster>"} 
 Player 2 14:38:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster>"} 
 Player 2 14:38:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster> \n2:Player 1 play Pill White "} 
 Player 2 14:38:40 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":116,"flipIfFlipped":true,"playerId":1} 
 Player 2 14:38:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster> \n2:Player 1 play Pill White "} 
 Player 2 14:38:44 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Player 2 14:38:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 14:38:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster> \n2:Player 1 play Pill White "} 
 Player 2 14:38:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster> \n2:Player 1 play Pill White "} 
 Player 2 14:38:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster> \n2:Player 1 play Pill White  \n3:Player 1 roll a dice"} 
 Player 2 14:38:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster> \n2:Player 1 play Pill White  \n3:Player 1 roll a dice"} 
 Player 2 14:38:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster> \n2:Player 1 play Pill White  \n3:Player 1 roll a dice"} 
 Player 2 14:38:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mega Fatty<Monster> \n2:Player 1 play Pill White  \n3:Player 1 roll a dice \n4:Player 1 activated The D6"} 
 Player 2 14:56:27 $MATCH: 