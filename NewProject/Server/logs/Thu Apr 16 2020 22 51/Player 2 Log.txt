Start Log 
 Player 2 22:51:10 $MOVE_TO_TABLE:  
 Player 2 22:51:26 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 22:51:26 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":313,"itemCardId":314} 
 Player 2 22:51:27 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":321,"itemCardId":322} 
 Player 2 22:51:27 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[34,62,68,69,45,76,112,32,41,35,101,107,120,106,66,113,46,30,126,85,97,60,70,77,8,51,49,16,37,116,121,114,82,25,117,109,122,96,90,44,99,48,79,5,65,21,31,87,53,86,50,94,27,52,137,124,128,102,111,57,131,135,127,39,23,74,136,20,6,59,47,134,26,14,18,22,98,93,118,71,61,9,29,105,17,13,56,92,78,83,100,89,42,11,133,75,38,36,19,139,33,123,24,119,15,81,80,64,67,91,104,63,28,73,103,138,110,88,58,12,7,40,54,55,129,125,95,4,108,132,10,130,84,115,43,72]} 
 Player 2 22:51:27 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[291,245,225,285,280,259,271,281,231,240,299,238,241,270,239,237,260,234,246,304,228,300,309,286,288,230,233,250,236,279,278,276,256,229,235,262,301,295,264,265,224,227,242,277,274,296,303,287,302,267,263,253,290,261,273,310,251,255,269,272,294,247,297,249,284,292,226,254,306,289,248,282,257,305,244,298,293,266,283,275,268,223,307,252,258,243,232,308]} 
 Player 2 22:51:27 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[219,190,201,221,159,176,187,158,166,149,153,164,206,198,144,182,165,143,202,170,217,180,169,150,174,141,163,215,200,179,172,212,154,195,191,197,175,210,178,145,171,184,183,209,213,192,193,204,142,173,194,214,220,196,181,216,188,162,203,208,152,156,199,161,168,160,189,148,177,147,186,205,211,218,207,167,146,155,185,151,157]} 
 Player 2 22:51:27 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 22:51:27 $FLIP_CARD:  

 {"cardId":157} 
 Player 2 22:51:27 $ADD_STORE_CARD:  

 {"cardId":157} 
 Player 2 22:51:27 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 22:51:27 $FLIP_CARD:  

 {"cardId":151} 
 Player 2 22:51:27 $ADD_STORE_CARD:  

 {"cardId":151} 
 Player 2 22:51:27 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 22:51:27 $FLIP_CARD:  

 {"cardId":308} 
 Player 2 22:51:27 $REGISTER_PASSIVE_ITEM:  

 {"cardId":308} 
 Player 2 22:51:27 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":308} 
 Player 2 22:51:27 $NEW_MONSTER_ON_PLACE:  

 {"cardId":308,"monsterPlaceId":1} 
 Player 2 22:51:27 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 22:51:27 $FLIP_CARD:  

 {"cardId":232} 
 Player 2 22:51:27 $REGISTER_PASSIVE_ITEM:  

 {"cardId":232} 
 Player 2 22:51:27 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":232} 
 Player 2 22:51:27 $NEW_MONSTER_ON_PLACE:  

 {"cardId":232,"monsterPlaceId":2} 
 Player 2 22:51:27 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 22:51:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 22:51:27 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:51:27 $MOVE_CARD:  

 {"moveIndex":1,"cardId":72,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:51:28 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":72} 
 Player 2 22:51:28 $FLIP_CARD:  

 {"cardId":72} 
 Player 2 22:51:28 $FLIP_CARD:  

 {"cardId":72} 
 Player 2 22:51:28 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":72} 
 Player 2 22:51:28 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:51:28 $MOVE_CARD:  

 {"moveIndex":2,"cardId":43,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:51:28 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":43} 
 Player 2 22:51:28 $FLIP_CARD:  

 {"cardId":43} 
 Player 2 22:51:28 $FLIP_CARD:  

 {"cardId":43} 
 Player 2 22:51:28 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":43} 
 Player 2 22:51:28 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:51:28 $MOVE_CARD:  

 {"moveIndex":3,"cardId":115,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:51:29 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":115} 
 Player 2 22:51:29 $FLIP_CARD:  

 {"cardId":115} 
 Player 2 22:51:29 $FLIP_CARD:  

 {"cardId":115} 
 Player 2 22:51:29 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":115} 
 Player 2 22:51:29 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 22:51:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 22:51:29 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:51:29 $MOVE_CARD:  

 {"moveIndex":4,"cardId":84,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:51:29 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":84} 
 Player 2 22:51:29 $FLIP_CARD:  

 {"cardId":84} 
 Player 2 22:51:29 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":84} 
 Player 2 22:51:29 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:51:29 $MOVE_CARD:  

 {"moveIndex":5,"cardId":130,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:51:30 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":130} 
 Player 2 22:51:30 $FLIP_CARD:  

 {"cardId":130} 
 Player 2 22:51:30 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":130} 
 Player 2 22:51:30 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:51:30 $MOVE_CARD:  

 {"moveIndex":6,"cardId":10,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:51:30 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":10} 
 Player 2 22:51:30 $FLIP_CARD:  

 {"cardId":10} 
 Player 2 22:51:30 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":10} 
 Player 2 22:51:30 $GAME_HAS_STARTED:  
 Player 2 22:51:30 $SET_TURN:  

 {"playerId":1} 
 Player 2 22:51:30 $START_TURN:  

 {"playerId":1} 
 Player 2 22:51:30 $UPDATE_ACTIONS:  
 Player 2 22:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:51:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:51:33 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:51:33 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:51:34 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":132,"flipIfFlipped":false,"playerId":1} 
 Player 2 22:51:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:51:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:51:37 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:51:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:51:43 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":287,"flipIfFlipped":true,"playerId":1} 
 Player 2 22:51:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:51:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Mask of Infamy"} 
 Player 2 22:51:48 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:51:48 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:51:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Mask of Infamy"} 
 Player 2 22:51:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Mask of Infamy"} 
 Player 2 22:51:52 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:51:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:51:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:51:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 
 Player 2 22:52:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 
 Player 2 22:52:00 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:52:00 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:52:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 
 Player 2 22:52:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Mask of Infamy<Monster>"} 
 Player 2 22:52:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:Player 1 is rolling against Mask of Infamy<Monster>"} 
 Player 2 22:52:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:Player 1 is rolling against Mask of Infamy<Monster>"} 
 Player 2 22:52:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:52:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:52:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy"} 
 Player 2 22:52:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Blue Baby"} 
 Player 2 22:52:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Blue Baby"} 
 Player 2 22:52:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Blue Baby"} 
 Player 2 22:52:13 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:52:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:52:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy"} 
 Player 2 22:52:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Mask of Infamy"} 
 Player 2 22:52:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Blue Baby"} 
 Player 2 22:52:19 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:52:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:52:20 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":185,"flipIfFlipped":true,"playerId":1} 
 Player 2 22:52:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward"} 
 Player 2 22:52:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:52:23 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:52:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:52:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:52:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:52:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:52:28 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:52:28 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:52:29 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":287,"flipIfFlipped":true,"playerId":1} 
 Player 2 22:52:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Mask of Infamy<Monster>'s Reward"} 
 Player 2 22:52:32 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:52:32 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:52:55 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":247,"flipIfFlipped":true,"playerId":1} 
 Player 2 22:52:57 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 22:52:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:52:57 $NEXT_STACK_ID:  
 Player 2 22:52:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 22:52:57 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:52:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:52:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 22:52:57 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 2 22:52:57 $CLEAR_SE_VIS:  
 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Add StartTurnLoot 8 "}} 
 Player 2 22:53:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Response Adding StartTurnLoot 8"},"childOfId":56} 
 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 2 "},"childOfId":56} 
 Player 2 22:53:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:00 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 2 22:53:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:53:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:53:00 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 22:53:00 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 2 22:53:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Resolve StartTurnLoot 8 "}} 
 Player 2 22:53:00 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:53:00 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:53:00 $MOVE_CARD:  

 {"moveIndex":12,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:53:01 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":108} 
 Player 2 22:53:01 $FLIP_CARD:  

 {"cardId":108} 
 Player 2 22:53:01 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":108} 
 Player 2 22:53:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 22:53:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:53:01 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":8} 
 Player 2 22:53:01 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 22:53:01 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 2 22:53:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":8} 
 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Remove After Resolve StartTurnLoot 8  "}} 
 Player 2 22:53:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:53:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Response Remove After Resolve StartTurnLoot 8"},"childOfId":61} 
 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 
 Player 2 22:53:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:53:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:53:04 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 
 Player 2 22:53:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:04 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 22:53:04 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 2 22:53:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Stack Was Emptied "}} 
 Player 2 22:53:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:53:04 $CLEAR_SE_VIS:  
 Player 2 22:53:20 $MOVE_CARD:  

 {"moveIndex":13,"cardId":82,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 22:53:21 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[34,62,68,69,45,76,112,32,41,35,101,107,120,106,66,113,46,30,126,85,97,60,70,77,8,51,49,16,37,116,121,114,25,117,109,122,96,90,44,99,48,79,5,65,21,31,87,53,86,50,94,27,52,137,124,128,102,111,57,131,135,127,39,23,74,136,20,6,59,47,134,26,14,18,22,98,93,118,71,61,9,29,105,17,13,56,92,78,83,100,89,42,11,133,75,38,36,19,139,33,123,24,119,15,81,80,64,67,91,104,63,28,73,103,138,110,88,58,12,7,40,54,55,129,125,95,4]} 
 Player 2 22:53:21 $FLIP_CARD:  

 {"cardId":82} 
 Player 2 22:53:21 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":82} 
 Player 2 22:53:23 $NEXT_STACK_ID:  
 Player 2 22:53:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 
 Player 2 22:53:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 22:53:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 22:53:24 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 22:53:24 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 2 22:53:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Add PlayLootCardStackEffect 9 "}} 
 Player 2 22:53:27 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":82} 
 Player 2 22:53:27 $MOVE_CARD:  

 {"moveIndex":14,"cardId":82,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 22:53:27 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":82} 
 Player 2 22:53:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny: AddTrinket"} 
 Player 2 22:53:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:53:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Response Adding PlayLootCardStackEffect 9"},"childOfId":66} 
 Player 2 22:53:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 2 22:53:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:27 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 2 22:53:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 2 22:53:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:53:27 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:53:27 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 22:53:27 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 22:53:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Resolve PlayLootCardStackEffect 9 "}} 
 Player 2 22:53:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny: AddTrinket"} 
 Player 2 22:53:27 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":82,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:53:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Bloody Penny: AddTrinket"} 
 Player 2 22:53:27 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":82,"particleType":6} 
 Player 2 22:53:29 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":82,"particleType":6} 
 Player 2 22:53:29 $CARD_ADD_TRINKET:  

 {"cardId":82,"playerId":2,"addMuiliEffect":false} 
 Player 2 22:53:29 $REMOVE_FROM_PILE:  

 {"cardId":82} 
 Player 2 22:53:29 $REGISTER_PASSIVE_ITEM:  

 {"cardId":82} 
 Player 2 22:53:29 $MOVE_CARD:  

 {"moveIndex":15,"cardId":82,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 22:53:30 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":82,"isReward":true} 
 Player 2 22:53:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":82}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 22:53:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Bloody Penny: AddTrinket"} 
 Player 2 22:53:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:53:30 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":9} 
 Player 2 22:53:30 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 22:53:30 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 2 22:53:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":9} 
 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Remove After Resolve PlayLootCardStackEffect 9  "}} 
 Player 2 22:53:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:53:33 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":82,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Response Remove After Resolve PlayLootCardStackEffect 9"},"childOfId":71} 
 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":71} 
 Player 2 22:53:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:53:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:53:33 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":71} 
 Player 2 22:53:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:33 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 2 22:53:33 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 22:53:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Stack Was Emptied "}} 
 Player 2 22:53:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:53:33 $CLEAR_SE_VIS:  
 Player 2 22:53:41 $MOVE_CARD:  

 {"moveIndex":16,"cardId":123,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 22:53:41 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[34,62,68,69,45,76,112,32,41,35,101,107,120,106,66,113,46,30,126,85,97,60,70,77,8,51,49,16,37,116,121,114,25,117,109,122,96,90,44,99,48,79,5,65,21,31,87,53,86,50,94,27,52,137,124,128,102,111,57,131,135,127,39,23,74,136,20,6,59,47,134,26,14,18,22,98,93,118,71,61,9,29,105,17,13,56,92,78,83,100,89,42,11,133,75,38,36,19,139,33,24,119,15,81,80,64,67,91,104,63,28,73,103,138,110,88,58,12,7,40,54,55,129,125,95,4]} 
 Player 2 22:53:41 $FLIP_CARD:  

 {"cardId":123} 
 Player 2 22:53:41 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":123} 
 Player 2 22:53:44 $NEXT_STACK_ID:  
 Player 2 22:53:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Lilith"} 
 Player 2 22:53:44 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 22:53:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 22:53:44 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 22:53:44 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 2 22:53:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Add ActivateItem 10 "}} 
 Player 2 22:53:48 $SHOW_DECISION:  

 {"startCardId":321,"endCardId":123,"flipEndCard":true} 
 Player 2 22:53:51 $USE_ITEM:  

 {"cardId":321} 
 Player 2 22:53:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:53:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Response Adding ActivateItem 10"},"childOfId":76} 
 Player 2 22:53:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":76} 
 Player 2 22:53:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:51 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 2 22:53:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":76} 
 Player 2 22:53:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:53:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:53:52 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 2 22:53:52 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 22:53:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Resolve ActivateItem 10 "}} 
 Player 2 22:53:52 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:53:52 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":321,"particleType":6} 
 Player 2 22:53:54 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":321,"particleType":6} 
 Player 2 22:53:54 $NEXT_STACK_ID:  
 Player 2 22:53:54 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":123} 
 Player 2 22:53:54 $MOVE_CARD:  

 {"moveIndex":17,"cardId":123,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 22:53:54 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":123} 
 Player 2 22:53:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket \n2:Player 2 is going to activate Lilith"} 
 Player 2 22:53:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:53:54 $CLEAR_SE_VIS:  
 Player 2 22:53:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:53:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:53:54 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 22:53:54 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 22:53:54 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 2 22:53:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket \n2:Player 2 has activated Lilith"} 
 Player 2 22:53:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":321}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 22:53:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:53:57 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":10} 
 Player 2 22:53:57 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 22:53:57 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 2 22:54:00 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":10} 
 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Remove After Resolve ActivateItem 10  "}} 
 Player 2 22:54:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket"} 
 Player 2 22:54:00 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":321,"hasLockingStackEffect":false,"itemToPlayCardId":321,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Response Remove After Resolve ActivateItem 10"},"childOfId":81} 
 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Wait For Response From Player 2 "},"childOfId":81} 
 Player 2 22:54:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:54:00 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":81} 
 Player 2 22:54:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:54:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:54:00 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 2 22:54:00 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 22:54:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Resolve PlayLootCardStackEffect 11 "}} 
 Player 2 22:54:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny: AddTrinket"} 
 Player 2 22:54:00 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:54:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Swallowed Penny: AddTrinket"} 
 Player 2 22:54:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 22:54:02 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 22:54:02 $CARD_ADD_TRINKET:  

 {"cardId":123,"playerId":2,"addMuiliEffect":false} 
 Player 2 22:54:02 $REMOVE_FROM_PILE:  

 {"cardId":123} 
 Player 2 22:54:02 $REGISTER_PASSIVE_ITEM:  

 {"cardId":123} 
 Player 2 22:54:02 $MOVE_CARD:  

 {"moveIndex":18,"cardId":123,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 22:54:03 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":123,"isReward":true} 
 Player 2 22:54:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":123}],"result":true,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 22:54:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays Swallowed Penny: AddTrinket"} 
 Player 2 22:54:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:54:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":11} 
 Player 2 22:54:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 22:54:03 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 2 22:54:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":11} 
 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Remove After Resolve PlayLootCardStackEffect 11  "}} 
 Player 2 22:54:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:54:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":321,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":123,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Response Remove After Resolve PlayLootCardStackEffect 11"},"childOfId":86} 
 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Wait For Response From Player 1 "},"childOfId":86} 
 Player 2 22:54:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:54:06 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:54:06 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Wait For Response From Player 2 "},"childOfId":86} 
 Player 2 22:54:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:54:06 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 2 22:54:06 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 2 22:54:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Stack Was Emptied "}} 
 Player 2 22:54:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:54:06 $CLEAR_SE_VIS:  
 Player 2 22:54:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:54:07 $CLEAR_SE_VIS:  
 Player 2 22:54:07 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 22:54:07 $CLEAR_SE_VIS:  
 Player 2 22:54:07 $END_TURN:  
 Player 2 22:54:07 $SET_TURN:  

 {"playerId":1} 
 Player 2 22:54:07 $START_TURN:  

 {"playerId":1} 
 Player 2 22:54:07 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 22:54:07 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:54:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:54:10 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:54:10 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:54:11 $MOVE_CARD_END:  

 {"moveIndex":19,"cardId":4,"flipIfFlipped":false,"playerId":1} 
 Player 2 22:54:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:54:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:54:14 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:54:14 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:54:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:54:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 2 22:54:23 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:54:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:54:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 2 22:54:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Cursed Horf"} 
 Player 2 22:54:31 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:54:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:54:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:54:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 
 Player 2 22:54:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 
 Player 2 22:54:44 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:54:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:54:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 
 Player 2 22:54:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Horf<Monster>"} 
 Player 2 22:54:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:Player 1 is rolling against Cursed Horf<Monster>"} 
 Player 2 22:54:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:Player 1 is rolling against Cursed Horf<Monster>"} 
 Player 2 22:54:50 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:54:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:54:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Cursed Horf"} 
 Player 2 22:54:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:[object Object] Is Going To Be Killed by Blue Baby"} 
 Player 2 22:54:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:[object Object] Is Going To Be Killed by Blue Baby"} 
 Player 2 22:54:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Cursed Horf \n2:[object Object] Is Going To Be Killed by Blue Baby"} 
 Player 2 22:54:57 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:54:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:54:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Cursed Horf"} 
 Player 2 22:54:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Cursed Horf"} 
 Player 2 22:55:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Blue Baby"} 
 Player 2 22:55:03 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:55:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward"} 
 Player 2 22:55:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:55:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:55:06 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:55:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:55:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:55:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward \n2:Activate Midas Touch "} 
 Player 2 22:55:12 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:55:12 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:12 $MOVE_CARD_END:  

 {"moveIndex":20,"cardId":243,"flipIfFlipped":true,"playerId":1} 
 Player 2 22:55:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Horf<Monster>'s Reward"} 
 Player 2 22:55:15 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[322]} 
 Player 2 22:55:15 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:22 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 22:55:22 $RECHARGE_ITEM:  

 {"cardId":321} 
 Player 2 22:55:22 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":321} 
 Player 2 22:55:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:55:22 $NEXT_STACK_ID:  
 Player 2 22:55:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 22:55:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:55:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:55:22 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 22:55:22 $SHOW_STACK_EFFECT:  

 {"effectId":19} 
 Player 2 22:55:22 $CLEAR_SE_VIS:  
 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":147,"_text":"Add StartTurnLoot 19 "}} 
 Player 2 22:55:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:55:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":148,"_text":"Response Adding StartTurnLoot 19"},"childOfId":147} 
 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":147} 
 Player 2 22:55:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:55:25 $ACTION_MASSAGE_REMOVE:  

 {"id":149} 
 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":150,"_text":"Wait For Response From Player 1 "},"childOfId":147} 
 Player 2 22:55:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:55:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:55:25 $ACTION_MASSAGE_REMOVE:  

 {"id":150} 
 Player 2 22:55:25 $ACTION_MASSAGE_REMOVE:  

 {"id":148} 
 Player 2 22:55:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":151,"_text":"Resolve StartTurnLoot 19 "}} 
 Player 2 22:55:25 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:55:25 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 22:55:25 $MOVE_CARD:  

 {"moveIndex":21,"cardId":95,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 22:55:26 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":95} 
 Player 2 22:55:26 $FLIP_CARD:  

 {"cardId":95} 
 Player 2 22:55:26 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":95} 
 Player 2 22:55:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 22:55:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:55:26 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":19} 
 Player 2 22:55:26 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 22:55:26 $SHOW_STACK_EFFECT:  

 {"effectId":19} 
 Player 2 22:55:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":19} 
 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":152,"_text":"Remove After Resolve StartTurnLoot 19  "}} 
 Player 2 22:55:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:55:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":19,"creatorCardId":321,"turnPlayerCardId":321,"stackEffectType":13}} 
 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":153,"_text":"Response Remove After Resolve StartTurnLoot 19"},"childOfId":152} 
 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":154,"_text":"Wait For Response From Player 1 "},"childOfId":152} 
 Player 2 22:55:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:55:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 22:55:29 $ACTION_MASSAGE_REMOVE:  

 {"id":154} 
 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":155,"_text":"Wait For Response From Player 2 "},"childOfId":152} 
 Player 2 22:55:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:55:29 $ACTION_MASSAGE_REMOVE:  

 {"id":155} 
 Player 2 22:55:29 $ACTION_MASSAGE_REMOVE:  

 {"id":153} 
 Player 2 22:55:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":156,"_text":"Stack Was Emptied "}} 
 Player 2 22:55:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:55:29 $CLEAR_SE_VIS:  
 Player 2 22:55:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 22:55:29 $CLEAR_SE_VIS:  
 Player 2 22:55:29 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 22:55:29 $CLEAR_SE_VIS:  
 Player 2 22:55:29 $END_TURN:  
 Player 2 22:55:29 $SET_TURN:  

 {"playerId":1} 
 Player 2 22:55:29 $START_TURN:  

 {"playerId":1} 
 Player 2 22:55:30 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 22:55:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:55:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:55:33 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:55:33 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:33 $MOVE_CARD_END:  

 {"moveIndex":22,"cardId":125,"flipIfFlipped":false,"playerId":1} 
 Player 2 22:55:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:55:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 2 22:55:37 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:55:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:55:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 
 Player 2 22:55:46 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:55:46 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 
 Player 2 22:55:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Carrion Queen"} 
 Player 2 22:55:49 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:55:49 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 22:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 
 Player 2 22:55:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 
 Player 2 22:55:59 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:55:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:55:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 
 Player 2 22:55:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Carrion Queen<Monster>"} 
 Player 2 22:56:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster>"} 
 Player 2 22:56:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 22:56:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 22:56:05 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:56:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:56:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 22:56:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 22:56:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 2 22:56:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 2 22:56:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:56:10 $END_PUT_ON_STACK:  

 {"playerId":1} 
 Player 2 22:56:10 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:56:11 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:56:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 2 22:56:11 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 22:56:13 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 22:56:13 $SET_MONEY:  

 {"playerId":2,"numOfCoins":4} 
 Player 2 22:56:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 22:56:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":{"type":2,"number":1}},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":18},"isAfterActivation":true,"index":18} 
 Player 2 22:56:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activated Swallowed Penny Effect"} 
 Player 2 22:56:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:56:13 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":25,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":18,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 22:56:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activated Swallowed Penny Effect"} 
 Player 2 22:56:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 2 22:56:16 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:56:16 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:56:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor "} 
 Player 2 22:56:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die"} 
 Player 2 22:56:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die"} 
 Player 2 22:56:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 
 Player 2 22:56:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 
 Player 2 22:56:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 
 Player 2 22:56:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 
 Player 2 22:56:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:56:28 $END_PUT_ON_STACK:  

 {"playerId":1} 
 Player 2 22:56:28 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:56:28 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:56:28 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 22:56:30 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":123,"particleType":6} 
 Player 2 22:56:30 $SET_MONEY:  

 {"playerId":2,"numOfCoins":5} 
 Player 2 22:56:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 22:56:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":{"type":2,"number":1}},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":20},"isAfterActivation":true,"index":20} 
 Player 2 22:56:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activated Swallowed Penny Effect"} 
 Player 2 22:56:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:56:30 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":4}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":4}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":28,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 2 22:56:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activated Swallowed Penny Effect"} 
 Player 2 22:56:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 
 Player 2 22:56:34 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:56:34 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:56:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Has Died"} 
 Player 2 22:56:34 $NEXT_STACK_ID:  
 Player 2 22:56:34 $CLEAR_SE_VIS:  
 Player 2 22:56:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Has Died \n6:Player 2 Is About To Pay Death Penalties"} 
 Player 2 22:56:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 22:56:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Player 2 22:56:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 22:56:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247}} 
 Player 2 22:56:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 
 Player 2 22:56:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 
 Player 2 22:56:34 $REPLACE_STACK:  

 {"currentStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}]} 
 Player 2 22:56:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}} 
 Player 2 22:56:35 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 22:56:35 $SHOW_STACK_EFFECT:  

 {"effectId":29} 
 Player 2 22:56:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 22:56:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Has Died \n6:Player 2 Is About To Pay Death Penalties"} 
 Player 2 22:56:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 
 Player 2 22:56:37 $FINISH_DO_STACK_EFFECT:  

 {"playerId":1,"newStack":[{"entityId":23,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":22,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[313,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":24,"creatorCardId":313,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}}}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":16,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":26,"creatorCardId":313,"playerToDieCardId":313,"stackEffectType":15,"killerId":247},{"entityId":27,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"entityId":29,"creatorCardId":321,"playerToPayCardId":321,"stackEffectType":16}]} 
 Player 2 22:56:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Has Died \n6:Player 2 Is About To Pay Death Penalties"} 
 Player 2 22:56:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Player 2 Is About To Pay Death Penalties"} 
 Player 2 22:56:41 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[321,322]} 
 Player 2 22:56:41 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 22:56:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Blue Baby is going to hurt Carrion Queen \n2:Player 1 is rolling against Carrion Queen<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 
 Player 2 22:56:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":213,"_text":"Player 2 pays Penalties"}} 
 Player 2 22:56:41 $SET_MONEY:  

 {"playerId":2,"numOfCoins":4} 
 Player 2 22:56:41 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 
 Player 2 22:59:08 $MATCH: 