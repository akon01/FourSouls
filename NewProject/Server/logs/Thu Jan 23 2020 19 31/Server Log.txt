Start Log 

 Player 1 19:31:28 $MATCH:  

 Player 1 19:31:29 $START_GAME:  

 Player 2 19:31:29 $MOVE_TO_TABLE:  

 Player 1 19:31:29 $MOVE_TO_TABLE:  

 Player 1 19:31:33 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 19:31:35 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 19:31:35 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":290,"itemCardId":291} 

 Player 2 19:31:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":293}],"result":true,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 19:31:35 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":292,"itemCardId":293} 

 Player 2 19:31:35 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[72,100,142,11,8,77,97,87,93,94,124,54,119,84,61,98,127,48,41,82,123,96,70,49,115,67,125,139,69,120,107,33,46,85,47,14,32,105,138,16,40,80,13,18,12,25,62,7,58,59,57,44,75,101,109,53,133,55,23,140,37,34,113,134,26,141,35,10,9,130,108,136,78,42,79,65,129,50,118,126,21,116,122,90,95,89,81,52,56,20,17,112,106,121,43,135,99,19,92,31,76,111,38,68,24,66,104,83,103,15,27,117,131,29,114,73,45,137,102,60,110,39,71,28,86,63,132,128,30,88,22,51,91,36,74,64]} 

 Player 2 19:31:35 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[234,229,276,253,272,262,264,266,281,265,239,247,271,230,280,278,277,268,250,244,273,251,238,256,279,242,245,243,241,274,260,231,249,259,263,232,257,255,246,269,275,248,235,236,252,261,267,237,254,233,270,240,228,258]} 

 Player 2 19:31:35 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[196,195,179,212,194,222,211,201,217,214,216,171,202,148,166,150,157,159,218,219,213,184,162,221,203,192,205,170,152,160,187,173,220,147,209,225,174,199,186,193,207,182,149,161,200,183,180,210,206,145,208,224,204,153,167,191,164,169,190,156,189,178,188,223,176,175,185,168,155,163,165,158,151,177,198,181,197,154,146,215,172]} 

 Player 2 19:31:35 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:31:35 $FLIP_CARD:  
{"cardId":172} 

 Player 2 19:31:35 $ADD_STORE_CARD:  
{"cardId":172} 

 Player 2 19:31:35 $DRAW_CARD:  
{"deckType":5} 

 Player 2 19:31:35 $FLIP_CARD:  
{"cardId":215} 

 Player 2 19:31:35 $ADD_STORE_CARD:  
{"cardId":215} 

 Player 2 19:31:35 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:31:35 $FLIP_CARD:  
{"cardId":258} 

 Player 2 19:31:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":258} 

 Player 2 19:31:35 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":258} 

 Player 2 19:31:35 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":1} 

 Player 2 19:31:35 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:31:35 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":228} 

 Player 2 19:31:36 $DRAW_CARD:  
{"deckType":2} 

 Player 2 19:31:36 $FLIP_CARD:  
{"cardId":240} 

 Player 2 19:31:36 $REGISTER_PASSIVE_ITEM:  
{"cardId":240} 

 Player 2 19:31:36 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":240} 

 Player 2 19:31:36 $NEW_MONSTER_ON_PLACE:  
{"cardId":240,"monsterPlaceId":2} 

 Player 2 19:31:36 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 19:31:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 19:31:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:31:36 $MOVE_CARD:  
{"moveIndex":1,"cardId":64,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:31:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 19:31:36 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":64,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:31:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":64} 

 Player 2 19:31:36 $FLIP_CARD:  
{"cardId":64} 

 Player 2 19:31:36 $FLIP_CARD:  
{"cardId":64} 

 Player 2 19:31:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":64} 

 Player 2 19:31:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:31:36 $MOVE_CARD:  
{"moveIndex":2,"cardId":74,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:31:37 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":74,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:31:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":74} 

 Player 2 19:31:37 $FLIP_CARD:  
{"cardId":74} 

 Player 2 19:31:37 $FLIP_CARD:  
{"cardId":74} 

 Player 2 19:31:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":74} 

 Player 2 19:31:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:31:37 $MOVE_CARD:  
{"moveIndex":3,"cardId":36,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:31:37 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":36,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:31:37 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":36} 

 Player 2 19:31:37 $FLIP_CARD:  
{"cardId":36} 

 Player 2 19:31:37 $FLIP_CARD:  
{"cardId":36} 

 Player 2 19:31:37 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":36} 

 Player 2 19:31:37 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 19:31:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":292,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 19:31:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:31:37 $MOVE_CARD:  
{"moveIndex":4,"cardId":91,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:31:38 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":91,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:31:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":91} 

 Player 2 19:31:38 $FLIP_CARD:  
{"cardId":91} 

 Player 2 19:31:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":91} 

 Player 2 19:31:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:31:38 $MOVE_CARD:  
{"moveIndex":5,"cardId":51,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:31:38 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":51,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:31:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":51} 

 Player 2 19:31:38 $FLIP_CARD:  
{"cardId":51} 

 Player 2 19:31:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":51} 

 Player 2 19:31:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:31:38 $MOVE_CARD:  
{"moveIndex":6,"cardId":22,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:31:39 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":22,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:31:39 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":22} 

 Player 2 19:31:39 $FLIP_CARD:  
{"cardId":22} 

 Player 2 19:31:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":22} 

 Player 2 19:31:39 $GAME_HAS_STARTED:  

 Player 2 19:31:39 $SET_TURN:  
{"playerId":2} 

 Player 2 19:31:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:31:39 $NEXT_STACK_ID:  

 Player 2 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:31:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:31:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 19:31:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:31:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 19:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 19:31:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 19:31:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:31:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:31:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 19:31:39 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:31:39 $MOVE_CARD:  
{"moveIndex":7,"cardId":88,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:31:40 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":88,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:31:40 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":88} 

 Player 2 19:31:40 $FLIP_CARD:  
{"cardId":88} 

 Player 2 19:31:40 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":88} 

 Player 2 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:31:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:31:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:31:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:31:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:31:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 19:31:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 19:31:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:31:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:31:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:31:40 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 19:31:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 19:31:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:31:41 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 19:31:41 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 19:31:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 19:31:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:31:41 $UPDATE_ACTIONS:  

 Player 2 19:32:05 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:32:05 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:05 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 19:32:05 $END_TURN:  

 Player 2 19:32:05 $SET_TURN:  
{"playerId":1} 

 Player 2 19:32:05 $START_TURN:  
{"playerId":1} 

 Player 1 19:32:06 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:06 $NEXT_STACK_ID:  

 Player 1 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:32:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:32:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:32:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add StartTurnLoot 2 "}} 

 Player 1 19:32:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:32:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:32:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding StartTurnLoot 2"},"childOfId":10} 

 Player 1 19:32:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 19:32:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:06 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 19:32:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 19:32:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:06 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:06 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:07 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 19:32:07 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 19:32:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve StartTurnLoot 2 "}} 

 Player 1 19:32:07 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:32:07 $MOVE_CARD:  
{"moveIndex":8,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:32:07 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":30,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:32:07 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":30} 

 Player 1 19:32:07 $FLIP_CARD:  
{"cardId":30} 

 Player 1 19:32:07 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":30} 

 Player 1 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 19:32:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:32:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve StartTurnLoot 2  "}} 

 Player 1 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":290,"turnPlayerCardId":290,"stackEffectType":13}} 

 Player 1 19:32:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve StartTurnLoot 2"},"childOfId":15} 

 Player 1 19:32:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 19:32:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 19:32:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:08 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 19:32:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 19:32:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:08 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 19:32:08 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 19:32:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 19:32:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:09 $SHOW_DECISION:  
{"startCardId":74,"endCardId":74,"flipEndCard":true} 

 Player 1 19:32:12 $NEXT_STACK_ID:  

 Player 1 19:32:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 1 19:32:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 1 19:32:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 19:32:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 1 19:32:12 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":74} 

 Player 1 19:32:12 $MOVE_CARD:  
{"moveIndex":9,"cardId":74,"placeID":300,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:32:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:13 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":74,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:32:13 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":74} 

 Player 1 19:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0): addMoney"} 

 Player 1 19:32:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0): addMoney"} 

 Player 1 19:32:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":74,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 1 19:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 19:32:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 19:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 19:32:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 19:32:13 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 19:32:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 1 19:32:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0): addMoney"} 

 Player 1 19:32:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":74,"particleType":6} 

 Player 1 19:32:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":74,"particleType":6} 

 Player 1 19:32:15 $SET_MONEY:  
{"playerId":1,"numOfCoins":13} 

 Player 1 19:32:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 19:32:15 $REMOVE_FROM_PILE:  
{"cardId":74} 

 Player 1 19:32:15 $MOVE_CARD:  
{"moveIndex":10,"cardId":74,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:32:16 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":74,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:32:16 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":74} 

 Player 1 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0): addMoney"} 

 Player 1 19:32:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:16 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:32:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 1 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":290,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 19:32:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":25} 

 Player 1 19:32:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 19:32:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play A Dime(0) "} 

 Player 2 19:32:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:16 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 19:32:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 19:32:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:16 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 19:32:16 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 19:32:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 19:32:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:22 $SHOW_DECISION:  
{"startCardId":290,"endCardId":172} 

 Player 1 19:32:25 $NEXT_STACK_ID:  

 Player 1 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 1 19:32:25 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"itemToPurchaseCardId":172,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 1 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 1 19:32:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"itemToPurchaseCardId":172,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 1 19:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add PurchaseItem 4 "}} 

 Player 1 19:32:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 1 19:32:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"itemToPurchaseCardId":172,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 1 19:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding PurchaseItem 4"},"childOfId":30} 

 Player 1 19:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 19:32:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 19:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 19:32:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 2 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 2 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 2 19:32:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 2 19:32:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 19:32:25 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 19:32:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve PurchaseItem 4 "}} 

 Player 1 19:32:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 1 19:32:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 19:32:26 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":172} 

 Player 1 19:32:26 $NEXT_STACK_ID:  

 Player 1 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 1 19:32:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 1 19:32:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 1 19:32:26 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"itemToPurchaseCardId":172,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 1 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 1 19:32:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"itemToPurchaseCardId":172,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 1 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 1 19:32:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 1 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 1 19:32:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":290,"itemToPurchaseCardId":172,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9},{"entityId":5,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 1 19:32:26 $REGISTER_PASSIVE_ITEM:  
{"cardId":172} 

 Player 1 19:32:26 $MOVE_CARD:  
{"moveIndex":11,"cardId":172,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:26 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":172,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:32:26 $ADD_AN_ITEM:  
{"playerId":1,"cardId":172,"isReward":false} 

 Player 1 19:32:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":172}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 19:32:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:32:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"itemToPurchaseCardId":172,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 1 19:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Remove After Resolve PurchaseItem 4  "}} 

 Player 1 19:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 19:32:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":290,"itemToPurchaseCardId":172,"playerWhoBuysCardId":290,"cost":10,"stackEffectType":9}} 

 Player 1 19:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Remove After Resolve PurchaseItem 4"},"childOfId":35} 

 Player 1 19:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 19:32:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:27 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 19:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 19:32:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:27 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 2 19:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 2 19:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 2 19:32:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to buy Goat Head for 10 \n2:Refill Store slot"} 

 Player 2 19:32:27 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:27 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 19:32:27 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 19:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve RefillEmptySlot 5 "}} 

 Player 1 19:32:27 $DRAW_CARD:  
{"deckType":5} 

 Player 1 19:32:27 $FLIP_CARD:  
{"cardId":146} 

 Player 1 19:32:27 $ADD_STORE_CARD:  
{"cardId":146} 

 Player 1 19:32:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:27 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 19:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve RefillEmptySlot 5  "}} 

 Player 1 19:32:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:27 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":290,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 1 19:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve RefillEmptySlot 5"},"childOfId":40} 

 Player 1 19:32:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 19:32:27 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 19:32:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 19:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 19:32:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 19:32:28 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 19:32:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 1 19:32:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 19:32:30 $NEXT_STACK_ID:  

 Player 1 19:32:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head effect DiscardAndDrawLoot<DiscardAndDrawLoot>"} 

 Player 1 19:32:30 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardAndDrawLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head effect DiscardAndDrawLoot<DiscardAndDrawLoot>"} 

 Player 1 19:32:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardAndDrawLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 19:32:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add ActivatePassiveEffect 6 "}} 

 Player 2 19:32:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 1 19:32:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head effect DiscardAndDrawLoot<DiscardAndDrawLoot>"} 

 Player 1 19:32:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head effect DiscardAndDrawLoot<DiscardAndDrawLoot>"} 

 Player 1 19:32:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[30,36],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":6,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"effectToDo":{"effectName":"DiscardAndDrawLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":172,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:32:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":45} 

 Player 1 19:32:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 19:32:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 19:32:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 19:32:44 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:44 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:44 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 19:32:44 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 19:32:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve ActivatePassiveEffect 6 "}} 

 Player 1 19:32:44 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":172,"particleType":6} 

 Player 1 19:32:46 $DISABLE_PARTICLE_EFFECT:  
{"cardId":172,"particleType":6} 

 Player 1 19:32:46 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":30} 

 Player 1 19:32:46 $MOVE_CARD:  
{"moveIndex":12,"cardId":30,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:32:46 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":30,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:32:47 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":30} 

 Player 1 19:32:47 $DISCARD_LOOT:  
{"playerId":1,"cardId":30} 

 Player 1 19:32:47 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:32:47 $MOVE_CARD:  
{"moveIndex":13,"cardId":128,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:32:47 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":128,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:32:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":128} 

 Player 1 19:32:47 $FLIP_CARD:  
{"cardId":128} 

 Player 1 19:32:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":128} 

 Player 1 19:32:47 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":36} 

 Player 1 19:32:47 $MOVE_CARD:  
{"moveIndex":14,"cardId":36,"placeID":301,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 19:32:48 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":36,"flipIfFlipped":true,"playerId":1} 

 Player 1 19:32:48 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":36} 

 Player 1 19:32:48 $DISCARD_LOOT:  
{"playerId":1,"cardId":36} 

 Player 1 19:32:48 $DRAW_CARD:  
{"deckType":1} 

 Player 1 19:32:48 $MOVE_CARD:  
{"moveIndex":15,"cardId":132,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 19:32:48 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":132,"flipIfFlipped":false,"playerId":1} 

 Player 1 19:32:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":132} 

 Player 1 19:32:48 $FLIP_CARD:  
{"cardId":132} 

 Player 1 19:32:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":132} 

 Player 1 19:32:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_END_TURN","args":[],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 19:32:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head effect DiscardAndDrawLoot<DiscardAndDrawLoot>"} 

 Player 1 19:32:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[30,36],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":6,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:32:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:48 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[30,36],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":6,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:32:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 

 Player 1 19:32:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[30,36],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":290,"effectCardPlayer":290},"entityId":6,"creatorCardId":290,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":172,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 19:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":50} 

 Player 1 19:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 1 19:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 19:32:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Goat Head "} 

 Player 2 19:32:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 19:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 19:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 1 19:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 19:32:49 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 19:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Stack Was Emptied "}} 

 Player 1 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:49 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 19:32:49 $END_TURN:  

 Player 1 19:32:49 $SET_TURN:  
{"playerId":2} 

 Player 1 19:32:49 $START_TURN:  
{"playerId":2} 

 Player 2 19:32:49 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:32:49 $NEXT_STACK_ID:  

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:32:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:32:49 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:32:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Add StartTurnLoot 7 "}} 

 Player 2 19:32:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:32:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:32:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:32:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Adding StartTurnLoot 7"},"childOfId":55} 

 Player 2 19:32:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 2 19:32:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:32:50 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 19:32:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 2 19:32:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:32:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:32:50 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 19:32:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:32:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:32:50 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 19:32:50 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 19:32:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Resolve StartTurnLoot 7 "}} 

 Player 2 19:32:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 19:32:50 $MOVE_CARD:  
{"moveIndex":16,"cardId":63,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 19:32:50 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":63,"flipIfFlipped":false,"playerId":2} 

 Player 2 19:32:50 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":63} 

 Player 2 19:32:50 $FLIP_CARD:  
{"cardId":63} 

 Player 2 19:32:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":63} 

 Player 2 19:32:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 19:32:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:32:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Remove After Resolve StartTurnLoot 7  "}} 

 Player 2 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 19:32:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":292,"turnPlayerCardId":292,"stackEffectType":13}} 

 Player 2 19:32:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Remove After Resolve StartTurnLoot 7"},"childOfId":60} 

 Player 2 19:32:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 2 19:32:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 19:32:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 19:32:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 19:32:51 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 19:32:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 

 Player 2 19:32:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 19:32:51 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 19:32:51 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 19:32:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Stack Was Emptied "}} 

 Player 2 19:32:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 19:33:24 $MATCH: 