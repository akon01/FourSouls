Start Log 

 Player 1 18:17:17 $MATCH:  

 Player 1 18:17:17 $START_GAME:  

 Player 1 18:17:17 $MOVE_TO_TABLE:  

 Player 2 18:17:17 $MOVE_TO_TABLE:  

 Player 2 18:17:25 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 18:17:25 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 18:17:25 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":290,"itemCardId":291} 

 Player 2 18:17:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:17:25 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":284,"itemCardId":285} 

 Player 2 18:17:25 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[10,94,68,101,59,77,108,121,72,92,42,26,112,63,136,33,104,98,11,81,41,131,91,56,100,127,95,99,51,110,83,50,58,82,118,138,126,54,36,103,66,38,22,109,15,30,141,139,52,135,67,23,19,73,25,69,125,142,122,129,89,134,48,62,71,130,120,85,47,61,24,115,35,79,116,21,60,123,31,70,28,113,140,84,80,44,96,117,18,133,107,74,93,46,124,137,57,64,37,53,102,105,78,7,29,43,55,88,114,76,20,9,45,106,40,49,87,97,111,8,13,65,75,90,17,14,119,34,16,128,32,132,39,86,27,12]} 

 Player 2 18:17:25 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[262,236,257,242,249,248,259,239,280,266,252,256,279,243,269,241,233,261,268,255,271,263,260,254,264,237,234,272,229,231,274,267,251,250,235,244,230,258,232,246,273,270,277,276,240,228,253,275,247,281,245,265,278,238]} 

 Player 2 18:17:25 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[219,163,151,223,199,214,205,193,183,169,160,177,172,148,181,201,213,173,150,192,189,154,182,156,210,212,170,178,153,198,145,167,195,220,197,224,186,180,206,188,207,225,218,155,215,162,190,211,217,168,146,216,222,185,157,159,196,165,152,202,194,175,174,203,149,204,147,164,187,221,209,191,176,200,208,184,171,166,161,179,158]} 

 Player 2 18:17:25 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:17:25 $FLIP_CARD:  
{"cardId":158} 

 Player 2 18:17:25 $ADD_STORE_CARD:  
{"cardId":158} 

 Player 2 18:17:26 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:17:26 $FLIP_CARD:  
{"cardId":179} 

 Player 2 18:17:26 $ADD_STORE_CARD:  
{"cardId":179} 

 Player 2 18:17:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:17:26 $FLIP_CARD:  
{"cardId":238} 

 Player 2 18:17:26 $REGISTER_PASSIVE_ITEM:  
{"cardId":238} 

 Player 2 18:17:26 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":238} 

 Player 2 18:17:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":238,"monsterPlaceId":1} 

 Player 2 18:17:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:17:26 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":278} 

 Player 2 18:17:26 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:17:26 $FLIP_CARD:  
{"cardId":265} 

 Player 2 18:17:26 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":265} 

 Player 2 18:17:26 $NEW_MONSTER_ON_PLACE:  
{"cardId":265,"monsterPlaceId":2} 

 Player 2 18:17:26 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 18:17:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 18:17:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:17:26 $MOVE_CARD:  
{"moveIndex":1,"cardId":12,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":291}],"result":true,"preventMethod":false,"methodScopeId":290,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 18:17:26 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":12,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:17:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":12} 

 Player 2 18:17:27 $FLIP_CARD:  
{"cardId":12} 

 Player 2 18:17:27 $FLIP_CARD:  
{"cardId":12} 

 Player 2 18:17:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":12} 

 Player 2 18:17:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:17:27 $MOVE_CARD:  
{"moveIndex":2,"cardId":27,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:27 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":27,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:17:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":27} 

 Player 2 18:17:27 $FLIP_CARD:  
{"cardId":27} 

 Player 2 18:17:27 $FLIP_CARD:  
{"cardId":27} 

 Player 2 18:17:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":27} 

 Player 2 18:17:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:17:27 $MOVE_CARD:  
{"moveIndex":3,"cardId":86,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:27 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:17:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":86} 

 Player 2 18:17:27 $FLIP_CARD:  
{"cardId":86} 

 Player 2 18:17:28 $FLIP_CARD:  
{"cardId":86} 

 Player 2 18:17:28 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":86} 

 Player 2 18:17:28 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 18:17:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 18:17:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:17:28 $MOVE_CARD:  
{"moveIndex":4,"cardId":39,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:28 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":39,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:17:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":39} 

 Player 2 18:17:28 $FLIP_CARD:  
{"cardId":39} 

 Player 2 18:17:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":39} 

 Player 2 18:17:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:17:28 $MOVE_CARD:  
{"moveIndex":5,"cardId":132,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:28 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:17:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":132} 

 Player 2 18:17:29 $FLIP_CARD:  
{"cardId":132} 

 Player 2 18:17:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":132} 

 Player 2 18:17:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:17:29 $MOVE_CARD:  
{"moveIndex":6,"cardId":32,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:29 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":32,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:17:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":32} 

 Player 2 18:17:29 $FLIP_CARD:  
{"cardId":32} 

 Player 2 18:17:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":32} 

 Player 2 18:17:29 $GAME_HAS_STARTED:  

 Player 2 18:17:29 $SET_TURN:  
{"playerId":2} 

 Player 2 18:17:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:29 $NEXT_STACK_ID:  

 Player 2 18:17:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:17:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 18:17:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:17:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 1 18:17:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:17:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:17:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:17:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 18:17:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:17:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 18:17:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 18:17:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 18:17:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 18:17:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:17:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:17:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:17:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 18:17:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:17:32 $MOVE_CARD:  
{"moveIndex":7,"cardId":128,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:33 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":128,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:17:33 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":128} 

 Player 2 18:17:33 $FLIP_CARD:  
{"cardId":128} 

 Player 2 18:17:33 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":128} 

 Player 2 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:17:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 18:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:33 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":284,"turnPlayerCardId":284,"stackEffectType":13}} 

 Player 2 18:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 18:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 18:17:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:17:33 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:17:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:17:33 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 18:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 18:17:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:33 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 18:17:33 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 18:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 18:17:33 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:33 $UPDATE_ACTIONS:  

 Player 2 18:17:46 $MOVE_CARD:  
{"moveIndex":8,"cardId":132,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:46 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":132,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:17:46 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":132} 

 Player 2 18:17:49 $MOVE_CARD:  
{"moveIndex":9,"cardId":131,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 18:17:49 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":131,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:17:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":131} 

 Player 2 18:17:51 $SHOW_DECISION:  
{"startCardId":131,"endCardId":131,"flipEndCard":true} 

 Player 2 18:17:54 $NEXT_STACK_ID:  

 Player 2 18:17:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:17:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 2 18:17:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 18:17:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 2 18:17:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 18:17:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:17:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:17:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:17:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 2 18:17:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 18:17:57 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":131} 

 Player 2 18:17:57 $MOVE_CARD:  
{"moveIndex":10,"cardId":131,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 18:17:57 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":131,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:17:58 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":131} 

 Player 2 18:17:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor: LookAtTopDeckAndPutOnTop"} 

 Player 2 18:17:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor: LookAtTopDeckAndPutOnTop"} 

 Player 2 18:17:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"LookAtTopDeckAndPutOnTop","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 18:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 18:17:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:17:58 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 18:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 18:17:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:17:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:17:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:17:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:17:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:17:58 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 18:17:58 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 18:17:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 18:17:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor: LookAtTopDeckAndPutOnTop"} 

 Player 2 18:17:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 2 18:18:00 $DISABLE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 2 18:18:08 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":281} 

 Player 2 18:18:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":247} 

 Player 2 18:18:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":275} 

 Player 2 18:18:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":253} 

 Player 2 18:18:08 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":228} 

 Player 2 18:18:08 $REMOVE_FROM_PILE:  
{"cardId":131} 

 Player 2 18:18:08 $MOVE_CARD:  
{"moveIndex":11,"cardId":131,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 18:18:08 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":131,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:18:08 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":131} 

 Player 2 18:18:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor: LookAtTopDeckAndPutOnTop"} 

 Player 2 18:18:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:18:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:18:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:18:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":284,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:18:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 18:18:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 18:18:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:18:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play The Emperor "} 

 Player 1 18:18:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:18:09 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 18:18:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 18:18:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:18:09 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 18:18:09 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 18:18:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 18:18:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:18:16 $SHOW_DECISION:  
{"startCardId":284,"endCardId":227} 

 Player 2 18:18:19 $NEXT_STACK_ID:  

 Player 2 18:18:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:18:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 18:18:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 18:18:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 18:18:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 1 18:18:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:18:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:18:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 18:18:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 2 18:18:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:18:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 18:18:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 18:18:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 2 18:18:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 18:18:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:18:22 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 18:18:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 18:18:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:18:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:18:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:18:22 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 18:18:22 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 18:18:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 18:18:22 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:18:22 $SHOW_CARD_PREVIEW:  
{"cardToShowId":281,"playerId":2} 

 Player 2 18:18:27 $FLIP_CARD:  
{"cardId":281} 

 Player 2 18:18:27 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":281} 

 Player 2 18:18:27 $NEW_MONSTER_ON_PLACE:  
{"cardId":281,"monsterPlaceId":1} 

 Player 2 18:18:27 $SHOW_DECISION:  
{"startCardId":284,"endCardId":281} 

 Player 2 18:18:30 $NEXT_STACK_ID:  

 Player 2 18:18:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 2 18:18:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated XL Floor!"} 

 Player 2 18:18:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 18:18:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated XL Floor!"} 

 Player 2 18:18:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 18:18:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated XL Floor!"} 

 Player 1 18:18:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated XL Floor!"} 

 Player 2 18:18:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Add ActivateItem 4 "}} 

 Player 2 18:18:33 $LOG_ERROR:  
"error while resolving stack effect 4" 
//////Error From Player 2////
  

 Player 2 18:18:33 $LOG_ERROR:  
//////Error From Player 2////
 [object Object]
////// 

 Player 2 18:18:33 $LOG_ERROR:  
{"message":"\"Cannot set property 'width' of null\"","stack":"\"TypeError: Cannot set property 'width' of null\\n    at PlayerActionPreview.StackEffectPreview.addSelectedEffectHighlight (http://localhost:7456/preview-scripts/assets/Script/StackEffects/StackEffectVisualRepresentation/StackEffectPreview.js:74:35)\\n    at ActivateItem.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Item.js:89:34)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at ActivateItem.putOnStack (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Item.js:62:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:327:62)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""} 
//////Error From Player 2////
  

 Player 2 18:18:33 $LOG_ERROR:  
//////Error From Player 2////

 "\"Cannot set property 'width' of null\""

 + "\"TypeError: Cannot set property 'width' of null\
    at PlayerActionPreview.StackEffectPreview.addSelectedEffectHighlight (http://localhost:7456/preview-scripts/assets/Script/StackEffects/StackEffectVisualRepresentation/StackEffectPreview.js:74:35)\
    at ActivateItem.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Item.js:89:34)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at ActivateItem.putOnStack (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Item.js:62:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:327:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""

////// 
//////Error From Player 2////

 "\"Cannot set property 'width' of null\""

 + "\"TypeError: Cannot set property 'width' of null\
    at PlayerActionPreview.StackEffectPreview.addSelectedEffectHighlight (http://localhost:7456/preview-scripts/assets/Script/StackEffects/StackEffectVisualRepresentation/StackEffectPreview.js:74:35)\
    at ActivateItem.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Item.js:89:34)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at ActivateItem.putOnStack (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Item.js:62:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:327:62)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""

////// 

 Player 2 18:18:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated XL Floor!"} 

 Player 2 18:18:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 18:18:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve DeclareAttack 4  "}} 

 Player 2 18:18:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated XL Floor!"} 

 Player 2 18:18:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":227,"stackEffectType":4}} 

 Player 2 18:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve DeclareAttack 4"},"childOfId":26} 

 Player 2 18:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 18:18:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:18:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:18:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated XL Floor!"} 

 Player 1 18:18:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated XL Floor!"} 

 Player 1 18:18:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated XL Floor!"} 

 Player 1 18:18:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Player 2 activated XL Floor!"} 

 Player 1 18:18:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:18:34 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 18:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 18:18:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:18:34 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:18:34 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 18:18:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve ActivateItem 4 "}} 

 Player 2 18:18:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 18:18:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":281,"particleType":6} 

 Player 2 18:18:36 $NEW_MONSTER_PLACE:  

 Player 2 18:18:36 $NEXT_STACK_ID:  

 Player 2 18:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated XL Floor!"} 

 Player 2 18:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated XL Floor! \n2:Refill holder3 slot"} 

 Player 2 18:18:36 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 18:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated XL Floor! \n2:Refill holder3 slot"} 

 Player 2 18:18:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 18:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Refill holder3 slot"} 

 Player 1 18:18:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Refill holder3 slot"} 

 Player 2 18:18:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Add RefillEmptySlot 5 "}} 

 Player 2 18:18:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated XL Floor! \n2:Refill holder3 slot"} 

 Player 2 18:18:39 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 18:18:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Adding RefillEmptySlot 5"},"childOfId":31} 

 Player 2 18:18:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 18:18:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:18:39 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 18:18:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 18:18:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:18:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Refill holder3 slot"} 

 Player 1 18:18:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Refill holder3 slot"} 

 Player 1 18:18:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:18:39 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 18:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve RefillEmptySlot 5 "}} 

 Player 2 18:18:40 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:18:40 $FLIP_CARD:  
{"cardId":245} 

 Player 2 18:18:40 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":245} 

 Player 2 18:18:40 $NEW_MONSTER_ON_PLACE:  
{"cardId":245,"monsterPlaceId":3} 

 Player 2 18:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder3 slot"} 

 Player 2 18:18:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 18:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve ActivateItem 5  "}} 

 Player 2 18:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder3 slot"} 

 Player 2 18:18:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"hasLockingStackEffect":false,"itemToPlayCardId":281,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 18:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve ActivateItem 5"},"childOfId":36} 

 Player 2 18:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 18:18:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:18:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Refill holder3 slot"} 

 Player 1 18:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Refill holder3 slot"} 

 Player 1 18:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Refill holder3 slot"} 

 Player 1 18:18:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck \n2:Refill holder3 slot"} 

 Player 1 18:18:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 18:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 18:18:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 18:18:40 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 18:18:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve RefillEmptySlot 5 "}} 

 Player 2 18:18:40 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:18:40 $FLIP_CARD:  
{"cardId":240} 

 Player 2 18:18:40 $REGISTER_PASSIVE_ITEM:  
{"cardId":240} 

 Player 2 18:18:40 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":240} 

 Player 2 18:18:41 $NEW_MONSTER_ON_PLACE:  
{"cardId":240,"monsterPlaceId":3} 

 Player 2 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:18:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 18:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve RefillEmptySlot 5  "}} 

 Player 2 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:18:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":284,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 2 18:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve RefillEmptySlot 5"},"childOfId":41} 

 Player 2 18:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 18:18:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:18:41 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 18:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 18:18:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:18:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Monster Deck"} 

 Player 1 18:18:41 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":284,"attackingPlayerCardId":284,"idOfCardBeingAttacked":227,"stackEffectType":4}]} 

 Player 1 18:18:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:18:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:18:41 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:18:41 $SHOW_CARD_PREVIEW:  
{"cardToShowId":276,"playerId":2} 

 Player 2 18:18:41 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 18:18:41 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 18:18:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 18:18:41 $MOVE_CARD:  
{"moveIndex":12,"cardId":281,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 18:18:42 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":281,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:18:42 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":281} 

 Player 2 18:18:42 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":281} 

 Player 2 18:18:42 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 2 18:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 18:18:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:18:42 $SHOW_CARD_PREVIEW:  
{"cardToShowId":277,"playerId":2} 

 Player 2 18:28:14 $MATCH: 