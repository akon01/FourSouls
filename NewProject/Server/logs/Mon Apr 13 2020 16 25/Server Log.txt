Start Log 

 Player 1 16:25:08 $MATCH:  

 Player 1 16:25:09 $START_GAME:  

 Player 2 16:25:09 $MOVE_TO_TABLE:  

 Player 1 16:25:09 $MOVE_TO_TABLE:  

 Player 2 16:25:16 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:25:17 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:25:17 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":323,"itemCardId":324} 

 Player 1 16:25:17 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":323,"itemCardId":324} 

 Player 1 16:25:17 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 16:25:18 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":311,"itemCardId":312} 

 Player 2 16:25:18 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[42,104,81,98,65,48,27,121,100,70,97,44,138,20,106,63,4,128,18,82,133,58,123,29,71,12,105,64,40,15,56,30,34,74,95,54,35,131,102,126,52,88,79,53,47,38,66,10,116,77,73,101,117,72,86,96,60,22,33,118,24,108,26,7,129,31,113,25,139,135,124,23,125,107,41,137,136,5,28,122,94,89,55,46,130,83,103,11,51,119,84,37,21,68,90,120,8,112,39,93,91,114,43,127,17,45,109,32,80,76,69,110,111,115,6,62,57,9,13,134,19,67,36,50,85,99,92,78,87,59,132,16,75,49,14,61]} 

 Player 2 16:25:18 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[291,277,245,255,265,246,258,262,254,247,226,302,239,249,263,227,295,305,236,273,288,280,251,238,260,230,266,276,259,231,272,267,248,298,241,244,225,256,297,286,235,296,306,224,299,307,301,289,294,250,287,222,308,228,233,270,223,275,264,252,268,240,283,261,271,243,234,293,281,282,290,237,278,253,229,279,232,292,284,300,304,257,242,269,274,303,285]} 

 Player 2 16:25:18 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[211,189,213,191,200,171,199,167,150,143,170,151,168,148,218,179,192,147,157,203,187,196,159,220,197,144,175,202,183,141,174,158,204,182,194,161,145,209,217,212,155,216,172,177,185,152,219,208,207,178,142,166,193,215,180,160,154,198,176,205,156,186,201,210,153,165,169,188,162,206,149,163,173,214,181,164,190,146,195,184]} 

 Player 2 16:25:18 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:25:18 $FLIP_CARD:  
{"cardId":184} 

 Player 2 16:25:18 $ADD_STORE_CARD:  
{"cardId":184} 

 Player 2 16:25:18 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:25:18 $FLIP_CARD:  
{"cardId":195} 

 Player 2 16:25:18 $ADD_STORE_CARD:  
{"cardId":195} 

 Player 2 16:25:18 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:25:18 $FLIP_CARD:  
{"cardId":285} 

 Player 2 16:25:18 $REGISTER_PASSIVE_ITEM:  
{"cardId":285} 

 Player 2 16:25:18 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":285} 

 Player 2 16:25:18 $NEW_MONSTER_ON_PLACE:  
{"cardId":285,"monsterPlaceId":1} 

 Player 2 16:25:18 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:25:18 $FLIP_CARD:  
{"cardId":303} 

 Player 2 16:25:18 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":303} 

 Player 2 16:25:18 $NEW_MONSTER_ON_PLACE:  
{"cardId":303,"monsterPlaceId":2} 

 Player 2 16:25:18 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:25:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:25:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:18 $MOVE_CARD:  
{"moveIndex":1,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:18 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":61,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:18 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":61} 

 Player 2 16:25:18 $FLIP_CARD:  
{"cardId":61} 

 Player 2 16:25:19 $FLIP_CARD:  
{"cardId":61} 

 Player 2 16:25:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":61} 

 Player 2 16:25:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:19 $MOVE_CARD:  
{"moveIndex":2,"cardId":14,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:19 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":14,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":14} 

 Player 2 16:25:19 $FLIP_CARD:  
{"cardId":14} 

 Player 2 16:25:19 $FLIP_CARD:  
{"cardId":14} 

 Player 2 16:25:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":14} 

 Player 2 16:25:19 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:19 $MOVE_CARD:  
{"moveIndex":3,"cardId":49,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:19 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":49,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":49} 

 Player 2 16:25:19 $FLIP_CARD:  
{"cardId":49} 

 Player 2 16:25:19 $FLIP_CARD:  
{"cardId":49} 

 Player 2 16:25:20 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":49} 

 Player 2 16:25:20 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:25:20 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:25:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:20 $MOVE_CARD:  
{"moveIndex":4,"cardId":75,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:20 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":75,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":75} 

 Player 2 16:25:20 $FLIP_CARD:  
{"cardId":75} 

 Player 2 16:25:20 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":75} 

 Player 2 16:25:20 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:20 $MOVE_CARD:  
{"moveIndex":5,"cardId":16,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:20 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":16,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:20 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":16} 

 Player 2 16:25:20 $FLIP_CARD:  
{"cardId":16} 

 Player 2 16:25:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":16} 

 Player 2 16:25:21 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:21 $MOVE_CARD:  
{"moveIndex":6,"cardId":132,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:21 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:21 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":132} 

 Player 2 16:25:21 $FLIP_CARD:  
{"cardId":132} 

 Player 2 16:25:21 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":132} 

 Player 2 16:25:21 $GAME_HAS_STARTED:  

 Player 2 16:25:21 $SET_TURN:  
{"playerId":2} 

 Player 2 16:25:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:21 $NEXT_STACK_ID:  

 Player 2 16:25:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:25:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:25:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 16:25:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 16:25:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:25:21 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 16:25:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:25:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 16:25:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 16:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 16:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 16:25:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 16:25:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:25:24 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:25:24 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 16:25:24 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 16:25:24 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 16:25:24 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:24 $MOVE_CARD:  
{"moveIndex":7,"cardId":59,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:25 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":59,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:25 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":59} 

 Player 2 16:25:25 $FLIP_CARD:  
{"cardId":59} 

 Player 2 16:25:25 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":59} 

 Player 2 16:25:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 16:25:25 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 16:25:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:25:25 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:25:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 16:25:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 16:25:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:25:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 

 Player 2 16:25:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 16:25:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 16:25:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:25:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:25:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:25:28 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 16:25:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:25:28 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 16:25:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 16:25:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:28 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 16:25:28 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 16:25:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 16:25:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:25:28 $CLEAR_SE_VIS:  

 Player 2 16:25:28 $UPDATE_ACTIONS:  

 Player 2 16:25:29 $NEXT_STACK_ID:  

 Player 2 16:25:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Mask of Infamy"} 

 Player 2 16:25:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 16:25:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 16:25:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:25:29 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 16:25:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:25:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Mask of Infamy"} 

 Player 2 16:25:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 16:25:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 16:25:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 16:25:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 16:25:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:32 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 16:25:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 16:25:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:25:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:25:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 16:25:33 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:25:33 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 16:25:33 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 16:25:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 16:25:33 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 16:25:33 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":285,"particleType":5} 

 Player 2 16:25:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 16:25:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 16:25:33 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 16:25:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:25:33 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:25:36 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 16:25:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 16:25:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:25:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":285,"stackEffectType":4}} 

 Player 2 16:25:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 16:25:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 16:25:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:25:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:25:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Mask of Infamy"} 

 Player 1 16:25:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[323,324]} 

 Player 1 16:25:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:25:36 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 16:25:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 16:25:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:36 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 16:25:36 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 16:25:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 16:25:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:25:36 $CLEAR_SE_VIS:  

 Player 2 16:25:41 $MATCH: Start Log 

 Player 1 16:25:41 $MATCH:  

 Player 1 16:25:42 $START_GAME:  

 Player 2 16:25:42 $MOVE_TO_TABLE:  

 Player 1 16:25:42 $MOVE_TO_TABLE:  

 Player 2 16:25:48 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:25:50 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:25:50 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":317,"itemCardId":318} 

 Player 1 16:25:50 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":317,"itemCardId":318} 

 Player 1 16:25:50 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 16:25:50 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":319,"itemCardId":320} 

 Player 2 16:25:50 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[88,120,24,133,115,82,113,58,103,22,32,66,72,68,10,92,108,116,65,134,8,93,64,30,114,60,11,69,97,129,18,123,55,41,53,78,138,130,85,48,119,7,131,27,139,81,75,74,59,122,127,101,56,83,90,121,28,67,6,105,57,17,20,77,71,80,49,73,15,44,13,91,107,86,76,112,33,54,117,42,96,126,136,125,95,51,106,9,43,34,135,63,4,137,31,14,118,12,35,39,21,46,124,16,36,100,87,38,109,89,26,40,70,19,98,5,52,79,23,94,104,110,61,47,132,128,84,102,45,50,99,111,25,62,37,29]} 

 Player 2 16:25:50 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[261,247,265,295,289,236,228,238,258,278,269,288,300,248,284,255,307,291,231,280,283,299,242,251,230,282,294,249,226,239,302,271,308,293,256,245,290,286,303,277,223,297,279,252,266,241,296,235,264,272,276,254,274,298,275,232,227,263,281,292,285,301,250,287,234,237,305,257,270,306,246,229,267,268,224,244,222,233,273,253,259,262,304,260,225,240,243]} 

 Player 2 16:25:50 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[196,205,192,188,202,144,145,167,209,176,210,199,148,206,181,163,162,169,219,215,203,141,173,151,157,220,212,155,149,218,178,142,168,183,217,165,189,150,153,201,185,147,170,164,154,207,187,216,166,175,190,184,180,195,152,161,182,159,213,179,156,174,146,194,198,211,193,160,172,186,214,143,197,171,200,158,191,208,204,177]} 

 Player 2 16:25:50 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:25:50 $FLIP_CARD:  
{"cardId":177} 

 Player 2 16:25:50 $ADD_STORE_CARD:  
{"cardId":177} 

 Player 2 16:25:50 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:25:50 $FLIP_CARD:  
{"cardId":204} 

 Player 2 16:25:50 $ADD_STORE_CARD:  
{"cardId":204} 

 Player 2 16:25:50 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:25:50 $FLIP_CARD:  
{"cardId":243} 

 Player 2 16:25:50 $REGISTER_PASSIVE_ITEM:  
{"cardId":243} 

 Player 2 16:25:50 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":243} 

 Player 2 16:25:50 $NEW_MONSTER_ON_PLACE:  
{"cardId":243,"monsterPlaceId":1} 

 Player 2 16:25:50 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:25:50 $FLIP_CARD:  
{"cardId":240} 

 Player 2 16:25:51 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":240} 

 Player 2 16:25:51 $NEW_MONSTER_ON_PLACE:  
{"cardId":240,"monsterPlaceId":2} 

 Player 2 16:25:51 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:25:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":317,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:25:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:51 $MOVE_CARD:  
{"moveIndex":1,"cardId":29,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:51 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":29,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":29} 

 Player 2 16:25:51 $FLIP_CARD:  
{"cardId":29} 

 Player 2 16:25:51 $FLIP_CARD:  
{"cardId":29} 

 Player 2 16:25:51 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":29} 

 Player 2 16:25:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:51 $MOVE_CARD:  
{"moveIndex":2,"cardId":37,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:51 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":37,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:51 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":37} 

 Player 2 16:25:52 $FLIP_CARD:  
{"cardId":37} 

 Player 2 16:25:52 $FLIP_CARD:  
{"cardId":37} 

 Player 2 16:25:52 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":37} 

 Player 2 16:25:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:52 $MOVE_CARD:  
{"moveIndex":3,"cardId":62,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:52 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":62,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:52 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":62} 

 Player 2 16:25:52 $FLIP_CARD:  
{"cardId":62} 

 Player 2 16:25:52 $FLIP_CARD:  
{"cardId":62} 

 Player 2 16:25:52 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":62} 

 Player 2 16:25:52 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:25:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:25:52 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:52 $MOVE_CARD:  
{"moveIndex":4,"cardId":25,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:53 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":25,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":25} 

 Player 2 16:25:53 $FLIP_CARD:  
{"cardId":25} 

 Player 2 16:25:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":25} 

 Player 2 16:25:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:53 $MOVE_CARD:  
{"moveIndex":5,"cardId":111,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:53 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":111,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":111} 

 Player 2 16:25:53 $FLIP_CARD:  
{"cardId":111} 

 Player 2 16:25:53 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":111} 

 Player 2 16:25:53 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:53 $MOVE_CARD:  
{"moveIndex":6,"cardId":99,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:53 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":99,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:53 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":99} 

 Player 2 16:25:53 $FLIP_CARD:  
{"cardId":99} 

 Player 2 16:25:54 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":99} 

 Player 2 16:25:54 $GAME_HAS_STARTED:  

 Player 2 16:25:54 $SET_TURN:  
{"playerId":2} 

 Player 2 16:25:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:54 $NEXT_STACK_ID:  

 Player 2 16:25:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:25:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:25:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 16:25:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 16:25:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:25:54 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 16:25:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:25:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 16:25:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 16:25:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 16:25:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 16:25:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 16:25:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:25:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 16:25:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:25:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:25:57 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 16:25:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:25:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 16:25:57 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 16:25:57 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:25:57 $MOVE_CARD:  
{"moveIndex":7,"cardId":50,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:25:57 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":50,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:25:57 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":50} 

 Player 2 16:25:57 $FLIP_CARD:  
{"cardId":50} 

 Player 2 16:25:57 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":50} 

 Player 2 16:25:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 16:25:57 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 2 16:25:57 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:25:57 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 16:26:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 16:26:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 16:26:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 

 Player 2 16:26:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 16:26:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 16:26:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 16:26:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 16:26:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:00 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 16:26:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 16:26:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:01 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 16:26:01 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 16:26:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 16:26:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:01 $CLEAR_SE_VIS:  

 Player 2 16:26:01 $UPDATE_ACTIONS:  

 Player 2 16:26:47 $NEXT_STACK_ID:  

 Player 2 16:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Keeper Head"} 

 Player 2 16:26:47 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 2 16:26:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 2 16:26:47 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:26:47 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 16:26:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:26:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Keeper Head"} 

 Player 2 16:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 16:26:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 2 16:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 16:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 16:26:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:50 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 16:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 16:26:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:50 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 16:26:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:50 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 16:26:50 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 16:26:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 16:26:50 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 2 16:26:50 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":243,"particleType":5} 

 Player 2 16:26:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 

 Player 2 16:26:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 2 16:26:50 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 2 16:26:50 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:26:50 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 16:26:53 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 16:26:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 16:26:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":243,"stackEffectType":4}} 

 Player 2 16:26:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 16:26:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 16:26:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:26:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:26:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Cursed Keeper Head"} 

 Player 1 16:26:53 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 16:26:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:26:53 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 16:26:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 16:26:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:26:53 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 16:26:53 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 16:26:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 16:26:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:26:53 $CLEAR_SE_VIS:  

 Player 2 16:26:54 $NEXT_STACK_ID:  

 Player 2 16:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Keeper Head<Monster>"} 

 Player 2 16:26:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 2 16:26:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 2 16:26:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:26:54 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 16:26:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:26:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Keeper Head<Monster>"} 

 Player 2 16:26:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 16:26:57 $ROLL_DICE:  
{"playerId":2} 

 Player 2 16:26:59 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 16:26:59 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Cursed Keeper Head<Monster>"} 

 Player 2 16:26:59 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 16:27:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Cursed Keeper Head<Monster>"} 

 Player 2 16:27:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:27:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"numberRolled":5,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 2 16:27:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 16:27:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 16:27:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:27:02 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 16:27:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 16:27:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:27:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:27:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Keeper Head<Monster>"} 

 Player 1 16:27:02 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317,318]} 

 Player 1 16:27:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:27:02 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 16:27:02 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 16:27:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 16:27:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Cursed Keeper Head<Monster>"} 

 Player 2 16:27:02 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"numberRolled":5,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 2 16:27:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 16:27:02 $NEXT_STACK_ID:  

 Player 2 16:27:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:27:02 $CLEAR_SE_VIS:  

 Player 2 16:27:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Keeper Head \n2:Player 2 rolled 5 vs Cursed Keeper Head<Monster>"} 

 Player 2 16:27:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 16:27:02 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"numberRolled":5,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 2 16:27:03 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":3,"creatorCardId":319,"numberRolled":5,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":243}]} 

 Player 2 16:27:03 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 16:27:03 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 1 16:27:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Keeper Head<Monster>"} 

 Player 1 16:27:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Cursed Keeper Head<Monster>"} 

 Player 2 16:27:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 16:27:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Keeper Head \n2:Player 2 rolled 5 vs Cursed Keeper Head<Monster>"} 

 Player 2 16:27:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"numberRolled":5,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 2 16:27:05 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 2 16:27:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:27:05 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 1 16:27:05 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Keeper Head \n2:Player 2 is rolling against Cursed Keeper Head<Monster>"} 

 Player 2 16:27:08 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 16:27:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 16:27:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Keeper Head"} 

 Player 2 16:27:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":319,"numberRolled":5,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":243}} 

 Player 2 16:27:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 2 16:27:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 16:27:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:27:08 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 16:27:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 16:27:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:27:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Keeper Head \n2:Player 2 is rolling against Cursed Keeper Head<Monster>"} 

 Player 1 16:27:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 16:27:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:27:09 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 16:27:09 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 16:27:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 16:27:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Keeper Head"} 

 Player 2 16:27:09 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 16:27:09 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Lilith will deal 1 combat damage to Cursed Keeper Head"} 

 Player 2 16:27:09 $MONSTER_GET_DAMAGED:  
{"cardId":243,"hpLeft":1,"damageDealerId":319} 

 Player 2 16:27:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":319},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 16:27:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":319},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":6,"originStackId":4},"isAfterActivation":true,"index":6} 

 Player 2 16:27:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 16:27:09 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 2 16:27:09 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 16:27:09 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 16:27:12 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 16:27:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 16:27:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:27:12 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 

 Player 2 16:27:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 2 16:27:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 16:27:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 16:27:12 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 16:27:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Lilith combat damage to Cursed Keeper Head"} 

 Player 1 16:27:12 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[317]} 

 Player 1 16:27:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 16:27:12 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 16:27:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 16:27:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 16:27:12 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 16:27:12 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 16:27:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Stack Was Emptied "}} 

 Player 2 16:27:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:27:12 $CLEAR_SE_VIS:  

 Player 2 16:28:18 $MATCH: 