Start Log 
 Player 2 16:22:21 $MOVE_TO_TABLE:  
 Player 2 16:22:29 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 16:22:29 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":275,"itemCardId":276} 
 Player 2 16:22:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":274}],"result":true,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 16:22:29 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":273,"itemCardId":274} 
 Player 2 16:22:29 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142]} 
 Player 2 16:22:29 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258]} 
 Player 2 16:22:29 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202]} 
 Player 2 16:22:29 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 16:22:29 $FLIP_CARD:  

 {"cardId":202} 
 Player 2 16:22:29 $ADD_STORE_CARD:  

 {"cardId":202} 
 Player 2 16:22:29 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 16:22:29 $FLIP_CARD:  

 {"cardId":201} 
 Player 2 16:22:29 $ADD_STORE_CARD:  

 {"cardId":201} 
 Player 2 16:22:29 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 16:22:29 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":258} 
 Player 2 16:22:30 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 16:22:30 $FLIP_CARD:  

 {"cardId":257} 
 Player 2 16:22:30 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":257} 
 Player 2 16:22:30 $NEW_MONSTER_ON_PLACE:  

 {"cardId":257,"monsterPlaceId":1} 
 Player 2 16:22:30 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 16:22:30 $FLIP_CARD:  

 {"cardId":256} 
 Player 2 16:22:30 $REGISTER_PASSIVE_ITEM:  

 {"cardId":256} 
 Player 2 16:22:30 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":256} 
 Player 2 16:22:30 $NEW_MONSTER_ON_PLACE:  

 {"cardId":256,"monsterPlaceId":2} 
 Player 2 16:22:30 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 16:22:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 16:22:30 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:22:30 $MOVE_CARD:  

 {"moveIndex":1,"cardId":142,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:22:30 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":142} 
 Player 2 16:22:30 $FLIP_CARD:  

 {"cardId":142} 
 Player 2 16:22:30 $FLIP_CARD:  

 {"cardId":142} 
 Player 2 16:22:30 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":142} 
 Player 2 16:22:30 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:22:30 $MOVE_CARD:  

 {"moveIndex":2,"cardId":141,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:22:31 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":141} 
 Player 2 16:22:31 $FLIP_CARD:  

 {"cardId":141} 
 Player 2 16:22:31 $FLIP_CARD:  

 {"cardId":141} 
 Player 2 16:22:31 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":141} 
 Player 2 16:22:31 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:22:31 $MOVE_CARD:  

 {"moveIndex":3,"cardId":140,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:22:31 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":140} 
 Player 2 16:22:31 $FLIP_CARD:  

 {"cardId":140} 
 Player 2 16:22:31 $FLIP_CARD:  

 {"cardId":140} 
 Player 2 16:22:31 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":140} 
 Player 2 16:22:31 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 16:22:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 16:22:31 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:22:31 $MOVE_CARD:  

 {"moveIndex":4,"cardId":139,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:22:32 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":139} 
 Player 2 16:22:32 $FLIP_CARD:  

 {"cardId":139} 
 Player 2 16:22:32 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":139} 
 Player 2 16:22:32 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:22:32 $MOVE_CARD:  

 {"moveIndex":5,"cardId":138,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:22:32 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":138} 
 Player 2 16:22:32 $FLIP_CARD:  

 {"cardId":138} 
 Player 2 16:22:32 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":138} 
 Player 2 16:22:32 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:22:32 $MOVE_CARD:  

 {"moveIndex":6,"cardId":137,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:22:33 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":137} 
 Player 2 16:22:33 $FLIP_CARD:  

 {"cardId":137} 
 Player 2 16:22:33 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":137} 
 Player 2 16:22:33 $GAME_HAS_STARTED:  
 Player 2 16:22:33 $SET_TURN:  

 {"playerId":2} 
 Player 2 16:22:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:22:33 $NEXT_STACK_ID:  
 Player 2 16:22:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:22:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:22:33 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 16:22:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 16:22:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:22:33 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 16:22:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:22:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 16:22:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 16:22:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 16:22:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:22:33 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 16:22:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 16:22:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:22:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:22:33 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 16:22:33 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 16:22:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 16:22:33 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 16:22:34 $MOVE_CARD:  

 {"moveIndex":7,"cardId":136,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 16:22:34 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":136} 
 Player 2 16:22:34 $FLIP_CARD:  

 {"cardId":136} 
 Player 2 16:22:34 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":136} 
 Player 2 16:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 16:22:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 16:22:34 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 16:22:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 16:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:22:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":273,"turnPlayerCardId":273,"stackEffectType":13}} 
 Player 2 16:22:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 16:22:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 16:22:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:22:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:22:34 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 16:22:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 16:22:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:22:34 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 16:22:34 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 16:22:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 16:22:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:22:35 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 16:22:35 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 16:22:35 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 16:22:35 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 16:22:35 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 16:22:35 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 16:22:35 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 16:22:35 $UPDATE_ACTIONS:  
 Player 2 16:22:36 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 16:22:37 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 16:22:45 $MOVE_CARD:  

 {"moveIndex":8,"cardId":200,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 16:22:45 $REGISTER_PASSIVE_ITEM:  

 {"cardId":200} 
 Player 2 16:22:45 $MOVE_CARD:  

 {"moveIndex":9,"cardId":200,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 16:22:45 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":200,"isReward":true} 
 Player 2 16:22:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":200}],"result":true,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 16:22:50 $NEXT_STACK_ID:  
 Player 2 16:22:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:22:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 16:22:51 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":256,"stackEffectType":4}} 
 Player 2 16:22:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 16:22:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:22:51 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 16:22:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 16:22:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":256,"stackEffectType":4}} 
 Player 2 16:22:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 16:22:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 16:22:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:22:51 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 16:22:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 16:22:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:22:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:22:51 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 16:22:51 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 16:22:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 16:22:51 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":256,"particleType":5} 
 Player 2 16:22:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":5,"originStackId":2},"isAfterActivation":true,"index":5} 
 Player 2 16:22:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 16:22:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":256,"stackEffectType":4}} 
 Player 2 16:22:51 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 16:22:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 16:22:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:22:51 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":273,"attackingPlayerCardId":273,"idOfCardBeingAttacked":256,"stackEffectType":4}} 
 Player 2 16:22:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 16:22:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 16:22:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:22:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 16:22:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 16:22:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 16:22:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 16:22:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 16:22:52 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 16:22:53 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 16:22:54 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 16:22:58 $NEXT_STACK_ID:  
 Player 2 16:22:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:22:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 16:22:58 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":273,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}} 
 Player 2 16:22:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 16:22:58 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 16:23:00 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 16:23:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs War<Monster>"} 
 Player 2 16:23:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:00 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 16:23:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs War<Monster>"} 
 Player 2 16:23:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":273,"numberRolled":6,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}} 
 Player 2 16:23:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 16:23:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 16:23:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:00 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 16:23:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 16:23:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:00 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:00 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 16:23:00 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 16:23:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 16:23:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 16:23:01 $NEXT_STACK_ID:  
 Player 2 16:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs War<Monster>"} 
 Player 2 16:23:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson \n2:Player 2 rolled 6 vs War<Monster>"} 
 Player 2 16:23:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":273,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":273,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson \n2:Player 2 rolled 6 vs War<Monster>"} 
 Player 2 16:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson \n2:Player 2 rolled 6 vs War<Monster>"} 
 Player 2 16:23:01 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":273,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":273,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":273,"numberRolled":6,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}]} 
 Player 2 16:23:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":6,"originStackId":3},"isAfterActivation":true,"index":6} 
 Player 2 16:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson \n2:Player 2 rolled 6 vs War<Monster>"} 
 Player 2 16:23:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":273,"numberRolled":6,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}} 
 Player 2 16:23:01 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 16:23:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 16:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson"} 
 Player 2 16:23:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":273,"numberRolled":6,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}} 
 Player 2 16:23:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 2 16:23:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 16:23:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:01 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 16:23:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 16:23:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:01 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 16:23:01 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 16:23:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 16:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson"} 
 Player 2 16:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson"} 
 Player 2 16:23:01 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":256} 
 Player 2 16:23:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 16:23:02 $NEXT_STACK_ID:  
 Player 2 16:23:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson"} 
 Player 2 16:23:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson \n2:Activate The Poop effect PutCounter<PutCounter>"} 
 Player 2 16:23:02 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"PutCounter","cardEffectNum":0,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 16:23:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 
 Player 2 16:23:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson \n2:Activate The Poop effect PutCounter<PutCounter>"} 
 Player 2 16:23:02 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 16:23:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson \n2:Activate The Poop effect PutCounter<PutCounter>"} 
 Player 2 16:23:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[200],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":273,"effectCardPlayer":273},"entityId":5,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"effectToDo":{"effectName":"PutCounter","cardEffectNum":0,"cardPlayerId":2,"cardId":200,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:23:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 
 Player 2 16:23:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 16:23:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:02 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:02 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 16:23:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 16:23:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:02 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 16:23:02 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 16:23:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 
 Player 2 16:23:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":200,"particleType":6} 
 Player 2 16:23:03 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 16:23:03 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 16:23:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":200,"particleType":6} 
 Player 2 16:23:04 $CARD_GET_COUNTER:  

 {"cardId":200,"numOfCounters":1} 
 Player 2 16:23:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":256}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 16:23:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson \n2:Activate The Poop effect PutCounter<PutCounter>"} 
 Player 2 16:23:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[200],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":273,"effectCardPlayer":273},"entityId":5,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:23:04 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 16:23:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 
 Player 2 16:23:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson"} 
 Player 2 16:23:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[200],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":273,"effectCardPlayer":273},"entityId":5,"creatorCardId":273,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":200,"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 16:23:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 
 Player 2 16:23:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 2 16:23:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:04 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 16:23:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 2 16:23:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 16:23:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 16:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson"} 
 Player 2 16:23:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":273,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":273,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 16:23:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 2 16:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:23:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":273,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":273,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:23:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 
 Player 2 16:23:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 2 16:23:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 16:23:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 2 16:23:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 16:23:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Stack Was Emptied "}} 
 Player 2 16:23:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 16:23:05 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 16:23:06 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 16:23:06 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 16:23:06 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 16:23:06 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 16:23:06 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 16:23:06 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 16:23:06 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 16:23:06 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 16:23:07 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 16:23:07 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 16:23:08 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 16:23:09 $NEXT_STACK_ID:  
 Player 2 16:23:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:23:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 16:23:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}} 
 Player 2 16:23:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Add AttackRoll 6 "}} 
 Player 2 16:23:09 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 16:23:12 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 16:23:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:12 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 16:23:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}} 
 Player 2 16:23:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Response Adding AttackRoll 6"},"childOfId":46} 
 Player 2 16:23:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 
 Player 2 16:23:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:13 $NEXT_STACK_ID:  
 Player 2 16:23:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster> \n2:Player 2 activated The Poop"} 
 Player 2 16:23:13 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":200,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 16:23:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Add ActivateItem 7 "}} 
 Player 2 16:23:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:13 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 16:23:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster> \n2:Player 2 activated The Poop"} 
 Player 2 16:23:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":200,"itemPlayerId":2,"effectToDoData":{"type":4,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:23:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Response Adding ActivateItem 7"},"childOfId":49} 
 Player 2 16:23:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Wait For Response From Player 2 "},"childOfId":49} 
 Player 2 16:23:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:18 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 2 16:23:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":49} 
 Player 2 16:23:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:19 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 2 16:23:19 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 16:23:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Resolve ActivateItem 7 "}} 
 Player 2 16:23:19 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":200,"particleType":6} 
 Player 2 16:23:21 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":200,"particleType":6} 
 Player 2 16:23:21 $PLAYER_ADD_DMG_PREVENTION:  

 {"playerId":2,"dmgToPrevent":1} 
 Player 2 16:23:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster> \n2:Player 2 activated The Poop"} 
 Player 2 16:23:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":200,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:23:21 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 16:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Remove After Resolve ActivateItem 7  "}} 
 Player 2 16:23:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":273,"hasLockingStackEffect":false,"itemToPlayCardId":200,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 16:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Response Remove After Resolve ActivateItem 7"},"childOfId":54} 
 Player 2 16:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Wait For Response From Player 1 "},"childOfId":54} 
 Player 2 16:23:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:21 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 2 16:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":54} 
 Player 2 16:23:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:21 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 2 16:23:21 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 16:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Resolve AttackRoll 6 "}} 
 Player 2 16:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Added 0 to original roll"}} 
 Player 2 16:23:21 $NEXT_STACK_ID:  
 Player 2 16:23:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":273,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:23:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:21 $REPLACE_STACK:  

 {"currentStack":[{"entityId":8,"creatorCardId":273,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":273,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}]} 
 Player 2 16:23:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":8,"originStackId":6},"isAfterActivation":true,"index":8} 
 Player 2 16:23:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson \n2:Player 2 rolled 5 vs War<Monster>"} 
 Player 2 16:23:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}} 
 Player 2 16:23:21 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 16:23:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 2 16:23:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Samson"} 
 Player 2 16:23:22 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":273,"numberRolled":5,"rollingPlayerCardId":273,"stackEffectType":2,"attackedMonsterCardId":256}} 
 Player 2 16:23:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":60} 
 Player 2 16:23:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Player 2 16:23:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:22 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 2 16:23:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Player 2 16:23:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:22 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:22 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 16:23:22 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 2 16:23:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Resolve CombatDamage 8 "}} 
 Player 2 16:23:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson"} 
 Player 2 16:23:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson"} 
 Player 2 16:23:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PREVENT_DAMAGE","args":[],"result":0,"preventMethod":false,"methodScopeId":273,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 
 Player 2 16:23:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War 1 combat damage to Samson"} 
 Player 2 16:23:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":273,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:23:22 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 16:23:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Remove After Resolve CombatDamage 8  "}} 
 Player 2 16:23:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:23:22 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":273,"entityToDoDamageCardId":256,"entityToTakeDamageCardId":273,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 16:23:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":65} 
 Player 2 16:23:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Wait For Response From Player 1 "},"childOfId":65} 
 Player 2 16:23:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:23:22 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 16:23:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":65} 
 Player 2 16:23:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 2 16:23:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Stack Was Emptied "}} 
 Player 2 16:23:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 16:23:23 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 16:23:24 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 2 16:23:24 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 16:23:24 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 16:23:24 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 16:23:24 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 16:23:25 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 16:55:20 $MATCH: 