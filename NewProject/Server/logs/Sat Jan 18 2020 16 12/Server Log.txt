Start Log 

 Player 1 16:12:05 $MATCH:  

 Player 1 16:12:05 $START_GAME:  

 Player 1 16:12:05 $MOVE_TO_TABLE:  

 Player 2 16:12:05 $MOVE_TO_TABLE:  

 Player 2 16:12:14 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 16:12:14 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 16:12:14 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":285,"itemCardId":288} 

 Player 2 16:12:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":282}],"result":true,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 16:12:14 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":281,"itemCardId":282} 

 Player 2 16:12:14 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[96,125,44,54,115,104,29,27,56,51,87,139,45,26,107,117,57,72,55,140,138,126,89,39,106,120,116,40,48,49,131,9,32,24,79,108,80,92,129,111,97,21,30,8,136,122,127,94,124,78,68,46,37,137,16,12,86,17,95,91,35,7,59,64,141,14,11,43,47,34,130,18,128,31,33,76,62,19,15,75,53,23,61,60,84,25,28,100,113,142,13,112,123,134,70,42,82,69,93,77,10,102,65,85,63,52,66,99,36,105,41,110,98,22,103,73,58,38,101,67,81,118,88,133,74,132,121,90,119,20,135,114,83,109,71,50]} 

 Player 2 16:12:14 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[249,227,273,241,233,236,276,264,245,247,274,265,256,254,238,237,248,228,271,260,275,252,255,257,240,253,279,261,250,246,262,235,258,232,278,268,243,231,266,234,259,270,280,251,263,267,242,239,230,277,272,269,229,244]} 

 Player 2 16:12:14 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[185,169,164,173,207,203,171,216,181,222,197,170,201,208,224,223,163,214,220,191,195,206,187,155,186,178,212,161,219,159,182,183,179,158,180,209,217,167,148,215,160,221,210,205,189,194,150,151,204,193,156,146,174,145,190,199,153,162,154,152,165,175,202,200,188,198,184,177,166,218,149,168,211,172,192,176,157,196,213,147]} 

 Player 2 16:12:14 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:12:14 $FLIP_CARD:  
{"cardId":147} 

 Player 2 16:12:14 $ADD_STORE_CARD:  
{"cardId":147} 

 Player 2 16:12:14 $DRAW_CARD:  
{"deckType":5} 

 Player 2 16:12:14 $FLIP_CARD:  
{"cardId":213} 

 Player 2 16:12:14 $ADD_STORE_CARD:  
{"cardId":213} 

 Player 2 16:12:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:12:14 $FLIP_CARD:  
{"cardId":244} 

 Player 2 16:12:14 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":244} 

 Player 2 16:12:14 $NEW_MONSTER_ON_PLACE:  
{"cardId":244,"monsterPlaceId":1} 

 Player 2 16:12:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 16:12:14 $FLIP_CARD:  
{"cardId":229} 

 Player 2 16:12:14 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":229} 

 Player 2 16:12:14 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":2} 

 Player 2 16:12:14 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 16:12:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 16:12:14 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:12:14 $MOVE_CARD:  
{"moveIndex":1,"cardId":50,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:12:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":288}],"result":true,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 16:12:15 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":50,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:12:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":50} 

 Player 2 16:12:15 $FLIP_CARD:  
{"cardId":50} 

 Player 2 16:12:15 $FLIP_CARD:  
{"cardId":50} 

 Player 2 16:12:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":50} 

 Player 2 16:12:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:12:15 $MOVE_CARD:  
{"moveIndex":2,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:12:15 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:12:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":71} 

 Player 2 16:12:15 $FLIP_CARD:  
{"cardId":71} 

 Player 2 16:12:15 $FLIP_CARD:  
{"cardId":71} 

 Player 2 16:12:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":71} 

 Player 2 16:12:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:12:15 $MOVE_CARD:  
{"moveIndex":3,"cardId":109,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:12:16 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":109,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:12:16 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":109} 

 Player 2 16:12:16 $FLIP_CARD:  
{"cardId":109} 

 Player 2 16:12:16 $FLIP_CARD:  
{"cardId":109} 

 Player 2 16:12:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":109} 

 Player 2 16:12:16 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 16:12:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 16:12:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:12:16 $MOVE_CARD:  
{"moveIndex":4,"cardId":83,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:12:16 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":83,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:12:16 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":83} 

 Player 2 16:12:16 $FLIP_CARD:  
{"cardId":83} 

 Player 2 16:12:16 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":83} 

 Player 2 16:12:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:12:16 $MOVE_CARD:  
{"moveIndex":5,"cardId":114,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:12:17 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":114,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:12:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":114} 

 Player 2 16:12:17 $FLIP_CARD:  
{"cardId":114} 

 Player 2 16:12:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":114} 

 Player 2 16:12:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 16:12:17 $MOVE_CARD:  
{"moveIndex":6,"cardId":135,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 16:12:17 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":135,"flipIfFlipped":false,"playerId":2} 

 Player 2 16:12:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":135} 

 Player 2 16:12:17 $FLIP_CARD:  
{"cardId":135} 

 Player 2 16:12:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":135} 

 Player 2 16:12:17 $GAME_HAS_STARTED:  

 Player 2 16:12:17 $SET_TURN:  
{"playerId":1} 

 Player 2 16:12:18 $START_TURN:  
{"playerId":1} 

 Player 2 16:12:18 $UPDATE_ACTIONS:  

 Player 1 16:12:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:18 $NEXT_STACK_ID:  

 Player 1 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:12:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:12:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 16:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 16:12:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:12:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 16:12:18 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 16:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 16:12:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:18 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 16:12:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:18 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:18 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:18 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:12:18 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:12:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 16:12:18 $DRAW_CARD:  
{"deckType":1} 

 Player 1 16:12:18 $MOVE_CARD:  
{"moveIndex":7,"cardId":20,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 16:12:19 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":20,"flipIfFlipped":false,"playerId":1} 

 Player 1 16:12:19 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":20} 

 Player 1 16:12:19 $FLIP_CARD:  
{"cardId":20} 

 Player 1 16:12:19 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":20} 

 Player 1 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 16:12:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 16:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 16:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":285,"turnPlayerCardId":285,"stackEffectType":13}} 

 Player 1 16:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 16:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 16:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 16:12:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 16:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 16:12:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 16:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 16:12:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 16:12:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:12:19 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:12:20 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:12:20 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:12:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:12:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:12:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 16:12:20 $MOVE_CARD:  
{"moveIndex":8,"cardId":183,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 1 16:12:21 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 16:12:21 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":183,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:12:21 $MOVE_CARD:  
{"moveIndex":9,"cardId":183,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 16:12:21 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":183,"flipIfFlipped":true,"playerId":1} 

 Player 1 16:12:21 $ADD_AN_ITEM:  
{"playerId":1,"cardId":183,"isReward":true} 

 Player 1 16:12:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":183}],"result":true,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 16:12:22 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:12:26 $SHOW_DECISION:  
{"startCardId":285,"endCardId":183} 

 Player 1 16:12:29 $NEXT_STACK_ID:  

 Player 1 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 1 16:12:29 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"hasLockingStackEffect":false,"itemToPlayCardId":183,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 1 16:12:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"hasLockingStackEffect":false,"itemToPlayCardId":183,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 16:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 1 16:12:29 $USE_ITEM:  
{"cardId":183} 

 Player 1 16:12:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 1 16:12:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"hasLockingStackEffect":false,"itemToPlayCardId":183,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:12:29 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 16:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 1 16:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 16:12:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:29 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 16:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 16:12:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:29 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:29 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:29 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 16:12:29 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 16:12:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 1 16:12:30 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":183,"particleType":6} 

 Player 1 16:12:31 $DISABLE_PARTICLE_EFFECT:  
{"cardId":183,"particleType":6} 

 Player 1 16:12:31 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":183,"effectIndex":{"type":3,"index":0},"conditionData":[null]} 

 Player 1 16:12:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 1 16:12:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"hasLockingStackEffect":false,"itemToPlayCardId":183,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"hasLockingStackEffect":false,"itemToPlayCardId":183,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:12:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 1 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":285,"hasLockingStackEffect":false,"itemToPlayCardId":183,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 16:12:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 1 16:12:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 16:12:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Lemon Mishap"} 

 Player 2 16:12:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 16:12:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 16:12:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 16:12:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 16:12:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 16:12:32 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 16:12:33 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 16:12:34 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 16:12:37 $SHOW_DECISION:  
{"startCardId":285,"endCardId":244} 

 Player 1 16:12:40 $NEXT_STACK_ID:  

 Player 1 16:12:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 1 16:12:40 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 16:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 1 16:12:40 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 16:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 1 16:12:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 1 16:12:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 16:12:40 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 16:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 1 16:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 16:12:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:40 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 16:12:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 16:12:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:12:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:41 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 16:12:41 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 16:12:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 1 16:12:41 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":244,"particleType":5} 

 Player 1 16:12:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 16:12:41 $LOG_ERROR:  
{"message":"\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\"","stack":"\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 1////
  

 Player 1 16:12:41 $LOG_ERROR:  
//////Error From Player 1////

 "\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\""

 + "\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 1////

 "\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\""

 + "\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 1 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 1 16:12:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 16:12:41 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:41 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 16:12:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 1 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":285,"attackingPlayerCardId":285,"idOfCardBeingAttacked":244,"stackEffectType":4}} 

 Player 1 16:12:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 1 16:12:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 16:12:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Fat Bat"} 

 Player 2 16:12:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:41 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 16:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 16:12:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 16:12:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 16:12:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 16:12:42 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 16:12:43 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 16:12:44 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 16:12:44 $NEXT_STACK_ID:  

 Player 1 16:12:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 16:12:44 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":285,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 16:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 16:12:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":285,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 16:12:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 1 16:12:44 $ROLL_DICE:  
{"playerId":1} 

 Player 2 16:12:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:12:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 16:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 1 16:12:46 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 16:12:46 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":285,"numberRolled":3,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 16:12:46 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 16:12:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 1 16:12:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 16:12:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:46 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 16:12:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 16:12:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:46 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 16:12:46 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 16:12:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 1 16:12:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 1 16:12:47 $NEXT_STACK_ID:  

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":285,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":285,"numberRolled":3,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":285,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":285,"numberRolled":3,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:47 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":285,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":285,"numberRolled":3,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}]} 

 Player 1 16:12:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 16:12:47 $LOG_ERROR:  
{"message":"\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\"","stack":"\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 1////
  

 Player 1 16:12:47 $LOG_ERROR:  
//////Error From Player 1////

 "\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\""

 + "\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 1////

 "\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\""

 + "\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 rolled 3 vs Fat Bat<Monster>"} 

 Player 1 16:12:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":285,"numberRolled":3,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 16:12:47 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 1 16:12:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":285,"numberRolled":3,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 16:12:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 1 16:12:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 1 16:12:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":285,"numberRolled":3,"rollingPlayerCardId":285,"stackEffectType":2,"attackedMonsterCardId":244}} 

 Player 1 16:12:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 

 Player 1 16:12:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 16:12:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:47 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 16:12:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 16:12:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain \n2:Player 1 is rolling against Fat Bat<Monster>"} 

 Player 2 16:12:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:48 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 16:12:48 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 16:12:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 1 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat 1 combat damage to Cain"} 

 Player 1 16:12:48 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Fat Bat will deal 1 combat damage to Cain"} 

 Player 1 16:12:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat 1 combat damage to Cain"} 

 Player 1 16:12:48 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":244} 

 Player 1 16:12:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":244}],"result":null,"preventMethod":false,"methodScopeId":285,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 16:12:49 $LOG_ERROR:  
{"message":"\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\"","stack":"\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
//////Error From Player 1////
  

 Player 1 16:12:49 $LOG_ERROR:  
//////Error From Player 1////

 "\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\""

 + "\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 
//////Error From Player 1////

 "\"Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\""

 + "\"Error: Effect DealDamage is an \\\"Add Passive Effect\\\", its condition PlayerRollNumber<PlayerRollNumber> doesn't have condition data\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:286:35)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\
    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\
    at new Promise (<anonymous>)\
    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\
    at Function.PassiveManager.testPassivesCondtions (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:230:16)\
    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Managers/PassiveManager.js:503:51)\
    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\
    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""

////// 

 Player 1 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat 1 combat damage to Cain"} 

 Player 1 16:12:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":285,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:12:49 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:49 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":285,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 1 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":285,"entityToDoDamageCardId":244,"entityToTakeDamageCardId":285,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 16:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 1 16:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 16:12:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 16:12:49 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Fat Bat combat damage to Cain"} 

 Player 2 16:12:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 16:12:49 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 16:12:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 16:12:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 16:12:49 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 16:12:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 1 16:12:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 16:12:50 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 16:12:51 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 16:12:51 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 16:15:40 $MATCH: 