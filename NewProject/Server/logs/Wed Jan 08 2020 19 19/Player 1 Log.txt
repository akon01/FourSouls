Start Log 
 Player 1 19:19:26 $START_GAME:  
 Player 1 19:19:26 $MOVE_TO_TABLE:  
 Player 1 19:19:33 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 19:19:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":260}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 19:19:35 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":38,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:19:35 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":128,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:19:36 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":89,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:19:36 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":22,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:19:37 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":90,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:19:37 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":72,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:19:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:19:37 $NEXT_STACK_ID:  
 Player 1 19:19:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:19:37 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 
 Player 1 19:19:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:19:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 
 Player 1 19:19:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 19:19:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:19:37 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 19:19:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:19:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 
 Player 1 19:19:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 19:19:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 19:19:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:19:37 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 19:19:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 19:19:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:19:38 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:19:38 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 19:19:38 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 19:19:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 19:19:38 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 19:19:38 $MOVE_CARD:  

 {"moveIndex":7,"cardId":16,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 19:19:38 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":16} 
 Player 1 19:19:38 $FLIP_CARD:  

 {"cardId":16} 
 Player 1 19:19:38 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":16} 
 Player 1 19:19:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 19:19:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 
 Player 1 19:19:38 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 19:19:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 
 Player 1 19:19:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 19:19:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":259,"turnPlayerCardId":259,"stackEffectType":13}} 
 Player 1 19:19:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 19:19:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 19:19:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 19:19:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 19:19:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 19:19:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 19:19:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 19:19:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 19:19:39 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 19:19:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 19:19:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:40 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 19:19:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 19:19:40 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 19:19:40 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 19:19:40 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 19:19:40 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 19:19:40 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 19:19:40 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 19:19:40 $END_TURN:  
 Player 1 19:19:40 $SET_TURN:  

 {"playerId":2} 
 Player 1 19:19:40 $START_TURN:  

 {"playerId":2} 
 Player 1 19:19:41 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 19:19:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:41 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:19:41 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 19:19:41 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":10,"flipIfFlipped":false,"playerId":2} 
 Player 1 19:19:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 19:19:42 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 19:19:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 19:19:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 19:19:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 19:21:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Incubus"} 
 Player 1 19:21:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Incubus"}