{"version":3,"sources":["decorators/AfterThrowing.ts"],"names":[],"mappings":";;AAAA,mCAAmE;AACnE,qCAAwC;AAsBxC;;;;GAIG;AACU,QAAA,aAAa,GACtB,8BAAqB,CACjB,eAAe,EACf,IAAI,EACJ,UAAA,IAAI;IACA,IAAI,CAAC,IAAI,CAAwB;QAC7B,KAAK,EAAE,UAAC,GAAG,IAAK,OAAA,eAAQ,CAAC,GAAG,CAAC,EAAb,CAAa;QAC7B,WAAW,EAAE,UAAC,QAAQ,EAAE,GAAG;YACvB,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC;QAC5B,CAAC;KACJ,CAAC,CAAA;AACN,CAAC,CAC8C,CAAC","file":"../../decorators/AfterThrowing.js","sourcesContent":["import { IAdviceDecorator, createAdviceDecorator } from './Advice';\r\nimport { isString } from '@ts-ioc/core';\r\nimport { AfterThrowingMetadata } from '../metadatas';\r\n\r\n/**\r\n * aop after throwing decorator.\r\n *\r\n * @export\r\n * @interface IAfterThrowingDecorator\r\n * @extends {IAdviceDecorator<T>}\r\n * @template T\r\n */\r\nexport interface IAfterThrowingDecorator<T extends AfterThrowingMetadata> extends IAdviceDecorator<T> {\r\n    /**\r\n     * define aop after throwing advice.\r\n     *\r\n     * @param {(string | RegExp)} [pointcut] define advice match express for pointcut.\r\n     * @param {string} [throwing] set name provider of pointcut throwing error for advices.\r\n     * @param { string } [annotation] annotation name, special annotation metadata for annotation advices.\r\n     */\r\n    (pointcut?: string | RegExp, throwing?: string, annotation?: string): MethodDecorator\r\n}\r\n\r\n/**\r\n * aop after throwing advice decorator.\r\n *\r\n * @AfterThrowing\r\n */\r\nexport const AfterThrowing: IAfterThrowingDecorator<AfterThrowingMetadata> =\r\n    createAdviceDecorator<AfterThrowingMetadata>(\r\n        'AfterThrowing',\r\n        null,\r\n        args => {\r\n            args.next<AfterThrowingMetadata>({\r\n                match: (arg) => isString(arg),\r\n                setMetadata: (metadata, arg) => {\r\n                    metadata.throwing = arg;\r\n                }\r\n            })\r\n        }\r\n    ) as IAfterThrowingDecorator<AfterThrowingMetadata>;\r\n"]}