Start Log 
 Player 1 01:00:33 $START_GAME:  
 Player 1 01:00:33 $MOVE_TO_TABLE:  
 Player 1 01:00:41 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 01:00:43 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":299}],"result":true,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 01:00:43 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":17,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:00:43 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":99,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:00:44 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":13,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:00:45 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":50,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:00:45 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":41,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:00:46 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":57,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:00:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:00:46 $NEXT_STACK_ID:  
 Player 1 01:00:46 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:00:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 01:00:46 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 
 Player 1 01:00:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 01:00:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 
 Player 1 01:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 01:00:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:00:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 01:00:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 
 Player 1 01:00:46 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 01:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 01:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 01:00:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:00:46 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 01:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 01:00:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:00:46 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:00:46 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 01:00:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 01:00:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 01:00:47 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 01:00:47 $MOVE_CARD:  

 {"moveIndex":7,"cardId":18,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 01:00:47 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":18} 
 Player 1 01:00:47 $FLIP_CARD:  

 {"cardId":18} 
 Player 1 01:00:47 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":18} 
 Player 1 01:00:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 1 01:00:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 
 Player 1 01:00:47 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 01:00:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:00:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 
 Player 1 01:00:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 01:00:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:00:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":298,"turnPlayerCardId":298,"stackEffectType":13}} 
 Player 1 01:00:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 01:00:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 01:00:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:00:47 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 01:00:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 01:00:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 01:00:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 01:00:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 01:00:48 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 01:00:49 $SHOW_DECISION:  

 {"startCardId":298,"endCardId":251} 
 Player 1 01:00:49 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 01:00:50 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 01:00:52 $NEXT_STACK_ID:  
 Player 1 01:00:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:00:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 1 01:00:52 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 1 01:00:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 1 01:00:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 1 01:00:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 1 01:00:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:00:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 1 01:00:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 1 01:00:52 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 01:00:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 1 01:00:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 01:00:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:00:53 $SHOW_DECISION:  

 {"startCardId":298,"endCardId":299} 
 Player 1 01:00:56 $NEXT_STACK_ID:  
 Player 1 01:00:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 1 01:00:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 
 Player 1 01:00:56 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 01:00:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 
 Player 1 01:00:56 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 01:00:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Add ActivateItem 3 "}} 
 Player 1 01:00:58 $SHOW_DECISION:  

 {"startCardId":299,"endCardId":298} 
 Player 1 01:00:59 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Player 1 01:01:01 $USE_ITEM:  

 {"cardId":299} 
 Player 1 01:01:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 
 Player 1 01:01:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 01:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 01:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Response Adding ActivateItem 3"},"childOfId":13} 
 Player 1 01:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Wait For Response From Player 1 "},"childOfId":13} 
 Player 1 01:01:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 01:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Wait For Response From Player 2 "},"childOfId":13} 
 Player 1 01:01:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:01 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 01:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 01:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Resolve ActivateItem 3 "}} 
 Player 1 01:01:01 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":299,"particleType":6} 
 Player 1 01:01:03 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":299,"particleType":6} 
 Player 1 01:01:03 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  

 {"cardId":299,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[298],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":299,"effectCardOwner":298,"effectCardPlayer":298}]} 
 Player 1 01:01:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed \n2:Player 1 activated HolyMantle"} 
 Player 1 01:01:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 01:01:03 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 01:01:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 1 01:01:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 1 01:01:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 1 01:01:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":298,"hasLockingStackEffect":false,"itemToPlayCardId":299,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":18} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Wait For Response From Player 2 "},"childOfId":18} 
 Player 1 01:01:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Wait For Response From Player 1 "},"childOfId":18} 
 Player 1 01:01:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Resolve DeclareAttack 2 "}} 
 Player 1 01:01:04 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":251,"particleType":5} 
 Player 1 01:01:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":2},"isAfterActivation":true,"index":2} 
 Player 1 01:01:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Greed"} 
 Player 1 01:01:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 01:01:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 1 01:01:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":298,"attackingPlayerCardId":298,"idOfCardBeingAttacked":251,"stackEffectType":4}} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":23} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Wait For Response From Player 1 "},"childOfId":23} 
 Player 1 01:01:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:04 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 1 01:01:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Wait For Response From Player 2 "},"childOfId":23} 
 Player 1 01:01:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 1 01:01:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Stack Was Emptied "}} 
 Player 1 01:01:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 01:01:05 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 01:01:05 $NEXT_STACK_ID:  
 Player 1 01:01:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 1 01:01:05 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 1 01:01:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Add AttackRoll 4 "}} 
 Player 1 01:01:05 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 01:01:06 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 01:01:06 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 01:01:07 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 01:01:07 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":4} 
 Player 1 01:01:07 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"player rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:07 $SHOW_DICE_ROLL:  

 {"stackId":4} 
 Player 1 01:01:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:10 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 01:01:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Response Adding AttackRoll 4"},"childOfId":28} 
 Player 1 01:01:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Wait For Response From Player 1 "},"childOfId":28} 
 Player 1 01:01:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:10 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 1 01:01:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Wait For Response From Player 2 "},"childOfId":28} 
 Player 1 01:01:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:11 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 01:01:11 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Resolve AttackRoll 4 "}} 
 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Added 0 to original roll"}} 
 Player 1 01:01:11 $NEXT_STACK_ID:  
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:11 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}]} 
 Player 1 01:01:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:11 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 01:01:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Remove After Resolve AttackRoll 4  "}} 
 Player 1 01:01:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 01:01:11 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":34} 
 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Wait For Response From Player 1 "},"childOfId":34} 
 Player 1 01:01:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:11 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 1 01:01:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":34} 
 Player 1 01:01:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:11 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:12 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 01:01:12 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 1 01:01:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Resolve CombatDamage 5 "}} 
 Player 1 01:01:12 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"The Lost will deal 1 combat damage to Greed"} 
 Player 1 01:01:12 $MONSTER_GET_DAMAGED:  

 {"cardId":251,"hpLeft":2,"damageDealerId":298} 
 Player 1 01:01:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":251,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 01:01:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":298},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 
 Player 1 01:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 01:01:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:12 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 01:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Remove After Resolve CombatDamage 5  "}} 
 Player 1 01:01:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":39} 
 Player 1 01:01:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Wait For Response From Player 2 "},"childOfId":39} 
 Player 1 01:01:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:12 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 1 01:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":39} 
 Player 1 01:01:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":40} 
 Player 1 01:01:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Stack Was Emptied "}} 
 Player 1 01:01:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 01:01:13 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 01:01:14 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 01:01:14 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 01:01:14 $NEXT_STACK_ID:  
 Player 1 01:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 1 01:01:14 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 1 01:01:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Add AttackRoll 6 "}} 
 Player 1 01:01:14 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 01:01:14 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 01:01:15 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 01:01:16 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":4} 
 Player 1 01:01:16 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"player rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:16 $SHOW_DICE_ROLL:  

 {"stackId":6} 
 Player 1 01:01:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:19 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 01:01:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Response Adding AttackRoll 6"},"childOfId":44} 
 Player 1 01:01:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Wait For Response From Player 1 "},"childOfId":44} 
 Player 1 01:01:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:19 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":44} 
 Player 1 01:01:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:20 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:20 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 01:01:20 $ACTION_MASSAGE_REMOVE:  

 {"id":45} 
 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Resolve AttackRoll 6 "}} 
 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Added 0 to original roll"}} 
 Player 1 01:01:20 $NEXT_STACK_ID:  
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:20 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}]} 
 Player 1 01:01:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed \n2:Player 1 rolled 4 vs Greed<Monster>"} 
 Player 1 01:01:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:20 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 01:01:20 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 1 01:01:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 01:01:20 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":298,"numberRolled":4,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":50} 
 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Player 1 01:01:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:20 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 01:01:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Player 1 01:01:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:21 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 01:01:21 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Player 1 01:01:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Resolve CombatDamage 7 "}} 
 Player 1 01:01:21 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"The Lost will deal 1 combat damage to Greed"} 
 Player 1 01:01:21 $MONSTER_GET_DAMAGED:  

 {"cardId":251,"hpLeft":1,"damageDealerId":298} 
 Player 1 01:01:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":298}],"result":null,"preventMethod":false,"methodScopeId":251,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 1 01:01:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":298},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":8,"originStackId":7},"isAfterActivation":true,"index":8} 
 Player 1 01:01:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:The Lost combat damage to Greed"} 
 Player 1 01:01:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:21 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 01:01:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Remove After Resolve CombatDamage 7  "}} 
 Player 1 01:01:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":298,"entityToDoDamageCardId":298,"entityToTakeDamageCardId":251,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":55} 
 Player 1 01:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Player 1 01:01:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 01:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Player 1 01:01:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Player 1 01:01:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Stack Was Emptied "}} 
 Player 1 01:01:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 01:01:22 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 01:01:23 $NEXT_STACK_ID:  
 Player 1 01:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 1 01:01:23 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Greed<Monster>"} 
 Player 1 01:01:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":298,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Add AttackRoll 8 "}} 
 Player 1 01:01:23 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 01:01:23 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 01:01:24 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 01:01:25 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 01:01:25 $UPDATE_STACK_VIS:  

 {"stackId":8,"text":"player rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:25 $SHOW_DICE_ROLL:  

 {"stackId":8} 
 Player 1 01:01:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:28 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Response Adding AttackRoll 8"},"childOfId":60} 
 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Player 1 01:01:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:28 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Player 1 01:01:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:28 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:28 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 01:01:28 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Resolve AttackRoll 8 "}} 
 Player 1 01:01:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Added 0 to original roll"}} 
 Player 1 01:01:28 $NEXT_STACK_ID:  
 Player 1 01:01:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:29 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}]} 
 Player 1 01:01:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":9,"originStackId":8},"isAfterActivation":true,"index":9} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost \n2:Player 1 rolled 2 vs Greed<Monster>"} 
 Player 1 01:01:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:29 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 01:01:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Remove After Resolve AttackRoll 8  "}} 
 Player 1 01:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to The Lost"} 
 Player 1 01:01:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":298,"numberRolled":2,"rollingPlayerCardId":298,"stackEffectType":2,"attackedMonsterCardId":251}} 
 Player 1 01:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":66} 
 Player 1 01:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 1 01:01:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:29 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 01:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 1 01:01:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:29 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 01:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 1 01:01:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Resolve CombatDamage 9 "}} 
 Player 1 01:01:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 1 01:01:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":9},"isAfterActivation":false,"index":1} 
 Player 1 01:01:30 $NEXT_STACK_ID:  
 Player 1 01:01:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 1 01:01:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 1 01:01:30 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 01:01:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 1 01:01:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 01:01:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Add ActivatePassiveEffect 10 "}} 
 Player 1 01:01:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 1 01:01:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 1 01:01:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":251,"cardId":251,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 01:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 01:01:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Response Adding ActivatePassiveEffect 10"},"childOfId":71} 
 Player 1 01:01:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 
 Player 1 01:01:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 01:01:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 
 Player 1 01:01:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 1 01:01:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Resolve ActivatePassiveEffect 10 "}} 
 Player 1 01:01:31 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":251,"particleType":6} 
 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 01:01:31 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 01:01:33 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":251,"particleType":6} 
 Player 1 01:01:33 $SET_MONEY:  

 {"playerId":1,"numOfCoins":0} 
 Player 1 01:01:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 1 01:01:33 $SET_MONEY:  

 {"playerId":2,"numOfCoins":0} 
 Player 1 01:01:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 1 01:01:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":1,"originStackId":9},"isAfterActivation":false,"index":1} 
 Player 1 01:01:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Activate Greed effect AddMoney<AddMoney>"} 
 Player 1 01:01:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 01:01:33 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 01:01:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 1 01:01:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Remove After Resolve ActivatePassiveEffect 10  "}} 
 Player 1 01:01:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 1 01:01:33 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[298,282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":251,"effectCardPlayer":251},"entityId":10,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":251,"cardWithEffectId":251,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Response Remove After Resolve ActivatePassiveEffect 10"},"childOfId":76} 
 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Wait For Response From Player 1 "},"childOfId":76} 
 Player 1 01:01:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:33 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":76} 
 Player 1 01:01:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:33 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:33 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 01:01:33 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 1 01:01:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Resolve CombatDamage 9 "}} 
 Player 1 01:01:33 $UPDATE_STACK_VIS:  

 {"stackId":9,"text":"Greed will deal 1 combat damage to The Lost"} 
 Player 1 01:01:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 1 01:01:34 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":251} 
 Player 1 01:01:34 $NEXT_STACK_ID:  
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost"} 
 Player 1 01:01:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 01:01:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 01:01:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 01:01:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 01:01:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed 1 combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 1 01:01:34 $REPLACE_STACK:  

 {"currentStack":[{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}]} 
 Player 1 01:01:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":251}],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 
 Player 1 01:01:34 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:34 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Remove After Resolve CombatDamage 9  "}} 
 Player 1 01:01:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:34 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":298,"entityToDoDamageCardId":251,"entityToTakeDamageCardId":298,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 1 01:01:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Response Remove After Resolve CombatDamage 9"},"childOfId":81} 
 Player 1 01:01:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Wait For Response From Player 1 "},"childOfId":81} 
 Player 1 01:01:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:34 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 01:01:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":81} 
 Player 1 01:01:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:34 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:35 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 01:01:35 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 1 01:01:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Resolve PlayerDeath 11 "}} 
 Player 1 01:01:35 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":251,"particleType":5} 
 Player 1 01:01:35 $CANCEL_ATTACK:  
 Player 1 01:01:35 $NEXT_STACK_ID:  
 Player 1 01:01:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":12},"isAfterActivation":false,"index":2} 
 Player 1 01:01:35 $NEXT_STACK_ID:  
 Player 1 01:01:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 1 01:01:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 01:01:35 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 01:01:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 01:01:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 01:01:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Add ActivatePassiveEffect 13 "}} 
 Player 1 01:01:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 01:01:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 01:01:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":299,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 01:01:35 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 01:01:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Response Adding ActivatePassiveEffect 13"},"childOfId":86} 
 Player 1 01:01:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Wait For Response From Player 2 "},"childOfId":86} 
 Player 1 01:01:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:35 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 1 01:01:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":86} 
 Player 1 01:01:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 1 01:01:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Resolve ActivatePassiveEffect 13 "}} 
 Player 1 01:01:36 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":299,"particleType":6} 
 Player 1 01:01:36 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 01:01:38 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":299,"particleType":6} 
 Player 1 01:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 01:01:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":298,"playerToPayCardId":298,"stackEffectType":16}} 
 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Fizzle PlayerDeathPenalties 12"}} 
 Player 1 01:01:38 $FIZZLE_STACK_EFFECT:  

 {"entityId":12} 
 Player 1 01:01:38 $PLAYER_HEAL:  

 {"playerId":1,"hpToHeal":1,"healDown":true} 
 Player 1 01:01:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":298,"scopeIsPlayer":true,"index":2,"originStackId":12},"isAfterActivation":false,"index":2} 
 Player 1 01:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Player 1 01:01:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 01:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 01:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Remove After Resolve ActivatePassiveEffect 13  "}} 
 Player 1 01:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":298,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":299,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Response Remove After Resolve ActivatePassiveEffect 13"},"childOfId":92} 
 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Wait For Response From Player 1 "},"childOfId":92} 
 Player 1 01:01:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 1 01:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":92} 
 Player 1 01:01:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:38 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 1 01:01:39 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 1 01:01:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Resolve PlayerDeath 11 "}} 
 Player 1 01:01:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":298,"playerToPayCardId":298,"stackEffectType":16}} 
 Player 1 01:01:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 
 Player 1 01:01:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 
 Player 1 01:01:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:39 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}]} 
 Player 1 01:01:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 1 01:01:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 
 Player 1 01:01:39 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 01:01:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 
 Player 1 01:01:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Remove After Resolve PlayerDeath 11  "}} 
 Player 1 01:01:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":298,"playerToDieCardId":298,"stackEffectType":15,"killerId":251}} 
 Player 1 01:01:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Response Remove After Resolve PlayerDeath 11"},"childOfId":97} 
 Player 1 01:01:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":97} 
 Player 1 01:01:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 01:01:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 1 01:01:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":97} 
 Player 1 01:01:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 1 01:01:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Stack Was Emptied "}} 
 Player 1 01:01:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 01:01:40 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 01:01:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 01:01:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 1 01:01:41 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 01:01:42 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 01:01:42 $END_TURN:  
 Player 1 01:01:42 $SET_TURN:  

 {"playerId":2} 
 Player 1 01:01:42 $START_TURN:  

 {"playerId":2} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":101} 
 Player 1 01:01:42 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Player 1 01:01:44 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 01:01:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:44 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:01:45 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":49,"flipIfFlipped":false,"playerId":2} 
 Player 1 01:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 01:01:45 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:01:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Greed"} 
 Player 1 01:01:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:01 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:02 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:03 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:02:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:02:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:37 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel combat damage to Greed"} 
 Player 1 01:02:39 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:02:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:02:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:54 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:02:55 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:02:58 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:02:59 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:03:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:03:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 01:03:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is rolling against Greed<Monster>"} 
 Player 1 01:03:07 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:03:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:08 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:03:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Activate Greed "} 
 Player 1 01:03:11 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is about to die"} 
 Player 1 01:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Greed combat damage to Azazel \n2:Player 2 is about to die"} 
 Player 1 01:03:12 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 1 01:03:13 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}