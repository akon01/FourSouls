{"version":3,"sources":["utils/typeCheck.ts"],"names":[],"mappings":"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","file":"../../utils/typeCheck.js","sourcesContent":["import { Type, AbstractType, Token, IRefTarget, ClassType } from '../types';\r\nimport { Registration } from '../Registration';\r\nimport { lang } from './lang';\r\n\r\ndeclare let process: any;\r\n\r\n/**\r\n * check target is function or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns\r\n */\r\nexport function isFunction(target: any): target is Function {\r\n    if (!target) {\r\n        return false;\r\n    }\r\n    return typeof target === 'function';\r\n}\r\n\r\n/**\r\n * check Abstract class with @Abstract or not\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is AbstractType<any>}\r\n */\r\nexport function isAbstractClass(target: any): target is AbstractType<any> {\r\n    return classCheck(target) && Reflect.hasOwnMetadata('@Abstract', target);\r\n}\r\n\r\n\r\n/**\r\n * check target is class or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is Type<any>}\r\n */\r\nexport function isClass(target: any): target is Type<any> {\r\n    return classCheck(target) && (!Reflect.hasOwnMetadata('@Abstract', target))\r\n}\r\n\r\nexport function isClassType(target: any): target is ClassType<any> {\r\n    return classCheck(target);\r\n}\r\n\r\nfunction classCheck(target: any): boolean {\r\n    if (!isFunction(target)) {\r\n        return false;\r\n    }\r\n\r\n    if (target.prototype) {\r\n        if (!target.name || target.name === 'Object') {\r\n            return false;\r\n        }\r\n\r\n        let type = target as Type<any>;\r\n\r\n        // for uglify\r\n        if (/^[a-z]$/.test(type.name)) {\r\n            if (lang.hasClassAnnations(type)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            if (lang.hasClassAnnations(type)) {\r\n                return true;\r\n            }\r\n            if (!/^[A-Z@]/.test(target.name)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // for IE 8, 9\r\n        if (!isNodejsEnv() && /MSIE [6-9]/.test(navigator.userAgent)) {\r\n            return true;\r\n        }\r\n        try {\r\n            target.arguments && target.caller;\r\n            return false;\r\n        } catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * is run in nodejs or not.\r\n *\r\n * @export\r\n * @returns {boolean}\r\n */\r\nexport function isNodejsEnv(): boolean {\r\n    return (typeof process !== 'undefined') && (typeof process.versions.node !== 'undefined')\r\n}\r\n\r\n/**\r\n * check target is token or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is Token<any>}\r\n */\r\nexport function isToken(target: any): target is Token<any> {\r\n    if (!target) {\r\n        return false;\r\n    }\r\n    if (isString(target) || isSymbol(target) || classCheck(target) || (target instanceof Registration)) {\r\n        return true\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * is target promise or not. now check is es6 Promise only.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is Promise<any>}\r\n */\r\nexport function isPromise(target: any): target is Promise<any> {\r\n    if (!target) {\r\n        return false;\r\n    }\r\n    let type = target.constructor || target.prototype.constructor;\r\n    if (type && type.name === 'Promise') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * is target rxjs observable or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {boolean}\r\n */\r\nexport function isObservable(target: any): boolean {\r\n    if (!target && !isObject(target)) {\r\n        return false;\r\n    }\r\n    let type = target.constructor || target.prototype.constructor;\r\n    if (type && type.name === 'Observable') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * is target base object or not.\r\n * eg. {}, have not self constructor;\r\n * @export\r\n * @param {*} target\r\n * @returns {target is Promise<any>}\r\n */\r\nexport function isBaseObject(target: any): target is object {\r\n    if (!target) {\r\n        return false;\r\n    }\r\n    if (target.constructor && target.constructor.name === 'Object') {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * is metadata object or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @param {...(string|string[])[]} props\r\n * @returns {boolean}\r\n */\r\nexport function isMetadataObject(target: any, ...props: (string | string[])[]): boolean {\r\n    if (!isBaseObject(target)) {\r\n        return false;\r\n    }\r\n    if (props.length) {\r\n        return lang.keys(target).some(n => props.some(ps => isString(ps) ? ps === n : ps.indexOf(n) > 0));\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * is reftarget options or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is IRefTarget}\r\n */\r\nexport function isRefTarget(target: any): target is IRefTarget {\r\n    if (isBaseObject(target) !== true) {\r\n        return false\r\n    }\r\n    return isToken(target.target);\r\n}\r\n\r\n\r\n/**\r\n * check object is class metadata or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @param {...(string | string[])[]} extendsProps\r\n * @returns {boolean}\r\n */\r\nexport function isClassMetadata(target, ...extendsProps: (string | string[])[]): boolean {\r\n    return isMetadataObject(target, ...extendsProps.concat(['singleton', 'provide', 'alias', 'type']));\r\n}\r\n\r\n/**\r\n * check object is property metadata or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @param {...(string | string[])[]} extendsProps\r\n * @returns {boolean}\r\n */\r\nexport function isProvideMetadata(target, ...extendsProps: (string | string[])[]): boolean {\r\n    return isMetadataObject(target, ...extendsProps.concat(['type', 'provider']));\r\n}\r\n\r\n/**\r\n * check target is string or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is string}\r\n */\r\nexport function isString(target: any): target is string {\r\n    return typeof target === 'string';\r\n}\r\n\r\n/**\r\n * check target is boolean or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is boolean}\r\n */\r\nexport function isBoolean(target: any): target is boolean {\r\n    return typeof target === 'boolean' || (target === true || target === false);\r\n}\r\n\r\n/**\r\n * check target is number or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is number}\r\n */\r\nexport function isNumber(target: any): target is number {\r\n    return typeof target === 'number';\r\n}\r\n\r\n/**\r\n * check target is undefined or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is undefined}\r\n */\r\nexport function isUndefined(target: any): target is undefined {\r\n    return typeof target === 'undefined' || target === undefined;\r\n}\r\n\r\n/**\r\n * check target is unll or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is null}\r\n */\r\nexport function isNull(target: any): target is null {\r\n    return target === null;\r\n}\r\n\r\n/**\r\n * is target null or undefined.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {boolean}\r\n */\r\nexport function isNullOrUndefined(target): boolean {\r\n    return isNull(target) || isUndefined(target);\r\n}\r\n\r\n/**\r\n * check target is array or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is Array<any>}\r\n */\r\nexport function isArray(target: any): target is Array<any> {\r\n    return Array.isArray(target);\r\n}\r\n\r\n/**\r\n * check target is object or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is object}\r\n */\r\nexport function isObject(target: any): target is object {\r\n    if (isNullOrUndefined(target)) {\r\n        return false;\r\n    }\r\n    let type = typeof target;\r\n    return type === 'object' || type === 'function';\r\n}\r\n\r\n/**\r\n * is custom class type instance or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {boolean}\r\n */\r\nexport function isTypeObject(target: any): boolean {\r\n    if (isNullOrUndefined(target)) {\r\n        return false;\r\n    }\r\n    if (typeof target !== 'object') {\r\n        return false;\r\n    }\r\n    let type = lang.getClass(target);\r\n    if (isBaseType(type)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n/**\r\n * check target is date or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is Date}\r\n */\r\nexport function isDate(target: any): target is Date {\r\n    return isObject(target) && target instanceof Date;\r\n}\r\n\r\n/**\r\n * check target is symbol or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is Symbol}\r\n */\r\nexport function isSymbol(target: any): target is Symbol {\r\n    return typeof target === 'symbol' || (isObject(target) && /^Symbol\\(/.test(target.toString()));\r\n}\r\n\r\n/**\r\n * check target is regexp or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {target is RegExp}\r\n */\r\nexport function isRegExp(target: any): target is RegExp {\r\n    return target && target instanceof RegExp;\r\n}\r\n\r\n/**\r\n * is base type or not.\r\n *\r\n * @export\r\n * @param {*} target\r\n * @returns {boolean}\r\n */\r\nexport function isBaseType(target: any): boolean {\r\n    if (!isFunction(target)) {\r\n        return false;\r\n    }\r\n    return target === Object\r\n        || target === Boolean\r\n        || target === String\r\n        || target === Number\r\n        || target === Date;\r\n}\r\n"]}