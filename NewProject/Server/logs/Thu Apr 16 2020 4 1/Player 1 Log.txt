Start Log 
 Player 1 04:01:37 $START_GAME:  
 Player 1 04:01:37 $MOVE_TO_TABLE:  
 Player 1 04:01:44 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 04:01:47 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":311,"itemCardId":312} 
 Player 1 04:01:47 $SET_CHAR_END:  

 {"playerId":2} 
 Player 1 04:01:48 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":102,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:01:49 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":109,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:01:49 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":126,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:01:50 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":82,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:01:50 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":31,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:01:51 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":131,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:01:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:01:51 $NEXT_STACK_ID:  
 Player 1 04:01:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:01:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 1 04:01:51 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:01:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:01:51 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:01:51 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 04:01:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 1 04:01:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:01:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:01:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 1 04:01:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 1 04:01:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:01:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 1 04:01:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:01:54 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:01:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 1 04:01:54 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:01:54 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 04:01:54 $MOVE_CARD:  

 {"moveIndex":7,"cardId":92,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 04:01:55 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":92} 
 Player 1 04:01:55 $FLIP_CARD:  

 {"cardId":92} 
 Player 1 04:01:55 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":92} 
 Player 1 04:01:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 
 Player 1 04:01:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:01:55 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 1 04:01:55 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:01:55 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 1 04:01:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 1 04:01:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 1 04:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:01:58 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:01:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 1 04:01:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 1 04:01:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:01:58 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:01:58 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 1 04:01:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 1 04:01:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:01:58 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 1 04:01:58 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 1 04:01:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 1 04:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:01:58 $CLEAR_SE_VIS:  
 Player 1 04:02:14 $NEXT_STACK_ID:  
 Player 1 04:02:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Golden Horseshoe "} 
 Player 1 04:02:14 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:02:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:02:15 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:02:15 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 04:02:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 1 04:02:17 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":102} 
 Player 1 04:02:17 $MOVE_CARD:  

 {"moveIndex":8,"cardId":102,"placeID":329,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:02:18 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":102} 
 Player 1 04:02:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Golden Horseshoe: AddTrinket"} 
 Player 1 04:02:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:02:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 1 04:02:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 04:02:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:18 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 04:02:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 04:02:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:02:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:02:19 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 04:02:19 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 04:02:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 1 04:02:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Golden Horseshoe: AddTrinket"} 
 Player 1 04:02:19 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:02:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays Golden Horseshoe: AddTrinket"} 
 Player 1 04:02:19 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":102,"particleType":6} 
 Player 1 04:02:21 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":102,"particleType":6} 
 Player 1 04:02:21 $CARD_ADD_TRINKET:  

 {"cardId":102,"playerId":1,"addMuiliEffect":false} 
 Player 1 04:02:21 $REMOVE_FROM_PILE:  

 {"cardId":102} 
 Player 1 04:02:21 $REGISTER_PASSIVE_ITEM:  

 {"cardId":102} 
 Player 1 04:02:21 $MOVE_CARD:  

 {"moveIndex":9,"cardId":102,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 04:02:22 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":102,"isReward":true} 
 Player 1 04:02:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":102}],"result":true,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 04:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays Golden Horseshoe: AddTrinket"} 
 Player 1 04:02:22 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:02:22 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 1 04:02:22 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:02:22 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 1 04:02:25 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 1 04:02:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 1 04:02:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:02:25 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":102,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:02:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 1 04:02:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 04:02:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:02:25 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:02:25 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 04:02:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 04:02:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:25 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 04:02:25 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 04:02:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 04:02:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:02:25 $CLEAR_SE_VIS:  
 Player 1 04:02:29 $NEXT_STACK_ID:  
 Player 1 04:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Pooter"} 
 Player 1 04:02:29 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":293,"stackEffectType":4}} 
 Player 1 04:02:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":293,"stackEffectType":4}} 
 Player 1 04:02:29 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:02:29 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 04:02:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 
 Player 1 04:02:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":293,"stackEffectType":4}} 
 Player 1 04:02:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 
 Player 1 04:02:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 1 04:02:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:32 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 1 04:02:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 1 04:02:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:02:32 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:02:32 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 1 04:02:32 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 1 04:02:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 
 Player 1 04:02:32 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":293,"stackEffectType":4}} 
 Player 1 04:02:32 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":293,"particleType":5} 
 Player 1 04:02:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Entered Battle with Pooter"} 
 Player 1 04:02:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 
 Player 1 04:02:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":293,"stackEffectType":4}} 
 Player 1 04:02:32 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 1 04:02:32 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:02:32 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 1 04:02:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 1 04:02:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 
 Player 1 04:02:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:02:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":293,"stackEffectType":4}} 
 Player 1 04:02:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 
 Player 1 04:02:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 1 04:02:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:02:35 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:02:36 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 1 04:02:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 1 04:02:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:36 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 1 04:02:36 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 1 04:02:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Stack Was Emptied "}} 
 Player 1 04:02:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:02:36 $CLEAR_SE_VIS:  
 Player 1 04:02:38 $NEXT_STACK_ID:  
 Player 1 04:02:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 1 04:02:38 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:02:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:02:38 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:02:38 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 04:02:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 
 Player 1 04:02:41 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 04:02:42 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 04:02:42 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"player rolled 5 vs Pooter<Monster>"} 
 Player 1 04:02:42 $SHOW_DICE_ROLL:  

 {"stackId":4} 
 Player 1 04:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Pooter<Monster>"} 
 Player 1 04:02:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:02:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 
 Player 1 04:02:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 1 04:02:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:45 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 1 04:02:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 1 04:02:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:02:45 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:02:45 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 1 04:02:45 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 1 04:02:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 
 Player 1 04:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Pooter<Monster>"} 
 Player 1 04:02:46 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:02:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Added 0 to original roll"}} 
 Player 1 04:02:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 5 Against Pooter<Monster> 3"} 
 Player 1 04:02:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 04:02:46 $NEXT_STACK_ID:  
 Player 1 04:02:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:02:46 $CLEAR_SE_VIS:  
 Player 1 04:02:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit"} 
 Player 1 04:02:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:02:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:02:46 $REPLACE_STACK:  

 {"currentStack":[{"entityId":5,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":4,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}]} 
 Player 1 04:02:46 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:02:46 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 04:02:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 
 Player 1 04:02:48 $NEXT_STACK_ID:  
 Player 1 04:02:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit"} 
 Player 1 04:02:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty Effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:02:49 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:02:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:02:49 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:02:49 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 04:02:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Add ActivatePassiveEffect 6 "}} 
 Player 1 04:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:03:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,109],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":6,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:03:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":36} 
 Player 1 04:03:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 1 04:03:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:00 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 1 04:03:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 1 04:03:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:03:00 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:03:00 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 1 04:03:00 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 1 04:03:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve ActivatePassiveEffect 6 "}} 
 Player 1 04:03:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:03:00 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,109],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":6,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:03:00 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":6} 
 Player 1 04:03:02 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":6} 
 Player 1 04:03:02 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":109} 
 Player 1 04:03:02 $MOVE_CARD:  

 {"moveIndex":10,"cardId":109,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:03:03 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":109} 
 Player 1 04:03:03 $DISCARD_LOOT:  

 {"playerId":1,"cardId":109} 
 Player 1 04:03:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":false,"index":3,"originStackId":4},"isAfterActivation":true,"index":3} 
 Player 1 04:03:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit \n3:Activated Cursed Fatty Effect"} 
 Player 1 04:03:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,109],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":6,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:03:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":6} 
 Player 1 04:03:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:03:03 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 1 04:03:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":6} 
 Player 1 04:03:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 
 Player 1 04:03:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit"} 
 Player 1 04:03:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,109],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":6,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"isAfterActivation":true,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:03:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":41} 
 Player 1 04:03:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 1 04:03:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:03:06 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:03:06 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 1 04:03:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 1 04:03:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:06 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 1 04:03:06 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 1 04:03:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Resolve AttackRoll 4 "}} 
 Player 1 04:03:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit"} 
 Player 1 04:03:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:06 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 1 04:03:06 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:03:06 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 1 04:03:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 1 04:03:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Remove After Resolve AttackRoll 4  "}} 
 Player 1 04:03:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 1 04:03:09 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":46} 
 Player 1 04:03:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":46} 
 Player 1 04:03:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:09 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 1 04:03:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 2 "},"childOfId":46} 
 Player 1 04:03:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:03:09 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:03:09 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 1 04:03:09 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 1 04:03:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Resolve CombatDamage 5 "}} 
 Player 1 04:03:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 1 04:03:09 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:03:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Pooter "} 
 Player 1 04:03:09 $UPDATE_STACK_VIS:  

 {"stackId":5,"text":"Azazel will deal 1 combat damage to Pooter"} 
 Player 1 04:03:09 $MONSTER_GET_DAMAGED:  

 {"cardId":293,"hpLeft":1,"damageDealerId":311} 
 Player 1 04:03:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":311},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 1 04:03:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":311},{"type":0,"number":293}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":5,"originStackId":5},"isAfterActivation":true,"index":5} 
 Player 1 04:03:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:03:10 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 1 04:03:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:03:10 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 1 04:03:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 1 04:03:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Remove After Resolve CombatDamage 5  "}} 
 Player 1 04:03:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:03:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:03:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":51} 
 Player 1 04:03:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 
 Player 1 04:03:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:03:12 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:03:13 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 1 04:03:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 
 Player 1 04:03:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:13 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 1 04:03:13 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 1 04:03:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Stack Was Emptied "}} 
 Player 1 04:03:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:03:13 $CLEAR_SE_VIS:  
 Player 1 04:03:24 $NEXT_STACK_ID:  
 Player 1 04:03:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Pooter<Monster>"} 
 Player 1 04:03:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:24 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:03:24 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Player 1 04:03:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Add AttackRoll 7 "}} 
 Player 1 04:03:27 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 04:03:29 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 04:03:29 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"player rolled 5 vs Pooter<Monster>"} 
 Player 1 04:03:29 $SHOW_DICE_ROLL:  

 {"stackId":7} 
 Player 1 04:03:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Pooter<Monster>"} 
 Player 1 04:03:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Response Adding AttackRoll 7"},"childOfId":56} 
 Player 1 04:03:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 1 04:03:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:32 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 1 04:03:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 
 Player 1 04:03:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:03:33 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:03:33 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 1 04:03:33 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 1 04:03:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Resolve AttackRoll 7 "}} 
 Player 1 04:03:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Pooter<Monster>"} 
 Player 1 04:03:33 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Added 0 to original roll"}} 
 Player 1 04:03:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 5 Against Pooter<Monster> 3"} 
 Player 1 04:03:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 04:03:33 $NEXT_STACK_ID:  
 Player 1 04:03:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:33 $CLEAR_SE_VIS:  
 Player 1 04:03:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit"} 
 Player 1 04:03:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:03:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:33 $REPLACE_STACK:  

 {"currentStack":[{"entityId":8,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":7,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}]} 
 Player 1 04:03:33 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:03:33 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 1 04:03:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 
 Player 1 04:03:36 $NEXT_STACK_ID:  
 Player 1 04:03:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit"} 
 Player 1 04:03:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty Effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:03:36 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:03:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:03:36 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:03:36 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 1 04:03:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Add ActivatePassiveEffect 9 "}} 
 Player 1 04:03:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:03:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,92],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":9,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:03:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":62} 
 Player 1 04:03:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":62} 
 Player 1 04:03:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:47 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 1 04:03:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":62} 
 Player 1 04:03:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:03:47 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:03:48 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 1 04:03:48 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 1 04:03:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Resolve ActivatePassiveEffect 9 "}} 
 Player 1 04:03:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:03:48 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,92],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":9,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:03:48 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":6} 
 Player 1 04:03:50 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":6} 
 Player 1 04:03:50 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":92} 
 Player 1 04:03:50 $MOVE_CARD:  

 {"moveIndex":11,"cardId":92,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:03:50 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":92} 
 Player 1 04:03:50 $DISCARD_LOOT:  

 {"playerId":1,"cardId":92} 
 Player 1 04:03:50 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":false,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 
 Player 1 04:03:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit \n3:Activated Cursed Fatty Effect"} 
 Player 1 04:03:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,92],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":9,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:03:50 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":9} 
 Player 1 04:03:50 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:03:50 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 1 04:03:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":9} 
 Player 1 04:03:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 
 Player 1 04:03:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit"} 
 Player 1 04:03:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,92],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":9,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:03:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":67} 
 Player 1 04:03:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":67} 
 Player 1 04:03:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:03:53 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:03:54 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 1 04:03:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 1 "},"childOfId":67} 
 Player 1 04:03:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:54 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 1 04:03:54 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 1 04:03:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Resolve AttackRoll 7 "}} 
 Player 1 04:03:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter \n2:Player 1 Roll Hit"} 
 Player 1 04:03:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:54 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":7} 
 Player 1 04:03:54 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:03:54 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Player 1 04:03:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":7} 
 Player 1 04:03:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Remove After Resolve AttackRoll 7  "}} 
 Player 1 04:03:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 1 04:03:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":293}} 
 Player 1 04:03:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":72} 
 Player 1 04:03:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 
 Player 1 04:03:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:03:57 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 1 04:03:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 
 Player 1 04:03:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:03:57 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:03:57 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 1 04:03:57 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 1 04:03:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Resolve CombatDamage 8 "}} 
 Player 1 04:03:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Pooter"} 
 Player 1 04:03:57 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:03:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Pooter "} 
 Player 1 04:03:58 $UPDATE_STACK_VIS:  

 {"stackId":8,"text":"Azazel will deal 1 combat damage to Pooter"} 
 Player 1 04:03:58 $MONSTER_GET_DAMAGED:  

 {"cardId":293,"hpLeft":0,"damageDealerId":311} 
 Player 1 04:03:58 $NEXT_STACK_ID:  
 Player 1 04:03:58 $CLEAR_SE_VIS:  
 Player 1 04:03:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Pooter  \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:03:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:03:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":311,"monsterToDieCardId":293,"stackEffectType":5,"killerId":311}} 
 Player 1 04:03:58 $REPLACE_STACK:  

 {"currentStack":[{"entityId":8,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":10,"creatorCardId":311,"monsterToDieCardId":293,"stackEffectType":5,"killerId":311}]} 
 Player 1 04:03:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":311,"monsterToDieCardId":293,"stackEffectType":5,"killerId":311}} 
 Player 1 04:03:58 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:03:58 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 1 04:04:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":311},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":false,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 1 04:04:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":311},{"type":0,"number":293}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":8,"originStackId":8},"isAfterActivation":true,"index":8} 
 Player 1 04:04:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Pooter  \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:04:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:04:01 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":8} 
 Player 1 04:04:01 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:04:01 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 1 04:04:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":8} 
 Player 1 04:04:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Remove After Resolve CombatDamage 8  "}} 
 Player 1 04:04:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:04:03 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":293,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:04:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Response Remove After Resolve CombatDamage 8"},"childOfId":77} 
 Player 1 04:04:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":77} 
 Player 1 04:04:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:04 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 1 04:04:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 1 04:04:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:04:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:04:04 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 1 04:04:04 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 1 04:04:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Resolve MonsterDeath 10 "}} 
 Player 1 04:04:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:04:04 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":311,"monsterToDieCardId":293,"stackEffectType":5,"killerId":311}} 
 Player 1 04:04:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":293,"particleType":5} 
 Player 1 04:04:04 $CANCEL_ATTACK:  
 Player 1 04:04:04 $NEXT_STACK_ID:  
 Player 1 04:04:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:04 $CLEAR_SE_VIS:  
 Player 1 04:04:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:04:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":311,"monsterCardWithRewardId":293,"playerCardIdToReward":311,"stackEffectType":7}} 
 Player 1 04:04:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":311,"monsterToDieCardId":293,"stackEffectType":5,"killerId":311}} 
 Player 1 04:04:04 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":311,"monsterCardWithRewardId":293,"playerCardIdToReward":311,"stackEffectType":7},{"entityId":10,"creatorCardId":311,"monsterToDieCardId":293,"stackEffectType":5,"killerId":311}]} 
 Player 1 04:04:04 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:04:04 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 1 04:04:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:04:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":311,"monsterToDieCardId":293,"stackEffectType":5,"killerId":311}} 
 Player 1 04:04:07 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":10} 
 Player 1 04:04:07 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:04:07 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 1 04:04:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":10} 
 Player 1 04:04:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Remove After Resolve MonsterDeath 10  "}} 
 Player 1 04:04:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward"} 
 Player 1 04:04:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":311,"monsterToDieCardId":293,"stackEffectType":5,"killerId":311}} 
 Player 1 04:04:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Response Remove After Resolve MonsterDeath 10"},"childOfId":82} 
 Player 1 04:04:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":82} 
 Player 1 04:04:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:10 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 1 04:04:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":82} 
 Player 1 04:04:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:04:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:04:10 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 1 04:04:10 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 1 04:04:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Resolve MonsterRewardStackEffect 11 "}} 
 Player 1 04:04:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward"} 
 Player 1 04:04:10 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":311,"monsterCardWithRewardId":293,"playerCardIdToReward":311,"stackEffectType":7}} 
 Player 1 04:04:10 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 04:04:10 $MOVE_CARD:  

 {"moveIndex":12,"cardId":116,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 04:04:11 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":116} 
 Player 1 04:04:11 $FLIP_CARD:  

 {"cardId":116} 
 Player 1 04:04:11 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":116} 
 Player 1 04:04:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":293,"scopeIsPlayer":false,"index":9,"originStackId":11},"isAfterActivation":true,"index":9} 
 Player 1 04:04:11 $MOVE_CARD:  

 {"moveIndex":13,"cardId":293,"placeID":332,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:04:11 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":293} 
 Player 1 04:04:11 $REMOVE_MONSTER:  

 {"holderId":1,"monsterId":293} 
 Player 1 04:04:11 $NEXT_STACK_ID:  
 Player 1 04:04:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward \n2:Refill holder1 Slot"} 
 Player 1 04:04:11 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":311,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 04:04:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":311,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 04:04:11 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:04:11 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 1 04:04:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Add RefillEmptySlot 12 "}} 
 Player 1 04:04:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":311,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 04:04:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Response Adding RefillEmptySlot 12"},"childOfId":87} 
 Player 1 04:04:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":87} 
 Player 1 04:04:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:14 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 1 04:04:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":87} 
 Player 1 04:04:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:04:14 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:04:15 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 1 04:04:15 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 1 04:04:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Resolve RefillEmptySlot 12 "}} 
 Player 1 04:04:15 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":311,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 04:04:15 $DRAW_CARD:  

 {"deckType":2} 
 Player 1 04:04:15 $FLIP_CARD:  

 {"cardId":269} 
 Player 1 04:04:15 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":269} 
 Player 1 04:04:15 $NEW_MONSTER_ON_PLACE:  

 {"cardId":269,"monsterPlaceId":1} 
 Player 1 04:04:15 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":12} 
 Player 1 04:04:15 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:04:15 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 1 04:04:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":12} 
 Player 1 04:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Remove After Resolve RefillEmptySlot 12  "}} 
 Player 1 04:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward"} 
 Player 1 04:04:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":311,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 
 Player 1 04:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Response Remove After Resolve RefillEmptySlot 12"},"childOfId":92} 
 Player 1 04:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":92} 
 Player 1 04:04:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:04:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:04:18 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 1 04:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":92} 
 Player 1 04:04:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:18 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 1 04:04:18 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 1 04:04:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Resolve MonsterRewardStackEffect 11 "}} 
 Player 1 04:04:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Pooter<Monster>'s Reward"} 
 Player 1 04:04:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":311,"monsterCardWithRewardId":293,"playerCardIdToReward":311,"stackEffectType":7}} 
 Player 1 04:04:18 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":11} 
 Player 1 04:04:18 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:04:18 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 1 04:04:21 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":11} 
 Player 1 04:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Remove After Resolve MonsterRewardStackEffect 11  "}} 
 Player 1 04:04:21 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:04:21 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":311,"monsterCardWithRewardId":293,"playerCardIdToReward":311,"stackEffectType":7}} 
 Player 1 04:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Response Remove After Resolve MonsterRewardStackEffect 11"},"childOfId":97} 
 Player 1 04:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Wait For Response From Player 1 "},"childOfId":97} 
 Player 1 04:04:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:21 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 1 04:04:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":97} 
 Player 1 04:04:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:04:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:04:23 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 1 04:04:23 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 1 04:04:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Stack Was Emptied "}} 
 Player 1 04:04:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:04:24 $CLEAR_SE_VIS:  
 Player 1 04:04:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:04:49 $CLEAR_SE_VIS:  
 Player 1 04:04:49 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 04:04:49 $CLEAR_SE_VIS:  
 Player 1 04:04:49 $END_TURN:  
 Player 1 04:04:49 $SET_TURN:  

 {"playerId":2} 
 Player 1 04:04:49 $START_TURN:  

 {"playerId":2} 
 Player 1 04:04:49 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 04:04:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:04:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:04:52 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:04:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:04:53 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":45,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:04:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:04:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:04:56 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:04:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:05:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:05:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 
 Player 1 04:05:29 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":82,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 
 Player 1 04:05:30 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:05:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:05:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 
 Player 1 04:05:32 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":82,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:05:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 
 Player 1 04:05:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Bloody Penny "} 
 Player 1 04:05:36 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:05:36 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:05:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:06:01 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:06:01 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:06:21 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":31,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:06:22 $MOVE_CARD_END:  

 {"moveIndex":18,"cardId":126,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:06:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:06:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:06:25 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:06:25 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:06:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:06:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Lilith"} 
 Player 1 04:06:58 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:06:58 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:07:01 $MOVE_CARD_END:  

 {"moveIndex":19,"cardId":126,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:07:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Lilith"} 
 Player 1 04:07:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot  \n2:Player 2 is going to activate Lilith"} 
 Player 1 04:07:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot  \n2:Player 2 is going to activate Lilith"} 
 Player 1 04:07:15 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:07:15 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:07:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot "} 
 Player 1 04:07:18 $MOVE_CARD_END:  

 {"moveIndex":20,"cardId":126,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:07:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot "} 
 Player 1 04:07:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play The Chariot "} 
 Player 1 04:07:21 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:07:21 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:07:25 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:07:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Gurdy"} 
 Player 1 04:07:28 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:07:28 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:07:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Gurdy"} 
 Player 1 04:07:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Gurdy"} 
 Player 1 04:07:32 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:07:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:07:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:07:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:07:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:07:41 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:07:41 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:07:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:07:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:07:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Gurdy \n2:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:07:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Gurdy \n2:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:07:48 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:07:48 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:07:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Gurdy"} 
 Player 1 04:07:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Gurdy"} 
 Player 1 04:07:51 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:07:51 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:07:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:00 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:00 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:07 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:07 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 1 04:08:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 1 04:08:10 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:10 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:08:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:20 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:20 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:21 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:27 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:27 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 1 04:08:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 1 04:08:30 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:08:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:41 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:41 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 is rolling against Gurdy<Monster>"} 
 Player 1 04:08:47 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:48 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 1 04:08:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 Is About To Die"} 
 Player 1 04:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith \n2:Player 2 Is About To Die"} 
 Player 1 04:08:54 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:08:54 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 1 04:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Gurdy is going to hurt Lilith"} 
 Player 1 04:08:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 04:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 04:08:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties \n3:Activate Bloody Penny "} 
 Player 1 04:09:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties \n3:Activate Bloody Penny "} 
 Player 1 04:09:00 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:09:00 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:09:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties \n3:Activate Bloody Penny "} 
 Player 1 04:09:03 $MOVE_CARD_END:  

 {"moveIndex":21,"cardId":59,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:09:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties \n3:Activate Bloody Penny "} 
 Player 1 04:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties \n3:Activate Bloody Penny "} 
 Player 1 04:09:06 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:09:06 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:09:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 04:09:15 $MOVE_CARD_END:  

 {"moveIndex":22,"cardId":45,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:09:23 $MOVE_CARD_END:  

 {"moveIndex":23,"cardId":82,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:09:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 04:09:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 1 04:09:27 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:09:27 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:09:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die"} 
 Player 1 04:09:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die"} 
 Player 1 04:09:30 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:09:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:09:30 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 04:09:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:09:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 04:09:31 $NEXT_STACK_ID:  
 Player 1 04:09:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe Effect ChainEffects<ChainEffects>"} 
 Player 1 04:09:31 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":30,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:09:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":30,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:09:31 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:09:31 $SHOW_STACK_EFFECT:  

 {"effectId":30} 
 Player 1 04:09:31 $CLEAR_SE_VIS:  
 Player 1 04:09:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":243,"_text":"Add ActivatePassiveEffect 30 "}} 
 Player 1 04:09:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe effect ChainEffects<ChainEffects>"} 
 Player 1 04:09:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":311,"effectCardPlayer":311},"entityId":30,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:09:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":244,"_text":"Response Adding ActivatePassiveEffect 30"},"childOfId":243} 
 Player 1 04:09:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":245,"_text":"Wait For Response From Player 1 "},"childOfId":243} 
 Player 1 04:09:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:09:34 $ACTION_MASSAGE_REMOVE:  

 {"id":245} 
 Player 1 04:09:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":246,"_text":"Wait For Response From Player 2 "},"childOfId":243} 
 Player 1 04:09:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:09:34 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:09:34 $ACTION_MASSAGE_REMOVE:  

 {"id":246} 
 Player 1 04:09:34 $ACTION_MASSAGE_REMOVE:  

 {"id":244} 
 Player 1 04:09:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":247,"_text":"Resolve ActivatePassiveEffect 30 "}} 
 Player 1 04:09:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe effect ChainEffects<ChainEffects>"} 
 Player 1 04:09:34 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":311,"effectCardPlayer":311},"entityId":30,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:09:34 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":102,"particleType":6} 
 Player 1 04:09:36 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":102,"particleType":6} 
 Player 1 04:09:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 1 04:09:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activated Golden Horseshoe Effect"} 
 Player 1 04:09:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":311,"effectCardPlayer":311},"entityId":30,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:09:46 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":30} 
 Player 1 04:09:46 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:09:46 $SHOW_STACK_EFFECT:  

 {"effectId":30} 
 Player 1 04:09:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":30} 
 Player 1 04:09:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":248,"_text":"Remove After Resolve ActivatePassiveEffect 30  "}} 
 Player 1 04:09:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:09:49 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":311,"effectCardPlayer":311},"entityId":30,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:09:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":249,"_text":"Response Remove After Resolve ActivatePassiveEffect 30"},"childOfId":248} 
 Player 1 04:09:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":250,"_text":"Wait For Response From Player 2 "},"childOfId":248} 
 Player 1 04:09:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:09:49 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:09:50 $ACTION_MASSAGE_REMOVE:  

 {"id":250} 
 Player 1 04:09:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":251,"_text":"Wait For Response From Player 1 "},"childOfId":248} 
 Player 1 04:09:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:09:50 $ACTION_MASSAGE_REMOVE:  

 {"id":251} 
 Player 1 04:09:50 $ACTION_MASSAGE_REMOVE:  

 {"id":249} 
 Player 1 04:09:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":252,"_text":"Stack Was Emptied "}} 
 Player 1 04:09:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:09:50 $CLEAR_SE_VIS:  
 Player 1 04:09:50 $NEXT_STACK_ID:  
 Player 1 04:09:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 1 04:09:50 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":31,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:09:50 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":31,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:09:50 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:09:50 $SHOW_STACK_EFFECT:  

 {"effectId":31} 
 Player 1 04:09:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":253,"_text":"Add StartTurnLoot 31 "}} 
 Player 1 04:09:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:09:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":31,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:09:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":254,"_text":"Response Adding StartTurnLoot 31"},"childOfId":253} 
 Player 1 04:09:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":255,"_text":"Wait For Response From Player 1 "},"childOfId":253} 
 Player 1 04:09:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:09:53 $ACTION_MASSAGE_REMOVE:  

 {"id":255} 
 Player 1 04:09:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":256,"_text":"Wait For Response From Player 2 "},"childOfId":253} 
 Player 1 04:09:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:09:53 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:09:53 $ACTION_MASSAGE_REMOVE:  

 {"id":256} 
 Player 1 04:09:53 $ACTION_MASSAGE_REMOVE:  

 {"id":254} 
 Player 1 04:09:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":257,"_text":"Resolve StartTurnLoot 31 "}} 
 Player 1 04:09:53 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":31,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:09:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 04:09:53 $MOVE_CARD:  

 {"moveIndex":24,"cardId":15,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 04:09:54 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":15} 
 Player 1 04:09:54 $FLIP_CARD:  

 {"cardId":15} 
 Player 1 04:09:54 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":15} 
 Player 1 04:09:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 
 Player 1 04:09:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":31,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:09:54 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":31} 
 Player 1 04:09:54 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:09:54 $SHOW_STACK_EFFECT:  

 {"effectId":31} 
 Player 1 04:09:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":31} 
 Player 1 04:09:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":258,"_text":"Remove After Resolve StartTurnLoot 31  "}} 
 Player 1 04:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:09:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":31,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:09:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":259,"_text":"Response Remove After Resolve StartTurnLoot 31"},"childOfId":258} 
 Player 1 04:09:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":260,"_text":"Wait For Response From Player 2 "},"childOfId":258} 
 Player 1 04:09:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:09:57 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:09:57 $ACTION_MASSAGE_REMOVE:  

 {"id":260} 
 Player 1 04:09:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":261,"_text":"Wait For Response From Player 1 "},"childOfId":258} 
 Player 1 04:09:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:09:57 $ACTION_MASSAGE_REMOVE:  

 {"id":261} 
 Player 1 04:09:57 $ACTION_MASSAGE_REMOVE:  

 {"id":259} 
 Player 1 04:09:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":262,"_text":"Stack Was Emptied "}} 
 Player 1 04:09:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:09:57 $CLEAR_SE_VIS:  
 Player 1 04:10:09 $NEXT_STACK_ID:  
 Player 1 04:10:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Cursed Fatty"} 
 Player 1 04:10:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":32,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":240,"stackEffectType":4}} 
 Player 1 04:10:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":32,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":240,"stackEffectType":4}} 
 Player 1 04:10:09 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:10:09 $SHOW_STACK_EFFECT:  

 {"effectId":32} 
 Player 1 04:10:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":263,"_text":"Add DeclareAttack 32 "}} 
 Player 1 04:10:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":240,"stackEffectType":4}} 
 Player 1 04:10:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":264,"_text":"Response Adding DeclareAttack 32"},"childOfId":263} 
 Player 1 04:10:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":265,"_text":"Wait For Response From Player 1 "},"childOfId":263} 
 Player 1 04:10:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:12 $ACTION_MASSAGE_REMOVE:  

 {"id":265} 
 Player 1 04:10:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":266,"_text":"Wait For Response From Player 2 "},"childOfId":263} 
 Player 1 04:10:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:10:12 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:10:13 $ACTION_MASSAGE_REMOVE:  

 {"id":266} 
 Player 1 04:10:13 $ACTION_MASSAGE_REMOVE:  

 {"id":264} 
 Player 1 04:10:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":267,"_text":"Resolve DeclareAttack 32 "}} 
 Player 1 04:10:13 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":240,"stackEffectType":4}} 
 Player 1 04:10:13 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":5} 
 Player 1 04:10:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Entered Battle with Cursed Fatty"} 
 Player 1 04:10:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":10,"originStackId":32},"isAfterActivation":true,"index":10} 
 Player 1 04:10:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":240,"stackEffectType":4}} 
 Player 1 04:10:13 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":32} 
 Player 1 04:10:13 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:10:13 $SHOW_STACK_EFFECT:  

 {"effectId":32} 
 Player 1 04:10:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":32} 
 Player 1 04:10:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":268,"_text":"Remove After Resolve DeclareAttack 32  "}} 
 Player 1 04:10:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:10:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":32,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":240,"stackEffectType":4}} 
 Player 1 04:10:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":269,"_text":"Response Remove After Resolve DeclareAttack 32"},"childOfId":268} 
 Player 1 04:10:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":270,"_text":"Wait For Response From Player 2 "},"childOfId":268} 
 Player 1 04:10:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:10:16 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:10:16 $ACTION_MASSAGE_REMOVE:  

 {"id":270} 
 Player 1 04:10:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":271,"_text":"Wait For Response From Player 1 "},"childOfId":268} 
 Player 1 04:10:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:16 $ACTION_MASSAGE_REMOVE:  

 {"id":271} 
 Player 1 04:10:16 $ACTION_MASSAGE_REMOVE:  

 {"id":269} 
 Player 1 04:10:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":272,"_text":"Stack Was Emptied "}} 
 Player 1 04:10:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:10:16 $CLEAR_SE_VIS:  
 Player 1 04:10:20 $NEXT_STACK_ID:  
 Player 1 04:10:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 04:10:20 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":33,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:20 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:10:20 $SHOW_STACK_EFFECT:  

 {"effectId":33} 
 Player 1 04:10:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":273,"_text":"Add AttackRoll 33 "}} 
 Player 1 04:10:23 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 04:10:25 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 04:10:25 $UPDATE_STACK_VIS:  

 {"stackId":33,"text":"player rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 04:10:25 $SHOW_DICE_ROLL:  

 {"stackId":33} 
 Player 1 04:10:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 04:10:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":33,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":274,"_text":"Response Adding AttackRoll 33"},"childOfId":273} 
 Player 1 04:10:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":275,"_text":"Wait For Response From Player 1 "},"childOfId":273} 
 Player 1 04:10:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:28 $ACTION_MASSAGE_REMOVE:  

 {"id":275} 
 Player 1 04:10:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":276,"_text":"Wait For Response From Player 2 "},"childOfId":273} 
 Player 1 04:10:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:10:28 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:10:28 $ACTION_MASSAGE_REMOVE:  

 {"id":276} 
 Player 1 04:10:28 $ACTION_MASSAGE_REMOVE:  

 {"id":274} 
 Player 1 04:10:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":277,"_text":"Resolve AttackRoll 33 "}} 
 Player 1 04:10:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 04:10:28 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":33,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":278,"_text":"Added 0 to original roll"}} 
 Player 1 04:10:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 5 Against Cursed Fatty<Monster> 2"} 
 Player 1 04:10:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 04:10:29 $NEXT_STACK_ID:  
 Player 1 04:10:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:29 $CLEAR_SE_VIS:  
 Player 1 04:10:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:10:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:10:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:29 $REPLACE_STACK:  

 {"currentStack":[{"entityId":34,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":33,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}]} 
 Player 1 04:10:29 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:10:29 $SHOW_STACK_EFFECT:  

 {"effectId":34} 
 Player 1 04:10:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":11,"originStackId":33},"isAfterActivation":true,"index":11} 
 Player 1 04:10:31 $NEXT_STACK_ID:  
 Player 1 04:10:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:10:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty Effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:10:31 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:10:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":35,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:10:31 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:10:31 $SHOW_STACK_EFFECT:  

 {"effectId":35} 
 Player 1 04:10:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":279,"_text":"Add ActivatePassiveEffect 35 "}} 
 Player 1 04:10:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:10:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,15],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":35,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:10:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":280,"_text":"Response Adding ActivatePassiveEffect 35"},"childOfId":279} 
 Player 1 04:10:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":281,"_text":"Wait For Response From Player 1 "},"childOfId":279} 
 Player 1 04:10:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:37 $ACTION_MASSAGE_REMOVE:  

 {"id":281} 
 Player 1 04:10:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":282,"_text":"Wait For Response From Player 2 "},"childOfId":279} 
 Player 1 04:10:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:10:37 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:10:38 $ACTION_MASSAGE_REMOVE:  

 {"id":282} 
 Player 1 04:10:38 $ACTION_MASSAGE_REMOVE:  

 {"id":280} 
 Player 1 04:10:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":283,"_text":"Resolve ActivatePassiveEffect 35 "}} 
 Player 1 04:10:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:10:38 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,15],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":35,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:10:38 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":6} 
 Player 1 04:10:40 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":6} 
 Player 1 04:10:40 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":15} 
 Player 1 04:10:40 $MOVE_CARD:  

 {"moveIndex":25,"cardId":15,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:10:40 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":15} 
 Player 1 04:10:40 $DISCARD_LOOT:  

 {"playerId":1,"cardId":15} 
 Player 1 04:10:40 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":false,"index":11,"originStackId":33},"isAfterActivation":true,"index":11} 
 Player 1 04:10:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit \n3:Activated Cursed Fatty Effect"} 
 Player 1 04:10:40 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,15],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":35,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:10:40 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":35} 
 Player 1 04:10:40 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:10:40 $SHOW_STACK_EFFECT:  

 {"effectId":35} 
 Player 1 04:10:43 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":35} 
 Player 1 04:10:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":284,"_text":"Remove After Resolve ActivatePassiveEffect 35  "}} 
 Player 1 04:10:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:10:43 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,15],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":35,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:10:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":285,"_text":"Response Remove After Resolve ActivatePassiveEffect 35"},"childOfId":284} 
 Player 1 04:10:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":286,"_text":"Wait For Response From Player 2 "},"childOfId":284} 
 Player 1 04:10:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:10:43 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:10:43 $ACTION_MASSAGE_REMOVE:  

 {"id":286} 
 Player 1 04:10:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":287,"_text":"Wait For Response From Player 1 "},"childOfId":284} 
 Player 1 04:10:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:43 $ACTION_MASSAGE_REMOVE:  

 {"id":287} 
 Player 1 04:10:43 $ACTION_MASSAGE_REMOVE:  

 {"id":285} 
 Player 1 04:10:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":288,"_text":"Resolve AttackRoll 33 "}} 
 Player 1 04:10:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:10:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":33,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:44 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":33} 
 Player 1 04:10:44 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:10:44 $SHOW_STACK_EFFECT:  

 {"effectId":33} 
 Player 1 04:10:46 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":33} 
 Player 1 04:10:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":289,"_text":"Remove After Resolve AttackRoll 33  "}} 
 Player 1 04:10:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 1 04:10:46 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":33,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":290,"_text":"Response Remove After Resolve AttackRoll 33"},"childOfId":289} 
 Player 1 04:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":291,"_text":"Wait For Response From Player 1 "},"childOfId":289} 
 Player 1 04:10:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":291} 
 Player 1 04:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":292,"_text":"Wait For Response From Player 2 "},"childOfId":289} 
 Player 1 04:10:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:10:47 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":292} 
 Player 1 04:10:47 $ACTION_MASSAGE_REMOVE:  

 {"id":290} 
 Player 1 04:10:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":293,"_text":"Resolve CombatDamage 34 "}} 
 Player 1 04:10:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 1 04:10:47 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":34,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:10:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Cursed Fatty "} 
 Player 1 04:10:47 $UPDATE_STACK_VIS:  

 {"stackId":34,"text":"Azazel will deal 1 combat damage to Cursed Fatty"} 
 Player 1 04:10:47 $MONSTER_GET_DAMAGED:  

 {"cardId":240,"hpLeft":3,"damageDealerId":311} 
 Player 1 04:10:47 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":311},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":240,"scopeIsPlayer":false,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 
 Player 1 04:10:47 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":311},{"type":0,"number":240}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":13,"originStackId":34},"isAfterActivation":true,"index":13} 
 Player 1 04:10:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":34,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:10:47 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":34} 
 Player 1 04:10:47 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:10:47 $SHOW_STACK_EFFECT:  

 {"effectId":34} 
 Player 1 04:10:50 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":34} 
 Player 1 04:10:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":294,"_text":"Remove After Resolve CombatDamage 34  "}} 
 Player 1 04:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:10:50 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":34,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:10:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":295,"_text":"Response Remove After Resolve CombatDamage 34"},"childOfId":294} 
 Player 1 04:10:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":296,"_text":"Wait For Response From Player 2 "},"childOfId":294} 
 Player 1 04:10:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:10:50 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:10:50 $ACTION_MASSAGE_REMOVE:  

 {"id":296} 
 Player 1 04:10:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":297,"_text":"Wait For Response From Player 1 "},"childOfId":294} 
 Player 1 04:10:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:50 $ACTION_MASSAGE_REMOVE:  

 {"id":297} 
 Player 1 04:10:50 $ACTION_MASSAGE_REMOVE:  

 {"id":295} 
 Player 1 04:10:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":298,"_text":"Stack Was Emptied "}} 
 Player 1 04:10:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:10:50 $CLEAR_SE_VIS:  
 Player 1 04:10:51 $NEXT_STACK_ID:  
 Player 1 04:10:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 04:10:51 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":36,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:51 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:10:51 $SHOW_STACK_EFFECT:  

 {"effectId":36} 
 Player 1 04:10:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":299,"_text":"Add AttackRoll 36 "}} 
 Player 1 04:10:54 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 04:10:56 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":3} 
 Player 1 04:10:56 $UPDATE_STACK_VIS:  

 {"stackId":36,"text":"player rolled 3 vs Cursed Fatty<Monster>"} 
 Player 1 04:10:56 $SHOW_DICE_ROLL:  

 {"stackId":36} 
 Player 1 04:10:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs Cursed Fatty<Monster>"} 
 Player 1 04:10:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:10:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":300,"_text":"Response Adding AttackRoll 36"},"childOfId":299} 
 Player 1 04:10:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":301,"_text":"Wait For Response From Player 1 "},"childOfId":299} 
 Player 1 04:10:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:10:59 $ACTION_MASSAGE_REMOVE:  

 {"id":301} 
 Player 1 04:10:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":302,"_text":"Wait For Response From Player 2 "},"childOfId":299} 
 Player 1 04:11:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:00 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:00 $ACTION_MASSAGE_REMOVE:  

 {"id":302} 
 Player 1 04:11:00 $ACTION_MASSAGE_REMOVE:  

 {"id":300} 
 Player 1 04:11:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":303,"_text":"Resolve AttackRoll 36 "}} 
 Player 1 04:11:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs Cursed Fatty<Monster>"} 
 Player 1 04:11:00 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":304,"_text":"Added 0 to original roll"}} 
 Player 1 04:11:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 3 Against Cursed Fatty<Monster> 2"} 
 Player 1 04:11:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 04:11:00 $NEXT_STACK_ID:  
 Player 1 04:11:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:00 $CLEAR_SE_VIS:  
 Player 1 04:11:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:11:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 04:11:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:00 $REPLACE_STACK:  

 {"currentStack":[{"entityId":37,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":36,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}]} 
 Player 1 04:11:00 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:11:00 $SHOW_STACK_EFFECT:  

 {"effectId":37} 
 Player 1 04:11:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":14,"originStackId":36},"isAfterActivation":true,"index":14} 
 Player 1 04:11:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:11:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":36} 
 Player 1 04:11:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:11:03 $SHOW_STACK_EFFECT:  

 {"effectId":36} 
 Player 1 04:11:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":36} 
 Player 1 04:11:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":305,"_text":"Remove After Resolve AttackRoll 36  "}} 
 Player 1 04:11:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 1 04:11:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":36,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":306,"_text":"Response Remove After Resolve AttackRoll 36"},"childOfId":305} 
 Player 1 04:11:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":307,"_text":"Wait For Response From Player 1 "},"childOfId":305} 
 Player 1 04:11:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:06 $ACTION_MASSAGE_REMOVE:  

 {"id":307} 
 Player 1 04:11:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":308,"_text":"Wait For Response From Player 2 "},"childOfId":305} 
 Player 1 04:11:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:06 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:06 $ACTION_MASSAGE_REMOVE:  

 {"id":308} 
 Player 1 04:11:06 $ACTION_MASSAGE_REMOVE:  

 {"id":306} 
 Player 1 04:11:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":309,"_text":"Resolve CombatDamage 37 "}} 
 Player 1 04:11:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 1 04:11:06 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 04:11:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Cursed Fatty "} 
 Player 1 04:11:06 $UPDATE_STACK_VIS:  

 {"stackId":37,"text":"Azazel will deal 1 combat damage to Cursed Fatty"} 
 Player 1 04:11:06 $MONSTER_GET_DAMAGED:  

 {"cardId":240,"hpLeft":2,"damageDealerId":311} 
 Player 1 04:11:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":311},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":240,"scopeIsPlayer":false,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 1 04:11:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":311},{"type":0,"number":240}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":16,"originStackId":37},"isAfterActivation":true,"index":16} 
 Player 1 04:11:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 04:11:06 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":37} 
 Player 1 04:11:06 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:11:06 $SHOW_STACK_EFFECT:  

 {"effectId":37} 
 Player 1 04:11:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":37} 
 Player 1 04:11:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":310,"_text":"Remove After Resolve CombatDamage 37  "}} 
 Player 1 04:11:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:11:09 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":37,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 04:11:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":311,"_text":"Response Remove After Resolve CombatDamage 37"},"childOfId":310} 
 Player 1 04:11:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":312,"_text":"Wait For Response From Player 2 "},"childOfId":310} 
 Player 1 04:11:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:09 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:09 $ACTION_MASSAGE_REMOVE:  

 {"id":312} 
 Player 1 04:11:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":313,"_text":"Wait For Response From Player 1 "},"childOfId":310} 
 Player 1 04:11:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:09 $ACTION_MASSAGE_REMOVE:  

 {"id":313} 
 Player 1 04:11:10 $ACTION_MASSAGE_REMOVE:  

 {"id":311} 
 Player 1 04:11:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":314,"_text":"Stack Was Emptied "}} 
 Player 1 04:11:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:11:10 $CLEAR_SE_VIS:  
 Player 1 04:11:13 $NEXT_STACK_ID:  
 Player 1 04:11:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 04:11:13 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":38,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:13 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:11:13 $SHOW_STACK_EFFECT:  

 {"effectId":38} 
 Player 1 04:11:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":315,"_text":"Add AttackRoll 38 "}} 
 Player 1 04:11:16 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 04:11:17 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":3} 
 Player 1 04:11:17 $UPDATE_STACK_VIS:  

 {"stackId":38,"text":"player rolled 3 vs Cursed Fatty<Monster>"} 
 Player 1 04:11:17 $SHOW_DICE_ROLL:  

 {"stackId":38} 
 Player 1 04:11:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs Cursed Fatty<Monster>"} 
 Player 1 04:11:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":38,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":316,"_text":"Response Adding AttackRoll 38"},"childOfId":315} 
 Player 1 04:11:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":317,"_text":"Wait For Response From Player 1 "},"childOfId":315} 
 Player 1 04:11:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:20 $ACTION_MASSAGE_REMOVE:  

 {"id":317} 
 Player 1 04:11:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":318,"_text":"Wait For Response From Player 2 "},"childOfId":315} 
 Player 1 04:11:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:20 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:20 $ACTION_MASSAGE_REMOVE:  

 {"id":318} 
 Player 1 04:11:20 $ACTION_MASSAGE_REMOVE:  

 {"id":316} 
 Player 1 04:11:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":319,"_text":"Resolve AttackRoll 38 "}} 
 Player 1 04:11:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 3 vs Cursed Fatty<Monster>"} 
 Player 1 04:11:20 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":38,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":320,"_text":"Added 0 to original roll"}} 
 Player 1 04:11:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 3 Against Cursed Fatty<Monster> 2"} 
 Player 1 04:11:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 04:11:20 $NEXT_STACK_ID:  
 Player 1 04:11:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:20 $CLEAR_SE_VIS:  
 Player 1 04:11:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:11:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":39,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 04:11:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:21 $REPLACE_STACK:  

 {"currentStack":[{"entityId":39,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":38,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}]} 
 Player 1 04:11:21 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:11:21 $SHOW_STACK_EFFECT:  

 {"effectId":39} 
 Player 1 04:11:23 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":17,"originStackId":38},"isAfterActivation":true,"index":17} 
 Player 1 04:11:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:11:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":38,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:23 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":38} 
 Player 1 04:11:23 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:11:23 $SHOW_STACK_EFFECT:  

 {"effectId":38} 
 Player 1 04:11:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":38} 
 Player 1 04:11:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":321,"_text":"Remove After Resolve AttackRoll 38  "}} 
 Player 1 04:11:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 1 04:11:26 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":38,"creatorCardId":311,"numberRolled":3,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":322,"_text":"Response Remove After Resolve AttackRoll 38"},"childOfId":321} 
 Player 1 04:11:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":323,"_text":"Wait For Response From Player 1 "},"childOfId":321} 
 Player 1 04:11:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:26 $ACTION_MASSAGE_REMOVE:  

 {"id":323} 
 Player 1 04:11:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":324,"_text":"Wait For Response From Player 2 "},"childOfId":321} 
 Player 1 04:11:26 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:26 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:27 $ACTION_MASSAGE_REMOVE:  

 {"id":324} 
 Player 1 04:11:27 $ACTION_MASSAGE_REMOVE:  

 {"id":322} 
 Player 1 04:11:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":325,"_text":"Resolve CombatDamage 39 "}} 
 Player 1 04:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 1 04:11:27 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":39,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 04:11:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Cursed Fatty "} 
 Player 1 04:11:27 $UPDATE_STACK_VIS:  

 {"stackId":39,"text":"Azazel will deal 1 combat damage to Cursed Fatty"} 
 Player 1 04:11:27 $MONSTER_GET_DAMAGED:  

 {"cardId":240,"hpLeft":1,"damageDealerId":311} 
 Player 1 04:11:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":311},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":240,"scopeIsPlayer":false,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 
 Player 1 04:11:27 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":311},{"type":0,"number":240}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":19,"originStackId":39},"isAfterActivation":true,"index":19} 
 Player 1 04:11:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":39,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 04:11:27 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":39} 
 Player 1 04:11:27 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:11:27 $SHOW_STACK_EFFECT:  

 {"effectId":39} 
 Player 1 04:11:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":39} 
 Player 1 04:11:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":326,"_text":"Remove After Resolve CombatDamage 39  "}} 
 Player 1 04:11:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:11:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":39,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 1 04:11:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":327,"_text":"Response Remove After Resolve CombatDamage 39"},"childOfId":326} 
 Player 1 04:11:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":328,"_text":"Wait For Response From Player 2 "},"childOfId":326} 
 Player 1 04:11:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:30 $ACTION_MASSAGE_REMOVE:  

 {"id":328} 
 Player 1 04:11:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":329,"_text":"Wait For Response From Player 1 "},"childOfId":326} 
 Player 1 04:11:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:30 $ACTION_MASSAGE_REMOVE:  

 {"id":329} 
 Player 1 04:11:30 $ACTION_MASSAGE_REMOVE:  

 {"id":327} 
 Player 1 04:11:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":330,"_text":"Stack Was Emptied "}} 
 Player 1 04:11:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:11:30 $CLEAR_SE_VIS:  
 Player 1 04:11:31 $NEXT_STACK_ID:  
 Player 1 04:11:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Cursed Fatty<Monster>"} 
 Player 1 04:11:31 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":40,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":40,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:31 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:11:31 $SHOW_STACK_EFFECT:  

 {"effectId":40} 
 Player 1 04:11:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":331,"_text":"Add AttackRoll 40 "}} 
 Player 1 04:11:34 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 04:11:36 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":5} 
 Player 1 04:11:36 $UPDATE_STACK_VIS:  

 {"stackId":40,"text":"player rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 04:11:36 $SHOW_DICE_ROLL:  

 {"stackId":40} 
 Player 1 04:11:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 04:11:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":40,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":332,"_text":"Response Adding AttackRoll 40"},"childOfId":331} 
 Player 1 04:11:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":333,"_text":"Wait For Response From Player 1 "},"childOfId":331} 
 Player 1 04:11:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:39 $ACTION_MASSAGE_REMOVE:  

 {"id":333} 
 Player 1 04:11:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":334,"_text":"Wait For Response From Player 2 "},"childOfId":331} 
 Player 1 04:11:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:39 $ACTION_MASSAGE_REMOVE:  

 {"id":334} 
 Player 1 04:11:39 $ACTION_MASSAGE_REMOVE:  

 {"id":332} 
 Player 1 04:11:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":335,"_text":"Resolve AttackRoll 40 "}} 
 Player 1 04:11:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 5 vs Cursed Fatty<Monster>"} 
 Player 1 04:11:39 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":40,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":336,"_text":"Added 0 to original roll"}} 
 Player 1 04:11:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 5 Against Cursed Fatty<Monster> 2"} 
 Player 1 04:11:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 04:11:39 $NEXT_STACK_ID:  
 Player 1 04:11:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:39 $CLEAR_SE_VIS:  
 Player 1 04:11:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:11:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":41,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:11:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":40,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:40 $REPLACE_STACK:  

 {"currentStack":[{"entityId":41,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":40,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}]} 
 Player 1 04:11:40 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:11:40 $SHOW_STACK_EFFECT:  

 {"effectId":41} 
 Player 1 04:11:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":20,"originStackId":40},"isAfterActivation":true,"index":20} 
 Player 1 04:11:42 $NEXT_STACK_ID:  
 Player 1 04:11:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:11:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty Effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:11:42 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:11:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":42,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:11:42 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:11:42 $SHOW_STACK_EFFECT:  

 {"effectId":42} 
 Player 1 04:11:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":337,"_text":"Add ActivatePassiveEffect 42 "}} 
 Player 1 04:11:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:11:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,31],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":42,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:11:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":338,"_text":"Response Adding ActivatePassiveEffect 42"},"childOfId":337} 
 Player 1 04:11:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":339,"_text":"Wait For Response From Player 1 "},"childOfId":337} 
 Player 1 04:11:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:48 $ACTION_MASSAGE_REMOVE:  

 {"id":339} 
 Player 1 04:11:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":340,"_text":"Wait For Response From Player 2 "},"childOfId":337} 
 Player 1 04:11:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:48 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:49 $ACTION_MASSAGE_REMOVE:  

 {"id":340} 
 Player 1 04:11:49 $ACTION_MASSAGE_REMOVE:  

 {"id":338} 
 Player 1 04:11:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":341,"_text":"Resolve ActivatePassiveEffect 42 "}} 
 Player 1 04:11:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit \n3:Activate Cursed Fatty effect DiscardLoot<DiscardLoot>"} 
 Player 1 04:11:49 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,31],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":42,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"effectToDo":{"effectName":"DiscardLoot","cardEffectNum":0,"cardPlayerId":1,"cardId":240,"effctType":0},"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:11:49 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":6} 
 Player 1 04:11:51 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":6} 
 Player 1 04:11:51 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":31} 
 Player 1 04:11:51 $MOVE_CARD:  

 {"moveIndex":26,"cardId":31,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:11:51 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":31} 
 Player 1 04:11:51 $DISCARD_LOOT:  

 {"playerId":1,"cardId":31} 
 Player 1 04:11:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":false,"index":20,"originStackId":40},"isAfterActivation":true,"index":20} 
 Player 1 04:11:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit \n3:Activated Cursed Fatty Effect"} 
 Player 1 04:11:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,31],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":42,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:11:51 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":42} 
 Player 1 04:11:51 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:11:51 $SHOW_STACK_EFFECT:  

 {"effectId":42} 
 Player 1 04:11:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":42} 
 Player 1 04:11:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":342,"_text":"Remove After Resolve ActivatePassiveEffect 42  "}} 
 Player 1 04:11:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:11:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,31],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":240,"effectCardPlayer":240},"entityId":42,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":240,"isAfterActivation":true,"index":20,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:11:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":343,"_text":"Response Remove After Resolve ActivatePassiveEffect 42"},"childOfId":342} 
 Player 1 04:11:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":344,"_text":"Wait For Response From Player 2 "},"childOfId":342} 
 Player 1 04:11:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:54 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:54 $ACTION_MASSAGE_REMOVE:  

 {"id":344} 
 Player 1 04:11:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":345,"_text":"Wait For Response From Player 1 "},"childOfId":342} 
 Player 1 04:11:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:54 $ACTION_MASSAGE_REMOVE:  

 {"id":345} 
 Player 1 04:11:54 $ACTION_MASSAGE_REMOVE:  

 {"id":343} 
 Player 1 04:11:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":346,"_text":"Resolve AttackRoll 40 "}} 
 Player 1 04:11:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty \n2:Player 1 Roll Hit"} 
 Player 1 04:11:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":40,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:55 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":40} 
 Player 1 04:11:55 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:11:55 $SHOW_STACK_EFFECT:  

 {"effectId":40} 
 Player 1 04:11:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":40} 
 Player 1 04:11:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":347,"_text":"Remove After Resolve AttackRoll 40  "}} 
 Player 1 04:11:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 1 04:11:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":40,"creatorCardId":311,"numberRolled":5,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":240}} 
 Player 1 04:11:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":348,"_text":"Response Remove After Resolve AttackRoll 40"},"childOfId":347} 
 Player 1 04:11:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":349,"_text":"Wait For Response From Player 1 "},"childOfId":347} 
 Player 1 04:11:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:11:57 $ACTION_MASSAGE_REMOVE:  

 {"id":349} 
 Player 1 04:11:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":350,"_text":"Wait For Response From Player 2 "},"childOfId":347} 
 Player 1 04:11:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:11:58 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:11:58 $ACTION_MASSAGE_REMOVE:  

 {"id":350} 
 Player 1 04:11:58 $ACTION_MASSAGE_REMOVE:  

 {"id":348} 
 Player 1 04:11:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":351,"_text":"Resolve CombatDamage 41 "}} 
 Player 1 04:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Cursed Fatty"} 
 Player 1 04:11:58 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":41,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Cursed Fatty "} 
 Player 1 04:11:58 $UPDATE_STACK_VIS:  

 {"stackId":41,"text":"Azazel will deal 1 combat damage to Cursed Fatty"} 
 Player 1 04:11:58 $MONSTER_GET_DAMAGED:  

 {"cardId":240,"hpLeft":0,"damageDealerId":311} 
 Player 1 04:11:58 $NEXT_STACK_ID:  
 Player 1 04:11:58 $CLEAR_SE_VIS:  
 Player 1 04:11:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Cursed Fatty  \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:11:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":41,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:11:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":43,"creatorCardId":311,"monsterToDieCardId":240,"stackEffectType":5,"killerId":311}} 
 Player 1 04:11:58 $REPLACE_STACK:  

 {"currentStack":[{"entityId":41,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5},{"entityId":43,"creatorCardId":311,"monsterToDieCardId":240,"stackEffectType":5,"killerId":311}]} 
 Player 1 04:11:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":43,"creatorCardId":311,"monsterToDieCardId":240,"stackEffectType":5,"killerId":311}} 
 Player 1 04:11:58 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:11:58 $SHOW_STACK_EFFECT:  

 {"effectId":43} 
 Player 1 04:12:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":311},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":240,"scopeIsPlayer":false,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 
 Player 1 04:12:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":311},{"type":0,"number":240}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":22,"originStackId":41},"isAfterActivation":true,"index":22} 
 Player 1 04:12:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel will deal 1 combat damage to Cursed Fatty  \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:12:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":41,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:12:01 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":41} 
 Player 1 04:12:01 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:12:01 $SHOW_STACK_EFFECT:  

 {"effectId":41} 
 Player 1 04:12:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":41} 
 Player 1 04:12:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":352,"_text":"Remove After Resolve CombatDamage 41  "}} 
 Player 1 04:12:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:12:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":41,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":240,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":5}} 
 Player 1 04:12:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":353,"_text":"Response Remove After Resolve CombatDamage 41"},"childOfId":352} 
 Player 1 04:12:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":354,"_text":"Wait For Response From Player 1 "},"childOfId":352} 
 Player 1 04:12:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:04 $ACTION_MASSAGE_REMOVE:  

 {"id":354} 
 Player 1 04:12:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":355,"_text":"Wait For Response From Player 2 "},"childOfId":352} 
 Player 1 04:12:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:12:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:12:04 $ACTION_MASSAGE_REMOVE:  

 {"id":355} 
 Player 1 04:12:04 $ACTION_MASSAGE_REMOVE:  

 {"id":353} 
 Player 1 04:12:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":356,"_text":"Resolve MonsterDeath 43 "}} 
 Player 1 04:12:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:12:04 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":43,"creatorCardId":311,"monsterToDieCardId":240,"stackEffectType":5,"killerId":311}} 
 Player 1 04:12:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":240,"particleType":5} 
 Player 1 04:12:04 $CANCEL_ATTACK:  
 Player 1 04:12:04 $NEXT_STACK_ID:  
 Player 1 04:12:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:04 $CLEAR_SE_VIS:  
 Player 1 04:12:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:12:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":44,"creatorCardId":311,"monsterCardWithRewardId":240,"playerCardIdToReward":311,"stackEffectType":7}} 
 Player 1 04:12:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":43,"creatorCardId":311,"monsterToDieCardId":240,"stackEffectType":5,"killerId":311}} 
 Player 1 04:12:04 $REPLACE_STACK:  

 {"currentStack":[{"entityId":44,"creatorCardId":311,"monsterCardWithRewardId":240,"playerCardIdToReward":311,"stackEffectType":7},{"entityId":43,"creatorCardId":311,"monsterToDieCardId":240,"stackEffectType":5,"killerId":311}]} 
 Player 1 04:12:04 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:12:05 $SHOW_STACK_EFFECT:  

 {"effectId":44} 
 Player 1 04:12:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Azazel"} 
 Player 1 04:12:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":43,"creatorCardId":311,"monsterToDieCardId":240,"stackEffectType":5,"killerId":311}} 
 Player 1 04:12:07 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":43} 
 Player 1 04:12:07 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:12:07 $SHOW_STACK_EFFECT:  

 {"effectId":43} 
 Player 1 04:12:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":43} 
 Player 1 04:12:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":357,"_text":"Remove After Resolve MonsterDeath 43  "}} 
 Player 1 04:12:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward"} 
 Player 1 04:12:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":43,"creatorCardId":311,"monsterToDieCardId":240,"stackEffectType":5,"killerId":311}} 
 Player 1 04:12:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":358,"_text":"Response Remove After Resolve MonsterDeath 43"},"childOfId":357} 
 Player 1 04:12:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":359,"_text":"Wait For Response From Player 1 "},"childOfId":357} 
 Player 1 04:12:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:10 $ACTION_MASSAGE_REMOVE:  

 {"id":359} 
 Player 1 04:12:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":360,"_text":"Wait For Response From Player 2 "},"childOfId":357} 
 Player 1 04:12:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:12:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:12:10 $ACTION_MASSAGE_REMOVE:  

 {"id":360} 
 Player 1 04:12:11 $ACTION_MASSAGE_REMOVE:  

 {"id":358} 
 Player 1 04:12:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":361,"_text":"Resolve MonsterRewardStackEffect 44 "}} 
 Player 1 04:12:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward"} 
 Player 1 04:12:11 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":44,"creatorCardId":311,"monsterCardWithRewardId":240,"playerCardIdToReward":311,"stackEffectType":7}} 
 Player 1 04:12:11 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 04:12:11 $MOVE_CARD:  

 {"moveIndex":27,"cardId":113,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 04:12:11 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":113} 
 Player 1 04:12:11 $FLIP_CARD:  

 {"cardId":113} 
 Player 1 04:12:11 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":113} 
 Player 1 04:12:11 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 04:12:11 $MOVE_CARD:  

 {"moveIndex":28,"cardId":42,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 04:12:12 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":42} 
 Player 1 04:12:12 $FLIP_CARD:  

 {"cardId":42} 
 Player 1 04:12:12 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":42} 
 Player 1 04:12:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":240,"scopeIsPlayer":false,"index":23,"originStackId":44},"isAfterActivation":true,"index":23} 
 Player 1 04:12:12 $MOVE_CARD:  

 {"moveIndex":29,"cardId":240,"placeID":332,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:12:12 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":240} 
 Player 1 04:12:12 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":240} 
 Player 1 04:12:12 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":240} 
 Player 1 04:12:12 $NEXT_STACK_ID:  
 Player 1 04:12:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward \n2:Refill holder2 Slot"} 
 Player 1 04:12:12 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":45,"creatorCardId":311,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 1 04:12:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":45,"creatorCardId":311,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 1 04:12:12 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:12:12 $SHOW_STACK_EFFECT:  

 {"effectId":45} 
 Player 1 04:12:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":362,"_text":"Add RefillEmptySlot 45 "}} 
 Player 1 04:12:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":45,"creatorCardId":311,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 1 04:12:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":363,"_text":"Response Adding RefillEmptySlot 45"},"childOfId":362} 
 Player 1 04:12:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":364,"_text":"Wait For Response From Player 1 "},"childOfId":362} 
 Player 1 04:12:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:15 $ACTION_MASSAGE_REMOVE:  

 {"id":364} 
 Player 1 04:12:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":365,"_text":"Wait For Response From Player 2 "},"childOfId":362} 
 Player 1 04:12:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:12:15 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:12:15 $ACTION_MASSAGE_REMOVE:  

 {"id":365} 
 Player 1 04:12:15 $ACTION_MASSAGE_REMOVE:  

 {"id":363} 
 Player 1 04:12:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":366,"_text":"Resolve RefillEmptySlot 45 "}} 
 Player 1 04:12:15 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":45,"creatorCardId":311,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 1 04:12:16 $DRAW_CARD:  

 {"deckType":2} 
 Player 1 04:12:16 $FLIP_CARD:  

 {"cardId":255} 
 Player 1 04:12:16 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":255} 
 Player 1 04:12:16 $NEW_MONSTER_ON_PLACE:  

 {"cardId":255,"monsterPlaceId":2} 
 Player 1 04:12:16 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":45} 
 Player 1 04:12:16 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:12:16 $SHOW_STACK_EFFECT:  

 {"effectId":45} 
 Player 1 04:12:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":45} 
 Player 1 04:12:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":367,"_text":"Remove After Resolve RefillEmptySlot 45  "}} 
 Player 1 04:12:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward"} 
 Player 1 04:12:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":45,"creatorCardId":311,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 1 04:12:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":368,"_text":"Response Remove After Resolve RefillEmptySlot 45"},"childOfId":367} 
 Player 1 04:12:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":369,"_text":"Wait For Response From Player 2 "},"childOfId":367} 
 Player 1 04:12:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:12:19 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:12:19 $ACTION_MASSAGE_REMOVE:  

 {"id":369} 
 Player 1 04:12:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":370,"_text":"Wait For Response From Player 1 "},"childOfId":367} 
 Player 1 04:12:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:19 $ACTION_MASSAGE_REMOVE:  

 {"id":370} 
 Player 1 04:12:19 $ACTION_MASSAGE_REMOVE:  

 {"id":368} 
 Player 1 04:12:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":371,"_text":"Resolve MonsterRewardStackEffect 44 "}} 
 Player 1 04:12:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Get Cursed Fatty<Monster>'s Reward"} 
 Player 1 04:12:19 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":44,"creatorCardId":311,"monsterCardWithRewardId":240,"playerCardIdToReward":311,"stackEffectType":7}} 
 Player 1 04:12:19 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":44} 
 Player 1 04:12:19 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:12:19 $SHOW_STACK_EFFECT:  

 {"effectId":44} 
 Player 1 04:12:22 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":44} 
 Player 1 04:12:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":372,"_text":"Remove After Resolve MonsterRewardStackEffect 44  "}} 
 Player 1 04:12:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:12:22 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":44,"creatorCardId":311,"monsterCardWithRewardId":240,"playerCardIdToReward":311,"stackEffectType":7}} 
 Player 1 04:12:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":373,"_text":"Response Remove After Resolve MonsterRewardStackEffect 44"},"childOfId":372} 
 Player 1 04:12:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":374,"_text":"Wait For Response From Player 1 "},"childOfId":372} 
 Player 1 04:12:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:22 $ACTION_MASSAGE_REMOVE:  

 {"id":374} 
 Player 1 04:12:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":375,"_text":"Wait For Response From Player 2 "},"childOfId":372} 
 Player 1 04:12:22 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:12:22 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:12:22 $ACTION_MASSAGE_REMOVE:  

 {"id":375} 
 Player 1 04:12:22 $ACTION_MASSAGE_REMOVE:  

 {"id":373} 
 Player 1 04:12:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":376,"_text":"Stack Was Emptied "}} 
 Player 1 04:12:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:12:22 $CLEAR_SE_VIS:  
 Player 1 04:12:32 $NEXT_STACK_ID:  
 Player 1 04:12:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 3 Cents(7) "} 
 Player 1 04:12:32 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":46,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":42,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:12:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":46,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":42,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:12:32 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:12:32 $SHOW_STACK_EFFECT:  

 {"effectId":46} 
 Player 1 04:12:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":377,"_text":"Add PlayLootCardStackEffect 46 "}} 
 Player 1 04:12:35 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":42} 
 Player 1 04:12:35 $MOVE_CARD:  

 {"moveIndex":30,"cardId":42,"placeID":329,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:12:35 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":42} 
 Player 1 04:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 3 Cents(7): addMoney"} 
 Player 1 04:12:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":46,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":42,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":42,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:12:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":378,"_text":"Response Adding PlayLootCardStackEffect 46"},"childOfId":377} 
 Player 1 04:12:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":379,"_text":"Wait For Response From Player 1 "},"childOfId":377} 
 Player 1 04:12:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:35 $ACTION_MASSAGE_REMOVE:  

 {"id":379} 
 Player 1 04:12:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":380,"_text":"Wait For Response From Player 2 "},"childOfId":377} 
 Player 1 04:12:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:12:35 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:12:35 $ACTION_MASSAGE_REMOVE:  

 {"id":380} 
 Player 1 04:12:35 $ACTION_MASSAGE_REMOVE:  

 {"id":378} 
 Player 1 04:12:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":381,"_text":"Resolve PlayLootCardStackEffect 46 "}} 
 Player 1 04:12:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 3 Cents(7): addMoney"} 
 Player 1 04:12:36 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":46,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":42,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":42,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:12:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays 3 Cents(7): addMoney"} 
 Player 1 04:12:36 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":42,"particleType":6} 
 Player 1 04:12:37 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":42,"particleType":6} 
 Player 1 04:12:37 $SET_MONEY:  

 {"playerId":1,"numOfCoins":6} 
 Player 1 04:12:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":24,"originStackId":-1},"isAfterActivation":true,"index":24} 
 Player 1 04:12:38 $REMOVE_FROM_PILE:  

 {"cardId":42} 
 Player 1 04:12:38 $MOVE_CARD:  

 {"moveIndex":31,"cardId":42,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:12:38 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":42} 
 Player 1 04:12:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays 3 Cents(7): addMoney"} 
 Player 1 04:12:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":46,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":42,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:12:38 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":46} 
 Player 1 04:12:38 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:12:38 $SHOW_STACK_EFFECT:  

 {"effectId":46} 
 Player 1 04:12:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":46} 
 Player 1 04:12:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":382,"_text":"Remove After Resolve PlayLootCardStackEffect 46  "}} 
 Player 1 04:12:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:12:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":46,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":42,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:12:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":383,"_text":"Response Remove After Resolve PlayLootCardStackEffect 46"},"childOfId":382} 
 Player 1 04:12:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":384,"_text":"Wait For Response From Player 2 "},"childOfId":382} 
 Player 1 04:12:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:12:41 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:12:41 $ACTION_MASSAGE_REMOVE:  

 {"id":384} 
 Player 1 04:12:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":385,"_text":"Wait For Response From Player 1 "},"childOfId":382} 
 Player 1 04:12:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:41 $ACTION_MASSAGE_REMOVE:  

 {"id":385} 
 Player 1 04:12:41 $ACTION_MASSAGE_REMOVE:  

 {"id":383} 
 Player 1 04:12:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":386,"_text":"Stack Was Emptied "}} 
 Player 1 04:12:41 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:12:41 $CLEAR_SE_VIS:  
 Player 1 04:12:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:12:43 $CLEAR_SE_VIS:  
 Player 1 04:12:43 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 04:12:43 $CLEAR_SE_VIS:  
 Player 1 04:12:43 $END_TURN:  
 Player 1 04:12:43 $SET_TURN:  

 {"playerId":2} 
 Player 1 04:12:43 $START_TURN:  

 {"playerId":2} 
 Player 1 04:12:43 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 04:12:44 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:12:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:12:47 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:12:47 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:12:47 $MOVE_CARD_END:  

 {"moveIndex":32,"cardId":123,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:12:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:12:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:12:51 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:12:51 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:13:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 
 Player 1 04:13:04 $MOVE_CARD_END:  

 {"moveIndex":33,"cardId":123,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 
 Player 1 04:13:04 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:04 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 
 Player 1 04:13:07 $MOVE_CARD_END:  

 {"moveIndex":34,"cardId":123,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:13:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 
 Player 1 04:13:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play Swallowed Penny "} 
 Player 1 04:13:10 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:10 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:13:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Dip"} 
 Player 1 04:13:22 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:22 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Dip"} 
 Player 1 04:13:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Dip"} 
 Player 1 04:13:25 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:25 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:26 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:13:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 
 Player 1 04:13:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 
 Player 1 04:13:35 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:35 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 
 Player 1 04:13:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dip<Monster>"} 
 Player 1 04:13:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip \n2:Player 2 is rolling against Dip<Monster>"} 
 Player 1 04:13:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip \n2:Player 2 is rolling against Dip<Monster>"} 
 Player 1 04:13:41 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:41 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip"} 
 Player 1 04:13:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 1 04:13:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 1 04:13:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 1 04:13:48 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:48 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip"} 
 Player 1 04:13:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Dip"} 
 Player 1 04:13:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 1 04:13:54 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:54 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:13:55 $MOVE_CARD_END:  

 {"moveIndex":35,"cardId":255,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:13:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward"} 
 Player 1 04:13:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward \n2:Refill holder2 Slot"} 
 Player 1 04:13:58 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:13:58 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:14:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward \n2:Refill holder2 Slot"} 
 Player 1 04:14:02 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:14:02 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:14:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Dip<Monster>'s Reward"} 
 Player 1 04:14:05 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:14:05 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:14:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:14:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Lilith"} 
 Player 1 04:14:29 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:14:29 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:14:31 $MOVE_CARD_END:  

 {"moveIndex":36,"cardId":59,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:14:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Lilith"} 
 Player 1 04:14:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2)  \n2:Player 2 is going to activate Lilith"} 
 Player 1 04:14:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2)  \n2:Player 2 is going to activate Lilith"} 
 Player 1 04:14:38 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:14:38 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:14:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2) "} 
 Player 1 04:14:40 $MOVE_CARD_END:  

 {"moveIndex":37,"cardId":59,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:14:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2) "} 
 Player 1 04:14:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(2) "} 
 Player 1 04:14:44 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:14:44 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:14:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:14:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:14:56 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:14:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:14:58 $MOVE_CARD_END:  

 {"moveIndex":38,"cardId":65,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:15:06 $MOVE_CARD_END:  

 {"moveIndex":39,"cardId":65,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:15:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:15:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:15:09 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[311,312]} 
 Player 1 04:15:09 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:15:12 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 04:15:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:12 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 1 04:15:12 $NEXT_STACK_ID:  
 Player 1 04:15:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe Effect ChainEffects<ChainEffects>"} 
 Player 1 04:15:12 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":58,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:15:12 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":58,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:15:12 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:15:12 $SHOW_STACK_EFFECT:  

 {"effectId":58} 
 Player 1 04:15:12 $CLEAR_SE_VIS:  
 Player 1 04:15:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":478,"_text":"Add ActivatePassiveEffect 58 "}} 
 Player 1 04:15:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe effect ChainEffects<ChainEffects>"} 
 Player 1 04:15:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":311,"effectCardPlayer":311},"entityId":58,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:15:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":479,"_text":"Response Adding ActivatePassiveEffect 58"},"childOfId":478} 
 Player 1 04:15:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":480,"_text":"Wait For Response From Player 1 "},"childOfId":478} 
 Player 1 04:15:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:15 $ACTION_MASSAGE_REMOVE:  

 {"id":480} 
 Player 1 04:15:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":481,"_text":"Wait For Response From Player 2 "},"childOfId":478} 
 Player 1 04:15:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:15:15 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:15:15 $ACTION_MASSAGE_REMOVE:  

 {"id":481} 
 Player 1 04:15:15 $ACTION_MASSAGE_REMOVE:  

 {"id":479} 
 Player 1 04:15:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":482,"_text":"Resolve ActivatePassiveEffect 58 "}} 
 Player 1 04:15:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Golden Horseshoe effect ChainEffects<ChainEffects>"} 
 Player 1 04:15:15 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":311,"effectCardPlayer":311},"entityId":58,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":102,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:15:15 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":102,"particleType":6} 
 Player 1 04:15:17 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":102,"particleType":6} 
 Player 1 04:15:27 $DECK_ADD_TO_BOTTOM:  

 {"deckType":5,"cardId":204} 
 Player 1 04:15:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_START_TURN","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 1 04:15:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activated Golden Horseshoe Effect"} 
 Player 1 04:15:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":311,"effectCardPlayer":311},"entityId":58,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:15:28 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":58} 
 Player 1 04:15:28 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:15:28 $SHOW_STACK_EFFECT:  

 {"effectId":58} 
 Player 1 04:15:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":58} 
 Player 1 04:15:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":483,"_text":"Remove After Resolve ActivatePassiveEffect 58  "}} 
 Player 1 04:15:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:15:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":311,"effectCardPlayer":311},"entityId":58,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":102,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:15:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":484,"_text":"Response Remove After Resolve ActivatePassiveEffect 58"},"childOfId":483} 
 Player 1 04:15:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":485,"_text":"Wait For Response From Player 2 "},"childOfId":483} 
 Player 1 04:15:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:15:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:15:31 $ACTION_MASSAGE_REMOVE:  

 {"id":485} 
 Player 1 04:15:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":486,"_text":"Wait For Response From Player 1 "},"childOfId":483} 
 Player 1 04:15:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:31 $ACTION_MASSAGE_REMOVE:  

 {"id":486} 
 Player 1 04:15:31 $ACTION_MASSAGE_REMOVE:  

 {"id":484} 
 Player 1 04:15:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":487,"_text":"Stack Was Emptied "}} 
 Player 1 04:15:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:15:31 $CLEAR_SE_VIS:  
 Player 1 04:15:31 $NEXT_STACK_ID:  
 Player 1 04:15:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 1 04:15:31 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":59,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:15:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":59,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:15:31 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:15:31 $SHOW_STACK_EFFECT:  

 {"effectId":59} 
 Player 1 04:15:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":488,"_text":"Add StartTurnLoot 59 "}} 
 Player 1 04:15:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":59,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:15:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":489,"_text":"Response Adding StartTurnLoot 59"},"childOfId":488} 
 Player 1 04:15:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":490,"_text":"Wait For Response From Player 1 "},"childOfId":488} 
 Player 1 04:15:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:34 $ACTION_MASSAGE_REMOVE:  

 {"id":490} 
 Player 1 04:15:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":491,"_text":"Wait For Response From Player 2 "},"childOfId":488} 
 Player 1 04:15:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:15:34 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:15:34 $ACTION_MASSAGE_REMOVE:  

 {"id":491} 
 Player 1 04:15:34 $ACTION_MASSAGE_REMOVE:  

 {"id":489} 
 Player 1 04:15:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":492,"_text":"Resolve StartTurnLoot 59 "}} 
 Player 1 04:15:34 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":59,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:15:34 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 04:15:34 $MOVE_CARD:  

 {"moveIndex":40,"cardId":65,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 04:15:35 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":65} 
 Player 1 04:15:35 $FLIP_CARD:  

 {"cardId":65} 
 Player 1 04:15:35 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":65} 
 Player 1 04:15:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 
 Player 1 04:15:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":59,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:15:35 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":59} 
 Player 1 04:15:35 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:15:35 $SHOW_STACK_EFFECT:  

 {"effectId":59} 
 Player 1 04:15:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":59} 
 Player 1 04:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":493,"_text":"Remove After Resolve StartTurnLoot 59  "}} 
 Player 1 04:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:15:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":59,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":494,"_text":"Response Remove After Resolve StartTurnLoot 59"},"childOfId":493} 
 Player 1 04:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":495,"_text":"Wait For Response From Player 2 "},"childOfId":493} 
 Player 1 04:15:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:15:38 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:15:38 $ACTION_MASSAGE_REMOVE:  

 {"id":495} 
 Player 1 04:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":496,"_text":"Wait For Response From Player 1 "},"childOfId":493} 
 Player 1 04:15:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:38 $ACTION_MASSAGE_REMOVE:  

 {"id":496} 
 Player 1 04:15:38 $ACTION_MASSAGE_REMOVE:  

 {"id":494} 
 Player 1 04:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":497,"_text":"Stack Was Emptied "}} 
 Player 1 04:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:15:38 $CLEAR_SE_VIS:  
 Player 1 04:15:40 $NEXT_STACK_ID:  
 Player 1 04:15:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 4 Cents(8) "} 
 Player 1 04:15:40 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":60,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:15:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":60,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:15:40 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:15:40 $SHOW_STACK_EFFECT:  

 {"effectId":60} 
 Player 1 04:15:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":498,"_text":"Add PlayLootCardStackEffect 60 "}} 
 Player 1 04:15:43 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":65} 
 Player 1 04:15:43 $MOVE_CARD:  

 {"moveIndex":41,"cardId":65,"placeID":329,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:15:43 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":65} 
 Player 1 04:15:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 4 Cents(8): addMoney"} 
 Player 1 04:15:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:43 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":60,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":65,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:15:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":499,"_text":"Response Adding PlayLootCardStackEffect 60"},"childOfId":498} 
 Player 1 04:15:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":500,"_text":"Wait For Response From Player 1 "},"childOfId":498} 
 Player 1 04:15:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:43 $ACTION_MASSAGE_REMOVE:  

 {"id":500} 
 Player 1 04:15:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":501,"_text":"Wait For Response From Player 2 "},"childOfId":498} 
 Player 1 04:15:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:15:43 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:15:44 $ACTION_MASSAGE_REMOVE:  

 {"id":501} 
 Player 1 04:15:44 $ACTION_MASSAGE_REMOVE:  

 {"id":499} 
 Player 1 04:15:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":502,"_text":"Resolve PlayLootCardStackEffect 60 "}} 
 Player 1 04:15:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 4 Cents(8): addMoney"} 
 Player 1 04:15:44 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":60,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":65,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:15:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays 4 Cents(8): addMoney"} 
 Player 1 04:15:44 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":65,"particleType":6} 
 Player 1 04:15:46 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":65,"particleType":6} 
 Player 1 04:15:46 $SET_MONEY:  

 {"playerId":1,"numOfCoins":10} 
 Player 1 04:15:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":25,"originStackId":-1},"isAfterActivation":true,"index":25} 
 Player 1 04:15:46 $REMOVE_FROM_PILE:  

 {"cardId":65} 
 Player 1 04:15:46 $MOVE_CARD:  

 {"moveIndex":42,"cardId":65,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:15:46 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":65} 
 Player 1 04:15:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays 4 Cents(8): addMoney"} 
 Player 1 04:15:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":60,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:15:46 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":60} 
 Player 1 04:15:46 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:15:46 $SHOW_STACK_EFFECT:  

 {"effectId":60} 
 Player 1 04:15:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":60} 
 Player 1 04:15:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":503,"_text":"Remove After Resolve PlayLootCardStackEffect 60  "}} 
 Player 1 04:15:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:15:49 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":60,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":65,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:15:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":504,"_text":"Response Remove After Resolve PlayLootCardStackEffect 60"},"childOfId":503} 
 Player 1 04:15:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":505,"_text":"Wait For Response From Player 2 "},"childOfId":503} 
 Player 1 04:15:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:15:49 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:15:49 $ACTION_MASSAGE_REMOVE:  

 {"id":505} 
 Player 1 04:15:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":506,"_text":"Wait For Response From Player 1 "},"childOfId":503} 
 Player 1 04:15:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:49 $ACTION_MASSAGE_REMOVE:  

 {"id":506} 
 Player 1 04:15:49 $ACTION_MASSAGE_REMOVE:  

 {"id":504} 
 Player 1 04:15:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":507,"_text":"Stack Was Emptied "}} 
 Player 1 04:15:50 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:15:50 $CLEAR_SE_VIS:  
 Player 1 04:15:52 $NEXT_STACK_ID:  
 Player 1 04:15:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Treasure Deck For 10"} 
 Player 1 04:15:52 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":61,"creatorCardId":311,"itemToPurchaseCardId":140,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 
 Player 1 04:15:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":61,"creatorCardId":311,"itemToPurchaseCardId":140,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 
 Player 1 04:15:52 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:15:52 $SHOW_STACK_EFFECT:  

 {"effectId":61} 
 Player 1 04:15:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":508,"_text":"Add PurchaseItem 61 "}} 
 Player 1 04:15:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":61,"creatorCardId":311,"itemToPurchaseCardId":140,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 
 Player 1 04:15:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":509,"_text":"Response Adding PurchaseItem 61"},"childOfId":508} 
 Player 1 04:15:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":510,"_text":"Wait For Response From Player 1 "},"childOfId":508} 
 Player 1 04:15:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:55 $ACTION_MASSAGE_REMOVE:  

 {"id":510} 
 Player 1 04:15:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":511,"_text":"Wait For Response From Player 2 "},"childOfId":508} 
 Player 1 04:15:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:15:55 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:15:55 $ACTION_MASSAGE_REMOVE:  

 {"id":511} 
 Player 1 04:15:55 $ACTION_MASSAGE_REMOVE:  

 {"id":509} 
 Player 1 04:15:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":512,"_text":"Resolve PurchaseItem 61 "}} 
 Player 1 04:15:55 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":61,"creatorCardId":311,"itemToPurchaseCardId":140,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 
 Player 1 04:15:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Bought Treasure Deck For -10"} 
 Player 1 04:15:55 $SET_MONEY:  

 {"playerId":1,"numOfCoins":0} 
 Player 1 04:15:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":26,"originStackId":-1},"isAfterActivation":true,"index":26} 
 Player 1 04:15:56 $DRAW_CARD:  

 {"deckType":5} 
 Player 1 04:15:56 $MOVE_CARD:  

 {"moveIndex":43,"cardId":178,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 04:15:56 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":178,"isReward":false} 
 Player 1 04:15:56 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":178}],"result":true,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 
 Player 1 04:15:56 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_BUY_ITEM","args":[{"type":2,"number":-10},{"type":0,"number":140}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":28,"originStackId":61},"isAfterActivation":true,"index":28} 
 Player 1 04:15:56 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":61} 
 Player 1 04:15:56 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:15:56 $SHOW_STACK_EFFECT:  

 {"effectId":61} 
 Player 1 04:15:59 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":61} 
 Player 1 04:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":513,"_text":"Remove After Resolve PurchaseItem 61  "}} 
 Player 1 04:15:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:15:59 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":61,"creatorCardId":311,"itemToPurchaseCardId":140,"playerWhoBuysCardId":311,"cost":10,"stackEffectType":9}} 
 Player 1 04:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":514,"_text":"Response Remove After Resolve PurchaseItem 61"},"childOfId":513} 
 Player 1 04:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":515,"_text":"Wait For Response From Player 2 "},"childOfId":513} 
 Player 1 04:15:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:15:59 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:15:59 $ACTION_MASSAGE_REMOVE:  

 {"id":515} 
 Player 1 04:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":516,"_text":"Wait For Response From Player 1 "},"childOfId":513} 
 Player 1 04:15:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:15:59 $ACTION_MASSAGE_REMOVE:  

 {"id":516} 
 Player 1 04:15:59 $ACTION_MASSAGE_REMOVE:  

 {"id":514} 
 Player 1 04:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":517,"_text":"Stack Was Emptied "}} 
 Player 1 04:15:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:15:59 $CLEAR_SE_VIS:  
 Player 1 04:16:02 $NEXT_STACK_ID:  
 Player 1 04:16:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 1 04:16:02 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":62,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:16:02 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":62,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:16:02 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:16:02 $SHOW_STACK_EFFECT:  

 {"effectId":62} 
 Player 1 04:16:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":518,"_text":"Add ActivateItem 62 "}} 
 Player 1 04:16:05 $SHOW_DECISION:  

 {"startCardId":178,"endCardId":321} 
 Player 1 04:16:08 $USE_ITEM:  

 {"cardId":178} 
 Player 1 04:16:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":62,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":519,"_text":"Response Adding ActivateItem 62"},"childOfId":518} 
 Player 1 04:16:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":520,"_text":"Wait For Response From Player 1 "},"childOfId":518} 
 Player 1 04:16:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:08 $ACTION_MASSAGE_REMOVE:  

 {"id":520} 
 Player 1 04:16:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":521,"_text":"Wait For Response From Player 2 "},"childOfId":518} 
 Player 1 04:16:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:16:08 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:16:09 $ACTION_MASSAGE_REMOVE:  

 {"id":521} 
 Player 1 04:16:09 $ACTION_MASSAGE_REMOVE:  

 {"id":519} 
 Player 1 04:16:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":522,"_text":"Resolve ActivateItem 62 "}} 
 Player 1 04:16:09 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":62,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:09 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":178,"particleType":6} 
 Player 1 04:16:11 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":178,"particleType":6} 
 Player 1 04:16:11 $SET_MONEY:  

 {"playerId":2,"numOfCoins":4} 
 Player 1 04:16:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":29,"originStackId":-1},"isAfterActivation":true,"index":29} 
 Player 1 04:16:11 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 1 04:16:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 
 Player 1 04:16:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 has activated Jaw Bone"} 
 Player 1 04:16:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":178}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":31,"originStackId":-1},"isAfterActivation":true,"index":31} 
 Player 1 04:16:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":62,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:11 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":62} 
 Player 1 04:16:11 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:16:11 $SHOW_STACK_EFFECT:  

 {"effectId":62} 
 Player 1 04:16:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":62} 
 Player 1 04:16:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":523,"_text":"Remove After Resolve ActivateItem 62  "}} 
 Player 1 04:16:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:16:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":62,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":524,"_text":"Response Remove After Resolve ActivateItem 62"},"childOfId":523} 
 Player 1 04:16:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":525,"_text":"Wait For Response From Player 2 "},"childOfId":523} 
 Player 1 04:16:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:16:14 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:16:14 $ACTION_MASSAGE_REMOVE:  

 {"id":525} 
 Player 1 04:16:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":526,"_text":"Wait For Response From Player 1 "},"childOfId":523} 
 Player 1 04:16:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:14 $ACTION_MASSAGE_REMOVE:  

 {"id":526} 
 Player 1 04:16:14 $ACTION_MASSAGE_REMOVE:  

 {"id":524} 
 Player 1 04:16:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":527,"_text":"Stack Was Emptied "}} 
 Player 1 04:16:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:16:14 $CLEAR_SE_VIS:  
 Player 1 04:16:27 $NEXT_STACK_ID:  
 Player 1 04:16:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 1 04:16:27 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:16:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:16:27 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:16:27 $SHOW_STACK_EFFECT:  

 {"effectId":63} 
 Player 1 04:16:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":528,"_text":"Add DeclareAttack 63 "}} 
 Player 1 04:16:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:16:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":529,"_text":"Response Adding DeclareAttack 63"},"childOfId":528} 
 Player 1 04:16:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":530,"_text":"Wait For Response From Player 1 "},"childOfId":528} 
 Player 1 04:16:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:30 $ACTION_MASSAGE_REMOVE:  

 {"id":530} 
 Player 1 04:16:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":531,"_text":"Wait For Response From Player 2 "},"childOfId":528} 
 Player 1 04:16:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:16:30 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:16:30 $ACTION_MASSAGE_REMOVE:  

 {"id":531} 
 Player 1 04:16:30 $ACTION_MASSAGE_REMOVE:  

 {"id":529} 
 Player 1 04:16:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":532,"_text":"Resolve DeclareAttack 63 "}} 
 Player 1 04:16:30 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:16:30 $DRAW_CARD:  

 {"deckType":2} 
 Player 1 04:16:30 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":306,"playerId":1} 
 Player 1 04:16:36 $FLIP_CARD:  

 {"cardId":306} 
 Player 1 04:16:36 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":306} 
 Player 1 04:16:36 $NEW_MONSTER_ON_PLACE:  

 {"cardId":306,"monsterPlaceId":2} 
 Player 1 04:16:36 $NEXT_STACK_ID:  
 Player 1 04:16:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs!"} 
 Player 1 04:16:36 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":64,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:16:36 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":64,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:16:36 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:16:36 $SHOW_STACK_EFFECT:  

 {"effectId":64} 
 Player 1 04:16:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":533,"_text":"Add ActivateItem 64 "}} 
 Player 1 04:16:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":64,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":534,"_text":"Response Adding ActivateItem 64"},"childOfId":533} 
 Player 1 04:16:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":535,"_text":"Wait For Response From Player 1 "},"childOfId":533} 
 Player 1 04:16:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:39 $ACTION_MASSAGE_REMOVE:  

 {"id":535} 
 Player 1 04:16:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":536,"_text":"Wait For Response From Player 2 "},"childOfId":533} 
 Player 1 04:16:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:16:39 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:16:39 $ACTION_MASSAGE_REMOVE:  

 {"id":536} 
 Player 1 04:16:39 $ACTION_MASSAGE_REMOVE:  

 {"id":534} 
 Player 1 04:16:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":537,"_text":"Resolve ActivateItem 64 "}} 
 Player 1 04:16:39 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":64,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:39 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 1 04:16:41 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 1 04:16:41 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":2,"damageDealerId":306} 
 Player 1 04:16:41 $NEXT_STACK_ID:  
 Player 1 04:16:41 $CLEAR_SE_VIS:  
 Player 1 04:16:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 is going to activate Troll Bombs! \n3:Player 1 Is About To Die"} 
 Player 1 04:16:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:16:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":64,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":65,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":306}} 
 Player 1 04:16:41 $REPLACE_STACK:  

 {"currentStack":[{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4},{"entityId":64,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":65,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":306}]} 
 Player 1 04:16:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":65,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":306}} 
 Player 1 04:16:41 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:16:41 $SHOW_STACK_EFFECT:  

 {"effectId":65} 
 Player 1 04:16:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":32,"originStackId":-1},"isAfterActivation":true,"index":32} 
 Player 1 04:16:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 has activated Troll Bombs! \n3:Player 1 Is About To Die"} 
 Player 1 04:16:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":33,"originStackId":-1},"isAfterActivation":true,"index":33} 
 Player 1 04:16:44 $MOVE_CARD:  

 {"moveIndex":44,"cardId":306,"placeID":332,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:16:45 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":306} 
 Player 1 04:16:45 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":306} 
 Player 1 04:16:45 $GET_NEXT_MONSTER:  

 {"monsterPlaceId":2} 
 Player 1 04:16:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":64,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:45 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:16:45 $SHOW_STACK_EFFECT:  

 {"effectId":64} 
 Player 1 04:16:48 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":64} 
 Player 1 04:16:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":538,"_text":"Remove After Resolve ActivateItem 64  "}} 
 Player 1 04:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Die"} 
 Player 1 04:16:48 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":64,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":306,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:16:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":539,"_text":"Response Remove After Resolve ActivateItem 64"},"childOfId":538} 
 Player 1 04:16:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":540,"_text":"Wait For Response From Player 1 "},"childOfId":538} 
 Player 1 04:16:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:48 $ACTION_MASSAGE_REMOVE:  

 {"id":540} 
 Player 1 04:16:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":541,"_text":"Wait For Response From Player 2 "},"childOfId":538} 
 Player 1 04:16:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:16:48 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:16:48 $ACTION_MASSAGE_REMOVE:  

 {"id":541} 
 Player 1 04:16:48 $ACTION_MASSAGE_REMOVE:  

 {"id":539} 
 Player 1 04:16:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":542,"_text":"Resolve PlayerDeath 65 "}} 
 Player 1 04:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Die"} 
 Player 1 04:16:48 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":65,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":306}} 
 Player 1 04:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Has Died"} 
 Player 1 04:16:48 $NEXT_STACK_ID:  
 Player 1 04:16:48 $CLEAR_SE_VIS:  
 Player 1 04:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 1 04:16:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:16:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":65,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":306}} 
 Player 1 04:16:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":66,"creatorCardId":311,"playerToPayCardId":311,"stackEffectType":16}} 
 Player 1 04:16:48 $REPLACE_STACK:  

 {"currentStack":[{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4},{"entityId":65,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":306},{"entityId":66,"creatorCardId":311,"playerToPayCardId":311,"stackEffectType":16}]} 
 Player 1 04:16:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":66,"creatorCardId":311,"playerToPayCardId":311,"stackEffectType":16}} 
 Player 1 04:16:48 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:16:48 $SHOW_STACK_EFFECT:  

 {"effectId":66} 
 Player 1 04:16:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Has Died \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 1 04:16:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":65,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":306}} 
 Player 1 04:16:51 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:16:51 $SHOW_STACK_EFFECT:  

 {"effectId":65} 
 Player 1 04:16:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":65} 
 Player 1 04:16:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":543,"_text":"Remove After Resolve PlayerDeath 65  "}} 
 Player 1 04:16:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 1 04:16:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":65,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":306}} 
 Player 1 04:16:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":544,"_text":"Response Remove After Resolve PlayerDeath 65"},"childOfId":543} 
 Player 1 04:16:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":545,"_text":"Wait For Response From Player 1 "},"childOfId":543} 
 Player 1 04:16:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:16:54 $ACTION_MASSAGE_REMOVE:  

 {"id":545} 
 Player 1 04:16:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":546,"_text":"Wait For Response From Player 2 "},"childOfId":543} 
 Player 1 04:16:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:16:54 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:16:54 $ACTION_MASSAGE_REMOVE:  

 {"id":546} 
 Player 1 04:16:54 $ACTION_MASSAGE_REMOVE:  

 {"id":544} 
 Player 1 04:16:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":547,"_text":"Resolve PlayerDeathPenalties 66 "}} 
 Player 1 04:16:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 1 04:16:55 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":66,"creatorCardId":311,"playerToPayCardId":311,"stackEffectType":16}} 
 Player 1 04:16:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":548,"_text":"Player 1 pays Penalties"}} 
 Player 1 04:16:55 $SET_MONEY:  

 {"playerId":1,"numOfCoins":2} 
 Player 1 04:16:55 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":34,"originStackId":-1},"isAfterActivation":true,"index":34} 
 Player 1 04:16:59 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":116} 
 Player 1 04:16:59 $MOVE_CARD:  

 {"moveIndex":45,"cardId":116,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:17:00 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":116} 
 Player 1 04:17:03 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":102} 
 Player 1 04:17:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":102}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":35,"originStackId":-1},"isAfterActivation":true,"index":35} 
 Player 1 04:17:03 $MOVE_CARD:  

 {"moveIndex":46,"cardId":102,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:17:03 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":102} 
 Player 1 04:17:03 $USE_ITEM:  

 {"cardId":311} 
 Player 1 04:17:03 $USE_ITEM:  

 {"cardId":312} 
 Player 1 04:17:03 $USE_ITEM:  

 {"cardId":178} 
 Player 1 04:17:03 $PLAYER_DIED:  

 {"playerId":1} 
 Player 1 04:17:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck \n2:Player 1 Paid Death Penalties"} 
 Player 1 04:17:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":66,"creatorCardId":311,"playerToPayCardId":311,"stackEffectType":16}} 
 Player 1 04:17:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":66} 
 Player 1 04:17:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:17:03 $SHOW_STACK_EFFECT:  

 {"effectId":66} 
 Player 1 04:17:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":66} 
 Player 1 04:17:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":549,"_text":"Remove After Resolve PlayerDeathPenalties 66  "}} 
 Player 1 04:17:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 1 04:17:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":66,"creatorCardId":311,"playerToPayCardId":311,"stackEffectType":16}} 
 Player 1 04:17:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":550,"_text":"Response Remove After Resolve PlayerDeathPenalties 66"},"childOfId":549} 
 Player 1 04:17:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":551,"_text":"Wait For Response From Player 2 "},"childOfId":549} 
 Player 1 04:17:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:17:06 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:17:07 $ACTION_MASSAGE_REMOVE:  

 {"id":551} 
 Player 1 04:17:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":552,"_text":"Wait For Response From Player 1 "},"childOfId":549} 
 Player 1 04:17:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:17:07 $ACTION_MASSAGE_REMOVE:  

 {"id":552} 
 Player 1 04:17:07 $ACTION_MASSAGE_REMOVE:  

 {"id":550} 
 Player 1 04:17:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":553,"_text":"Resolve DeclareAttack 63 "}} 
 Player 1 04:17:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Entered Battle with Troll Bombs!"} 
 Player 1 04:17:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":36,"originStackId":63},"isAfterActivation":true,"index":36} 
 Player 1 04:17:07 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":63} 
 Player 1 04:17:07 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:17:07 $SHOW_STACK_EFFECT:  

 {"effectId":63} 
 Player 1 04:17:10 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":63} 
 Player 1 04:17:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":554,"_text":"Remove After Resolve DeclareAttack 63  "}} 
 Player 1 04:17:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:17:10 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":63,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 1 04:17:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":555,"_text":"Response Remove After Resolve DeclareAttack 63"},"childOfId":554} 
 Player 1 04:17:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":556,"_text":"Wait For Response From Player 1 "},"childOfId":554} 
 Player 1 04:17:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:17:10 $ACTION_MASSAGE_REMOVE:  

 {"id":556} 
 Player 1 04:17:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":557,"_text":"Wait For Response From Player 2 "},"childOfId":554} 
 Player 1 04:17:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:17:10 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:17:10 $ACTION_MASSAGE_REMOVE:  

 {"id":557} 
 Player 1 04:17:10 $ACTION_MASSAGE_REMOVE:  

 {"id":555} 
 Player 1 04:17:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":558,"_text":"Stack Was Emptied "}} 
 Player 1 04:17:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:17:10 $CLEAR_SE_VIS:  
 Player 1 04:17:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:17:10 $CLEAR_SE_VIS:  
 Player 1 04:17:10 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 1 04:17:10 $CLEAR_SE_VIS:  
 Player 1 04:17:10 $END_TURN:  
 Player 1 04:17:10 $SET_TURN:  

 {"playerId":2} 
 Player 1 04:17:10 $START_TURN:  

 {"playerId":2} 
 Player 1 04:17:10 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 04:17:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:17:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:17:14 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:17:14 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:17:14 $MOVE_CARD_END:  

 {"moveIndex":47,"cardId":36,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:17:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:17:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 1 04:17:17 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:17:17 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:17:34 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:17:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:17:47 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:17:47 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:17:49 $MOVE_CARD_END:  

 {"moveIndex":48,"cardId":11,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:17:53 $MOVE_CARD_END:  

 {"moveIndex":49,"cardId":11,"flipIfFlipped":false,"playerId":2} 
 Player 1 04:17:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:17:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Incubus"} 
 Player 1 04:17:56 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:17:56 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:18:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:18:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 3 Cents(1) "} 
 Player 1 04:18:14 $MOVE_CARD_END:  

 {"moveIndex":50,"cardId":36,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:18:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 3 Cents(1) "} 
 Player 1 04:18:14 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:18:14 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:18:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 3 Cents(1) "} 
 Player 1 04:18:16 $MOVE_CARD_END:  

 {"moveIndex":51,"cardId":36,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:18:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 3 Cents(1) "} 
 Player 1 04:18:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 3 Cents(1) "} 
 Player 1 04:18:20 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:18:20 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:18:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:18:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Monster Deck"} 
 Player 1 04:18:28 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:18:28 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:18:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Monster Deck"} 
 Player 1 04:18:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Mask of Infamy"} 
 Player 1 04:18:47 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:18:47 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:18:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:18:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:04 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:19:04 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:19:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:10 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:19:10 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:19:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 1 04:19:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 1 04:19:14 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:19:14 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:19:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:19:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:55 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:19:55 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:19:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:19:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor "} 
 Player 1 04:20:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor "} 
 Player 1 04:20:02 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:20:02 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:20:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor "} 
 Player 1 04:20:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor "} 
 Player 1 04:20:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 1 04:20:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 1 04:20:08 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:20:08 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:20:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 1 04:20:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 1 04:20:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 1 04:20:13 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:20:13 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:20:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor "} 
 Player 1 04:20:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster> \n3:Activate Cursed Tumor "} 
 Player 1 04:20:16 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:20:16 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:20:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:20:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:Player 2 is rolling against Mask of Infamy<Monster>"} 
 Player 1 04:20:20 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:20:20 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:20:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 1 04:20:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 1 04:20:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 1 04:20:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 1 04:20:26 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:20:26 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:20:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 1 04:20:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith is going to hurt Mask of Infamy"} 
 Player 1 04:20:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Mask of Infamy<Monster>'s Reward \n2:[object Object] Is Going To Be Killed by Lilith"} 
 Player 1 04:20:33 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:20:33 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:20:33 $MOVE_CARD_END:  

 {"moveIndex":52,"cardId":187,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:20:34 $MOVE_CARD_END:  

 {"moveIndex":53,"cardId":287,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:20:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Get Mask of Infamy<Monster>'s Reward"} 
 Player 1 04:20:37 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[]} 
 Player 1 04:20:37 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 04:20:47 $STACK_EMPTIED:  

 {"playerId":2} 
 Player 1 04:20:47 $RECHARGE_ITEM:  

 {"cardId":311} 
 Player 1 04:20:47 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":311} 
 Player 1 04:20:47 $RECHARGE_ITEM:  

 {"cardId":312} 
 Player 1 04:20:47 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":312} 
 Player 1 04:20:47 $RECHARGE_ITEM:  

 {"cardId":178} 
 Player 1 04:20:47 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":178} 
 Player 1 04:20:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:20:47 $NEXT_STACK_ID:  
 Player 1 04:20:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Player 1 04:20:47 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":79,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:20:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":79,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:20:47 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:20:47 $SHOW_STACK_EFFECT:  

 {"effectId":79} 
 Player 1 04:20:47 $CLEAR_SE_VIS:  
 Player 1 04:20:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":661,"_text":"Add StartTurnLoot 79 "}} 
 Player 1 04:20:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:20:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":79,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:20:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":662,"_text":"Response Adding StartTurnLoot 79"},"childOfId":661} 
 Player 1 04:20:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":663,"_text":"Wait For Response From Player 1 "},"childOfId":661} 
 Player 1 04:20:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":663} 
 Player 1 04:20:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":664,"_text":"Wait For Response From Player 2 "},"childOfId":661} 
 Player 1 04:20:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:20:50 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":664} 
 Player 1 04:20:50 $ACTION_MASSAGE_REMOVE:  

 {"id":662} 
 Player 1 04:20:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":665,"_text":"Resolve StartTurnLoot 79 "}} 
 Player 1 04:20:50 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":79,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:20:50 $DRAW_CARD:  

 {"deckType":1} 
 Player 1 04:20:50 $MOVE_CARD:  

 {"moveIndex":54,"cardId":11,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 
 Player 1 04:20:51 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":11} 
 Player 1 04:20:51 $FLIP_CARD:  

 {"cardId":11} 
 Player 1 04:20:51 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":11} 
 Player 1 04:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Drawen Loot For Start Turn"} 
 Player 1 04:20:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":79,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:20:51 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":79} 
 Player 1 04:20:51 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:20:51 $SHOW_STACK_EFFECT:  

 {"effectId":79} 
 Player 1 04:20:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":79} 
 Player 1 04:20:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":666,"_text":"Remove After Resolve StartTurnLoot 79  "}} 
 Player 1 04:20:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:20:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":79,"creatorCardId":311,"turnPlayerCardId":311,"stackEffectType":13}} 
 Player 1 04:20:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":667,"_text":"Response Remove After Resolve StartTurnLoot 79"},"childOfId":666} 
 Player 1 04:20:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":668,"_text":"Wait For Response From Player 2 "},"childOfId":666} 
 Player 1 04:20:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:20:54 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:20:54 $ACTION_MASSAGE_REMOVE:  

 {"id":668} 
 Player 1 04:20:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":669,"_text":"Wait For Response From Player 1 "},"childOfId":666} 
 Player 1 04:20:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:20:54 $ACTION_MASSAGE_REMOVE:  

 {"id":669} 
 Player 1 04:20:54 $ACTION_MASSAGE_REMOVE:  

 {"id":667} 
 Player 1 04:20:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":670,"_text":"Stack Was Emptied "}} 
 Player 1 04:20:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:20:54 $CLEAR_SE_VIS:  
 Player 1 04:21:18 $MOVE_CARD_END:  

 {"moveIndex":55,"cardId":236,"flipIfFlipped":true,"playerId":2} 
 Player 1 04:21:54 $NEXT_STACK_ID:  
 Player 1 04:21:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 1 04:21:54 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":80,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:21:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":80,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:21:54 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:21:54 $SHOW_STACK_EFFECT:  

 {"effectId":80} 
 Player 1 04:21:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":671,"_text":"Add ActivateItem 80 "}} 
 Player 1 04:21:57 $SHOW_DECISION:  

 {"startCardId":178,"endCardId":321} 
 Player 1 04:22:00 $USE_ITEM:  

 {"cardId":178} 
 Player 1 04:22:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":80,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":672,"_text":"Response Adding ActivateItem 80"},"childOfId":671} 
 Player 1 04:22:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":673,"_text":"Wait For Response From Player 1 "},"childOfId":671} 
 Player 1 04:22:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:00 $ACTION_MASSAGE_REMOVE:  

 {"id":673} 
 Player 1 04:22:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":674,"_text":"Wait For Response From Player 2 "},"childOfId":671} 
 Player 1 04:22:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:00 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:00 $ACTION_MASSAGE_REMOVE:  

 {"id":674} 
 Player 1 04:22:00 $ACTION_MASSAGE_REMOVE:  

 {"id":672} 
 Player 1 04:22:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":675,"_text":"Resolve ActivateItem 80 "}} 
 Player 1 04:22:00 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":80,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:00 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":178,"particleType":6} 
 Player 1 04:22:02 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":178,"particleType":6} 
 Player 1 04:22:02 $SET_MONEY:  

 {"playerId":2,"numOfCoins":5} 
 Player 1 04:22:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":37,"originStackId":-1},"isAfterActivation":true,"index":37} 
 Player 1 04:22:02 $SET_MONEY:  

 {"playerId":1,"numOfCoins":5} 
 Player 1 04:22:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":38,"originStackId":-1},"isAfterActivation":true,"index":38} 
 Player 1 04:22:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 has activated Jaw Bone"} 
 Player 1 04:22:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":178}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":39,"originStackId":-1},"isAfterActivation":true,"index":39} 
 Player 1 04:22:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":80,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:02 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":80} 
 Player 1 04:22:02 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:22:02 $SHOW_STACK_EFFECT:  

 {"effectId":80} 
 Player 1 04:22:05 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":80} 
 Player 1 04:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":676,"_text":"Remove After Resolve ActivateItem 80  "}} 
 Player 1 04:22:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:22:05 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":80,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":677,"_text":"Response Remove After Resolve ActivateItem 80"},"childOfId":676} 
 Player 1 04:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":678,"_text":"Wait For Response From Player 2 "},"childOfId":676} 
 Player 1 04:22:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:05 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:05 $ACTION_MASSAGE_REMOVE:  

 {"id":678} 
 Player 1 04:22:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":679,"_text":"Wait For Response From Player 1 "},"childOfId":676} 
 Player 1 04:22:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:06 $ACTION_MASSAGE_REMOVE:  

 {"id":679} 
 Player 1 04:22:06 $ACTION_MASSAGE_REMOVE:  

 {"id":677} 
 Player 1 04:22:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":680,"_text":"Stack Was Emptied "}} 
 Player 1 04:22:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:22:06 $CLEAR_SE_VIS:  
 Player 1 04:22:10 $NEXT_STACK_ID:  
 Player 1 04:22:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 1 Penny(6) "} 
 Player 1 04:22:10 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":81,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":11,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:22:10 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":81,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":11,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:22:10 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:22:10 $SHOW_STACK_EFFECT:  

 {"effectId":81} 
 Player 1 04:22:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":681,"_text":"Add PlayLootCardStackEffect 81 "}} 
 Player 1 04:22:13 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":11} 
 Player 1 04:22:13 $MOVE_CARD:  

 {"moveIndex":56,"cardId":11,"placeID":329,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:22:13 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":11} 
 Player 1 04:22:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 1 Penny(6): addMoney"} 
 Player 1 04:22:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":81,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":11,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":11,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:22:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":682,"_text":"Response Adding PlayLootCardStackEffect 81"},"childOfId":681} 
 Player 1 04:22:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":683,"_text":"Wait For Response From Player 1 "},"childOfId":681} 
 Player 1 04:22:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:13 $ACTION_MASSAGE_REMOVE:  

 {"id":683} 
 Player 1 04:22:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":684,"_text":"Wait For Response From Player 2 "},"childOfId":681} 
 Player 1 04:22:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:13 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:14 $ACTION_MASSAGE_REMOVE:  

 {"id":684} 
 Player 1 04:22:14 $ACTION_MASSAGE_REMOVE:  

 {"id":682} 
 Player 1 04:22:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":685,"_text":"Resolve PlayLootCardStackEffect 81 "}} 
 Player 1 04:22:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play 1 Penny(6): addMoney"} 
 Player 1 04:22:14 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":81,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":11,"lootPlayerId":1,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":1,"cardId":11,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:22:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays 1 Penny(6): addMoney"} 
 Player 1 04:22:14 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":11,"particleType":6} 
 Player 1 04:22:16 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":11,"particleType":6} 
 Player 1 04:22:16 $SET_MONEY:  

 {"playerId":1,"numOfCoins":6} 
 Player 1 04:22:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":40,"originStackId":-1},"isAfterActivation":true,"index":40} 
 Player 1 04:22:16 $REMOVE_FROM_PILE:  

 {"cardId":11} 
 Player 1 04:22:16 $MOVE_CARD:  

 {"moveIndex":57,"cardId":11,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:22:16 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":11} 
 Player 1 04:22:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays 1 Penny(6): addMoney"} 
 Player 1 04:22:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":81,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":11,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:22:16 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":81} 
 Player 1 04:22:16 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:22:16 $SHOW_STACK_EFFECT:  

 {"effectId":81} 
 Player 1 04:22:19 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":81} 
 Player 1 04:22:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":686,"_text":"Remove After Resolve PlayLootCardStackEffect 81  "}} 
 Player 1 04:22:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:22:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":81,"creatorCardId":311,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":11,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 1 04:22:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":687,"_text":"Response Remove After Resolve PlayLootCardStackEffect 81"},"childOfId":686} 
 Player 1 04:22:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":688,"_text":"Wait For Response From Player 2 "},"childOfId":686} 
 Player 1 04:22:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:19 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:19 $ACTION_MASSAGE_REMOVE:  

 {"id":688} 
 Player 1 04:22:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":689,"_text":"Wait For Response From Player 1 "},"childOfId":686} 
 Player 1 04:22:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:20 $ACTION_MASSAGE_REMOVE:  

 {"id":689} 
 Player 1 04:22:20 $ACTION_MASSAGE_REMOVE:  

 {"id":687} 
 Player 1 04:22:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":690,"_text":"Stack Was Emptied "}} 
 Player 1 04:22:20 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:22:20 $CLEAR_SE_VIS:  
 Player 1 04:22:24 $NEXT_STACK_ID:  
 Player 1 04:22:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Azazel"} 
 Player 1 04:22:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":82,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":311,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:22:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":82,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":311,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:22:24 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:22:24 $SHOW_STACK_EFFECT:  

 {"effectId":82} 
 Player 1 04:22:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":691,"_text":"Add ActivateItem 82 "}} 
 Player 1 04:22:29 $SHOW_DECISION:  

 {"startCardId":311,"endCardId":113,"flipEndCard":true} 
 Player 1 04:22:32 $USE_ITEM:  

 {"cardId":311} 
 Player 1 04:22:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":82,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":311,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":692,"_text":"Response Adding ActivateItem 82"},"childOfId":691} 
 Player 1 04:22:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":693,"_text":"Wait For Response From Player 1 "},"childOfId":691} 
 Player 1 04:22:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:32 $ACTION_MASSAGE_REMOVE:  

 {"id":693} 
 Player 1 04:22:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":694,"_text":"Wait For Response From Player 2 "},"childOfId":691} 
 Player 1 04:22:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:33 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:33 $ACTION_MASSAGE_REMOVE:  

 {"id":694} 
 Player 1 04:22:33 $ACTION_MASSAGE_REMOVE:  

 {"id":692} 
 Player 1 04:22:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":695,"_text":"Resolve ActivateItem 82 "}} 
 Player 1 04:22:33 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":82,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":311,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:33 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":311,"particleType":6} 
 Player 1 04:22:35 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":311,"particleType":6} 
 Player 1 04:22:35 $NEXT_STACK_ID:  
 Player 1 04:22:35 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":113} 
 Player 1 04:22:35 $MOVE_CARD:  

 {"moveIndex":58,"cardId":113,"placeID":329,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:22:35 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":113} 
 Player 1 04:22:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:35 $CLEAR_SE_VIS:  
 Player 1 04:22:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 is going to activate Azazel"} 
 Player 1 04:22:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:22:35 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":82,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":311,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:35 $REPLACE_STACK:  

 {"currentStack":[{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},{"entityId":82,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":311,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 1 04:22:35 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:22:35 $SHOW_STACK_EFFECT:  

 {"effectId":83} 
 Player 1 04:22:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 has activated Azazel"} 
 Player 1 04:22:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":311}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":41,"originStackId":-1},"isAfterActivation":true,"index":41} 
 Player 1 04:22:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":82,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":311,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:38 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":82} 
 Player 1 04:22:38 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:22:38 $SHOW_STACK_EFFECT:  

 {"effectId":82} 
 Player 1 04:22:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":82} 
 Player 1 04:22:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":696,"_text":"Remove After Resolve ActivateItem 82  "}} 
 Player 1 04:22:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple "} 
 Player 1 04:22:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":82,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":311,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:22:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":697,"_text":"Response Remove After Resolve ActivateItem 82"},"childOfId":696} 
 Player 1 04:22:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":698,"_text":"Wait For Response From Player 1 "},"childOfId":696} 
 Player 1 04:22:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:41 $ACTION_MASSAGE_REMOVE:  

 {"id":698} 
 Player 1 04:22:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":699,"_text":"Wait For Response From Player 2 "},"childOfId":696} 
 Player 1 04:22:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:41 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:42 $ACTION_MASSAGE_REMOVE:  

 {"id":699} 
 Player 1 04:22:42 $ACTION_MASSAGE_REMOVE:  

 {"id":697} 
 Player 1 04:22:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":700,"_text":"Resolve PlayLootCardStackEffect 83 "}} 
 Player 1 04:22:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple "} 
 Player 1 04:22:42 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:22:42 $NEXT_STACK_ID:  
 Player 1 04:22:42 $NEXT_STACK_ID:  
 Player 1 04:22:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 Is About To Roll A Dice"} 
 Player 1 04:22:42 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":85,"creatorCardId":311,"stackEffectToLock":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 1 04:22:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":85,"creatorCardId":311,"stackEffectToLock":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 1 04:22:42 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:22:42 $SHOW_STACK_EFFECT:  

 {"effectId":85} 
 Player 1 04:22:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":701,"_text":"Add RollDiceStackEffect 85 "}} 
 Player 1 04:22:45 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 04:22:46 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":2} 
 Player 1 04:22:46 $UPDATE_STACK_VIS:  

 {"stackId":85,"text":"player 1 rolled 2"} 
 Player 1 04:22:46 $SHOW_DICE_ROLL:  

 {"stackId":85} 
 Player 1 04:22:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 Rolled 2"} 
 Player 1 04:22:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:49 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":85,"creatorCardId":311,"stackEffectToLock":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 1 04:22:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":702,"_text":"Response Adding RollDiceStackEffect 85"},"childOfId":701} 
 Player 1 04:22:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":703,"_text":"Wait For Response From Player 1 "},"childOfId":701} 
 Player 1 04:22:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:50 $ACTION_MASSAGE_REMOVE:  

 {"id":703} 
 Player 1 04:22:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":704,"_text":"Wait For Response From Player 2 "},"childOfId":701} 
 Player 1 04:22:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:50 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:50 $ACTION_MASSAGE_REMOVE:  

 {"id":704} 
 Player 1 04:22:50 $ACTION_MASSAGE_REMOVE:  

 {"id":702} 
 Player 1 04:22:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":705,"_text":"Resolve RollDiceStackEffect 85 "}} 
 Player 1 04:22:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple  \n2:Player 1 Rolled 2"} 
 Player 1 04:22:50 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":85,"creatorCardId":311,"stackEffectToLock":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 1 04:22:50 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":42,"originStackId":85},"isAfterActivation":true,"index":42} 
 Player 1 04:22:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":85,"creatorCardId":311,"stackEffectToLock":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 1 04:22:50 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":85} 
 Player 1 04:22:50 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:22:50 $SHOW_STACK_EFFECT:  

 {"effectId":85} 
 Player 1 04:22:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":85} 
 Player 1 04:22:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":706,"_text":"Remove After Resolve RollDiceStackEffect 85  "}} 
 Player 1 04:22:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Pill Purple "} 
 Player 1 04:22:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":85,"creatorCardId":311,"stackEffectToLock":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8},"hasLockingStackEffect":false,"numberRolled":2,"stackEffectType":11}} 
 Player 1 04:22:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":707,"_text":"Response Remove After Resolve RollDiceStackEffect 85"},"childOfId":706} 
 Player 1 04:22:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":708,"_text":"Wait For Response From Player 2 "},"childOfId":706} 
 Player 1 04:22:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:53 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:53 $ACTION_MASSAGE_REMOVE:  

 {"id":708} 
 Player 1 04:22:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":709,"_text":"Wait For Response From Player 1 "},"childOfId":706} 
 Player 1 04:22:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:53 $ACTION_MASSAGE_REMOVE:  

 {"id":709} 
 Player 1 04:22:53 $ACTION_MASSAGE_REMOVE:  

 {"id":707} 
 Player 1 04:22:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":710,"_text":"Resolve PlayLootCardStackEffect 83 "}} 
 Player 1 04:22:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Plays Pill Purple: RechargeItems"} 
 Player 1 04:22:53 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":113,"particleType":6} 
 Player 1 04:22:55 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":113,"particleType":6} 
 Player 1 04:22:55 $RECHARGE_ITEM:  

 {"cardId":312} 
 Player 1 04:22:55 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":312} 
 Player 1 04:22:55 $RECHARGE_ITEM:  

 {"cardId":178} 
 Player 1 04:22:55 $PLAYER_RECHARGE_ITEM:  

 {"playerId":1,"cardId":178} 
 Player 1 04:22:55 $REMOVE_FROM_PILE:  

 {"cardId":113} 
 Player 1 04:22:55 $MOVE_CARD:  

 {"moveIndex":59,"cardId":113,"placeID":330,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 
 Player 1 04:22:56 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":113} 
 Player 1 04:22:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:22:56 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":83} 
 Player 1 04:22:56 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:22:56 $SHOW_STACK_EFFECT:  

 {"effectId":83} 
 Player 1 04:22:59 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":83} 
 Player 1 04:22:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":711,"_text":"Remove After Resolve PlayLootCardStackEffect 83  "}} 
 Player 1 04:22:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:22:59 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":83,"creatorCardId":311,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"lootToPlayCardId":113,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 1 04:22:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":712,"_text":"Response Remove After Resolve PlayLootCardStackEffect 83"},"childOfId":711} 
 Player 1 04:22:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":713,"_text":"Wait For Response From Player 1 "},"childOfId":711} 
 Player 1 04:22:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:22:59 $ACTION_MASSAGE_REMOVE:  

 {"id":713} 
 Player 1 04:22:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":714,"_text":"Wait For Response From Player 2 "},"childOfId":711} 
 Player 1 04:22:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:22:59 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:22:59 $ACTION_MASSAGE_REMOVE:  

 {"id":714} 
 Player 1 04:22:59 $ACTION_MASSAGE_REMOVE:  

 {"id":712} 
 Player 1 04:22:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":715,"_text":"Stack Was Emptied "}} 
 Player 1 04:22:59 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:22:59 $CLEAR_SE_VIS:  
 Player 1 04:23:01 $NEXT_STACK_ID:  
 Player 1 04:23:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is going to activate Jaw Bone"} 
 Player 1 04:23:01 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":86,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:23:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":86,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 1 04:23:01 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:23:01 $SHOW_STACK_EFFECT:  

 {"effectId":86} 
 Player 1 04:23:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":716,"_text":"Add ActivateItem 86 "}} 
 Player 1 04:23:04 $SHOW_DECISION:  

 {"startCardId":178,"endCardId":321} 
 Player 1 04:23:07 $USE_ITEM:  

 {"cardId":178} 
 Player 1 04:23:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":86,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:23:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":717,"_text":"Response Adding ActivateItem 86"},"childOfId":716} 
 Player 1 04:23:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":718,"_text":"Wait For Response From Player 1 "},"childOfId":716} 
 Player 1 04:23:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:07 $ACTION_MASSAGE_REMOVE:  

 {"id":718} 
 Player 1 04:23:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":719,"_text":"Wait For Response From Player 2 "},"childOfId":716} 
 Player 1 04:23:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:23:07 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:23:07 $ACTION_MASSAGE_REMOVE:  

 {"id":719} 
 Player 1 04:23:07 $ACTION_MASSAGE_REMOVE:  

 {"id":717} 
 Player 1 04:23:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":720,"_text":"Resolve ActivateItem 86 "}} 
 Player 1 04:23:07 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":86,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:23:07 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":178,"particleType":6} 
 Player 1 04:23:09 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":178,"particleType":6} 
 Player 1 04:23:09 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Player 1 04:23:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-3}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":43,"originStackId":-1},"isAfterActivation":true,"index":43} 
 Player 1 04:23:09 $SET_MONEY:  

 {"playerId":1,"numOfCoins":9} 
 Player 1 04:23:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":44,"originStackId":-1},"isAfterActivation":true,"index":44} 
 Player 1 04:23:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 has activated Jaw Bone"} 
 Player 1 04:23:10 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":178}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":45,"originStackId":-1},"isAfterActivation":true,"index":45} 
 Player 1 04:23:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":86,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:23:10 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":86} 
 Player 1 04:23:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:23:10 $SHOW_STACK_EFFECT:  

 {"effectId":86} 
 Player 1 04:23:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":86} 
 Player 1 04:23:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":721,"_text":"Remove After Resolve ActivateItem 86  "}} 
 Player 1 04:23:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:23:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":86,"creatorCardId":311,"hasLockingStackEffect":false,"itemToPlayCardId":178,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 1 04:23:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":722,"_text":"Response Remove After Resolve ActivateItem 86"},"childOfId":721} 
 Player 1 04:23:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":723,"_text":"Wait For Response From Player 2 "},"childOfId":721} 
 Player 1 04:23:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:23:13 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:23:13 $ACTION_MASSAGE_REMOVE:  

 {"id":723} 
 Player 1 04:23:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":724,"_text":"Wait For Response From Player 1 "},"childOfId":721} 
 Player 1 04:23:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:13 $ACTION_MASSAGE_REMOVE:  

 {"id":724} 
 Player 1 04:23:13 $ACTION_MASSAGE_REMOVE:  

 {"id":722} 
 Player 1 04:23:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":725,"_text":"Stack Was Emptied "}} 
 Player 1 04:23:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:23:13 $CLEAR_SE_VIS:  
 Player 1 04:23:18 $NEXT_STACK_ID:  
 Player 1 04:23:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 declared attack on Monster Deck"} 
 Player 1 04:23:18 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":87,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:23:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":87,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:23:18 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:23:18 $SHOW_STACK_EFFECT:  

 {"effectId":87} 
 Player 1 04:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":726,"_text":"Add DeclareAttack 87 "}} 
 Player 1 04:23:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":87,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":727,"_text":"Response Adding DeclareAttack 87"},"childOfId":726} 
 Player 1 04:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":728,"_text":"Wait For Response From Player 1 "},"childOfId":726} 
 Player 1 04:23:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:21 $ACTION_MASSAGE_REMOVE:  

 {"id":728} 
 Player 1 04:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":729,"_text":"Wait For Response From Player 2 "},"childOfId":726} 
 Player 1 04:23:21 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:23:21 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:23:21 $ACTION_MASSAGE_REMOVE:  

 {"id":729} 
 Player 1 04:23:21 $ACTION_MASSAGE_REMOVE:  

 {"id":727} 
 Player 1 04:23:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":730,"_text":"Resolve DeclareAttack 87 "}} 
 Player 1 04:23:21 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":87,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":222,"stackEffectType":4}} 
 Player 1 04:23:21 $DRAW_CARD:  

 {"deckType":2} 
 Player 1 04:23:21 $SHOW_CARD_PREVIEW:  

 {"cardToShowId":259,"playerId":1} 
 Player 1 04:23:28 $FLIP_CARD:  

 {"cardId":259} 
 Player 1 04:23:28 $REGISTER_PASSIVE_ITEM:  

 {"cardId":259} 
 Player 1 04:23:28 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":259} 
 Player 1 04:23:28 $NEW_MONSTER_ON_PLACE:  

 {"cardId":259,"monsterPlaceId":1} 
 Player 1 04:23:28 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":259,"particleType":5} 
 Player 1 04:23:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Has Entered Battle with Fistula"} 
 Player 1 04:23:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":46,"originStackId":87},"isAfterActivation":true,"index":46} 
 Player 1 04:23:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":87,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":259,"stackEffectType":4}} 
 Player 1 04:23:28 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":87} 
 Player 1 04:23:28 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:23:28 $SHOW_STACK_EFFECT:  

 {"effectId":87} 
 Player 1 04:23:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":87} 
 Player 1 04:23:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":731,"_text":"Remove After Resolve DeclareAttack 87  "}} 
 Player 1 04:23:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:23:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":87,"creatorCardId":311,"attackingPlayerCardId":311,"idOfCardBeingAttacked":259,"stackEffectType":4}} 
 Player 1 04:23:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":732,"_text":"Response Remove After Resolve DeclareAttack 87"},"childOfId":731} 
 Player 1 04:23:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":733,"_text":"Wait For Response From Player 2 "},"childOfId":731} 
 Player 1 04:23:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:23:31 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:23:31 $ACTION_MASSAGE_REMOVE:  

 {"id":733} 
 Player 1 04:23:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":734,"_text":"Wait For Response From Player 1 "},"childOfId":731} 
 Player 1 04:23:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:31 $ACTION_MASSAGE_REMOVE:  

 {"id":734} 
 Player 1 04:23:31 $ACTION_MASSAGE_REMOVE:  

 {"id":732} 
 Player 1 04:23:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":735,"_text":"Stack Was Emptied "}} 
 Player 1 04:23:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 04:23:31 $CLEAR_SE_VIS:  
 Player 1 04:23:40 $NEXT_STACK_ID:  
 Player 1 04:23:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Fistula<Monster>"} 
 Player 1 04:23:40 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:23:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:23:40 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:23:40 $SHOW_STACK_EFFECT:  

 {"effectId":88} 
 Player 1 04:23:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":736,"_text":"Add AttackRoll 88 "}} 
 Player 1 04:23:43 $ROLL_DICE:  

 {"playerId":1} 
 Player 1 04:23:45 $ROLL_DICE_ENDED:  

 {"playerId":1,"numberRolled":4} 
 Player 1 04:23:45 $UPDATE_STACK_VIS:  

 {"stackId":88,"text":"player rolled 4 vs Fistula<Monster>"} 
 Player 1 04:23:45 $SHOW_DICE_ROLL:  

 {"stackId":88} 
 Player 1 04:23:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Fistula<Monster>"} 
 Player 1 04:23:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:23:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":737,"_text":"Response Adding AttackRoll 88"},"childOfId":736} 
 Player 1 04:23:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":738,"_text":"Wait For Response From Player 1 "},"childOfId":736} 
 Player 1 04:23:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:48 $ACTION_MASSAGE_REMOVE:  

 {"id":738} 
 Player 1 04:23:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":739,"_text":"Wait For Response From Player 2 "},"childOfId":736} 
 Player 1 04:23:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:23:48 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:23:49 $ACTION_MASSAGE_REMOVE:  

 {"id":739} 
 Player 1 04:23:49 $ACTION_MASSAGE_REMOVE:  

 {"id":737} 
 Player 1 04:23:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":740,"_text":"Resolve AttackRoll 88 "}} 
 Player 1 04:23:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 rolled 4 vs Fistula<Monster>"} 
 Player 1 04:23:49 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:23:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":741,"_text":"Added 0 to original roll"}} 
 Player 1 04:23:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Rolled 4 Against Fistula<Monster> 2"} 
 Player 1 04:23:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Roll Hit"} 
 Player 1 04:23:49 $NEXT_STACK_ID:  
 Player 1 04:23:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:49 $CLEAR_SE_VIS:  
 Player 1 04:23:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit"} 
 Player 1 04:23:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 04:23:49 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:23:49 $REPLACE_STACK:  

 {"currentStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}]} 
 Player 1 04:23:49 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:23:49 $SHOW_STACK_EFFECT:  

 {"effectId":89} 
 Player 1 04:23:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":47,"originStackId":88},"isAfterActivation":true,"index":47} 
 Player 1 04:23:52 $NEXT_STACK_ID:  
 Player 1 04:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit"} 
 Player 1 04:23:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor Effect DealDamage<DealDamage>"} 
 Player 1 04:23:52 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:23:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:23:52 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:23:52 $SHOW_STACK_EFFECT:  

 {"effectId":90} 
 Player 1 04:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":742,"_text":"Add ActivatePassiveEffect 90 "}} 
 Player 1 04:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 
 Player 1 04:23:55 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":743,"_text":"Response Adding ActivatePassiveEffect 90"},"childOfId":742} 
 Player 1 04:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":744,"_text":"Wait For Response From Player 1 "},"childOfId":742} 
 Player 1 04:23:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":744} 
 Player 1 04:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":745,"_text":"Wait For Response From Player 2 "},"childOfId":742} 
 Player 1 04:23:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:23:55 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":745} 
 Player 1 04:23:55 $ACTION_MASSAGE_REMOVE:  

 {"id":743} 
 Player 1 04:23:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":746,"_text":"Resolve ActivatePassiveEffect 90 "}} 
 Player 1 04:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 
 Player 1 04:23:55 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:23:55 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":247,"particleType":6} 
 Player 1 04:23:57 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":247,"particleType":6} 
 Player 1 04:23:57 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":247} 
 Player 1 04:23:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":48,"originStackId":-1},"isAfterActivation":true,"index":48} 
 Player 1 04:23:57 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":247} 
 Player 1 04:23:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":49,"originStackId":-1},"isAfterActivation":true,"index":49} 
 Player 1 04:23:57 $NEXT_STACK_ID:  
 Player 1 04:23:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage>"} 
 Player 1 04:23:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 
 Player 1 04:23:57 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:23:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:23:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:23:57 $SHOW_STACK_EFFECT:  

 {"effectId":91} 
 Player 1 04:24:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":747,"_text":"Add ActivatePassiveEffect 91 "}} 
 Player 1 04:24:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 
 Player 1 04:24:00 $PUT_ON_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 
 Player 1 04:24:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 
 Player 1 04:24:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":748,"_text":"Response Adding ActivatePassiveEffect 91"},"childOfId":747} 
 Player 1 04:24:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":749,"_text":"Wait For Response From Player 2 "},"childOfId":747} 
 Player 1 04:24:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:24:00 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:24:00 $ACTION_MASSAGE_REMOVE:  

 {"id":749} 
 Player 1 04:24:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":750,"_text":"Wait For Response From Player 1 "},"childOfId":747} 
 Player 1 04:24:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:24:00 $ACTION_MASSAGE_REMOVE:  

 {"id":750} 
 Player 1 04:24:00 $ACTION_MASSAGE_REMOVE:  

 {"id":748} 
 Player 1 04:24:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":751,"_text":"Resolve ActivatePassiveEffect 91 "}} 
 Player 1 04:24:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny "} 
 Player 1 04:24:01 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":47,"originStackId":88},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 04:24:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 Roll Hit \n3:Activate Cursed Tumor effect DealDamage<DealDamage> \n4:Activate Swallowed Penny "} 
 Player 1 04:24:03 $CLEAR_SE_VIS:  
 Player 1 04:24:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Activate Swallowed Penny "} 
 Player 1 04:24:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 04:24:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:24:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:03 $REPLACE_STACK:  

 {"currentStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"effectCollectedData":null,"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 04:24:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:24:03 $SHOW_STACK_EFFECT:  

 {"effectId":91} 
 Player 1 04:24:06 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":91} 
 Player 1 04:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":752,"_text":"Remove After Resolve ActivatePassiveEffect 91  "}} 
 Player 1 04:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor "} 
 Player 1 04:24:06 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":91,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":49,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":753,"_text":"Response Remove After Resolve ActivatePassiveEffect 91"},"childOfId":752} 
 Player 1 04:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":754,"_text":"Wait For Response From Player 1 "},"childOfId":752} 
 Player 1 04:24:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:24:06 $ACTION_MASSAGE_REMOVE:  

 {"id":754} 
 Player 1 04:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":755,"_text":"Wait For Response From Player 2 "},"childOfId":752} 
 Player 1 04:24:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:24:06 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:24:06 $ACTION_MASSAGE_REMOVE:  

 {"id":755} 
 Player 1 04:24:06 $ACTION_MASSAGE_REMOVE:  

 {"id":753} 
 Player 1 04:24:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":756,"_text":"Resolve ActivatePassiveEffect 90 "}} 
 Player 1 04:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor "} 
 Player 1 04:24:06 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:06 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":247,"particleType":6} 
 Player 1 04:24:08 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":247,"particleType":6} 
 Player 1 04:24:08 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":247} 
 Player 1 04:24:08 $NEXT_STACK_ID:  
 Player 1 04:24:08 $CLEAR_SE_VIS:  
 Player 1 04:24:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die"} 
 Player 1 04:24:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 04:24:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:24:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":47,"originStackId":88},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247}} 
 Player 1 04:24:08 $REPLACE_STACK:  

 {"currentStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":47,"originStackId":88},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247}]} 
 Player 1 04:24:08 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247}} 
 Player 1 04:24:08 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:24:08 $SHOW_STACK_EFFECT:  

 {"effectId":92} 
 Player 1 04:24:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:24:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":50,"originStackId":-1},"isAfterActivation":true,"index":50} 
 Player 1 04:24:11 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":247} 
 Player 1 04:24:11 $NEXT_STACK_ID:  
 Player 1 04:24:11 $CLEAR_SE_VIS:  
 Player 1 04:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 
 Player 1 04:24:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 04:24:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:24:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":47,"originStackId":88},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247}} 
 Player 1 04:24:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":93,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 
 Player 1 04:24:11 $REPLACE_STACK:  

 {"currentStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":47,"originStackId":88},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247},{"entityId":93,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}]} 
 Player 1 04:24:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":93,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 
 Player 1 04:24:11 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:24:11 $SHOW_STACK_EFFECT:  

 {"effectId":93} 
 Player 1 04:24:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:24:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":247}],"result":null,"preventMethod":false,"methodScopeId":321,"scopeIsPlayer":true,"index":51,"originStackId":-1},"isAfterActivation":true,"index":51} 
 Player 1 04:24:14 $NEXT_STACK_ID:  
 Player 1 04:24:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 
 Player 1 04:24:14 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:24:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 04:24:14 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 1 04:24:14 $SHOW_STACK_EFFECT:  

 {"effectId":94} 
 Player 1 04:24:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":757,"_text":"Add ActivatePassiveEffect 94 "}} 
 Player 1 04:24:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 
 Player 1 04:24:17 $PUT_ON_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":2,"originPlayerId":1} 
 Player 1 04:24:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny Effect AddMoney<AddMoney>"} 
 Player 1 04:24:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":758,"_text":"Response Adding ActivatePassiveEffect 94"},"childOfId":757} 
 Player 1 04:24:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":759,"_text":"Wait For Response From Player 1 "},"childOfId":757} 
 Player 1 04:24:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:24:17 $ACTION_MASSAGE_REMOVE:  

 {"id":759} 
 Player 1 04:24:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":760,"_text":"Wait For Response From Player 2 "},"childOfId":757} 
 Player 1 04:24:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:24:18 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:24:18 $ACTION_MASSAGE_REMOVE:  

 {"id":760} 
 Player 1 04:24:18 $ACTION_MASSAGE_REMOVE:  

 {"id":758} 
 Player 1 04:24:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":761,"_text":"Resolve ActivatePassiveEffect 94 "}} 
 Player 1 04:24:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 
 Player 1 04:24:18 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":47,"originStackId":88},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247},{"entityId":93,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"effectCollectedData":{"effectTargets":[321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":321,"effectCardPlayer":321},"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":123,"effctType":0},"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 04:24:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die \n6:Activate Swallowed Penny "} 
 Player 1 04:24:20 $CLEAR_SE_VIS:  
 Player 1 04:24:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 1 04:24:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259}} 
 Player 1 04:24:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247}} 
 Player 1 04:24:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":93,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}} 
 Player 1 04:24:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:20 $REPLACE_STACK:  

 {"currentStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247},{"entityId":93,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247},{"effectCollectedData":null,"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 04:24:20 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 1 04:24:20 $SHOW_STACK_EFFECT:  

 {"effectId":94} 
 Player 1 04:24:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":94} 
 Player 1 04:24:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":762,"_text":"Remove After Resolve ActivatePassiveEffect 94  "}} 
 Player 1 04:24:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 
 Player 1 04:24:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":94,"creatorCardId":321,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":123,"isAfterActivation":true,"index":51,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 04:24:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":763,"_text":"Response Remove After Resolve ActivatePassiveEffect 94"},"childOfId":762} 
 Player 1 04:24:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":764,"_text":"Wait For Response From Player 2 "},"childOfId":762} 
 Player 1 04:24:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 04:24:23 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 04:24:23 $ACTION_MASSAGE_REMOVE:  

 {"id":764} 
 Player 1 04:24:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":765,"_text":"Wait For Response From Player 1 "},"childOfId":762} 
 Player 1 04:24:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 04:24:23 $SHOW_REACTIONS:  

 {"playerId":1,"cardsIds":[312]} 
 Player 1 04:25:53 $HIDE_REACTIONS:  

 {"playerId":1,"cardsIds":[312]} 
 Player 1 04:25:53 $ACTION_MASSAGE_REMOVE:  

 {"id":765} 
 Player 1 04:25:53 $ACTION_MASSAGE_REMOVE:  

 {"id":763} 
 Player 1 04:25:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":766,"_text":"Resolve PlayerDeath 93 "}} 
 Player 1 04:25:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Azazel is going to hurt Fistula \n2:Player 1 is rolling against Fistula<Monster> \n3:Activate Cursed Tumor  \n4:Player 1 Is About To Die \n5:Player 2 Is About To Die"} 
 Player 1 04:25:53 $DO_STACK_EFFECT:  

 {"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":89,"creatorCardId":311,"entityToDoDamageCardId":311,"entityToTakeDamageCardId":259,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":88,"creatorCardId":311,"numberRolled":4,"rollingPlayerCardId":311,"stackEffectType":2,"attackedMonsterCardId":259},{"effectCollectedData":{"effectTargets":[311,321],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":247,"effectCardPlayer":247},"entityId":90,"creatorCardId":311,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":247,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":1,"cardId":247,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":4}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}},{"type":2,"number":{"type":2,"number":{"type":2,"number":2}}}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":null},"isAfterActivation":true,"index":47,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":92,"creatorCardId":311,"playerToDieCardId":311,"stackEffectType":15,"killerId":247},{"entityId":93,"creatorCardId":321,"playerToDieCardId":321,"stackEffectType":15,"killerId":247}]}