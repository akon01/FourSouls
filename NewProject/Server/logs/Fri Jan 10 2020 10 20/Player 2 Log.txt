Start Log 
 Player 2 10:20:34 $MOVE_TO_TABLE:  
 Player 2 10:20:42 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 10:20:42 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":275,"itemCardId":276} 
 Player 2 10:20:42 $CHOOSE_FOR_EDEN:  

 {"playerId":2,"originPlayerId":2} 
 Player 2 10:20:42 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[181,169,200,167,151,162,177,153,173,160,179,159,158,150,191,152,174,156,147,189,163,192,187,171,161,195,186,201,146,176,194,198,184,165,202,164,190,154,185,166,170,157,155,188,180,182,196,193,197,172,148,175,199,149,178,183,168]} 
 Player 2 10:20:47 $EDEN_CHOSEN:  

 {"cardId":200,"playerId":2} 
 Player 2 10:20:47 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[181,169,167,151,162,177,153,173,160,179,159,158,150,191,152,174,156,147,189,163,192,187,171,161,195,186,201,146,176,194,198,184,165,202,164,190,154,185,166,170,157,155,188,180,182,196,193,197,172,148,175,199,149,178,183,168]} 
 Player 2 10:20:47 $FLIP_CARD:  

 {"cardId":200} 
 Player 2 10:20:47 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":200}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 10:20:47 $REGISTER_PASSIVE_ITEM:  

 {"cardId":200} 
 Player 2 10:20:47 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":265,"itemCardId":200} 
 Player 2 10:20:47 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[64,122,72,142,143,126,78,93,63,57,107,60,43,79,141,31,41,70,115,13,117,46,77,51,97,39,104,124,50,28,106,139,53,99,81,66,121,118,22,65,96,68,131,69,95,134,128,19,112,91,105,17,14,120,125,38,80,8,48,133,56,9,71,27,84,10,55,21,86,89,109,30,33,85,110,36,61,49,119,127,47,32,11,75,20,74,76,7,62,52,54,37,94,100,116,59,123,67,130,34,135,45,140,132,88,111,108,90,40,26,114,136,73,83,82,137,113,129,92,12,23,29,101,138,16,103,42,35,18,25,15,87,98,102,44,24,58]} 
 Player 2 10:20:47 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[240,213,257,206,246,236,255,223,248,216,254,244,208,215,247,230,220,258,227,219,205,237,210,234,209,242,218,221,251,231,222,238,211,224,225,256,239,250,229,207,233,226,243,245,249,252,212,253,228,217,241,232,214,235]} 
 Player 2 10:20:47 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[186,160,166,165,174,193,202,180,152,179,187,159,185,199,162,191,147,155,176,164,151,157,168,177,183,178,184,169,161,189,170,181,197,167,154,172,173,201,148,190,194,158,198,150,188,156,171,153,149,195,175,196,146,163,182,192]} 
 Player 2 10:20:47 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 10:20:47 $FLIP_CARD:  

 {"cardId":192} 
 Player 2 10:20:47 $ADD_STORE_CARD:  

 {"cardId":192} 
 Player 2 10:20:47 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 10:20:47 $FLIP_CARD:  

 {"cardId":182} 
 Player 2 10:20:47 $ADD_STORE_CARD:  

 {"cardId":182} 
 Player 2 10:20:47 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 10:20:47 $FLIP_CARD:  

 {"cardId":235} 
 Player 2 10:20:47 $REGISTER_PASSIVE_ITEM:  

 {"cardId":235} 
 Player 2 10:20:47 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":235} 
 Player 2 10:20:47 $NEW_MONSTER_ON_PLACE:  

 {"cardId":235,"monsterPlaceId":1} 
 Player 2 10:20:47 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 10:20:47 $FLIP_CARD:  

 {"cardId":214} 
 Player 2 10:20:47 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":214} 
 Player 2 10:20:47 $NEW_MONSTER_ON_PLACE:  

 {"cardId":214,"monsterPlaceId":2} 
 Player 2 10:20:47 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 10:20:47 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 10:20:47 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 10:20:47 $MOVE_CARD:  

 {"moveIndex":1,"cardId":58,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 10:20:48 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":58} 
 Player 2 10:20:48 $FLIP_CARD:  

 {"cardId":58} 
 Player 2 10:20:48 $FLIP_CARD:  

 {"cardId":58} 
 Player 2 10:20:48 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":58} 
 Player 2 10:20:48 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 10:20:48 $MOVE_CARD:  

 {"moveIndex":2,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 10:20:48 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":24} 
 Player 2 10:20:48 $FLIP_CARD:  

 {"cardId":24} 
 Player 2 10:20:48 $FLIP_CARD:  

 {"cardId":24} 
 Player 2 10:20:48 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":24} 
 Player 2 10:20:48 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 10:20:48 $MOVE_CARD:  

 {"moveIndex":3,"cardId":44,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 10:20:49 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":44} 
 Player 2 10:20:49 $FLIP_CARD:  

 {"cardId":44} 
 Player 2 10:20:49 $FLIP_CARD:  

 {"cardId":44} 
 Player 2 10:20:49 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":44} 
 Player 2 10:20:49 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 10:20:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 10:20:49 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 10:20:49 $MOVE_CARD:  

 {"moveIndex":4,"cardId":102,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 10:20:49 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":102} 
 Player 2 10:20:49 $FLIP_CARD:  

 {"cardId":102} 
 Player 2 10:20:49 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":102} 
 Player 2 10:20:49 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 10:20:49 $MOVE_CARD:  

 {"moveIndex":5,"cardId":98,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 10:20:50 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":98} 
 Player 2 10:20:50 $FLIP_CARD:  

 {"cardId":98} 
 Player 2 10:20:50 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":98} 
 Player 2 10:20:50 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 10:20:50 $MOVE_CARD:  

 {"moveIndex":6,"cardId":87,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 10:20:50 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":87} 
 Player 2 10:20:50 $FLIP_CARD:  

 {"cardId":87} 
 Player 2 10:20:50 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":87} 
 Player 2 10:20:50 $GAME_HAS_STARTED:  
 Player 2 10:20:50 $SET_TURN:  

 {"playerId":2} 
 Player 2 10:20:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:20:51 $NEXT_STACK_ID:  
 Player 2 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 10:20:51 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":265,"turnPlayerCardId":265,"stackEffectType":13}} 
 Player 2 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 10:20:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":265,"turnPlayerCardId":265,"stackEffectType":13}} 
 Player 2 10:20:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 10:20:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:20:51 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 10:20:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 10:20:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":265,"turnPlayerCardId":265,"stackEffectType":13}} 
 Player 2 10:20:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 10:20:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 10:20:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:20:51 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 10:20:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 10:20:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:20:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:20:51 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 10:20:51 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 10:20:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 10:20:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 10:20:51 $MOVE_CARD:  

 {"moveIndex":7,"cardId":15,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 10:20:52 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":15} 
 Player 2 10:20:52 $FLIP_CARD:  

 {"cardId":15} 
 Player 2 10:20:52 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":15} 
 Player 2 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 10:20:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":265,"turnPlayerCardId":265,"stackEffectType":13}} 
 Player 2 10:20:52 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:20:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":265,"turnPlayerCardId":265,"stackEffectType":13}} 
 Player 2 10:20:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:20:52 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":265,"turnPlayerCardId":265,"stackEffectType":13}} 
 Player 2 10:20:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 10:20:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 10:20:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:20:52 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:20:52 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 10:20:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 10:20:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:20:52 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 10:20:52 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 10:20:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 10:20:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:20:52 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 10:20:53 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 10:20:53 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 10:20:53 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 10:20:53 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 10:20:53 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 10:20:53 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 10:20:53 $UPDATE_ACTIONS:  
 Player 2 10:20:54 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 10:20:55 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 10:21:03 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":184,"flipIfFlipped":true,"playerId":1} 
 Player 2 10:21:03 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":184,"flipIfFlipped":true,"playerId":1} 
 Player 2 10:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:04 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly "} 
 Player 2 10:21:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:21:11 $MOVE_CARD:  

 {"moveIndex":10,"cardId":131,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 10:21:12 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":131} 
 Player 2 10:21:19 $MOVE_CARD:  

 {"moveIndex":11,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 10:21:20 $MOVE_CARD:  

 {"moveIndex":12,"cardId":194,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 10:21:20 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":194,"isReward":true} 
 Player 2 10:21:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 10:21:23 $NEXT_STACK_ID:  
 Player 2 10:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 10:21:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 10:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 10:21:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 10:21:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 
 Player 2 10:21:24 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":131} 
 Player 2 10:21:24 $MOVE_CARD:  

 {"moveIndex":13,"cardId":131,"placeID":277,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 10:21:24 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":131} 
 Player 2 10:21:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 
 Player 2 10:21:39 $SHOW_DECISION:  

 {"startCardId":131,"endCardId":184} 
 Player 2 10:21:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:21:42 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 10:21:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 
 Player 2 10:21:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:21:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 
 Player 2 10:21:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 10:21:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:21:42 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 10:21:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 10:21:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:21:42 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:21:42 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 10:21:42 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 10:21:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 2 10:21:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 
 Player 2 10:21:42 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":131,"particleType":6} 
 Player 2 10:21:44 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":131,"particleType":6} 
 Player 2 10:21:44 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":194}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 10:21:44 $MOVE_CARD:  

 {"moveIndex":14,"cardId":194,"placeID":280,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 10:21:45 $MOVE_CARD_TO_PILE:  

 {"type":5,"cardId":194} 
 Player 2 10:21:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 10:21:45 $NEXT_STACK_ID:  
 Player 2 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects"} 
 Player 2 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:45 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 10:21:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Add ActivatePassiveEffect 4 "}} 
 Player 2 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:45 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 10:21:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 10:21:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":25} 
 Player 2 10:21:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 10:21:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:21:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:21:45 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 10:21:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 10:21:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:21:52 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 10:21:52 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 10:21:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Resolve ActivatePassiveEffect 4 "}} 
 Player 2 10:21:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:52 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 2 10:21:53 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 10:21:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 10:21:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 10:21:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 2 10:21:53 $REPLACE_STACK:  

 {"currentStack":[{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 10:21:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 10:21:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 
 Player 2 10:21:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 10:21:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":null},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 10:21:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":30} 
 Player 2 10:21:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 10:21:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:21:56 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 10:22:02 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 10:22:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 10:22:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:22:02 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:22:02 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 10:22:02 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 10:22:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Resolve PlayLootCardStackEffect 3 "}} 
 Player 2 10:22:02 $REMOVE_FROM_PASSIVE_MANAGER:  

 {"cardId":184} 
 Player 2 10:22:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 10:22:02 $MOVE_CARD:  

 {"moveIndex":15,"cardId":184,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 10:22:03 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":184,"isReward":true} 
 Player 2 10:22:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 10:22:03 $REMOVE_FROM_PILE:  

 {"cardId":131} 
 Player 2 10:22:03 $MOVE_CARD:  

 {"moveIndex":16,"cardId":131,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 10:22:03 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":131} 
 Player 2 10:22:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 2 10:22:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:22:03 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 10:22:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:22:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:22:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 
 Player 2 10:22:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:22:03 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:22:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":35} 
 Player 2 10:22:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 10:22:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:22:03 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:22:04 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 10:22:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 10:22:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:22:06 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 10:22:47 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 10:22:47 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 10:22:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Stack Was Emptied "}} 
 Player 2 10:22:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:22:47 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 10:22:47 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 10:22:47 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 10:22:47 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 10:22:47 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 10:22:47 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 10:22:48 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 10:22:49 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 10:23:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:23:51 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":20} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":24} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":25} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":30} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":35} 
 Player 2 10:23:51 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 10:23:51 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 10:23:51 $END_TURN:  
 Player 2 10:23:51 $SET_TURN:  

 {"playerId":1} 
 Player 2 10:23:51 $START_TURN:  

 {"playerId":1} 
 Player 2 10:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:23:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:23:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:23:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:23:54 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":25,"flipIfFlipped":false,"playerId":1} 
 Player 2 10:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 10:23:55 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:24:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Conjoined Fatty"} 
 Player 2 10:24:08 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 10:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:24:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:24:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:24:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:24:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:24:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:24:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:24:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:24:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:24:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:24:43 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":true} 
 Player 2 10:24:43 $SHOW_DECISION:  

 {"startCardId":265,"endCardId":265} 
 Player 2 10:24:46 $NEXT_STACK_ID:  
 Player 2 10:24:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:24:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 2 10:24:46 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 10:24:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 2 10:24:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 10:24:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Add ActivateItem 9 "}} 
 Player 2 10:24:49 $SHOW_DECISION:  

 {"startCardId":265,"endCardId":15} 
 Player 2 10:24:52 $USE_ITEM:  

 {"cardId":265} 
 Player 2 10:24:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:24:52 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 10:24:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 2 10:24:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:24:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Response Adding ActivateItem 9"},"childOfId":67} 
 Player 2 10:24:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 
 Player 2 10:24:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:24:52 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:24:52 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 10:24:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 
 Player 2 10:24:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:24:54 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 10:24:54 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 2 10:24:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Resolve ActivateItem 9 "}} 
 Player 2 10:24:54 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":265,"particleType":6} 
 Player 2 10:24:56 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":265,"particleType":6} 
 Player 2 10:24:56 $NEXT_STACK_ID:  
 Player 2 10:24:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Eden"} 
 Player 2 10:24:56 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":15} 
 Player 2 10:24:56 $MOVE_CARD:  

 {"moveIndex":18,"cardId":15,"placeID":277,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 10:24:57 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":15} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214},{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":10,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":15,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney \n4:Player 2 activated Eden"} 
 Player 2 10:24:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:24:57 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney"} 
 Player 2 10:24:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Remove After Resolve ActivateItem 9  "}} 
 Player 2 10:24:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney"} 
 Player 2 10:24:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":265,"hasLockingStackEffect":false,"itemToPlayCardId":265,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Response Remove After Resolve ActivateItem 9"},"childOfId":72} 
 Player 2 10:24:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 
 Player 2 10:24:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:24:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:24:58 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 2 10:24:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 
 Player 2 10:24:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:24:58 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 2 10:24:59 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 2 10:24:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Resolve PlayLootCardStackEffect 10 "}} 
 Player 2 10:24:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney"} 
 Player 2 10:24:59 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":15,"particleType":6} 
 Player 2 10:25:00 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 10:25:00 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":15,"particleType":6} 
 Player 2 10:25:00 $SET_MONEY:  

 {"playerId":2,"numOfCoins":4} 
 Player 2 10:25:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Player 2 10:25:00 $REMOVE_FROM_PILE:  

 {"cardId":15} 
 Player 2 10:25:01 $MOVE_CARD:  

 {"moveIndex":19,"cardId":15,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 10:25:01 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":15} 
 Player 2 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 1 Penny(7): addMoney"} 
 Player 2 10:25:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:25:01 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Remove After Resolve PlayLootCardStackEffect 10  "}} 
 Player 2 10:25:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":265,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":15,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 10:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Response Remove After Resolve PlayLootCardStackEffect 10"},"childOfId":77} 
 Player 2 10:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 2 10:25:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:25:01 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 2 10:25:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 
 Player 2 10:25:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:25:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:25:02 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 10:25:02 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 2 10:25:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Resolve ActivateItem 8 "}} 
 Player 2 10:25:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:02 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214},{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster> \n2:Player 1 activated HolyMantle"} 
 Player 2 10:25:04 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214},{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:25:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Remove After Resolve ActivateItem 8  "}} 
 Player 2 10:25:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 10:25:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Response Remove After Resolve ActivateItem 8"},"childOfId":82} 
 Player 2 10:25:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":82} 
 Player 2 10:25:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:25:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:25:05 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 2 10:25:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":82} 
 Player 2 10:25:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:25:05 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 2 10:25:05 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 10:25:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Resolve AttackRoll 7 "}} 
 Player 2 10:25:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:05 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}]} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:06 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 2 10:25:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:07 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is rolling against Conjoined Fatty<Monster>"} 
 Player 2 10:25:07 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}]} 
 Player 2 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 10:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Remove After Resolve AttackRoll 7  "}} 
 Player 2 10:25:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:07 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":2,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":214}} 
 Player 2 10:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":88} 
 Player 2 10:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 
 Player 2 10:25:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:25:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 10:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 2 10:25:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 
 Player 2 10:25:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:25:07 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 10:25:08 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 2 10:25:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Resolve CombatDamage 11 "}} 
 Player 2 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:08 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 
 Player 2 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost"} 
 Player 2 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Conjoined Fatty combat damage to The Lost \n2:Player 1 is about to die"} 
 Player 2 10:25:09 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:09 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 10:25:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Remove After Resolve CombatDamage 11  "}} 
 Player 2 10:25:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:09 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":214,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 10:25:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Response Remove After Resolve CombatDamage 11"},"childOfId":93} 
 Player 2 10:25:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":93} 
 Player 2 10:25:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 10:25:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 10:25:09 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 2 10:25:10 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 2 10:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":93} 
 Player 2 10:25:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 10:25:10 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Player 2 10:25:10 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 2 10:25:10 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Resolve PlayerDeath 12 "}} 
 Player 2 10:25:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:10 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":214}]} 
 Player 2 10:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 10:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 10:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 10:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 10:25:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 10:25:11 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 10:25:11 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 2 10:25:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 10:25:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 
 Player 2 10:27:13 $MATCH: 