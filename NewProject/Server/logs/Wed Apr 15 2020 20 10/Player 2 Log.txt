Start Log 
 Player 2 20:10:52 $MOVE_TO_TABLE:  
 Player 2 20:10:59 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 20:11:01 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":327,"itemCardId":328} 
 Player 2 20:11:01 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":315,"itemCardId":318} 
 Player 2 20:11:01 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[99,83,61,94,96,130,53,74,7,110,121,115,122,5,13,4,32,106,98,85,127,136,9,15,30,124,49,38,77,87,138,109,102,104,33,90,63,89,93,22,44,21,14,55,75,54,73,62,131,41,46,137,60,84,105,16,28,133,50,29,116,129,81,25,72,118,67,10,97,107,65,91,47,128,12,23,113,132,6,20,19,37,64,18,71,59,31,66,69,134,40,135,80,88,119,42,100,26,117,108,86,57,95,43,120,111,114,76,39,8,125,58,17,11,82,112,27,139,56,79,70,52,68,51,126,36,92,45,103,101,24,34,48,35,123,78]} 
 Player 2 20:11:01 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[286,259,285,229,277,252,231,258,293,294,302,282,262,304,261,240,255,233,237,287,247,230,243,301,295,292,232,289,276,250,267,239,236,306,268,300,274,266,303,264,246,270,284,228,253,248,225,281,275,305,307,238,245,291,299,273,223,296,224,249,251,310,297,308,279,257,309,226,272,254,278,290,263,234,288,280,265,298,260,271,256,235,227,241,269,242,283,244]} 
 Player 2 20:11:01 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[170,214,168,193,178,221,185,183,149,172,195,160,144,182,161,169,175,181,146,151,163,143,180,179,153,201,157,147,186,154,203,189,219,192,176,142,218,197,167,191,141,208,220,217,210,199,207,166,162,216,209,194,152,164,174,196,205,206,150,158,202,187,200,173,171,184,156,204,145,165,177,213,215,190,155,148,212,198,159,211,188]} 
 Player 2 20:11:01 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 20:11:01 $FLIP_CARD:  

 {"cardId":188} 
 Player 2 20:11:01 $ADD_STORE_CARD:  

 {"cardId":188} 
 Player 2 20:11:01 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 20:11:01 $FLIP_CARD:  

 {"cardId":211} 
 Player 2 20:11:01 $ADD_STORE_CARD:  

 {"cardId":211} 
 Player 2 20:11:01 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 20:11:01 $FLIP_CARD:  

 {"cardId":244} 
 Player 2 20:11:01 $REGISTER_PASSIVE_ITEM:  

 {"cardId":244} 
 Player 2 20:11:01 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":244} 
 Player 2 20:11:01 $NEW_MONSTER_ON_PLACE:  

 {"cardId":244,"monsterPlaceId":1} 
 Player 2 20:11:01 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 20:11:01 $FLIP_CARD:  

 {"cardId":283} 
 Player 2 20:11:02 $REGISTER_PASSIVE_ITEM:  

 {"cardId":283} 
 Player 2 20:11:02 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":283} 
 Player 2 20:11:02 $NEW_MONSTER_ON_PLACE:  

 {"cardId":283,"monsterPlaceId":2} 
 Player 2 20:11:02 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 20:11:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 20:11:02 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:11:02 $MOVE_CARD:  

 {"moveIndex":1,"cardId":78,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:11:02 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":78} 
 Player 2 20:11:02 $FLIP_CARD:  

 {"cardId":78} 
 Player 2 20:11:02 $FLIP_CARD:  

 {"cardId":78} 
 Player 2 20:11:02 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":78} 
 Player 2 20:11:02 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:11:02 $MOVE_CARD:  

 {"moveIndex":2,"cardId":123,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:11:03 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":123} 
 Player 2 20:11:03 $FLIP_CARD:  

 {"cardId":123} 
 Player 2 20:11:03 $FLIP_CARD:  

 {"cardId":123} 
 Player 2 20:11:03 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":123} 
 Player 2 20:11:03 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:11:03 $MOVE_CARD:  

 {"moveIndex":3,"cardId":35,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:11:03 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":35} 
 Player 2 20:11:03 $FLIP_CARD:  

 {"cardId":35} 
 Player 2 20:11:03 $FLIP_CARD:  

 {"cardId":35} 
 Player 2 20:11:03 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":35} 
 Player 2 20:11:03 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 20:11:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 20:11:03 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:11:03 $MOVE_CARD:  

 {"moveIndex":4,"cardId":48,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:11:04 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":48} 
 Player 2 20:11:04 $FLIP_CARD:  

 {"cardId":48} 
 Player 2 20:11:04 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":48} 
 Player 2 20:11:04 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:11:04 $MOVE_CARD:  

 {"moveIndex":5,"cardId":34,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:11:04 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":34} 
 Player 2 20:11:04 $FLIP_CARD:  

 {"cardId":34} 
 Player 2 20:11:04 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":34} 
 Player 2 20:11:04 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:11:04 $MOVE_CARD:  

 {"moveIndex":6,"cardId":24,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:11:05 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":24} 
 Player 2 20:11:05 $FLIP_CARD:  

 {"cardId":24} 
 Player 2 20:11:05 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":24} 
 Player 2 20:11:05 $GAME_HAS_STARTED:  
 Player 2 20:11:05 $SET_TURN:  

 {"playerId":2} 
 Player 2 20:11:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:11:05 $NEXT_STACK_ID:  
 Player 2 20:11:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:11:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Player 2 20:11:05 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 2 20:11:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 2 20:11:05 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:11:05 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 20:11:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 20:11:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:11:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 2 20:11:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 20:11:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 20:11:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:11:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 20:11:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:11:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:11:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 20:11:08 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 2 20:11:08 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 20:11:08 $MOVE_CARD:  

 {"moveIndex":7,"cardId":101,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 20:11:08 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":101} 
 Player 2 20:11:08 $FLIP_CARD:  

 {"cardId":101} 
 Player 2 20:11:08 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":101} 
 Player 2 20:11:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Player 2 20:11:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 2 20:11:09 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 2 20:11:09 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:11:09 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 20:11:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 2 20:11:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 20:11:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:11:11 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13}} 
 Player 2 20:11:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 20:11:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 20:11:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:11:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:11:12 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 20:11:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 20:11:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:11:12 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 20:11:12 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 20:11:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 20:11:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:11:12 $CLEAR_SE_VIS:  
 Player 2 20:11:12 $UPDATE_ACTIONS:  
 Player 2 20:13:25 $MOVE_CARD:  

 {"moveIndex":8,"cardId":281,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 
 Player 2 20:13:25 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[286,259,285,229,277,252,231,258,293,294,302,282,262,304,261,240,255,233,237,287,247,230,243,301,295,292,232,289,276,250,267,239,236,306,268,300,274,266,303,264,246,270,284,228,253,248,225,275,305,307,238,245,291,299,273,223,296,224,249,251,310,297,308,279,257,309,226,272,254,278,290,263,234,288,280,265,298,260,271,256,235,227,241,269,242]} 
 Player 2 20:13:25 $FLIP_CARD:  

 {"cardId":281} 
 Player 2 20:13:25 $REGISTER_PASSIVE_ITEM:  

 {"cardId":281} 
 Player 2 20:13:25 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":281} 
 Player 2 20:13:25 $NEW_MONSTER_ON_PLACE:  

 {"cardId":281,"monsterPlaceId":1} 
 Player 2 20:13:29 $NEXT_STACK_ID:  
 Player 2 20:13:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Isaac!"} 
 Player 2 20:13:29 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:13:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:13:30 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:13:30 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 20:13:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 20:13:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:13:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:13:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 20:13:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 20:13:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:13:33 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 20:13:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 20:13:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:13:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:13:33 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 20:13:33 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 20:13:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 20:13:33 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:13:33 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":5} 
 Player 2 20:13:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Isaac!"} 
 Player 2 20:13:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":3,"originStackId":2},"isAfterActivation":true,"index":3} 
 Player 2 20:13:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:13:33 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 2 20:13:33 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:13:33 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 20:13:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 2 20:13:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 20:13:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:13:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":281,"stackEffectType":4}} 
 Player 2 20:13:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 20:13:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 20:13:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:13:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:13:36 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 20:13:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 20:13:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:13:36 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 20:13:36 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 20:13:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 20:13:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:13:36 $CLEAR_SE_VIS:  
 Player 2 20:14:05 $NEXT_STACK_ID:  
 Player 2 20:14:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 2 20:14:05 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:14:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:14:05 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:14:05 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 20:14:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 20:14:08 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 20:14:09 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Player 2 20:14:09 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 2 vs Isaac!<Monster>"} 
 Player 2 20:14:09 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 2 20:14:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Isaac!<Monster>"} 
 Player 2 20:14:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:12 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:14:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 20:14:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 20:14:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:12 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 20:14:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 20:14:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:14:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:14:12 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 20:14:12 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 20:14:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 20:14:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Isaac!<Monster>"} 
 Player 2 20:14:13 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:14:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 20:14:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 
 Player 2 20:14:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 20:14:13 $NEXT_STACK_ID:  
 Player 2 20:14:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:13 $CLEAR_SE_VIS:  
 Player 2 20:14:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 20:14:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:14:13 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:14:13 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":3,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 2 20:14:13 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:14:13 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 20:14:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 
 Player 2 20:14:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 20:14:16 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:14:16 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 2 20:14:16 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:14:16 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 20:14:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 2 20:14:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 20:14:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 20:14:19 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":315,"numberRolled":2,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:14:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 2 20:14:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 20:14:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:19 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 20:14:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 20:14:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:14:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:14:19 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 20:14:19 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 20:14:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 20:14:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 20:14:19 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:14:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 2 20:14:19 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Cain will deal 1 combat damage to Isaac!"} 
 Player 2 20:14:19 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 20:14:19 $NEXT_STACK_ID:  
 Player 2 20:14:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 2 20:14:19 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:14:19 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:14:19 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:14:19 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 2 20:14:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Add ActivatePassiveEffect 5 "}} 
 Player 2 20:14:29 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":327} 
 Player 2 20:14:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 20:14:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:14:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":31} 
 Player 2 20:14:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 20:14:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:14:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:14:32 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 20:14:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 20:14:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:32 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 20:14:32 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 20:14:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Resolve ActivatePassiveEffect 5 "}} 
 Player 2 20:14:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 20:14:32 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:14:32 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 20:14:34 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 20:14:34 $PLAYER_GET_HIT:  

 {"playerId":1,"damage":1,"damageDealerId":281} 
 Player 2 20:14:34 $NEXT_STACK_ID:  
 Player 2 20:14:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 20:14:34 $CLEAR_SE_VIS:  
 Player 2 20:14:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage> \n3:Player 1 Is About To Die"} 
 Player 2 20:14:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:14:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:14:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 
 Player 2 20:14:34 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}]} 
 Player 2 20:14:34 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 
 Player 2 20:14:35 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:14:35 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 2 20:14:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 20:14:37 $LOG_ERROR:  

 {"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at AtSpecificHp.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:59:73)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at AtSpecificHp.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:367:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
 Player 2 20:14:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 20:14:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect \n3:Player 1 Is About To Die"} 
 Player 2 20:14:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:14:38 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":5} 
 Player 2 20:14:38 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:14:38 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Player 2 20:14:40 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Player 2 20:14:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 
 Player 2 20:14:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 
 Player 2 20:14:40 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":5,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:14:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":36} 
 Player 2 20:14:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 
 Player 2 20:14:40 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:40 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 20:14:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 
 Player 2 20:14:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:14:41 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:14:41 $ACTION_MASSAGE_REMOVE:  

 {"id":39} 
 Player 2 20:14:41 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 20:14:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Resolve PlayerDeath 6 "}} 
 Player 2 20:14:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 
 Player 2 20:14:41 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}]} 
 Player 2 20:14:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 1 Is About To Die"} 
 Player 2 20:14:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 2 20:14:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Die \n3:Player 1 Is About To Pay Death Penalties"} 
 Player 2 20:14:44 $CLEAR_SE_VIS:  
 Player 2 20:14:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:14:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 
 Player 2 20:14:44 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 
 Player 2 20:14:44 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 
 Player 2 20:14:44 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:14:44 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Player 2 20:14:47 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":6} 
 Player 2 20:14:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Remove After Resolve PlayerDeath 6  "}} 
 Player 2 20:14:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 20:14:47 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":281}} 
 Player 2 20:14:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Response Remove After Resolve PlayerDeath 6"},"childOfId":41} 
 Player 2 20:14:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 
 Player 2 20:14:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:47 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 20:14:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 
 Player 2 20:14:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:14:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:14:48 $ACTION_MASSAGE_REMOVE:  

 {"id":44} 
 Player 2 20:14:48 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 20:14:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Resolve PlayerDeathPenalties 7 "}} 
 Player 2 20:14:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 20:14:48 $DO_STACK_EFFECT:  

 {"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 
 Player 2 20:14:53 $MOVE_CARD_END:  

 {"moveIndex":9,"cardId":35,"flipIfFlipped":true,"playerId":1} 
 Player 2 20:14:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 1 Is About To Pay Death Penalties"} 
 Player 2 20:14:54 $CLEAR_SE_VIS:  
 Player 2 20:14:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:14:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 
 Player 2 20:14:54 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 
 Player 2 20:14:54 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:14:54 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Player 2 20:14:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":7} 
 Player 2 20:14:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Remove After Resolve PlayerDeathPenalties 7  "}} 
 Player 2 20:14:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 20:14:57 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 
 Player 2 20:14:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Response Remove After Resolve PlayerDeathPenalties 7"},"childOfId":47} 
 Player 2 20:14:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":47} 
 Player 2 20:14:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:14:57 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:14:57 $ACTION_MASSAGE_REMOVE:  

 {"id":49} 
 Player 2 20:14:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Wait For Response From Player 2 "},"childOfId":47} 
 Player 2 20:14:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:14:57 $ACTION_MASSAGE_REMOVE:  

 {"id":50} 
 Player 2 20:14:57 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 20:14:57 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 20:14:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 20:14:57 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:14:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 2 20:14:57 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Cain will deal 1 combat damage to Isaac!"} 
 Player 2 20:14:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 20:14:57 $NEXT_STACK_ID:  
 Player 2 20:14:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 2 20:14:57 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:14:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:14:57 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:14:57 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 2 20:15:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Add ActivatePassiveEffect 8 "}} 
 Player 2 20:15:00 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":315} 
 Player 2 20:15:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 20:15:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":52} 
 Player 2 20:15:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 
 Player 2 20:15:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:03 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 20:15:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 
 Player 2 20:15:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:15:03 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:15:03 $ACTION_MASSAGE_REMOVE:  

 {"id":55} 
 Player 2 20:15:03 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 20:15:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Resolve ActivatePassiveEffect 8 "}} 
 Player 2 20:15:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 20:15:03 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:04 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 20:15:05 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 20:15:05 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":281} 
 Player 2 20:15:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 20:15:06 $LOG_ERROR:  

 {"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at AtSpecificHp.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:59:73)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at AtSpecificHp.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:367:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
 Player 2 20:15:06 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 20:15:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect"} 
 Player 2 20:15:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:06 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":8} 
 Player 2 20:15:06 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:15:06 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Player 2 20:15:08 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":8} 
 Player 2 20:15:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 
 Player 2 20:15:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 2 20:15:09 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":8,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":57} 
 Player 2 20:15:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 
 Player 2 20:15:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:15:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:15:09 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 20:15:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 
 Player 2 20:15:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:09 $ACTION_MASSAGE_REMOVE:  

 {"id":60} 
 Player 2 20:15:09 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 20:15:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 20:15:09 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":6,"damageDealerId":315} 
 Player 2 20:15:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 20:15:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 
 Player 2 20:15:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 2 20:15:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:15:09 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 2 20:15:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:15:10 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 20:15:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 2 20:15:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 2 20:15:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:15:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:15:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":62} 
 Player 2 20:15:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 
 Player 2 20:15:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:12 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 20:15:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 
 Player 2 20:15:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:15:12 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:15:12 $ACTION_MASSAGE_REMOVE:  

 {"id":65} 
 Player 2 20:15:12 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 20:15:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Stack Was Emptied "}} 
 Player 2 20:15:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 20:15:12 $CLEAR_SE_VIS:  
 Player 2 20:15:13 $MONSTER_GET_DAMAGED:  

 {"cardId":281,"hpLeft":5,"damageDealerId":315} 
 Player 2 20:15:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 20:15:13 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":4},{"type":0,"number":315},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":8,"originStackId":4},"isAfterActivation":true,"index":8} 
 Player 2 20:15:13 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 2 20:15:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Stack Was Emptied "}} 
 Player 2 20:15:13 $CLEAR_SE_VIS:  
 Player 2 20:15:23 $NEXT_STACK_ID:  
 Player 2 20:15:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Isaac!<Monster>"} 
 Player 2 20:15:23 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:15:23 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:15:23 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:15:23 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 2 20:15:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Add AttackRoll 9 "}} 
 Player 2 20:15:26 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 20:15:28 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 20:15:28 $UPDATE_STACK_VIS:  

 {"stackId":9,"text":"player rolled 6 vs Isaac!<Monster>"} 
 Player 2 20:15:28 $SHOW_DICE_ROLL:  

 {"stackId":9} 
 Player 2 20:15:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 
 Player 2 20:15:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:15:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Response Adding AttackRoll 9"},"childOfId":68} 
 Player 2 20:15:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 
 Player 2 20:15:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:31 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Player 2 20:15:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 
 Player 2 20:15:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:15:31 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:15:31 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Player 2 20:15:31 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 20:15:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Resolve AttackRoll 9 "}} 
 Player 2 20:15:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Isaac!<Monster>"} 
 Player 2 20:15:32 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:15:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Added 0 to original roll"}} 
 Player 2 20:15:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 4 Against Isaac!<Monster> 3"} 
 Player 2 20:15:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Hit"} 
 Player 2 20:15:32 $NEXT_STACK_ID:  
 Player 2 20:15:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:32 $CLEAR_SE_VIS:  
 Player 2 20:15:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 20:15:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:15:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:15:32 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"entityId":9,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}]} 
 Player 2 20:15:32 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:15:32 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Player 2 20:15:34 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":9,"originStackId":9},"isAfterActivation":true,"index":9} 
 Player 2 20:15:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac! \n2:Player 2 Roll Hit"} 
 Player 2 20:15:35 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:15:35 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":9} 
 Player 2 20:15:35 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:15:35 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Player 2 20:15:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":9} 
 Player 2 20:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Remove After Resolve AttackRoll 9  "}} 
 Player 2 20:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 20:15:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":315,"numberRolled":6,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":281}} 
 Player 2 20:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Response Remove After Resolve AttackRoll 9"},"childOfId":74} 
 Player 2 20:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":74} 
 Player 2 20:15:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:38 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Player 2 20:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Wait For Response From Player 1 "},"childOfId":74} 
 Player 2 20:15:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:15:38 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:15:38 $ACTION_MASSAGE_REMOVE:  

 {"id":77} 
 Player 2 20:15:38 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Player 2 20:15:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Resolve CombatDamage 10 "}} 
 Player 2 20:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain is going to hurt Isaac!"} 
 Player 2 20:15:38 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac! "} 
 Player 2 20:15:38 $UPDATE_STACK_VIS:  

 {"stackId":10,"text":"Cain will deal 1 combat damage to Isaac!"} 
 Player 2 20:15:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 2 20:15:38 $NEXT_STACK_ID:  
 Player 2 20:15:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! Effect DealDamage<DealDamage>"} 
 Player 2 20:15:38 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:15:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 20:15:38 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:15:38 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 2 20:15:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Add ActivatePassiveEffect 11 "}} 
 Player 2 20:15:41 $SHOW_DECISION:  

 {"startCardId":281,"endCardId":315} 
 Player 2 20:15:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 20:15:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Response Adding ActivatePassiveEffect 11"},"childOfId":79} 
 Player 2 20:15:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":79} 
 Player 2 20:15:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:15:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:15:44 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Player 2 20:15:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Wait For Response From Player 2 "},"childOfId":79} 
 Player 2 20:15:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:44 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Player 2 20:15:44 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 20:15:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Resolve ActivatePassiveEffect 11 "}} 
 Player 2 20:15:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 20:15:45 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:45 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 20:15:46 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":6} 
 Player 2 20:15:46 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":281} 
 Player 2 20:15:46 $NEXT_STACK_ID:  
 Player 2 20:15:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage>"} 
 Player 2 20:15:46 $CLEAR_SE_VIS:  
 Player 2 20:15:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activate Isaac! effect DealDamage<DealDamage> \n3:Player 2 Is About To Die"} 
 Player 2 20:15:46 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4}} 
 Player 2 20:15:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 20:15:47 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":315,"entityToDoDamageCardId":315,"entityToTakeDamageCardId":281,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":4},{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":281,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":12,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}]} 
 Player 2 20:15:47 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 20:15:47 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:15:47 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 2 20:15:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":281}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 
 Player 2 20:15:49 $LOG_ERROR:  

 {"message":"\"Cannot read property 'name' of null\"","stack":"\"TypeError: Cannot read property 'name' of null\\n    at AtSpecificHp.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:59:73)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113284:71\\n    at new Promise (<anonymous>)\\n    at 486.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113264:14)\\n    at AtSpecificHp.testCondition (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:38:16)\\n    at Function.eval (eval at <anonymous> (http://localhost:7456/preview-scripts/__quick_compile__.js:1:1), <anonymous>:367:56)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113362:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:113306:18)\""} 
 Player 2 20:15:50 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":315},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":false,"index":3} 
 Player 2 20:15:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Activated Isaac! Effect \n3:Player 2 Is About To Die"} 
 Player 2 20:15:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:50 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":11} 
 Player 2 20:15:50 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:15:50 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Player 2 20:15:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":11} 
 Player 2 20:15:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Remove After Resolve ActivatePassiveEffect 11  "}} 
 Player 2 20:15:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 2 Is About To Die"} 
 Player 2 20:15:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":281,"effectCardPlayer":281},"entityId":11,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":281,"isAfterActivation":false,"index":3,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 20:15:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Response Remove After Resolve ActivatePassiveEffect 11"},"childOfId":84} 
 Player 2 20:15:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":84} 
 Player 2 20:15:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:53 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Player 2 20:15:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":84} 
 Player 2 20:15:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:15:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:15:53 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Player 2 20:15:53 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 2 20:15:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Resolve PlayerDeath 12 "}} 
 Player 2 20:15:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 2 Is About To Die"} 
 Player 2 20:15:53 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 20:15:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain will deal 1 combat damage to Isaac!  \n2:Player 2 Has Died"} 
 Player 2 20:15:53 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":281,"particleType":5} 
 Player 2 20:15:54 $CANCEL_ATTACK:  
 Player 2 20:15:54 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":10} 
 Player 2 20:15:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":10} 
 Player 2 20:15:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Fizzle CombatDamage 10"}} 
 Player 2 20:15:54 $FIZZLE_STACK_EFFECT:  

 {"entityId":10} 
 Player 2 20:15:54 $NEXT_STACK_ID:  
 Player 2 20:15:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died"} 
 Player 2 20:15:54 $CLEAR_SE_VIS:  
 Player 2 20:15:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 20:15:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 20:15:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 2 20:15:54 $REPLACE_STACK:  

 {"currentStack":[{"entityId":12,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281},{"entityId":13,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}]} 
 Player 2 20:15:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 2 20:15:54 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 20:15:54 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 2 20:15:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Player 2 20:15:56 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 20:15:56 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":12} 
 Player 2 20:15:56 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:15:56 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Player 2 20:15:59 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":12} 
 Player 2 20:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Remove After Resolve PlayerDeath 12  "}} 
 Player 2 20:15:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Pay Death Penalties"} 
 Player 2 20:15:59 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":315,"playerToDieCardId":315,"stackEffectType":15,"killerId":281}} 
 Player 2 20:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Response Remove After Resolve PlayerDeath 12"},"childOfId":90} 
 Player 2 20:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":90} 
 Player 2 20:15:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 20:15:59 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Player 2 20:15:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Wait For Response From Player 1 "},"childOfId":90} 
 Player 2 20:15:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 20:15:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 20:16:00 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 2 20:16:00 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Player 2 20:16:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Resolve PlayerDeathPenalties 13 "}} 
 Player 2 20:16:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Pay Death Penalties"} 
 Player 2 20:16:00 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 2 20:16:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Player 2 pays Penalties"}} 
 Player 2 20:16:00 $SET_MONEY:  

 {"playerId":2,"numOfCoins":2} 
 Player 2 20:16:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Player 2 20:16:03 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":24} 
 Player 2 20:16:03 $MOVE_CARD:  

 {"moveIndex":10,"cardId":24,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 20:16:03 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":24} 
 Player 2 20:16:03 $USE_ITEM:  

 {"cardId":315} 
 Player 2 20:16:03 $USE_ITEM:  

 {"cardId":318} 
 Player 2 20:16:03 $PLAYER_DIED:  

 {"playerId":2} 
 Player 2 20:16:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Paid Death Penalties"} 
 Player 2 20:16:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":315,"playerToPayCardId":315,"stackEffectType":16}} 
 Player 2 20:16:03 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":13} 
 Player 2 20:16:03 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 20:16:03 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Player 2 20:16:13 $MATCH: 