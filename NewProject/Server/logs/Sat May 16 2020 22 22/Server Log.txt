Start Log 

 Player 1 22:22:23 $MATCH:  

 Player 1 22:22:24 $START_GAME:  

 Player 1 22:22:24 $MOVE_TO_TABLE:  

 Player 2 22:22:24 $MOVE_TO_TABLE:  

 Player 2 22:22:34 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 22:22:34 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 22:22:34 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":335,"itemCardId":336} 

 Player 1 22:22:34 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":335,"itemCardId":336} 

 Player 1 22:22:34 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 22:22:34 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":325,"itemCardId":328} 

 Player 2 22:22:34 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[122,81,71,34,22,109,107,110,69,64,26,137,138,84,99,72,129,61,49,112,58,130,40,103,19,44,5,21,74,134,75,38,123,59,15,56,16,124,17,113,128,119,36,6,116,53,97,88,4,133,8,91,121,57,24,32,136,90,100,31,126,27,125,54,131,51,37,98,63,52,73,46,89,77,45,76,12,101,82,65,80,66,11,60,86,78,28,43,94,96,87,83,50,30,14,29,67,23,18,127,135,106,92,68,7,25,102,13,39,33,108,115,85,132,55,9,20,105,10,111,62,79,41,42,118,35,95,93,114,139,104,117,48,47,70,120]} 

 Player 2 22:22:34 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[230,272,258,263,237,241,316,315,234,282,233,299,259,238,253,244,278,275,285,266,223,262,297,306,260,236,295,312,279,224,250,247,257,286,251,268,229,296,226,277,281,305,227,280,301,246,298,235,248,269,308,310,288,261,284,313,294,274,293,264,300,252,242,314,239,267,290,302,309,304,276,270,231,243,249,311,287,265,283,307,256,273,271,303,291,240,245,225,255,292,228,232,289,254]} 

 Player 2 22:22:34 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[220,195,180,164,168,192,189,193,146,185,183,210,155,216,217,208,149,177,145,158,219,206,154,194,211,202,214,171,207,167,172,153,151,179,213,203,175,198,181,148,143,182,174,188,141,218,150,152,197,156,191,142,170,190,159,165,184,196,144,157,161,200,160,176,212,209,215,173,178,162,199,187,205,163,186,221,169,201,147,166,204]} 

 Player 2 22:22:34 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:22:34 $FLIP_CARD:  
{"cardId":204} 

 Player 2 22:22:34 $ADD_STORE_CARD:  
{"cardId":204} 

 Player 2 22:22:34 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:22:34 $FLIP_CARD:  
{"cardId":166} 

 Player 2 22:22:34 $ADD_STORE_CARD:  
{"cardId":166} 

 Player 2 22:22:34 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:22:34 $FLIP_CARD:  
{"cardId":254} 

 Player 2 22:22:34 $REGISTER_PASSIVE_ITEM:  
{"cardId":254} 

 Player 2 22:22:34 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":254} 

 Player 2 22:22:34 $NEW_MONSTER_ON_PLACE:  
{"cardId":254,"monsterPlaceId":1} 

 Player 2 22:22:34 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:22:34 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":289} 

 Player 2 22:22:34 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:22:35 $FLIP_CARD:  
{"cardId":232} 

 Player 2 22:22:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":232} 

 Player 2 22:22:35 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":232} 

 Player 2 22:22:35 $NEW_MONSTER_ON_PLACE:  
{"cardId":232,"monsterPlaceId":2} 

 Player 2 22:22:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":318} 

 Player 2 22:22:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":319} 

 Player 2 22:22:35 $REGISTER_PASSIVE_ITEM:  
{"cardId":320} 

 Player 2 22:22:35 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 22:22:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 22:22:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:22:35 $MOVE_CARD:  
{"moveIndex":1,"cardId":120,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:22:35 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":120,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:22:35 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":120} 

 Player 2 22:22:35 $FLIP_CARD:  
{"cardId":120} 

 Player 2 22:22:35 $FLIP_CARD:  
{"cardId":120} 

 Player 2 22:22:35 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":120} 

 Player 2 22:22:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":120}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 22:22:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:22:35 $MOVE_CARD:  
{"moveIndex":2,"cardId":70,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:22:36 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":70,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:22:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":70} 

 Player 2 22:22:36 $FLIP_CARD:  
{"cardId":70} 

 Player 2 22:22:36 $FLIP_CARD:  
{"cardId":70} 

 Player 2 22:22:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":70} 

 Player 2 22:22:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":70}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 22:22:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:22:36 $MOVE_CARD:  
{"moveIndex":3,"cardId":47,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:22:36 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":47,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:22:36 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":47} 

 Player 2 22:22:36 $FLIP_CARD:  
{"cardId":47} 

 Player 2 22:22:36 $FLIP_CARD:  
{"cardId":47} 

 Player 2 22:22:36 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":47} 

 Player 2 22:22:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":47}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 22:22:37 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 22:22:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 22:22:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:22:37 $MOVE_CARD:  
{"moveIndex":4,"cardId":48,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:22:37 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":48,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:22:37 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":48} 

 Player 2 22:22:37 $FLIP_CARD:  
{"cardId":48} 

 Player 2 22:22:37 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":48} 

 Player 2 22:22:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":48}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 22:22:37 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:22:37 $MOVE_CARD:  
{"moveIndex":5,"cardId":117,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:22:38 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":117,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:22:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":117} 

 Player 2 22:22:38 $FLIP_CARD:  
{"cardId":117} 

 Player 2 22:22:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":117} 

 Player 2 22:22:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":117}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 22:22:38 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:22:38 $MOVE_CARD:  
{"moveIndex":6,"cardId":104,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:22:38 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:22:38 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":104} 

 Player 2 22:22:38 $FLIP_CARD:  
{"cardId":104} 

 Player 2 22:22:38 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":104} 

 Player 2 22:22:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":104}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 22:22:38 $GAME_HAS_STARTED:  

 Player 2 22:22:38 $SET_TURN:  
{"playerId":2} 

 Player 2 22:22:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:22:38 $NEXT_STACK_ID:  

 Player 2 22:22:38 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:22:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:22:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:22:39 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:22:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 22:22:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:22:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 22:22:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 22:22:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 22:22:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:22:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 22:22:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:22:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:22:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:22:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:22:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 22:22:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 22:22:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 22:22:42 $MOVE_CARD:  
{"moveIndex":7,"cardId":139,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 22:22:42 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":139,"flipIfFlipped":false,"playerId":2} 

 Player 2 22:22:42 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":139} 

 Player 2 22:22:42 $FLIP_CARD:  
{"cardId":139} 

 Player 2 22:22:42 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":139} 

 Player 2 22:22:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":139}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 22:22:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 22:22:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 22:22:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:22:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:22:42 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 22:22:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 22:22:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 22:22:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":325,"turnPlayerCardId":325,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 22:22:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 22:22:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 22:22:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:22:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:22:45 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:22:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:22:45 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 22:22:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 22:22:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:22:45 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 22:22:45 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 22:22:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 22:22:46 $CLEAR_SE_VIS:  

 Player 2 22:22:46 $UPDATE_ACTIONS:  

 Player 2 22:22:47 $MOVE_CARD:  
{"moveIndex":8,"cardId":221,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 22:22:47 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":221,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:22:47 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[220,195,180,164,168,192,189,193,146,185,183,210,155,216,217,208,149,177,145,158,219,206,154,194,211,202,214,171,207,167,172,153,151,179,213,203,175,198,181,148,143,182,174,188,141,218,150,152,197,156,191,142,170,190,159,165,184,196,144,157,161,200,160,176,212,209,215,173,178,162,199,187,205,163,186,169,201,147]} 

 Player 2 22:22:47 $REGISTER_PASSIVE_ITEM:  
{"cardId":221} 

 Player 2 22:22:47 $MOVE_CARD:  
{"moveIndex":9,"cardId":221,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 22:22:48 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":221,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:22:48 $ADD_AN_ITEM:  
{"playerId":2,"cardId":221,"isReward":true} 

 Player 2 22:22:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":221}],"result":true,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 22:23:04 $NEXT_STACK_ID:  

 Player 2 22:23:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":232,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 22:23:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":232,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 22:23:04 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:23:05 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:23:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Player Declare Attack On Monster 2 "}} 

 Player 2 22:23:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":232,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 22:23:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Player Declare Attack On Monster 2"},"childOfId":10} 

 Player 2 22:23:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 22:23:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:08 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 22:23:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 22:23:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:23:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:23:08 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:23:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:23:08 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 22:23:08 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 22:23:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Player Declare Attack On Monster 2 "}} 

 Player 2 22:23:08 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":232,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}]} 

 Player 2 22:23:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":232,"particleType":5} 

 Player 2 22:23:08 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Has Entered Battle with Carrion Queen"} 

 Player 2 22:23:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":11,"originStackId":2},"isAfterActivation":true,"index":11} 

 Player 2 22:23:08 $NEXT_STACK_ID:  

 Player 2 22:23:08 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":221,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":221,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate The Wiz Effect GainStats<GainStats>"}} 

 Player 2 22:23:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":221,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":221,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate The Wiz Effect GainStats<GainStats>"}} 

 Player 2 22:23:08 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:23:08 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:23:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Add Activate Passive Effect 3 "}} 

 Player 2 22:23:11 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Activate The Wiz effect GainStats<GainStats>"} 

 Player 2 22:23:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[232],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":325,"effectCardPlayer":325},"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":221,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":221,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate The Wiz effect GainStats<GainStats>"}} 

 Player 2 22:23:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Adding Activate Passive Effect 3"},"childOfId":15} 

 Player 2 22:23:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 22:23:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:23:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:23:11 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:23:11 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:23:11 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 22:23:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 22:23:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:11 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 22:23:11 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 22:23:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Resolve Activate Passive Effect 3 "}} 

 Player 2 22:23:11 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":232,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Carrion Queen"},{"effectCollectedData":{"effectTargets":[232],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":325,"effectCardPlayer":325},"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":221,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":221,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate The Wiz effect GainStats<GainStats>"}]} 

 Player 2 22:23:11 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":221,"particleType":6} 

 Player 2 22:23:13 $DISABLE_PARTICLE_EFFECT:  
{"cardId":221,"particleType":6} 

 Player 2 22:23:13 $MONSTER_GAIN_ROLL_BONUS:  
{"cardId":232,"bonusToGain":1} 

 Player 2 22:23:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":11,"originStackId":2},"isAfterActivation":true,"index":11} 

 Player 2 22:23:13 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Activated The Wiz Effect"} 

 Player 2 22:23:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[232],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":325,"effectCardPlayer":325},"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":221,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated The Wiz Effect"}} 

 Player 2 22:23:13 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":232,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Carrion Queen"}]} 

 Player 2 22:23:13 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:23:13 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 22:23:16 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 22:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Remove After Resolve Activate Passive Effect 3  "}} 

 Player 2 22:23:16 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[232],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":325,"effectCardPlayer":325},"entityId":3,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":221,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated The Wiz Effect"}} 

 Player 2 22:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Remove After Resolve Activate Passive Effect 3"},"childOfId":20} 

 Player 2 22:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 22:23:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:16 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 22:23:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 22:23:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:23:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:23:16 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:23:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 22:23:17 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 22:23:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Declare Attack On Monster 2 "}} 

 Player 2 22:23:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":232,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Carrion Queen"}} 

 Player 2 22:23:17 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:23:17 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:23:17 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 22:23:20 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 22:23:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Player Declare Attack On Monster 2  "}} 

 Player 2 22:23:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":325,"attackingPlayerCardId":325,"idOfCardBeingAttacked":232,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Carrion Queen"}} 

 Player 2 22:23:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Player Declare Attack On Monster 2"},"childOfId":25} 

 Player 2 22:23:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 22:23:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:23:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:23:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:23:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:23:20 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 22:23:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 22:23:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:20 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 22:23:20 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 22:23:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 22:23:20 $CLEAR_SE_VIS:  

 Player 2 22:23:22 $NEXT_STACK_ID:  

 Player 2 22:23:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 22:23:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 22:23:22 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:23:22 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 22:23:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 2 22:23:25 $ROLL_DICE:  
{"playerId":2} 

 Player 2 22:23:27 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 22:23:27 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 6 vs Carrion Queen<Monster>"} 

 Player 2 22:23:27 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 22:23:30 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 rolled 6 vs Carrion Queen<Monster>"} 

 Player 2 22:23:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 rolled 6 vs Carrion Queen<Monster>"}} 

 Player 2 22:23:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":30} 

 Player 2 22:23:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 22:23:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:30 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 22:23:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 22:23:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:23:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:23:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:23:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:23:30 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 22:23:30 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 22:23:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 2 22:23:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 rolled 6 vs Carrion Queen<Monster>"}]} 

 Player 2 22:23:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 22:23:30 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Rolled 6 Against Carrion Queen<Monster> 5"} 

 Player 2 22:23:30 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Roll Hit"} 

 Player 2 22:23:30 $NEXT_STACK_ID:  

 Player 2 22:23:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:30 $CLEAR_SE_VIS:  

 Player 2 22:23:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"}} 

 Player 2 22:23:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:23:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"},{"entityId":4,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}]} 

 Player 2 22:23:31 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:23:31 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":12,"originStackId":4},"isAfterActivation":true,"index":12} 

 Player 2 22:23:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:23:31 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:23:31 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:23:31 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 22:23:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 22:23:33 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:23:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 2 22:23:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:23:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":36} 

 Player 2 22:23:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 22:23:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:36 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 22:23:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 22:23:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:23:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:23:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:23:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:23:36 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 22:23:37 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 22:23:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 22:23:37 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"}]} 

 Player 2 22:23:37 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Cain will deal 1 combat damage to Carrion Queen "} 

 Player 2 22:23:37 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Cain will deal 1 combat damage to Carrion Queen"} 

 Player 2 22:23:37 $MONSTER_GET_DAMAGED:  
{"cardId":232,"hpLeft":2,"damageDealerId":325} 

 Player 2 22:23:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 22:23:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":325},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":14,"originStackId":5},"isAfterActivation":true,"index":14} 

 Player 2 22:23:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Carrion Queen "}} 

 Player 2 22:23:37 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:23:37 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:23:37 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 22:23:40 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 22:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 2 22:23:40 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Carrion Queen "}} 

 Player 2 22:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":41} 

 Player 2 22:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 22:23:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:23:40 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:23:40 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:23:40 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:23:40 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 22:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 22:23:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:23:40 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 22:23:40 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 22:23:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 22:23:40 $CLEAR_SE_VIS:  

 Player 2 22:26:52 $NEXT_STACK_ID:  

 Player 2 22:26:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 22:26:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 22:26:52 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:26:52 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 22:26:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add Player Attack Roll On Monster 6 "}} 

 Player 2 22:26:55 $ROLL_DICE:  
{"playerId":2} 

 Player 2 22:26:57 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 22:26:57 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 4 vs Carrion Queen<Monster>"} 

 Player 2 22:26:57 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 22:27:00 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 rolled 4 vs Carrion Queen<Monster>"} 

 Player 2 22:27:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 rolled 4 vs Carrion Queen<Monster>"}} 

 Player 2 22:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding Player Attack Roll On Monster 6"},"childOfId":46} 

 Player 2 22:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 22:27:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:00 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 22:27:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 22:27:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:01 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 22:27:01 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 22:27:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve Player Attack Roll On Monster 6 "}} 

 Player 2 22:27:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 rolled 4 vs Carrion Queen<Monster>"}]} 

 Player 2 22:27:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added 0 to original roll"}} 

 Player 2 22:27:01 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Rolled 6 Against Carrion Queen<Monster> 5"} 

 Player 2 22:27:01 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Roll Hit"} 

 Player 2 22:27:01 $NEXT_STACK_ID:  

 Player 2 22:27:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:01 $CLEAR_SE_VIS:  

 Player 2 22:27:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"}} 

 Player 2 22:27:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:27:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"},{"entityId":6,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}]} 

 Player 2 22:27:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:27:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":15,"originStackId":6},"isAfterActivation":true,"index":15} 

 Player 2 22:27:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:27:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:27:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:27:01 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 22:27:04 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 22:27:04 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 22:27:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve Player Attack Roll On Monster 6  "}} 

 Player 2 22:27:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":325,"numberRolled":4,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:27:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve Player Attack Roll On Monster 6"},"childOfId":52} 

 Player 2 22:27:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 22:27:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:07 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 22:27:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 22:27:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:07 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:07 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 22:27:07 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 22:27:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve Monster Combat Damage To A Player 7 "}} 

 Player 2 22:27:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"}]} 

 Player 2 22:27:07 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Cain will deal 1 combat damage to Carrion Queen "} 

 Player 2 22:27:07 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Cain will deal 1 combat damage to Carrion Queen"} 

 Player 2 22:27:07 $MONSTER_GET_DAMAGED:  
{"cardId":232,"hpLeft":1,"damageDealerId":325} 

 Player 2 22:27:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 22:27:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":325},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":17,"originStackId":7},"isAfterActivation":true,"index":17} 

 Player 2 22:27:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Carrion Queen "}} 

 Player 2 22:27:07 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:27:07 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:27:07 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 22:27:10 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 22:27:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Remove After Resolve Monster Combat Damage To A Player 7  "}} 

 Player 2 22:27:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Carrion Queen "}} 

 Player 2 22:27:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 7"},"childOfId":57} 

 Player 2 22:27:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 22:27:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:10 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:10 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 22:27:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 22:27:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:10 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 22:27:10 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 22:27:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Stack Was Emptied "}} 

 Player 2 22:27:10 $CLEAR_SE_VIS:  

 Player 2 22:27:11 $NEXT_STACK_ID:  

 Player 2 22:27:11 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 22:27:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 22:27:11 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:27:11 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 22:27:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Add Player Attack Roll On Monster 8 "}} 

 Player 2 22:27:14 $ROLL_DICE:  
{"playerId":2} 

 Player 2 22:27:16 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 22:27:16 $UPDATE_STACK_VIS:  
{"stackId":8,"text":"player rolled 6 vs Carrion Queen<Monster>"} 

 Player 2 22:27:16 $SHOW_DICE_ROLL:  
{"stackId":8} 

 Player 2 22:27:19 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 2 rolled 6 vs Carrion Queen<Monster>"} 

 Player 2 22:27:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 rolled 6 vs Carrion Queen<Monster>"}} 

 Player 2 22:27:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Adding Player Attack Roll On Monster 8"},"childOfId":62} 

 Player 2 22:27:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 22:27:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:19 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 22:27:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 22:27:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:19 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:19 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 22:27:19 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 22:27:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve Player Attack Roll On Monster 8 "}} 

 Player 2 22:27:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 rolled 6 vs Carrion Queen<Monster>"}]} 

 Player 2 22:27:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Added 0 to original roll"}} 

 Player 2 22:27:19 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 2 Rolled 6 Against Carrion Queen<Monster> 5"} 

 Player 2 22:27:19 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 2 Roll Hit"} 

 Player 2 22:27:19 $NEXT_STACK_ID:  

 Player 2 22:27:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:19 $CLEAR_SE_VIS:  

 Player 2 22:27:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"}} 

 Player 2 22:27:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:27:19 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"},{"entityId":8,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}]} 

 Player 2 22:27:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:27:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":1},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":18,"originStackId":8},"isAfterActivation":true,"index":18} 

 Player 2 22:27:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:27:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:27:19 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:27:19 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 22:27:22 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 22:27:22 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 22:27:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve Player Attack Roll On Monster 8  "}} 

 Player 2 22:27:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":325,"numberRolled":6,"rollingPlayerCardId":325,"stackEffectType":2,"attackedMonsterCardId":232,"lable":"Player 2 Roll Hit"}} 

 Player 2 22:27:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve Player Attack Roll On Monster 8"},"childOfId":68} 

 Player 2 22:27:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 2 22:27:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:25 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 22:27:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 2 22:27:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:25 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:25 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 22:27:25 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 22:27:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve Monster Combat Damage To A Player 9 "}} 

 Player 2 22:27:25 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":9,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain is going to hurt Carrion Queen"}]} 

 Player 2 22:27:25 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":9,"text":"Cain will deal 1 combat damage to Carrion Queen "} 

 Player 2 22:27:25 $UPDATE_STACK_VIS:  
{"stackId":9,"text":"Cain will deal 1 combat damage to Carrion Queen"} 

 Player 2 22:27:25 $MONSTER_GET_DAMAGED:  
{"cardId":232,"hpLeft":0,"damageDealerId":325} 

 Player 2 22:27:25 $NEXT_STACK_ID:  

 Player 2 22:27:25 $CLEAR_SE_VIS:  

 Player 2 22:27:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Carrion Queen "}} 

 Player 2 22:27:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"monsterToDieCardId":232,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 22:27:26 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Carrion Queen "},{"entityId":10,"creatorCardId":325,"monsterToDieCardId":232,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Cain"}]} 

 Player 2 22:27:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"monsterToDieCardId":232,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 22:27:26 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:27:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":325},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 

 Player 2 22:27:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":325},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":20,"originStackId":9},"isAfterActivation":true,"index":20} 

 Player 2 22:27:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Carrion Queen "}} 

 Player 2 22:27:26 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:27:26 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:27:26 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 22:27:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 22:27:28 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 22:27:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Remove After Resolve Monster Combat Damage To A Player 9  "}} 

 Player 2 22:27:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":325,"entityToDoDamageCardId":325,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Cain will deal 1 combat damage to Carrion Queen "}} 

 Player 2 22:27:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 9"},"childOfId":73} 

 Player 2 22:27:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 2 22:27:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:31 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 22:27:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 2 22:27:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:32 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:32 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 22:27:32 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 22:27:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Resolve Monster Is Going To Die 10 "}} 

 Player 2 22:27:32 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":10,"creatorCardId":325,"monsterToDieCardId":232,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Cain"}]} 

 Player 2 22:27:32 $DISABLE_PARTICLE_EFFECT:  
{"cardId":232,"particleType":5} 

 Player 2 22:27:32 $CANCEL_ATTACK:  

 Player 2 22:27:32 $NEXT_STACK_ID:  

 Player 2 22:27:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:32 $CLEAR_SE_VIS:  

 Player 2 22:27:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"}} 

 Player 2 22:27:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"monsterToDieCardId":232,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 22:27:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"},{"entityId":10,"creatorCardId":325,"monsterToDieCardId":232,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Cain"}]} 

 Player 2 22:27:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:27:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"monsterToDieCardId":232,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 22:27:32 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:27:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:27:32 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 22:27:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 2 22:27:35 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 22:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Remove After Resolve Monster Is Going To Die 10  "}} 

 Player 2 22:27:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":325,"monsterToDieCardId":232,"stackEffectType":5,"killerId":325,"lable":"[object Object] Is Going To Be Killed by Cain"}} 

 Player 2 22:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Response Remove After Resolve Monster Is Going To Die 10"},"childOfId":78} 

 Player 2 22:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 2 "},"childOfId":78} 

 Player 2 22:27:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 22:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 1 "},"childOfId":78} 

 Player 2 22:27:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:38 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:38 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 22:27:38 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 22:27:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Resolve Monster Death Reward 11 "}} 

 Player 2 22:27:38 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"}]} 

 Player 2 22:27:38 $DRAW_CARD:  
{"deckType":5} 

 Player 2 22:27:38 $REGISTER_PASSIVE_ITEM:  
{"cardId":147} 

 Player 2 22:27:38 $MOVE_CARD:  
{"moveIndex":10,"cardId":147,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 22:27:38 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":147,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:27:39 $ADD_AN_ITEM:  
{"playerId":2,"cardId":147,"isReward":true} 

 Player 2 22:27:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":147}],"result":true,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 

 Player 2 22:27:39 $NEXT_STACK_ID:  

 Player 2 22:27:39 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":12,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":147,"effctType":0},"isAfterActivation":true,"index":21,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Brimstone Effect GainStats<GainStats>"}} 

 Player 2 22:27:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":12,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":147,"effctType":0},"isAfterActivation":true,"index":21,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Brimstone Effect GainStats<GainStats>"}} 

 Player 2 22:27:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:27:39 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 22:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Add Activate Passive Effect 12 "}} 

 Player 2 22:27:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":12,"text":"Activate Brimstone effect GainStats<GainStats>"} 

 Player 2 22:27:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":325,"effectCardPlayer":325},"entityId":12,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":147,"effctType":0},"isAfterActivation":true,"index":21,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Brimstone effect GainStats<GainStats>"}} 

 Player 2 22:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Response Adding Activate Passive Effect 12"},"childOfId":83} 

 Player 2 22:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 1 "},"childOfId":83} 

 Player 2 22:27:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:42 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 22:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":83} 

 Player 2 22:27:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:42 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 22:27:42 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 22:27:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Resolve Activate Passive Effect 12 "}} 

 Player 2 22:27:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"},{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":325,"effectCardPlayer":325},"entityId":12,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":147,"effctType":0},"isAfterActivation":true,"index":21,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Brimstone effect GainStats<GainStats>"}]} 

 Player 2 22:27:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":147,"particleType":6} 

 Player 2 22:27:44 $DISABLE_PARTICLE_EFFECT:  
{"cardId":147,"particleType":6} 

 Player 2 22:27:44 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":1,"isTemp":false} 

 Player 2 22:27:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":147}],"result":true,"preventMethod":false,"methodScopeId":325,"scopeIsPlayer":true,"index":21,"originStackId":-1},"isAfterActivation":true,"index":21} 

 Player 2 22:27:44 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":12,"text":"Activated Brimstone Effect"} 

 Player 2 22:27:44 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":325,"effectCardPlayer":325},"entityId":12,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"isAfterActivation":true,"index":21,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Brimstone Effect"}} 

 Player 2 22:27:44 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"}]} 

 Player 2 22:27:44 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:27:44 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 22:27:47 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 2 22:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve Activate Passive Effect 12  "}} 

 Player 2 22:27:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[325],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":325,"effectCardPlayer":325},"entityId":12,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"isAfterActivation":true,"index":21,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Brimstone Effect"}} 

 Player 2 22:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve Activate Passive Effect 12"},"childOfId":88} 

 Player 2 22:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 2 22:27:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:47 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 22:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 2 22:27:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:47 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:47 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 22:27:47 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 22:27:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Resolve Monster Death Reward 11 "}} 

 Player 2 22:27:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":22,"originStackId":11},"isAfterActivation":true,"index":22} 

 Player 2 22:27:47 $MOVE_CARD:  
{"moveIndex":11,"cardId":232,"placeID":342,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 22:27:48 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":232,"flipIfFlipped":true,"playerId":2} 

 Player 2 22:27:48 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":232} 

 Player 2 22:27:48 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":232} 

 Player 2 22:27:48 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":232} 

 Player 2 22:27:48 $NEXT_STACK_ID:  

 Player 2 22:27:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 22:27:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 22:27:48 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 22:27:48 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 22:27:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Add Reffil Empty Monster Slot 13 "}} 

 Player 2 22:27:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 22:27:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Response Adding Reffil Empty Monster Slot 13"},"childOfId":93} 

 Player 2 22:27:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":93} 

 Player 2 22:27:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:51 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 22:27:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 1 "},"childOfId":93} 

 Player 2 22:27:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:51 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 22:27:51 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 22:27:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Resolve Reffil Empty Monster Slot 13 "}} 

 Player 2 22:27:51 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"},{"entityId":13,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}]} 

 Player 2 22:27:51 $DRAW_CARD:  
{"deckType":2} 

 Player 2 22:27:51 $FLIP_CARD:  
{"cardId":228} 

 Player 2 22:27:51 $REGISTER_PASSIVE_ITEM:  
{"cardId":228} 

 Player 2 22:27:51 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":228} 

 Player 2 22:27:51 $NEW_MONSTER_ON_PLACE:  
{"cardId":228,"monsterPlaceId":2} 

 Player 2 22:27:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 22:27:51 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"}]} 

 Player 2 22:27:51 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:27:51 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 22:27:54 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 2 22:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Remove After Resolve Reffil Empty Monster Slot 13  "}} 

 Player 2 22:27:54 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":325,"slotType":2,"slotToFillId":2,"stackEffectType":10,"lable":"Refill holder2 Slot"}} 

 Player 2 22:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Response Remove After Resolve Reffil Empty Monster Slot 13"},"childOfId":98} 

 Player 2 22:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":98} 

 Player 2 22:27:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:54 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:54 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 22:27:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 2 "},"childOfId":98} 

 Player 2 22:27:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 22:27:55 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 2 22:27:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Resolve Monster Death Reward 11 "}} 

 Player 2 22:27:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"}} 

 Player 2 22:27:55 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 22:27:55 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 22:27:55 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 22:27:57 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 2 22:27:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Remove After Resolve Monster Death Reward 11  "}} 

 Player 2 22:27:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":325,"monsterCardWithRewardId":232,"playerCardIdToReward":325,"stackEffectType":7,"lable":"Player 2 Is Going To Get Carrion Queen<Monster>'s Reward"}} 

 Player 2 22:27:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Response Remove After Resolve Monster Death Reward 11"},"childOfId":103} 

 Player 2 22:27:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 2 "},"childOfId":103} 

 Player 2 22:27:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 22:27:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":103} 

 Player 2 22:27:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 22:27:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 22:27:58 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[335,336]} 

 Player 1 22:27:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 22:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 22:27:58 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 22:27:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Stack Was Emptied "}} 

 Player 2 22:27:58 $CLEAR_SE_VIS:  

 Player 2 22:28:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 22:28:01 $CLEAR_SE_VIS:  

 Player 2 22:28:01 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 22:28:01 $CLEAR_SE_VIS:  

 Player 2 22:28:01 $END_TURN:  

 Player 2 22:28:01 $SET_TURN:  
{"playerId":1} 

 Player 2 22:28:01 $START_TURN:  
{"playerId":1} 

 Player 1 22:28:01 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 22:28:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:01 $NEXT_STACK_ID:  

 Player 1 22:28:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 22:28:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 22:28:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:28:01 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 22:28:01 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 22:28:01 $CLEAR_SE_VIS:  

 Player 1 22:28:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Add Start Turn Loot Draw 14 "}} 

 Player 1 22:28:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 22:28:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Response Adding Start Turn Loot Draw 14"},"childOfId":108} 

 Player 1 22:28:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 1 "},"childOfId":108} 

 Player 1 22:28:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:04 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 1 22:28:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":108} 

 Player 1 22:28:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:04 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 1 22:28:04 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 1 22:28:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Resolve Start Turn Loot Draw 14 "}} 

 Player 1 22:28:04 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":14,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 22:28:04 $DRAW_CARD:  
{"deckType":1} 

 Player 1 22:28:04 $MOVE_CARD:  
{"moveIndex":12,"cardId":114,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 22:28:05 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":114,"flipIfFlipped":false,"playerId":1} 

 Player 1 22:28:05 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":114} 

 Player 1 22:28:05 $FLIP_CARD:  
{"cardId":114} 

 Player 1 22:28:05 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":114} 

 Player 1 22:28:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":114}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 22:28:05 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":14,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 22:28:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 22:28:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 22:28:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:28:05 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 1 22:28:08 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":14} 

 Player 1 22:28:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Remove After Resolve Start Turn Loot Draw 14  "}} 

 Player 1 22:28:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":335,"turnPlayerCardId":335,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 22:28:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Response Remove After Resolve Start Turn Loot Draw 14"},"childOfId":113} 

 Player 1 22:28:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Wait For Response From Player 2 "},"childOfId":113} 

 Player 1 22:28:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:08 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:08 $ACTION_MASSAGE_REMOVE:  
{"id":115} 

 Player 1 22:28:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Wait For Response From Player 1 "},"childOfId":113} 

 Player 1 22:28:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:08 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 1 22:28:08 $ACTION_MASSAGE_REMOVE:  
{"id":114} 

 Player 1 22:28:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Stack Was Emptied "}} 

 Player 1 22:28:08 $CLEAR_SE_VIS:  

 Player 1 22:28:15 $NEXT_STACK_ID:  

 Player 1 22:28:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":335,"attackingPlayerCardId":335,"idOfCardBeingAttacked":254,"stackEffectType":4,"lable":"Player 1 declared attack on Dingle"}} 

 Player 1 22:28:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":335,"attackingPlayerCardId":335,"idOfCardBeingAttacked":254,"stackEffectType":4,"lable":"Player 1 declared attack on Dingle"}} 

 Player 1 22:28:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:28:15 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 1 22:28:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Add Player Declare Attack On Monster 15 "}} 

 Player 1 22:28:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":335,"attackingPlayerCardId":335,"idOfCardBeingAttacked":254,"stackEffectType":4,"lable":"Player 1 declared attack on Dingle"}} 

 Player 1 22:28:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Response Adding Player Declare Attack On Monster 15"},"childOfId":118} 

 Player 1 22:28:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":120,"_text":"Wait For Response From Player 1 "},"childOfId":118} 

 Player 1 22:28:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:18 $ACTION_MASSAGE_REMOVE:  
{"id":120} 

 Player 1 22:28:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":121,"_text":"Wait For Response From Player 2 "},"childOfId":118} 

 Player 1 22:28:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:19 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:19 $ACTION_MASSAGE_REMOVE:  
{"id":121} 

 Player 1 22:28:19 $ACTION_MASSAGE_REMOVE:  
{"id":119} 

 Player 1 22:28:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":122,"_text":"Resolve Player Declare Attack On Monster 15 "}} 

 Player 1 22:28:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":15,"creatorCardId":335,"attackingPlayerCardId":335,"idOfCardBeingAttacked":254,"stackEffectType":4,"lable":"Player 1 declared attack on Dingle"}]} 

 Player 1 22:28:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":254,"particleType":5} 

 Player 1 22:28:19 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":15,"text":"Player 1 Has Entered Battle with Dingle"} 

 Player 1 22:28:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":2,"originStackId":15},"isAfterActivation":true,"index":2} 

 Player 1 22:28:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":335,"attackingPlayerCardId":335,"idOfCardBeingAttacked":254,"stackEffectType":4,"lable":"Player 1 Has Entered Battle with Dingle"}} 

 Player 1 22:28:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 22:28:19 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:28:19 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 1 22:28:22 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":15} 

 Player 1 22:28:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":123,"_text":"Remove After Resolve Player Declare Attack On Monster 15  "}} 

 Player 1 22:28:22 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":335,"attackingPlayerCardId":335,"idOfCardBeingAttacked":254,"stackEffectType":4,"lable":"Player 1 Has Entered Battle with Dingle"}} 

 Player 1 22:28:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":124,"_text":"Response Remove After Resolve Player Declare Attack On Monster 15"},"childOfId":123} 

 Player 1 22:28:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":125,"_text":"Wait For Response From Player 2 "},"childOfId":123} 

 Player 1 22:28:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:22 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:22 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:22 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:22 $ACTION_MASSAGE_REMOVE:  
{"id":125} 

 Player 1 22:28:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":126,"_text":"Wait For Response From Player 1 "},"childOfId":123} 

 Player 1 22:28:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:22 $ACTION_MASSAGE_REMOVE:  
{"id":126} 

 Player 1 22:28:22 $ACTION_MASSAGE_REMOVE:  
{"id":124} 

 Player 1 22:28:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":127,"_text":"Stack Was Emptied "}} 

 Player 1 22:28:22 $CLEAR_SE_VIS:  

 Player 1 22:28:23 $NEXT_STACK_ID:  

 Player 1 22:28:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":335,"rollingPlayerCardId":335,"stackEffectType":2,"attackedMonsterCardId":254,"lable":"Player 1 is rolling against Dingle<Monster>"}} 

 Player 1 22:28:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":335,"rollingPlayerCardId":335,"stackEffectType":2,"attackedMonsterCardId":254,"lable":"Player 1 is rolling against Dingle<Monster>"}} 

 Player 1 22:28:23 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:28:23 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 1 22:28:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":128,"_text":"Add Player Attack Roll On Monster 16 "}} 

 Player 1 22:28:26 $ROLL_DICE:  
{"playerId":1} 

 Player 1 22:28:29 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 22:28:29 $UPDATE_STACK_VIS:  
{"stackId":16,"text":"player rolled 3 vs Dingle<Monster>"} 

 Player 1 22:28:29 $SHOW_DICE_ROLL:  
{"stackId":16} 

 Player 1 22:28:32 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":16,"text":"Player 1 rolled 3 vs Dingle<Monster>"} 

 Player 1 22:28:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:32 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":335,"numberRolled":3,"rollingPlayerCardId":335,"stackEffectType":2,"attackedMonsterCardId":254,"lable":"Player 1 rolled 3 vs Dingle<Monster>"}} 

 Player 1 22:28:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":129,"_text":"Response Adding Player Attack Roll On Monster 16"},"childOfId":128} 

 Player 1 22:28:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":130,"_text":"Wait For Response From Player 1 "},"childOfId":128} 

 Player 1 22:28:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:32 $ACTION_MASSAGE_REMOVE:  
{"id":130} 

 Player 1 22:28:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":131,"_text":"Wait For Response From Player 2 "},"childOfId":128} 

 Player 1 22:28:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:32 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:32 $ACTION_MASSAGE_REMOVE:  
{"id":131} 

 Player 1 22:28:32 $ACTION_MASSAGE_REMOVE:  
{"id":129} 

 Player 1 22:28:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":132,"_text":"Resolve Player Attack Roll On Monster 16 "}} 

 Player 1 22:28:32 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":16,"creatorCardId":335,"numberRolled":3,"rollingPlayerCardId":335,"stackEffectType":2,"attackedMonsterCardId":254,"lable":"Player 1 rolled 3 vs Dingle<Monster>"}]} 

 Player 1 22:28:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":133,"_text":"Added 0 to original roll"}} 

 Player 1 22:28:32 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":16,"text":"Player 1 Rolled 3 Against Dingle<Monster> 3"} 

 Player 1 22:28:32 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":16,"text":"Player 1 Roll Hit"} 

 Player 1 22:28:32 $NEXT_STACK_ID:  

 Player 1 22:28:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:32 $CLEAR_SE_VIS:  

 Player 1 22:28:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":17,"creatorCardId":335,"entityToDoDamageCardId":335,"entityToTakeDamageCardId":254,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3,"lable":"Samson is going to hurt Dingle"}} 

 Player 1 22:28:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":16,"creatorCardId":335,"numberRolled":3,"rollingPlayerCardId":335,"stackEffectType":2,"attackedMonsterCardId":254,"lable":"Player 1 Roll Hit"}} 

 Player 1 22:28:32 $REPLACE_STACK:  
{"currentStack":[{"entityId":17,"creatorCardId":335,"entityToDoDamageCardId":335,"entityToTakeDamageCardId":254,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3,"lable":"Samson is going to hurt Dingle"},{"entityId":16,"creatorCardId":335,"numberRolled":3,"rollingPlayerCardId":335,"stackEffectType":2,"attackedMonsterCardId":254,"lable":"Player 1 Roll Hit"}]} 

 Player 1 22:28:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:28:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":3,"originStackId":16},"isAfterActivation":true,"index":3} 

 Player 1 22:28:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":16,"creatorCardId":335,"numberRolled":3,"rollingPlayerCardId":335,"stackEffectType":2,"attackedMonsterCardId":254,"lable":"Player 1 Roll Hit"}} 

 Player 1 22:28:33 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 22:28:33 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:28:33 $SHOW_STACK_EFFECT:  
{"effectId":16} 

 Player 1 22:28:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":16} 

 Player 1 22:28:35 $SHOW_STACK_EFFECT:  
{"effectId":17} 

 Player 1 22:28:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":134,"_text":"Remove After Resolve Player Attack Roll On Monster 16  "}} 

 Player 1 22:28:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":16,"creatorCardId":335,"numberRolled":3,"rollingPlayerCardId":335,"stackEffectType":2,"attackedMonsterCardId":254,"lable":"Player 1 Roll Hit"}} 

 Player 1 22:28:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":135,"_text":"Response Remove After Resolve Player Attack Roll On Monster 16"},"childOfId":134} 

 Player 1 22:28:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":136,"_text":"Wait For Response From Player 1 "},"childOfId":134} 

 Player 1 22:28:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:38 $ACTION_MASSAGE_REMOVE:  
{"id":136} 

 Player 1 22:28:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":137,"_text":"Wait For Response From Player 2 "},"childOfId":134} 

 Player 1 22:28:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:38 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:38 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:38 $ACTION_MASSAGE_REMOVE:  
{"id":137} 

 Player 1 22:28:39 $ACTION_MASSAGE_REMOVE:  
{"id":135} 

 Player 1 22:28:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":138,"_text":"Resolve Monster Combat Damage To A Player 17 "}} 

 Player 1 22:28:39 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":17,"creatorCardId":335,"entityToDoDamageCardId":335,"entityToTakeDamageCardId":254,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3,"lable":"Samson is going to hurt Dingle"}]} 

 Player 1 22:28:39 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":17,"text":"Samson will deal 1 combat damage to Dingle "} 

 Player 1 22:28:39 $UPDATE_STACK_VIS:  
{"stackId":17,"text":"Samson will deal 1 combat damage to Dingle"} 

 Player 1 22:28:39 $MONSTER_GET_DAMAGED:  
{"cardId":254,"hpLeft":2,"damageDealerId":335} 

 Player 1 22:28:39 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 22:28:39 $NEXT_STACK_ID:  

 Player 1 22:28:39 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle Effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"}} 

 Player 1 22:28:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle Effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"}} 

 Player 1 22:28:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:28:39 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 1 22:28:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":139,"_text":"Add Activate Passive Effect 18 "}} 

 Player 1 22:28:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"} 

 Player 1 22:28:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"}} 

 Player 1 22:28:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":140,"_text":"Response Adding Activate Passive Effect 18"},"childOfId":139} 

 Player 1 22:28:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":141,"_text":"Wait For Response From Player 2 "},"childOfId":139} 

 Player 1 22:28:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:42 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:42 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:42 $ACTION_MASSAGE_REMOVE:  
{"id":141} 

 Player 1 22:28:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":142,"_text":"Wait For Response From Player 1 "},"childOfId":139} 

 Player 1 22:28:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:42 $ACTION_MASSAGE_REMOVE:  
{"id":142} 

 Player 1 22:28:42 $ACTION_MASSAGE_REMOVE:  
{"id":140} 

 Player 1 22:28:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":143,"_text":"Resolve Activate Passive Effect 18 "}} 

 Player 1 22:28:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":17,"creatorCardId":335,"entityToDoDamageCardId":335,"entityToTakeDamageCardId":254,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3,"lable":"Samson will deal 1 combat damage to Dingle "},{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"}]} 

 Player 1 22:28:42 $NEXT_STACK_ID:  

 Player 1 22:28:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":19,"text":"Player 1 Is About To Roll A Dice"} 

 Player 1 22:28:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":335,"stackEffectToLock":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 1 Is About To Roll A Dice"}} 

 Player 1 22:28:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":19,"creatorCardId":335,"stackEffectToLock":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"},"hasLockingStackEffect":false,"stackEffectType":11,"lable":"Player 1 Is About To Roll A Dice"}} 

 Player 1 22:28:42 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:28:42 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 22:28:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":144,"_text":"Add Roll Dice 19 "}} 

 Player 1 22:28:45 $ROLL_DICE:  
{"playerId":1} 

 Player 1 22:28:47 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":1} 

 Player 1 22:28:47 $UPDATE_STACK_VIS:  
{"stackId":19,"text":"player 1 rolled 1"} 

 Player 1 22:28:47 $SHOW_DICE_ROLL:  
{"stackId":19} 

 Player 1 22:28:50 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":19,"text":"Player 1 Rolled 1"} 

 Player 1 22:28:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":335,"stackEffectToLock":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11,"lable":"Player 1 Rolled 1"}} 

 Player 1 22:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":145,"_text":"Response Adding Roll Dice 19"},"childOfId":144} 

 Player 1 22:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":146,"_text":"Wait For Response From Player 1 "},"childOfId":144} 

 Player 1 22:28:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":146} 

 Player 1 22:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":147,"_text":"Wait For Response From Player 2 "},"childOfId":144} 

 Player 1 22:28:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:50 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:50 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:50 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":147} 

 Player 1 22:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":145} 

 Player 1 22:28:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":148,"_text":"Resolve Roll Dice 19 "}} 

 Player 1 22:28:50 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":17,"creatorCardId":335,"entityToDoDamageCardId":335,"entityToTakeDamageCardId":254,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3,"lable":"Samson will deal 1 combat damage to Dingle "},{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"},{"entityId":19,"creatorCardId":335,"stackEffectToLock":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11,"lable":"Player 1 Rolled 1"}]} 

 Player 1 22:28:50 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":5,"originStackId":19},"isAfterActivation":true,"index":5} 

 Player 1 22:28:50 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":19,"creatorCardId":335,"stackEffectToLock":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11,"lable":"Player 1 Rolled 1"}} 

 Player 1 22:28:50 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":17,"creatorCardId":335,"entityToDoDamageCardId":335,"entityToTakeDamageCardId":254,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3,"lable":"Samson will deal 1 combat damage to Dingle "},{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"}]} 

 Player 1 22:28:50 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:28:50 $SHOW_STACK_EFFECT:  
{"effectId":19} 

 Player 1 22:28:53 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":19} 

 Player 1 22:28:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":149,"_text":"Remove After Resolve Roll Dice 19  "}} 

 Player 1 22:28:53 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":19,"creatorCardId":335,"stackEffectToLock":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":254,"effectToDo":{"effectName":"MultiEffectRoll","cardEffectNum":0,"cardPlayerId":1,"cardId":254,"effctType":0},"effectPassiveMeta":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Dingle effect MultiEffectRollAsEffect<MultiEffectRollAsEffect>"},"hasLockingStackEffect":false,"numberRolled":1,"stackEffectType":11,"lable":"Player 1 Rolled 1"}} 

 Player 1 22:28:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":150,"_text":"Response Remove After Resolve Roll Dice 19"},"childOfId":149} 

 Player 1 22:28:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":151,"_text":"Wait For Response From Player 2 "},"childOfId":149} 

 Player 1 22:28:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:53 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:53 $ACTION_MASSAGE_REMOVE:  
{"id":151} 

 Player 1 22:28:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":152,"_text":"Wait For Response From Player 1 "},"childOfId":149} 

 Player 1 22:28:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:53 $ACTION_MASSAGE_REMOVE:  
{"id":152} 

 Player 1 22:28:53 $ACTION_MASSAGE_REMOVE:  
{"id":150} 

 Player 1 22:28:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":153,"_text":"Resolve Activate Passive Effect 18 "}} 

 Player 1 22:28:53 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":254,"particleType":6} 

 Player 1 22:28:55 $DISABLE_PARTICLE_EFFECT:  
{"cardId":254,"particleType":6} 

 Player 1 22:28:55 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":254} 

 Player 1 22:28:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":254}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 22:28:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":335},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":254,"scopeIsPlayer":false,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 22:28:56 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":18,"text":"Activated Dingle Effect"} 

 Player 1 22:28:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":254,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activated Dingle Effect"}} 

 Player 1 22:28:56 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":17,"creatorCardId":335,"entityToDoDamageCardId":335,"entityToTakeDamageCardId":254,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3,"lable":"Samson will deal 1 combat damage to Dingle "}]} 

 Player 1 22:28:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 22:28:56 $SHOW_STACK_EFFECT:  
{"effectId":18} 

 Player 1 22:28:58 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":18} 

 Player 1 22:28:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":154,"_text":"Remove After Resolve Activate Passive Effect 18  "}} 

 Player 1 22:28:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":18,"creatorCardId":335,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"cardActivatorId":1,"cardWithEffectId":254,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activated Dingle Effect"}} 

 Player 1 22:28:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":155,"_text":"Response Remove After Resolve Activate Passive Effect 18"},"childOfId":154} 

 Player 1 22:28:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":156,"_text":"Wait For Response From Player 1 "},"childOfId":154} 

 Player 1 22:28:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 22:28:59 $ACTION_MASSAGE_REMOVE:  
{"id":156} 

 Player 1 22:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":157,"_text":"Wait For Response From Player 2 "},"childOfId":154} 

 Player 1 22:28:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 22:28:59 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 22:28:59 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[325,328]} 

 Player 2 22:28:59 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 22:28:59 $ACTION_MASSAGE_REMOVE:  
{"id":157} 

 Player 1 22:28:59 $ACTION_MASSAGE_REMOVE:  
{"id":155} 

 Player 1 22:28:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":158,"_text":"Resolve Monster Combat Damage To A Player 17 "}} 

 Player 1 22:28:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":335},{"type":0,"number":254}],"result":null,"preventMethod":false,"methodScopeId":335,"scopeIsPlayer":true,"index":7,"originStackId":17},"isAfterActivation":true,"index":7} 

 Player 1 22:28:59 $NEXT_STACK_ID:  

 Player 1 22:28:59 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":20,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":147,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Brimstone Effect DealDamage<DealDamage>"}} 

 Player 1 22:28:59 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":20,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":147,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Brimstone Effect DealDamage<DealDamage>"}} 

 Player 1 22:28:59 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 22:28:59 $SHOW_STACK_EFFECT:  
{"effectId":20} 

 Player 1 22:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":159,"_text":"Add Activate Passive Effect 20 "}} 

 Player 1 22:29:02 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":20,"creatorCardId":325,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":147,"effectToDo":{"effectName":"DealDamage","cardEffectNum":2,"cardPlayerId":2,"cardId":147,"effctType":0},"isAfterActivation":true,"index":7,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Brimstone Effect DealDamage<DealDamage>"},"playerId":2,"originPlayerId":1} 

 Player 2 22:29:02 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 is Choosing Target"} 

 Player 2 22:40:43 $MATCH: 