import { ActionComposite } from './ActionComposite';
import { ActionData } from '../ActionData';
import { IContainer } from '../../IContainer';
import { ParamProviders } from '../../providers';
/**
 * bind parameter provider action data.
 *
 * @export
 * @interface BindParameterProviderActionData
 * @extends {ActionData<ParamProviders[]>}
 */
export interface BindParameterProviderActionData extends ActionData<ParamProviders[]> {
}
/**
 * bind parameters action.
 *
 * @export
 * @class BindParameterProviderAction
 * @extends {ActionComposite}
 */
export declare class BindParameterProviderAction extends ActionComposite {
    constructor();
    protected working(container: IContainer, data: BindParameterProviderActionData): void;
    static getClassAnnations(): any;
}
