Start Log 

 Player 1 11:12:32 $MATCH:  

 Player 1 11:12:33 $START_GAME:  

 Player 2 11:12:33 $MOVE_TO_TABLE:  

 Player 1 11:12:33 $MOVE_TO_TABLE:  

 Player 2 11:12:43 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 11:12:43 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 11:12:43 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":314,"itemCardId":317} 

 Player 1 11:12:44 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":314,"itemCardId":317} 

 Player 1 11:12:44 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 11:12:44 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":326,"itemCardId":327} 

 Player 2 11:12:44 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[37,114,14,79,42,128,18,45,54,92,124,111,139,67,62,29,20,12,59,126,41,63,104,27,97,25,113,65,68,22,96,140,60,98,101,56,39,43,100,51,122,38,31,115,95,129,130,78,73,108,137,87,28,30,103,116,10,13,34,141,72,105,16,71,74,24,11,120,26,58,7,93,107,106,117,21,125,17,86,6,66,109,48,99,91,110,90,76,136,35,53,9,135,47,94,23,118,83,127,69,64,40,84,57,46,81,77,15,80,85,121,33,123,102,50,44,119,138,133,112,75,32,89,70,82,132,88,52,19,61,131,36,134,55,8,49]} 

 Player 2 11:12:44 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[260,298,278,303,257,255,247,294,226,301,307,259,272,285,225,296,293,238,245,291,284,271,280,269,250,279,302,240,275,288,251,276,308,304,309,232,306,263,264,241,289,233,246,244,256,243,287,254,230,295,253,248,297,252,273,299,270,292,267,274,229,224,237,300,231,290,262,227,234,283,261,265,281,268,228,258,236,282,235,286,277,242,239,249,266,305]} 

 Player 2 11:12:44 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[166,203,153,169,161,143,199,144,209,198,151,192,179,155,181,152,180,159,221,165,184,149,164,171,200,202,220,212,177,210,146,162,205,187,191,222,175,201,154,190,193,150,185,207,167,208,158,204,147,197,189,214,215,168,213,216,218,163,183,196,156,170,174,211,157,188,176,172,219,217,186,206,178,145,195,160,173,182,194,148]} 

 Player 2 11:12:44 $DRAW_CARD:  
{"deckType":5} 

 Player 2 11:12:44 $FLIP_CARD:  
{"cardId":148} 

 Player 2 11:12:44 $ADD_STORE_CARD:  
{"cardId":148} 

 Player 2 11:12:44 $DRAW_CARD:  
{"deckType":5} 

 Player 2 11:12:44 $FLIP_CARD:  
{"cardId":194} 

 Player 2 11:12:44 $ADD_STORE_CARD:  
{"cardId":194} 

 Player 2 11:12:44 $DRAW_CARD:  
{"deckType":2} 

 Player 2 11:12:44 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":305} 

 Player 2 11:12:44 $DRAW_CARD:  
{"deckType":2} 

 Player 2 11:12:44 $FLIP_CARD:  
{"cardId":266} 

 Player 2 11:12:44 $REGISTER_PASSIVE_ITEM:  
{"cardId":266} 

 Player 2 11:12:44 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":266} 

 Player 2 11:12:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":266,"monsterPlaceId":1} 

 Player 2 11:12:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 11:12:45 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":249} 

 Player 2 11:12:45 $DRAW_CARD:  
{"deckType":2} 

 Player 2 11:12:45 $FLIP_CARD:  
{"cardId":239} 

 Player 2 11:12:45 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":239} 

 Player 2 11:12:45 $NEW_MONSTER_ON_PLACE:  
{"cardId":239,"monsterPlaceId":2} 

 Player 2 11:12:45 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 11:12:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 11:12:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:12:45 $MOVE_CARD:  
{"moveIndex":1,"cardId":49,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:12:45 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":49,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:12:45 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":49} 

 Player 2 11:12:45 $FLIP_CARD:  
{"cardId":49} 

 Player 2 11:12:46 $FLIP_CARD:  
{"cardId":49} 

 Player 2 11:12:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":49} 

 Player 2 11:12:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:12:46 $MOVE_CARD:  
{"moveIndex":2,"cardId":8,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:12:46 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":8,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:12:46 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":8} 

 Player 2 11:12:46 $FLIP_CARD:  
{"cardId":8} 

 Player 2 11:12:46 $FLIP_CARD:  
{"cardId":8} 

 Player 2 11:12:46 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":8} 

 Player 2 11:12:46 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:12:46 $MOVE_CARD:  
{"moveIndex":3,"cardId":55,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:12:47 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":55,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:12:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":55} 

 Player 2 11:12:47 $FLIP_CARD:  
{"cardId":55} 

 Player 2 11:12:47 $FLIP_CARD:  
{"cardId":55} 

 Player 2 11:12:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":55} 

 Player 2 11:12:47 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 11:12:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":326,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 11:12:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:12:47 $MOVE_CARD:  
{"moveIndex":4,"cardId":134,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:12:48 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":134,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:12:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":134} 

 Player 2 11:12:48 $FLIP_CARD:  
{"cardId":134} 

 Player 2 11:12:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":134} 

 Player 2 11:12:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:12:48 $MOVE_CARD:  
{"moveIndex":5,"cardId":36,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:12:48 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":36,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:12:48 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":36} 

 Player 2 11:12:48 $FLIP_CARD:  
{"cardId":36} 

 Player 2 11:12:48 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":36} 

 Player 2 11:12:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:12:48 $MOVE_CARD:  
{"moveIndex":6,"cardId":131,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:12:49 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":131,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:12:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":131} 

 Player 2 11:12:49 $FLIP_CARD:  
{"cardId":131} 

 Player 2 11:12:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":131} 

 Player 2 11:12:49 $GAME_HAS_STARTED:  

 Player 2 11:12:49 $SET_TURN:  
{"playerId":1} 

 Player 2 11:12:49 $START_TURN:  
{"playerId":1} 

 Player 2 11:12:49 $UPDATE_ACTIONS:  

 Player 1 11:12:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:12:49 $NEXT_STACK_ID:  

 Player 1 11:12:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:12:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 11:12:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:12:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:12:50 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:12:50 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 11:12:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 11:12:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 11:12:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 11:12:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:12:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:12:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 11:12:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 11:12:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:12:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 11:12:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:12:53 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:12:53 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:12:53 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:12:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 11:12:53 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:12:53 $DRAW_CARD:  
{"deckType":1} 

 Player 1 11:12:53 $MOVE_CARD:  
{"moveIndex":7,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 11:12:53 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":61,"flipIfFlipped":false,"playerId":1} 

 Player 1 11:12:53 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":61} 

 Player 1 11:12:53 $FLIP_CARD:  
{"cardId":61} 

 Player 1 11:12:53 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":61} 

 Player 1 11:12:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:12:53 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 11:12:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:12:53 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 11:12:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 11:12:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 11:12:56 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:12:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:12:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 11:12:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 11:12:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:12:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:12:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 11:12:57 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:12:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:12:57 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 11:12:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 11:12:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:12:57 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 11:12:57 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 11:12:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 11:12:57 $CLEAR_SE_VIS:  

 Player 1 11:12:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:13:05 $MOVE_CARD:  
{"moveIndex":8,"cardId":277,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 11:13:06 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":277,"flipIfFlipped":true,"playerId":1} 

 Player 1 11:13:06 $REGISTER_PASSIVE_ITEM:  
{"cardId":277} 

 Player 1 11:13:06 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":277} 

 Player 1 11:13:06 $NEW_MONSTER_ON_PLACE:  
{"cardId":277,"monsterPlaceId":1} 

 Player 1 11:13:09 $NEXT_STACK_ID:  

 Player 1 11:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Mulligan"} 

 Player 1 11:13:09 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:13:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:13:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:13:09 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 11:13:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 11:13:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Mulligan"} 

 Player 1 11:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 11:13:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 11:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 11:13:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 11:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 11:13:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:13:12 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:13:12 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:13:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 11:13:12 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 11:13:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 11:13:12 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:13:12 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 1 11:13:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 

 Player 1 11:13:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:13:13 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 11:13:13 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:13:13 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 11:13:15 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 11:13:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 11:13:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:13:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:13:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 11:13:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 11:13:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:13:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:13:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Mulligan"} 

 Player 2 11:13:16 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:13:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:13:16 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 11:13:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 11:13:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:16 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 11:13:16 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 11:13:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 11:13:16 $CLEAR_SE_VIS:  

 Player 1 11:13:16 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:13:23 $NEXT_STACK_ID:  

 Player 1 11:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 1 11:13:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:13:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:13:23 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:13:23 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 11:13:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 11:13:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 1 11:13:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 11:13:26 $ROLL_DICE:  
{"playerId":1} 

 Player 1 11:13:28 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 11:13:28 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:13:28 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 11:13:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:13:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:13:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 11:13:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 11:13:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:32 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 11:13:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 11:13:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:13:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:13:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 2 11:13:32 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:13:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:13:32 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 11:13:32 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 11:13:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 11:13:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:13:32 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:13:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 11:13:32 $NEXT_STACK_ID:  

 Player 1 11:13:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Player 1 rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:13:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:13:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:13:32 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 11:13:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 2 11:13:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 1 11:13:35 $CLEAR_SE_VIS:  

 Player 1 11:13:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Player 1 rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:13:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:13:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:13:35 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}]} 

 Player 1 11:13:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 11:13:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:13:35 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 11:13:35 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:13:35 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 11:13:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 2 11:13:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 1 11:13:38 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 11:13:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 11:13:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 1 11:13:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:13:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 11:13:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 11:13:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:38 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 11:13:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 11:13:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:13:38 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:13:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 2 11:13:38 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:13:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:13:39 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 11:13:39 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 11:13:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 11:13:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 1 11:13:39 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:13:39 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Cain will deal 1 combat damage to Holy Mulligan"} 

 Player 1 11:13:39 $MONSTER_GET_DAMAGED:  
{"cardId":277,"hpLeft":0,"damageDealerId":314} 

 Player 1 11:13:39 $NEXT_STACK_ID:  

 Player 1 11:13:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:[object Object] killed by Cain"} 

 Player 1 11:13:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:13:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:13:39 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 11:13:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 1 11:13:42 $CLEAR_SE_VIS:  

 Player 1 11:13:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:[object Object] killed by Cain"} 

 Player 1 11:13:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:13:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:13:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}]} 

 Player 1 11:13:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":314},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 11:13:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":314},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 11:13:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:13:42 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 11:13:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:13:42 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 11:13:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 2 11:13:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:[object Object] killed by Cain"} 

 Player 1 11:13:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 11:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 11:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 11:13:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 11:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 11:13:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:45 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 11:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 11:13:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:13:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:[object Object] killed by Cain"} 

 Player 2 11:13:45 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:13:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:13:45 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 11:13:45 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 11:13:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve MonsterDeath 5 "}} 

 Player 1 11:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 11:13:45 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:13:45 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 1 11:13:45 $CANCEL_ATTACK:  

 Player 1 11:13:45 $NEXT_STACK_ID:  

 Player 1 11:13:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1,"originStackId":6},"isAfterActivation":false,"index":1} 

 Player 1 11:13:45 $NEXT_STACK_ID:  

 Player 1 11:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:13:46 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 11:13:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 11:13:46 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:13:46 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 11:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 2 11:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 2 11:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 11:13:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add ActivatePassiveEffect 7 "}} 

 Player 1 11:13:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:13:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 11:13:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":36} 

 Player 1 11:13:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 11:13:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:13:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:13:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 11:13:49 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:13:49 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:13:49 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 11:13:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 11:13:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:49 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 11:13:49 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 11:13:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 11:13:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:13:49 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 11:13:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":6} 

 Player 2 11:13:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 11:13:51 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":6} 

 Player 1 11:13:51 $NEW_MONSTER_PLACE:  

 Player 1 11:13:51 $NEXT_STACK_ID:  

 Player 1 11:13:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:13:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 1 11:13:51 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:13:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:13:51 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:13:51 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 11:13:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 11:13:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 11:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Add RefillEmptySlot 8 "}} 

 Player 1 11:13:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 1 11:13:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Adding RefillEmptySlot 8"},"childOfId":41} 

 Player 1 11:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 11:13:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:54 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 11:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 11:13:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:13:54 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 2 11:13:54 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:13:54 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:13:54 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 11:13:54 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 11:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 1 11:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 1 11:13:54 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:13:54 $DRAW_CARD:  
{"deckType":2} 

 Player 1 11:13:54 $FLIP_CARD:  
{"cardId":242} 

 Player 1 11:13:54 $REGISTER_PASSIVE_ITEM:  
{"cardId":242} 

 Player 1 11:13:55 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":242} 

 Player 1 11:13:55 $NEW_MONSTER_ON_PLACE:  
{"cardId":242,"monsterPlaceId":3} 

 Player 1 11:13:55 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 1 11:13:55 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:13:55 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 11:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 11:13:57 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 11:13:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve RefillEmptySlot 8  "}} 

 Player 1 11:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:13:57 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:13:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve RefillEmptySlot 8"},"childOfId":46} 

 Player 1 11:13:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 11:13:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:13:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 2 11:13:58 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:13:58 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 11:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 11:13:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 11:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 11:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 11:13:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1,"originStackId":6},"isAfterActivation":false,"index":1} 

 Player 1 11:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:13:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 11:13:58 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 1 11:13:58 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:13:58 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 11:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 11:14:01 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 11:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 

 Player 1 11:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:14:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 11:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":51} 

 Player 1 11:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 11:14:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 11:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 11:14:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:14:01 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 11:14:01 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:14:01 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 11:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 11:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve MonsterDeath 5 "}} 

 Player 1 11:14:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:14:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":314,"monsterCardWithRewardId":277,"playerCardIdToReward":314,"stackEffectType":7}} 

 Player 1 11:14:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:14:01 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 11:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 1 11:14:04 $CLEAR_SE_VIS:  

 Player 1 11:14:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:14:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":314,"monsterCardWithRewardId":277,"playerCardIdToReward":314,"stackEffectType":7}} 

 Player 1 11:14:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:14:04 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":314,"monsterCardWithRewardId":277,"playerCardIdToReward":314,"stackEffectType":7},{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}]} 

 Player 1 11:14:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:14:04 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 11:14:04 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:14:04 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 11:14:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 2 11:14:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:14:07 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 11:14:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve MonsterDeath 5  "}} 

 Player 1 11:14:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward"} 

 Player 1 11:14:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:14:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve MonsterDeath 5"},"childOfId":56} 

 Player 1 11:14:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 1 11:14:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:14:07 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 11:14:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 1 11:14:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:14:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 11:14:08 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[326,327]} 

 Player 2 11:14:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:14:08 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 11:14:08 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 11:14:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve MonsterRewardStackEffect 6 "}} 

 Player 1 11:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward"} 

 Player 1 11:14:08 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":314,"monsterCardWithRewardId":277,"playerCardIdToReward":314,"stackEffectType":7}} 

 Player 1 11:14:08 $SET_MONEY:  
{"playerId":1,"numOfCoins":6} 

 Player 1 11:14:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 11:14:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":6,"originStackId":6},"isAfterActivation":true,"index":6} 

 Player 1 11:14:08 $CLEAR_SE_VIS:  

 Player 1 11:14:08 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:14:08 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 11:14:08 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 11:14:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Fizzle MonsterRewardStackEffect 6"}} 

 Player 1 11:14:08 $FIZZLE_STACK_EFFECT:  
{"entityId":6} 

 Player 1 11:14:08 $MOVE_CARD:  
{"moveIndex":9,"cardId":277,"placeID":331,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 11:14:08 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 11:14:08 $CLEAR_SE_VIS:  

 Player 2 11:14:09 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":277,"flipIfFlipped":true,"playerId":1} 

 Player 1 11:14:09 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":277} 

 Player 1 11:14:09 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":277} 

 Player 1 11:14:09 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":277} 

 Player 1 11:14:09 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 1 11:14:09 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 11:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Stack Was Emptied "}} 

 Player 1 11:14:09 $CLEAR_SE_VIS:  

 Player 2 11:16:32 $MATCH: 