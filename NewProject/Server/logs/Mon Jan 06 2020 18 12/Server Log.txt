Start Log 

 Player 1 18:13:00 $MATCH:  

 Player 1 18:13:00 $START_GAME:  

 Player 2 18:13:00 $MOVE_TO_TABLE:  

 Player 1 18:13:00 $MOVE_TO_TABLE:  

 Player 2 18:13:08 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 18:13:08 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 18:13:09 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 18:13:09 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[159,202,149,154,150,175,169,147,146,180,200,194,179,196,170,164,152,173,168,155,161,163,186,160,158,193,192,151,171,166,191,181,195,197,190,157,189,162,188,184,176,167,177,165,172,187,199,198,178,183,182,156,203,185,153,148,174,201]} 

 Player 1 18:13:14 $EDEN_CHOSEN:  
{"cardId":154,"playerId":2} 

 Player 2 18:13:14 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[159,202,149,150,175,169,147,146,180,200,194,179,196,170,164,152,173,168,155,161,163,186,160,158,193,192,151,171,166,191,181,195,197,190,157,189,162,188,184,176,167,177,165,172,187,199,198,178,183,182,156,203,185,153,148,174,201]} 

 Player 2 18:13:14 $FLIP_CARD:  
{"cardId":154} 

 Player 2 18:13:14 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":266,"itemCardId":154} 

 Player 2 18:13:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 18:13:14 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":262,"itemCardId":263} 

 Player 2 18:13:14 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[128,38,66,36,35,53,107,49,95,30,89,92,24,34,32,21,63,42,115,119,97,9,46,7,87,69,25,99,108,28,10,31,18,22,91,37,33,58,111,79,123,103,41,135,29,110,100,120,15,117,138,88,104,43,133,96,57,112,121,51,70,125,50,19,90,27,47,105,59,52,136,141,16,83,113,62,77,17,56,61,72,130,134,93,26,114,81,124,78,71,142,23,106,12,54,44,116,139,67,102,109,118,68,132,122,143,101,80,85,137,75,73,140,84,76,11,126,131,74,48,129,8,60,94,20,98,13,127,64,55,82,65,86,39,45,40,14]} 

 Player 2 18:13:14 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[207,234,215,252,233,255,256,211,217,253,235,223,246,239,236,210,250,226,208,228,206,240,219,214,231,238,222,248,242,216,209,230,220,245,237,227,213,241,229,225,224,244,258,249,257,221,254,212,259,243,251,247,218,232]} 

 Player 2 18:13:14 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[193,196,195,180,164,170,186,158,173,171,168,200,163,147,149,199,160,182,184,194,159,151,166,197,191,188,167,178,187,172,203,201,161,179,165,148,185,152,155,192,157,162,169,176,153,175,202,156,183,146,181,177,174,150,198,190,189]} 

 Player 2 18:13:14 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:13:14 $FLIP_CARD:  
{"cardId":189} 

 Player 2 18:13:14 $ADD_STORE_CARD:  
{"cardId":189} 

 Player 2 18:13:14 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:13:14 $FLIP_CARD:  
{"cardId":190} 

 Player 2 18:13:14 $ADD_STORE_CARD:  
{"cardId":190} 

 Player 2 18:13:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:13:14 $FLIP_CARD:  
{"cardId":232} 

 Player 2 18:13:14 $REGISTER_PASSIVE_ITEM:  
{"cardId":232} 

 Player 2 18:13:14 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":232} 

 Player 2 18:13:14 $NEW_MONSTER_ON_PLACE:  
{"cardId":232,"monsterPlaceId":1} 

 Player 2 18:13:14 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:13:14 $FLIP_CARD:  
{"cardId":218} 

 Player 2 18:13:14 $REGISTER_PASSIVE_ITEM:  
{"cardId":218} 

 Player 2 18:13:14 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":218} 

 Player 2 18:13:14 $NEW_MONSTER_ON_PLACE:  
{"cardId":218,"monsterPlaceId":2} 

 Player 2 18:13:14 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 18:13:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 18:13:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:13:15 $MOVE_CARD:  
{"moveIndex":1,"cardId":14,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:13:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":154}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 18:13:15 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":14,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:13:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":14} 

 Player 2 18:13:15 $FLIP_CARD:  
{"cardId":14} 

 Player 2 18:13:15 $FLIP_CARD:  
{"cardId":14} 

 Player 2 18:13:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":14} 

 Player 2 18:13:15 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:13:15 $MOVE_CARD:  
{"moveIndex":2,"cardId":40,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:13:15 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":40,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:13:15 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":40} 

 Player 2 18:13:15 $FLIP_CARD:  
{"cardId":40} 

 Player 2 18:13:15 $FLIP_CARD:  
{"cardId":40} 

 Player 2 18:13:15 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":40} 

 Player 2 18:13:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:13:16 $MOVE_CARD:  
{"moveIndex":3,"cardId":45,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:13:16 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":45,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:13:16 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":45} 

 Player 2 18:13:16 $FLIP_CARD:  
{"cardId":45} 

 Player 2 18:13:16 $FLIP_CARD:  
{"cardId":45} 

 Player 2 18:13:16 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":45} 

 Player 2 18:13:16 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 18:13:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 18:13:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:13:16 $MOVE_CARD:  
{"moveIndex":4,"cardId":39,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:13:16 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":39,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:13:16 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":39} 

 Player 2 18:13:16 $FLIP_CARD:  
{"cardId":39} 

 Player 2 18:13:16 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":39} 

 Player 2 18:13:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:13:17 $MOVE_CARD:  
{"moveIndex":5,"cardId":86,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:13:17 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:13:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":86} 

 Player 2 18:13:17 $FLIP_CARD:  
{"cardId":86} 

 Player 2 18:13:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":86} 

 Player 2 18:13:17 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:13:17 $MOVE_CARD:  
{"moveIndex":6,"cardId":65,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:13:17 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":65,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:13:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":65} 

 Player 2 18:13:17 $FLIP_CARD:  
{"cardId":65} 

 Player 2 18:13:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":65} 

 Player 2 18:13:18 $GAME_HAS_STARTED:  

 Player 2 18:13:18 $SET_TURN:  
{"playerId":2} 

 Player 2 18:13:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:18 $NEXT_STACK_ID:  

 Player 2 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:13:18 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:13:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 18:13:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:18 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:13:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 18:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 18:13:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:18 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 18:13:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:18 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:13:18 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:13:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 18:13:18 $DRAW_CARD:  
{"deckType":1} 

 Player 2 18:13:18 $MOVE_CARD:  
{"moveIndex":7,"cardId":82,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 18:13:19 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":82,"flipIfFlipped":false,"playerId":2} 

 Player 2 18:13:19 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":82} 

 Player 2 18:13:19 $FLIP_CARD:  
{"cardId":82} 

 Player 2 18:13:19 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":82} 

 Player 2 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 18:13:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:13:19 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:19 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":262,"turnPlayerCardId":262,"stackEffectType":13}} 

 Player 2 18:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 18:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 18:13:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 18:13:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:19 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 18:13:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 18:13:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:19 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 18:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 18:13:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 18:13:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:13:20 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:13:20 $UPDATE_ACTIONS:  

 Player 2 18:13:21 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:13:22 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:13:22 $MOVE_CARD:  
{"moveIndex":8,"cardId":97,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 18:13:22 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":97,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:13:22 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":97} 

 Player 2 18:13:24 $NEXT_STACK_ID:  

 Player 2 18:13:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 2 18:13:24 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 18:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 2 18:13:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 18:13:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 18:13:24 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":97} 

 Player 2 18:13:24 $MOVE_CARD:  
{"moveIndex":9,"cardId":97,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 18:13:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:13:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:25 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":97,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:13:25 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":97} 

 Player 2 18:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 

 Player 2 18:13:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:25 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 

 Player 2 18:13:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":97,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 18:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 18:13:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:25 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 18:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 18:13:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:25 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 18:13:25 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 18:13:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 18:13:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 

 Player 2 18:13:25 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":97,"particleType":6} 

 Player 2 18:13:27 $DISABLE_PARTICLE_EFFECT:  
{"cardId":97,"particleType":6} 

 Player 2 18:13:27 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":97,"effectIndex":{"type":3,"index":0},"conditionData":[null]} 

 Player 2 18:13:27 $REMOVE_FROM_PILE:  
{"cardId":97} 

 Player 2 18:13:27 $MOVE_CARD:  
{"moveIndex":10,"cardId":97,"placeID":279,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 18:13:28 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":97,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:13:28 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":97} 

 Player 2 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card: ChainEffects"} 

 Player 2 18:13:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:28 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":262,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":97,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 18:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 18:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 18:13:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Credit Card "} 

 Player 1 18:13:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 18:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 18:13:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 18:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 18:13:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 18:13:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:13:28 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:13:29 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:13:30 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:13:31 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:13:42 $SHOW_DECISION:  
{"startCardId":262,"endCardId":232} 

 Player 2 18:13:45 $NEXT_STACK_ID:  

 Player 2 18:13:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 2 18:13:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 2 18:13:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 18:13:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 2 18:13:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:46 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 2 18:13:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 18:13:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 2 18:13:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 18:13:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:46 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 18:13:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 18:13:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:46 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 18:13:46 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 18:13:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 18:13:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":232,"particleType":5} 

 Player 2 18:13:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":4,"originStackId":3},"isAfterActivation":true,"index":4} 

 Player 2 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 2 18:13:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 18:13:46 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:13:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:46 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 18:13:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 2 18:13:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":262,"attackingPlayerCardId":262,"idOfCardBeingAttacked":232,"stackEffectType":4}} 

 Player 2 18:13:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 2 18:13:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 18:13:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Holy Dip"} 

 Player 1 18:13:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 18:13:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 18:13:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 18:13:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 18:13:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:13:47 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:13:48 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:13:48 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:13:49 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:13:52 $NEXT_STACK_ID:  

 Player 2 18:13:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 2 18:13:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 18:13:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 2 18:13:52 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 18:13:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 2 18:13:52 $ROLL_DICE:  
{"playerId":2} 

 Player 1 18:13:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:13:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 18:13:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 2 18:13:53 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":2} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:54 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":2,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 18:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 2 18:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 18:13:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:54 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 18:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 18:13:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:54 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:54 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:54 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 18:13:54 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 18:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 2 18:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 18:13:54 $NEXT_STACK_ID:  

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":2,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":2,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":262,"numberRolled":2,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}]} 

 Player 2 18:13:54 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":5,"originStackId":4},"isAfterActivation":true,"index":5} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 rolled 2 vs Holy Dip<Monster>"} 

 Player 2 18:13:54 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":2,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 18:13:54 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:13:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 2 18:13:54 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":2,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 18:13:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 4  "}} 

 Player 2 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 2 18:13:55 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":262,"numberRolled":2,"rollingPlayerCardId":262,"stackEffectType":2,"attackedMonsterCardId":232}} 

 Player 2 18:13:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 4"},"childOfId":36} 

 Player 2 18:13:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 18:13:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:55 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 18:13:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 18:13:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:Player 2 is rolling against Holy Dip<Monster>"} 

 Player 1 18:13:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:55 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 18:13:55 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 18:13:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 2 18:13:55 $MONSTER_GET_DAMAGED:  
{"cardId":232,"hpLeft":0,"damageDealerId":262} 

 Player 2 18:13:55 $NEXT_STACK_ID:  

 Player 2 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 2 18:13:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}} 

 Player 2 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:56 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}} 

 Player 2 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:56 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}]} 

 Player 2 18:13:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":262}],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 18:13:56 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":262},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":7,"originStackId":5},"isAfterActivation":true,"index":7} 

 Player 2 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:13:56 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 2 18:13:56 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:13:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 2 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 2 18:13:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":262,"entityToDoDamageCardId":262,"entityToTakeDamageCardId":232,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 18:13:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 2 18:13:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 18:13:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:56 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 18:13:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 18:13:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip"} 

 Player 1 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Blue Baby combat damage to Holy Dip \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:57 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 18:13:57 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 18:13:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve MonsterDeath 6 "}} 

 Player 2 18:13:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":232,"particleType":5} 

 Player 2 18:13:57 $CANCEL_ATTACK:  

 Player 2 18:13:57 $NEXT_STACK_ID:  

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 2 18:13:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":262,"monsterCardWithRewardId":232,"playerCardIdToReward":262,"stackEffectType":7}} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":262,"monsterCardWithRewardId":232,"playerCardIdToReward":262,"stackEffectType":7}} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:57 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":262,"monsterCardWithRewardId":232,"playerCardIdToReward":262,"stackEffectType":7},{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}]} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 2 18:13:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}} 

 Player 2 18:13:57 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 2 18:13:57 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}} 

 Player 2 18:13:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve MonsterDeath 6  "}} 

 Player 2 18:13:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 2 18:13:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":262,"monsterToDieCardId":232,"stackEffectType":5,"killerId":262}} 

 Player 2 18:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve MonsterDeath 6"},"childOfId":46} 

 Player 2 18:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 18:13:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 18:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 18:13:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:13:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 18:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Blue Baby"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:[object Object] killed by Blue Baby"} 

 Player 1 18:13:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 18:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 18:13:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve MonsterRewardStackEffect 7 "}} 

 Player 2 18:13:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":232,"scopeIsPlayer":false,"index":8,"originStackId":7},"isAfterActivation":true,"index":8} 

 Player 2 18:13:58 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 18:13:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 18:13:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:13:58 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:13:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:13:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":262,"monsterCardWithRewardId":232,"playerCardIdToReward":262,"stackEffectType":7}} 

 Player 2 18:13:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Fizzle MonsterRewardStackEffect 7"}} 

 Player 2 18:13:59 $MOVE_CARD:  
{"moveIndex":11,"cardId":232,"placeID":281,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 2 18:13:59 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 18:13:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:13:59 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":232,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:13:59 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":232} 

 Player 2 18:14:00 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":232} 

 Player 2 18:14:00 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":232} 

 Player 2 18:14:00 $NEXT_STACK_ID:  

 Player 2 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 18:14:00 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":262,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 18:14:00 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":262,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 18:14:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Add RefillEmptySlot 8 "}} 

 Player 2 18:14:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:14:00 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder1 slot"} 

 Player 2 18:14:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":262,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 18:14:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Adding RefillEmptySlot 8"},"childOfId":52} 

 Player 2 18:14:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 18:14:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:14:00 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 18:14:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 18:14:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:14:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 18:14:00 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 18:14:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:14:00 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 18:14:00 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 18:14:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 2 18:14:00 $DRAW_CARD:  
{"deckType":2} 

 Player 2 18:14:00 $FLIP_CARD:  
{"cardId":247} 

 Player 2 18:14:00 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":247} 

 Player 2 18:14:00 $NEW_MONSTER_ON_PLACE:  
{"cardId":247,"monsterPlaceId":1} 

 Player 2 18:14:00 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 18:14:00 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":262,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 18:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Remove After Resolve RefillEmptySlot 8  "}} 

 Player 2 18:14:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:01 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":262,"slotType":2,"slotToFillId":1,"stackEffectType":10}} 

 Player 2 18:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Remove After Resolve RefillEmptySlot 8"},"childOfId":57} 

 Player 2 18:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 18:14:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:14:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 18:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 18:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 18:14:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill holder1 slot"} 

 Player 1 18:14:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 18:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 18:14:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 18:14:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Stack Was Emptied "}} 

 Player 2 18:14:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:14:01 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:14:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Stack Was Emptied "}} 

 Player 2 18:14:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 18:14:02 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 18:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 18:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 18:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 18:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 18:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 18:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 18:14:03 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 18:14:04 $SHOW_DECISION:  
{"startCardId":262,"endCardId":189} 

 Player 2 18:14:07 $NEXT_STACK_ID:  

 Player 2 18:14:07 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0"} 

 Player 2 18:14:07 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":262,"itemToPurchaseCardId":189,"playerWhoBuysCardId":262,"cost":10,"stackEffectType":9}} 

 Player 2 18:14:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0"} 

 Player 2 18:14:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":262,"itemToPurchaseCardId":189,"playerWhoBuysCardId":262,"cost":10,"stackEffectType":9}} 

 Player 2 18:14:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Add PurchaseItem 9 "}} 

 Player 2 18:14:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:14:07 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 18:14:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0"} 

 Player 2 18:14:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":262,"itemToPurchaseCardId":189,"playerWhoBuysCardId":262,"cost":10,"stackEffectType":9}} 

 Player 2 18:14:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Response Adding PurchaseItem 9"},"childOfId":63} 

 Player 2 18:14:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 2 "},"childOfId":63} 

 Player 2 18:14:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:14:07 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 18:14:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 1 "},"childOfId":63} 

 Player 2 18:14:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:14:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:14:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:14:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Player 2 is about to buy Shiny Rock for 10"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Player 2 is about to buy Shiny Rock for 10"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Player 2 is about to buy Shiny Rock for 10"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Player 2 is about to buy Shiny Rock for 10"} 

 Player 1 18:14:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:14:08 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 2 18:14:08 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 18:14:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Resolve PurchaseItem 9 "}} 

 Player 2 18:14:08 $SET_MONEY:  
{"playerId":2,"numOfCoins":4} 

 Player 2 18:14:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":0}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 18:14:08 $REMOVE_ITEM_FROM_SHOP:  
{"cardId":189} 

 Player 2 18:14:08 $NEXT_STACK_ID:  

 Player 2 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0"} 

 Player 2 18:14:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0 \n2:Refill Store slot"} 

 Player 2 18:14:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":262,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0 \n2:Refill Store slot"} 

 Player 2 18:14:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":262,"itemToPurchaseCardId":189,"playerWhoBuysCardId":262,"cost":10,"stackEffectType":9}} 

 Player 2 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0 \n2:Refill Store slot"} 

 Player 2 18:14:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":262,"itemToPurchaseCardId":189,"playerWhoBuysCardId":262,"cost":10,"stackEffectType":9}} 

 Player 2 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0 \n2:Refill Store slot"} 

 Player 2 18:14:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":262,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0 \n2:Refill Store slot"} 

 Player 2 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 0 \n2:Refill Store slot"} 

 Player 2 18:14:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":9,"creatorCardId":262,"itemToPurchaseCardId":189,"playerWhoBuysCardId":262,"cost":10,"stackEffectType":9},{"entityId":10,"creatorCardId":262,"slotType":5,"slotToFillId":0,"stackEffectType":10}]} 

 Player 2 18:14:08 $REGISTER_PASSIVE_ITEM:  
{"cardId":189} 

 Player 2 18:14:08 $MOVE_CARD:  
{"moveIndex":12,"cardId":189,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Player 2 is about to buy Shiny Rock for 10"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Player 2 is about to buy Shiny Rock for 10"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 get Holy Dip<Monster> reward \n2:Refill Store slot"} 

 Player 1 18:14:09 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":189,"flipIfFlipped":true,"playerId":2} 

 Player 2 18:14:09 $ADD_AN_ITEM:  
{"playerId":2,"cardId":189,"isReward":false} 

 Player 2 18:14:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":189}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 

 Player 2 18:14:09 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 18:14:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":262,"itemToPurchaseCardId":189,"playerWhoBuysCardId":262,"cost":10,"stackEffectType":9}} 

 Player 2 18:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Remove After Resolve PurchaseItem 9  "}} 

 Player 2 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 2 18:14:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":262,"itemToPurchaseCardId":189,"playerWhoBuysCardId":262,"cost":10,"stackEffectType":9}} 

 Player 2 18:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Response Remove After Resolve PurchaseItem 9"},"childOfId":68} 

 Player 2 18:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 

 Player 2 18:14:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:14:09 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 18:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 

 Player 2 18:14:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:14:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 10 \n2:Refill Store slot"} 

 Player 1 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 10 \n2:Refill Store slot"} 

 Player 1 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 10 \n2:Refill Store slot"} 

 Player 1 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is about to buy Shiny Rock for 10 \n2:Refill Store slot"} 

 Player 1 18:14:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:14:09 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 18:14:09 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 18:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Resolve RefillEmptySlot 10 "}} 

 Player 2 18:14:09 $DRAW_CARD:  
{"deckType":5} 

 Player 2 18:14:09 $FLIP_CARD:  
{"cardId":198} 

 Player 2 18:14:09 $ADD_STORE_CARD:  
{"cardId":198} 

 Player 2 18:14:09 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":262,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 18:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Remove After Resolve RefillEmptySlot 10  "}} 

 Player 2 18:14:09 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":262,"slotType":5,"slotToFillId":0,"stackEffectType":10}} 

 Player 2 18:14:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Response Remove After Resolve RefillEmptySlot 10"},"childOfId":73} 

 Player 2 18:14:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 

 Player 2 18:14:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 18:14:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 18:14:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 18:14:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 18:14:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 18:14:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill Store slot"} 

 Player 1 18:14:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 18:14:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":73} 

 Player 2 18:14:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 18:14:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Stack Was Emptied "}} 

 Player 2 18:14:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 18:14:10 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 18:14:11 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 18:14:12 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 18:14:12 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 18:44:22 $MATCH: 