Start Log 
 Recived From Player 2 20:16:28 $START_GAME:  
 Recived From Player 2 20:16:28 $MOVE_TO_TABLE:  
 Recived From Player 2 20:16:35 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Recived From Player 2 20:16:44 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":311,"itemCardId":312} 
 Recived From Player 2 20:16:44 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":327,"itemCardId":328} 
 Recived From Player 2 20:16:44 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[102,59,108,119,127,58,70,53,106,78,66,77,80,135,112,68,69,67,138,65,61,55,42,85,79,36,76,4,24,132,5,133,103,40,136,111,28,123,29,122,137,57,46,89,22,64,92,6,115,126,7,45,87,121,104,19,33,44,31,105,73,91,12,10,47,120,23,34,128,48,95,39,14,125,107,99,8,60,35,130,75,43,9,113,15,71,134,25,50,16,100,118,114,49,52,82,18,124,11,41,139,54,26,101,109,30,51,56,21,117,81,83,93,20,86,17,97,116,13,90,72,27,88,129,131,62,96,84,94,32,38,63,74,110,37,98]} 
 Recived From Player 2 20:16:44 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[233,255,283,272,266,307,226,243,256,253,262,297,239,228,270,281,285,300,287,288,286,306,254,299,237,250,296,244,268,261,293,277,247,298,274,302,245,276,271,292,223,282,265,291,230,251,303,273,259,238,290,280,310,240,260,258,227,246,241,257,267,235,289,236,269,278,249,224,248,301,264,263,252,229,231,295,305,294,308,225,304,234,279,309,284,275,232,242]} 
 Recived From Player 2 20:16:44 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[151,200,212,203,193,181,204,207,147,159,218,192,145,155,211,172,150,166,209,153,174,168,184,182,142,173,191,196,201,210,164,146,177,213,189,171,205,199,197,162,179,185,157,202,188,190,214,160,158,180,208,165,148,154,216,195,170,149,143,215,183,169,156,141,220,161,206,152,217,221,219,194,175,186,178,187,167,176,144,198,163]} 
 Recived From Player 2 20:16:44 $DRAW_CARD:  

 {"deckType":5} 
 Recived From Player 2 20:16:44 $FLIP_CARD:  

 {"cardId":163} 
 Recived From Player 2 20:16:44 $ADD_STORE_CARD:  

 {"cardId":163} 
 Recived From Player 2 20:16:44 $DRAW_CARD:  

 {"deckType":5} 
 Recived From Player 2 20:16:44 $FLIP_CARD:  

 {"cardId":198} 
 Recived From Player 2 20:16:44 $ADD_STORE_CARD:  

 {"cardId":198} 
 Recived From Player 2 20:16:44 $DRAW_CARD:  

 {"deckType":2} 
 Recived From Player 2 20:16:44 $FLIP_CARD:  

 {"cardId":242} 
 Recived From Player 2 20:16:44 $REGISTER_PASSIVE_ITEM:  

 {"cardId":242} 
 Recived From Player 2 20:16:44 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":242} 
 Recived From Player 2 20:16:44 $NEW_MONSTER_ON_PLACE:  

 {"cardId":242,"monsterPlaceId":1} 
 Recived From Player 2 20:16:44 $DRAW_CARD:  

 {"deckType":2} 
 Recived From Player 2 20:16:44 $FLIP_CARD:  

 {"cardId":232} 
 Recived From Player 2 20:16:44 $REGISTER_PASSIVE_ITEM:  

 {"cardId":232} 
 Recived From Player 2 20:16:44 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":232} 
 Recived From Player 2 20:16:45 $NEW_MONSTER_ON_PLACE:  

 {"cardId":232,"monsterPlaceId":2} 
 Recived From Player 2 20:16:45 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Recived From Player 2 20:16:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":311,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Recived From Player 2 20:16:45 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 20:16:45 $MOVE_CARD:  

 {"moveIndex":1,"cardId":98,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 20:16:45 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":98} 
 Recived From Player 2 20:16:45 $FLIP_CARD:  

 {"cardId":98} 
 Recived From Player 2 20:16:45 $FLIP_CARD:  

 {"cardId":98} 
 Recived From Player 2 20:16:45 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":98} 
 Recived From Player 2 20:16:45 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 20:16:45 $MOVE_CARD:  

 {"moveIndex":2,"cardId":37,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 20:16:45 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":37} 
 Recived From Player 2 20:16:46 $FLIP_CARD:  

 {"cardId":37} 
 Recived From Player 2 20:16:46 $FLIP_CARD:  

 {"cardId":37} 
 Recived From Player 2 20:16:46 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":37} 
 Recived From Player 2 20:16:46 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 20:16:46 $MOVE_CARD:  

 {"moveIndex":3,"cardId":110,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 20:16:46 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":110} 
 Recived From Player 2 20:16:46 $FLIP_CARD:  

 {"cardId":110} 
 Recived From Player 2 20:16:46 $FLIP_CARD:  

 {"cardId":110} 
 Recived From Player 2 20:16:46 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":110} 
 Recived From Player 2 20:16:46 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Recived From Player 2 20:16:46 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Recived From Player 2 20:16:46 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 20:16:46 $MOVE_CARD:  

 {"moveIndex":4,"cardId":74,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 20:16:47 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":74} 
 Recived From Player 2 20:16:47 $FLIP_CARD:  

 {"cardId":74} 
 Recived From Player 2 20:16:47 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":74} 
 Recived From Player 2 20:16:47 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 20:16:47 $MOVE_CARD:  

 {"moveIndex":5,"cardId":63,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 20:16:47 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":63} 
 Recived From Player 2 20:16:47 $FLIP_CARD:  

 {"cardId":63} 
 Recived From Player 2 20:16:47 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":63} 
 Recived From Player 2 20:16:47 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 20:16:47 $MOVE_CARD:  

 {"moveIndex":6,"cardId":38,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 20:16:47 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":38} 
 Recived From Player 2 20:16:47 $FLIP_CARD:  

 {"cardId":38} 
 Recived From Player 2 20:16:48 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":38} 
 Recived From Player 2 20:16:48 $GAME_HAS_STARTED:  
 Recived From Player 2 20:16:48 $SET_TURN:  

 {"playerId":2} 
 Recived From Player 2 20:16:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:16:48 $NEXT_STACK_ID:  
 Recived From Player 2 20:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:16:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Loot For Start Turn"} 
 Recived From Player 2 20:16:48 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 
 Recived From Player 2 20:16:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 
 Recived From Player 2 20:16:48 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:16:48 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Recived From Player 2 20:16:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Recived From Player 2 20:16:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:16:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 
 Recived From Player 2 20:16:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Recived From Player 2 20:16:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Recived From Player 2 20:16:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:16:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Recived From Player 2 20:16:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:16:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:16:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Recived From Player 2 20:16:51 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}]} 
 Recived From Player 2 20:16:51 $DRAW_CARD:  

 {"deckType":1} 
 Recived From Player 2 20:16:51 $MOVE_CARD:  

 {"moveIndex":7,"cardId":32,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 20:16:51 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":32} 
 Recived From Player 2 20:16:51 $FLIP_CARD:  

 {"cardId":32} 
 Recived From Player 2 20:16:51 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":32} 
 Recived From Player 2 20:16:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Drawen Loot For Start Turn"} 
 Recived From Player 2 20:16:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 
 Recived From Player 2 20:16:51 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:16:51 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:16:51 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Recived From Player 2 20:16:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Recived From Player 2 20:16:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Recived From Player 2 20:16:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:16:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13}} 
 Recived From Player 2 20:16:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Recived From Player 2 20:16:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Recived From Player 2 20:16:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:16:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:16:54 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Recived From Player 2 20:16:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Recived From Player 2 20:16:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:16:55 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Recived From Player 2 20:16:55 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Recived From Player 2 20:16:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 20:16:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:16:55 $CLEAR_SE_VIS:  
 Recived From Player 2 20:16:55 $UPDATE_ACTIONS:  
 Recived From Player 2 20:17:03 $NEXT_STACK_ID:  
 Recived From Player 2 20:17:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(6) "} 
 Recived From Player 2 20:17:03 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":63,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Recived From Player 2 20:17:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":63,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Recived From Player 2 20:17:03 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:17:04 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Recived From Player 2 20:17:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Recived From Player 2 20:17:06 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":63} 
 Recived From Player 2 20:17:06 $MOVE_CARD:  

 {"moveIndex":8,"cardId":63,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Recived From Player 2 20:17:07 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":63} 
 Recived From Player 2 20:17:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play 4 Cents(6): addMoney"} 
 Recived From Player 2 20:17:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":63,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":63,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 20:17:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Recived From Player 2 20:17:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Recived From Player 2 20:17:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:07 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Recived From Player 2 20:17:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Recived From Player 2 20:17:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:17:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:17:07 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Recived From Player 2 20:17:07 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Recived From Player 2 20:17:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Recived From Player 2 20:17:07 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":2,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":63,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":63,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Recived From Player 2 20:17:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays 4 Cents(6): addMoney"} 
 Recived From Player 2 20:17:07 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":63,"particleType":6} 
 Recived From Player 2 20:17:09 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":63,"particleType":6} 
 Recived From Player 2 20:17:09 $SET_MONEY:  

 {"playerId":2,"numOfCoins":7} 
 Recived From Player 2 20:17:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Recived From Player 2 20:17:09 $REMOVE_FROM_PILE:  

 {"cardId":63} 
 Recived From Player 2 20:17:09 $MOVE_CARD:  

 {"moveIndex":9,"cardId":63,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Recived From Player 2 20:17:10 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":63} 
 Recived From Player 2 20:17:10 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":63,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 20:17:10 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:17:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:17:10 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Recived From Player 2 20:17:13 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Recived From Player 2 20:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Recived From Player 2 20:17:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:17:13 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":63,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 20:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Recived From Player 2 20:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Recived From Player 2 20:17:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:17:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:17:13 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Recived From Player 2 20:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Recived From Player 2 20:17:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:13 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Recived From Player 2 20:17:13 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Recived From Player 2 20:17:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 20:17:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:17:13 $CLEAR_SE_VIS:  
 Recived From Player 2 20:17:15 $NEXT_STACK_ID:  
 Recived From Player 2 20:17:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate The Lost"} 
 Recived From Player 2 20:17:16 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":327,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Recived From Player 2 20:17:16 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":327,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Recived From Player 2 20:17:16 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:17:16 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Recived From Player 2 20:17:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 
 Recived From Player 2 20:17:21 $SHOW_DECISION:  

 {"startCardId":327,"endCardId":74,"flipEndCard":true} 
 Recived From Player 2 20:17:24 $USE_ITEM:  

 {"cardId":327} 
 Recived From Player 2 20:17:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:24 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":327,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 
 Recived From Player 2 20:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Recived From Player 2 20:17:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:24 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Recived From Player 2 20:17:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Recived From Player 2 20:17:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:17:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:17:25 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Recived From Player 2 20:17:25 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Recived From Player 2 20:17:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 
 Recived From Player 2 20:17:25 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":3,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":327,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Recived From Player 2 20:17:25 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":327,"particleType":6} 
 Recived From Player 2 20:17:27 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":327,"particleType":6} 
 Recived From Player 2 20:17:27 $NEXT_STACK_ID:  
 Recived From Player 2 20:17:27 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":74} 
 Recived From Player 2 20:17:27 $MOVE_CARD:  

 {"moveIndex":10,"cardId":74,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Recived From Player 2 20:17:27 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":74} 
 Recived From Player 2 20:17:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play A Dime(3): addMoney \n2:Player 2 is going to activate The Lost"} 
 Recived From Player 2 20:17:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:27 $CLEAR_SE_VIS:  
 Recived From Player 2 20:17:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":74,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 20:17:27 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":327,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:17:27 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":74,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":327,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Recived From Player 2 20:17:27 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:17:27 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Recived From Player 2 20:17:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play A Dime(3): addMoney \n2:Player 2 has activated The Lost"} 
 Recived From Player 2 20:17:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":327}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Recived From Player 2 20:17:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":327,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:17:30 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:17:30 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:17:30 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Recived From Player 2 20:17:33 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Recived From Player 2 20:17:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Recived From Player 2 20:17:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is Going To Play A Dime(3): addMoney"} 
 Recived From Player 2 20:17:33 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":327,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:17:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 
 Recived From Player 2 20:17:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Recived From Player 2 20:17:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:33 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Recived From Player 2 20:17:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Recived From Player 2 20:17:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:17:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:17:33 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Recived From Player 2 20:17:33 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Recived From Player 2 20:17:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 
 Recived From Player 2 20:17:33 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":4,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":74,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}]} 
 Recived From Player 2 20:17:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays A Dime(3): addMoney"} 
 Recived From Player 2 20:17:34 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":74,"particleType":6} 
 Recived From Player 2 20:17:35 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":74,"particleType":6} 
 Recived From Player 2 20:17:35 $SET_MONEY:  

 {"playerId":2,"numOfCoins":17} 
 Recived From Player 2 20:17:35 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":10}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Recived From Player 2 20:17:36 $REMOVE_FROM_PILE:  

 {"cardId":74} 
 Recived From Player 2 20:17:36 $MOVE_CARD:  

 {"moveIndex":11,"cardId":74,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Recived From Player 2 20:17:36 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":74} 
 Recived From Player 2 20:17:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Plays A Dime(3): addMoney"} 
 Recived From Player 2 20:17:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 20:17:36 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:17:36 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:17:36 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Recived From Player 2 20:17:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Recived From Player 2 20:17:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 
 Recived From Player 2 20:17:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:17:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":327,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":74,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Recived From Player 2 20:17:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 
 Recived From Player 2 20:17:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Recived From Player 2 20:17:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:17:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:17:39 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Recived From Player 2 20:17:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Recived From Player 2 20:17:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:39 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Recived From Player 2 20:17:39 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Recived From Player 2 20:17:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 20:17:39 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:17:39 $CLEAR_SE_VIS:  
 Recived From Player 2 20:17:41 $NEXT_STACK_ID:  
 Recived From Player 2 20:17:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Buy Treasure Deck For 10"} 
 Recived From Player 2 20:17:41 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":327,"itemToPurchaseCardId":140,"playerWhoBuysCardId":327,"cost":10,"stackEffectType":9}} 
 Recived From Player 2 20:17:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":327,"itemToPurchaseCardId":140,"playerWhoBuysCardId":327,"cost":10,"stackEffectType":9}} 
 Recived From Player 2 20:17:41 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:17:41 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Recived From Player 2 20:17:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Add PurchaseItem 5 "}} 
 Recived From Player 2 20:17:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:44 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":327,"itemToPurchaseCardId":140,"playerWhoBuysCardId":327,"cost":10,"stackEffectType":9}} 
 Recived From Player 2 20:17:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Adding PurchaseItem 5"},"childOfId":35} 
 Recived From Player 2 20:17:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Recived From Player 2 20:17:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:44 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Recived From Player 2 20:17:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Recived From Player 2 20:17:44 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:17:44 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:17:44 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Recived From Player 2 20:17:44 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Recived From Player 2 20:17:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Resolve PurchaseItem 5 "}} 
 Recived From Player 2 20:17:45 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":5,"creatorCardId":327,"itemToPurchaseCardId":140,"playerWhoBuysCardId":327,"cost":10,"stackEffectType":9}]} 
 Recived From Player 2 20:17:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Bought Treasure Deck For -10"} 
 Recived From Player 2 20:17:45 $SET_MONEY:  

 {"playerId":2,"numOfCoins":7} 
 Recived From Player 2 20:17:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Recived From Player 2 20:17:45 $DRAW_CARD:  

 {"deckType":5} 
 Recived From Player 2 20:17:45 $MOVE_CARD:  

 {"moveIndex":12,"cardId":144,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Recived From Player 2 20:17:45 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":144,"isReward":false} 
 Recived From Player 2 20:17:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":144}],"result":true,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 
 Recived From Player 2 20:17:45 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_BUY_ITEM","args":[{"type":2,"number":-10},{"type":0,"number":140}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":8,"originStackId":5},"isAfterActivation":true,"index":8} 
 Recived From Player 2 20:17:45 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:17:45 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:17:45 $SHOW_STACK_EFFECT:  

 {"effectId":5} 
 Recived From Player 2 20:17:48 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":5} 
 Recived From Player 2 20:17:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Remove After Resolve PurchaseItem 5  "}} 
 Recived From Player 2 20:17:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:17:48 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":327,"itemToPurchaseCardId":140,"playerWhoBuysCardId":327,"cost":10,"stackEffectType":9}} 
 Recived From Player 2 20:17:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Response Remove After Resolve PurchaseItem 5"},"childOfId":40} 
 Recived From Player 2 20:17:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Recived From Player 2 20:17:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:17:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:17:48 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Recived From Player 2 20:17:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Recived From Player 2 20:17:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:17:48 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Recived From Player 2 20:17:48 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Recived From Player 2 20:17:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 20:17:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:17:49 $CLEAR_SE_VIS:  
 Recived From Player 2 20:17:53 $NEXT_STACK_ID:  
 Recived From Player 2 20:17:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is going to activate Boomerang"} 
 Recived From Player 2 20:17:53 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":144,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Recived From Player 2 20:17:53 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":144,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Recived From Player 2 20:17:53 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:17:53 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Recived From Player 2 20:17:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Add ActivateItem 6 "}} 
 Recived From Player 2 20:17:59 $SHOW_DECISION:  

 {"startCardId":144,"endCardId":311} 
 Recived From Player 2 20:18:02 $USE_ITEM:  

 {"cardId":144} 
 Recived From Player 2 20:18:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":144,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:18:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Response Adding ActivateItem 6"},"childOfId":45} 
 Recived From Player 2 20:18:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Recived From Player 2 20:18:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:02 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Recived From Player 2 20:18:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Recived From Player 2 20:18:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:18:02 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:18:02 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Recived From Player 2 20:18:02 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Recived From Player 2 20:18:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Resolve ActivateItem 6 "}} 
 Recived From Player 2 20:18:02 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":6,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":144,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Recived From Player 2 20:18:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":144,"particleType":6} 
 Recived From Player 2 20:18:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":144,"particleType":6} 
 Recived From Player 2 20:18:04 $PLAYER_LOSE_LOOT:  

 {"playerId":1,"cardId":98} 
 Recived From Player 2 20:18:04 $MOVE_CARD:  

 {"moveIndex":13,"cardId":98,"placeID":2,"flipIfFlipped":false,"playerId":2,"placeType":"Hand"} 
 Recived From Player 2 20:18:04 $FLIP_CARD:  

 {"cardId":98} 
 Recived From Player 2 20:18:04 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":98} 
 Recived From Player 2 20:18:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 has activated Boomerang"} 
 Recived From Player 2 20:18:05 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":144}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 
 Recived From Player 2 20:18:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":144,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:18:05 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:18:05 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:18:05 $SHOW_STACK_EFFECT:  

 {"effectId":6} 
 Recived From Player 2 20:18:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":6} 
 Recived From Player 2 20:18:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Remove After Resolve ActivateItem 6  "}} 
 Recived From Player 2 20:18:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:18:08 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":144,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:18:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Response Remove After Resolve ActivateItem 6"},"childOfId":50} 
 Recived From Player 2 20:18:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 
 Recived From Player 2 20:18:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:18:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:18:08 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Recived From Player 2 20:18:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 
 Recived From Player 2 20:18:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:08 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Recived From Player 2 20:18:08 $ACTION_MASSAGE_REMOVE:  

 {"id":51} 
 Recived From Player 2 20:18:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 20:18:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:18:08 $CLEAR_SE_VIS:  
 Recived From Player 2 20:18:11 $NEXT_STACK_ID:  
 Recived From Player 2 20:18:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 declared attack on Carrion Queen"} 
 Recived From Player 2 20:18:11 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Recived From Player 2 20:18:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Recived From Player 2 20:18:11 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:18:11 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Recived From Player 2 20:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Add DeclareAttack 7 "}} 
 Recived From Player 2 20:18:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Recived From Player 2 20:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Response Adding DeclareAttack 7"},"childOfId":55} 
 Recived From Player 2 20:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 
 Recived From Player 2 20:18:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:14 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Recived From Player 2 20:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 
 Recived From Player 2 20:18:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:18:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:18:14 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Recived From Player 2 20:18:14 $ACTION_MASSAGE_REMOVE:  

 {"id":56} 
 Recived From Player 2 20:18:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Resolve DeclareAttack 7 "}} 
 Recived From Player 2 20:18:14 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":7,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":232,"stackEffectType":4}]} 
 Recived From Player 2 20:18:14 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":232,"particleType":5} 
 Recived From Player 2 20:18:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Entered Battle with Carrion Queen"} 
 Recived From Player 2 20:18:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":10,"originStackId":7},"isAfterActivation":true,"index":10} 
 Recived From Player 2 20:18:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Recived From Player 2 20:18:14 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:18:14 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:18:14 $SHOW_STACK_EFFECT:  

 {"effectId":7} 
 Recived From Player 2 20:18:17 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":7} 
 Recived From Player 2 20:18:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Remove After Resolve DeclareAttack 7  "}} 
 Recived From Player 2 20:18:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:18:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":232,"stackEffectType":4}} 
 Recived From Player 2 20:18:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Response Remove After Resolve DeclareAttack 7"},"childOfId":60} 
 Recived From Player 2 20:18:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 
 Recived From Player 2 20:18:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:18:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:18:17 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Recived From Player 2 20:18:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":60} 
 Recived From Player 2 20:18:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:17 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Recived From Player 2 20:18:17 $ACTION_MASSAGE_REMOVE:  

 {"id":61} 
 Recived From Player 2 20:18:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 20:18:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:18:18 $CLEAR_SE_VIS:  
 Recived From Player 2 20:18:41 $NEXT_STACK_ID:  
 Recived From Player 2 20:18:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Carrion Queen<Monster>"} 
 Recived From Player 2 20:18:41 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":327,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Recived From Player 2 20:18:41 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":327,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Recived From Player 2 20:18:41 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:18:41 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Recived From Player 2 20:18:44 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Add AttackRoll 8 "}} 
 Recived From Player 2 20:18:44 $ROLL_DICE:  

 {"playerId":2} 
 Recived From Player 2 20:18:46 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Recived From Player 2 20:18:46 $UPDATE_STACK_VIS:  

 {"stackId":8,"text":"player rolled 2 vs Carrion Queen<Monster>"} 
 Recived From Player 2 20:18:46 $SHOW_DICE_ROLL:  

 {"stackId":8} 
 Recived From Player 2 20:18:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Carrion Queen<Monster>"} 
 Recived From Player 2 20:18:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:49 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":327,"numberRolled":2,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Recived From Player 2 20:18:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Response Adding AttackRoll 8"},"childOfId":65} 
 Recived From Player 2 20:18:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":65} 
 Recived From Player 2 20:18:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:49 $SHOW_REACTIONS:  

 {"playerId":2,"cardsIds":[328]} 
 Recived From Player 2 20:18:51 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[328]} 
 Recived From Player 2 20:18:51 $NEXT_STACK_ID:  
 Recived From Player 2 20:18:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Carrion Queen<Monster>"} 
 Recived From Player 2 20:18:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Carrion Queen<Monster> \n2:Player 2 is going to activate HolyMantle"} 
 Recived From Player 2 20:18:51 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":328,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Recived From Player 2 20:18:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":328,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Recived From Player 2 20:18:51 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:18:51 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Recived From Player 2 20:18:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Add ActivateItem 9 "}} 
 Recived From Player 2 20:18:56 $SHOW_DECISION:  

 {"startCardId":328,"endCardId":327} 
 Recived From Player 2 20:18:57 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[328]} 
 Recived From Player 2 20:18:57 $RESPOND_TO:  

 {"playerId":-1,"stackEffectResponse":false} 
 Recived From Player 2 20:18:59 $USE_ITEM:  

 {"cardId":328} 
 Recived From Player 2 20:18:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Carrion Queen<Monster> \n2:Player 2 is going to activate HolyMantle"} 
 Recived From Player 2 20:18:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":328,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:18:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Response Adding ActivateItem 9"},"childOfId":68} 
 Recived From Player 2 20:18:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":68} 
 Recived From Player 2 20:18:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:18:59 $ACTION_MASSAGE_REMOVE:  

 {"id":70} 
 Recived From Player 2 20:18:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":68} 
 Recived From Player 2 20:18:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:18:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:18:59 $ACTION_MASSAGE_REMOVE:  

 {"id":71} 
 Recived From Player 2 20:18:59 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Recived From Player 2 20:18:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Resolve ActivateItem 9 "}} 
 Recived From Player 2 20:18:59 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":9,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":328,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Recived From Player 2 20:18:59 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":328,"particleType":6} 
 Recived From Player 2 20:19:01 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":328,"particleType":6} 
 Recived From Player 2 20:19:01 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  

 {"cardId":328,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":328,"effectCardOwner":327,"effectCardPlayer":327}]} 
 Recived From Player 2 20:19:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Carrion Queen<Monster> \n2:Player 2 has activated HolyMantle"} 
 Recived From Player 2 20:19:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ACTIVATE_ITEM","args":[{"type":0,"number":328}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":11,"originStackId":-1},"isAfterActivation":true,"index":11} 
 Recived From Player 2 20:19:01 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":328,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:19:01 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:19:01 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:19:01 $SHOW_STACK_EFFECT:  

 {"effectId":9} 
 Recived From Player 2 20:19:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":9} 
 Recived From Player 2 20:19:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Remove After Resolve ActivateItem 9  "}} 
 Recived From Player 2 20:19:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs Carrion Queen<Monster>"} 
 Recived From Player 2 20:19:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":327,"hasLockingStackEffect":false,"itemToPlayCardId":328,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Recived From Player 2 20:19:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Response Remove After Resolve ActivateItem 9"},"childOfId":73} 
 Recived From Player 2 20:19:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Wait For Response From Player 1 "},"childOfId":73} 
 Recived From Player 2 20:19:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:19:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:19:05 $ACTION_MASSAGE_REMOVE:  

 {"id":75} 
 Recived From Player 2 20:19:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Wait For Response From Player 2 "},"childOfId":73} 
 Recived From Player 2 20:19:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:05 $ACTION_MASSAGE_REMOVE:  

 {"id":76} 
 Recived From Player 2 20:19:05 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Recived From Player 2 20:19:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Resolve AttackRoll 8 "}} 
 Recived From Player 2 20:19:05 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":8,"creatorCardId":327,"numberRolled":2,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":232}]} 
 Recived From Player 2 20:19:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Added 0 to original roll"}} 
 Recived From Player 2 20:19:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Rolled 2 Against Carrion Queen<Monster> 4"} 
 Recived From Player 2 20:19:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Roll Miss"} 
 Recived From Player 2 20:19:05 $NEXT_STACK_ID:  
 Recived From Player 2 20:19:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:05 $CLEAR_SE_VIS:  
 Recived From Player 2 20:19:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Carrion Queen is going to hurt The Lost \n2:Player 2 Roll Miss"} 
 Recived From Player 2 20:19:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":327,"entityToDoDamageCardId":232,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Recived From Player 2 20:19:05 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":8,"creatorCardId":327,"numberRolled":2,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Recived From Player 2 20:19:05 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":327,"entityToDoDamageCardId":232,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":8,"creatorCardId":327,"numberRolled":2,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":232}]} 
 Recived From Player 2 20:19:05 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:19:05 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Recived From Player 2 20:19:08 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":12,"originStackId":8},"isAfterActivation":true,"index":12} 
 Recived From Player 2 20:19:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Carrion Queen is going to hurt The Lost \n2:Player 2 Roll Miss"} 
 Recived From Player 2 20:19:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":8,"creatorCardId":327,"numberRolled":2,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Recived From Player 2 20:19:08 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:19:08 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:19:08 $SHOW_STACK_EFFECT:  

 {"effectId":8} 
 Recived From Player 2 20:19:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":8} 
 Recived From Player 2 20:19:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Remove After Resolve AttackRoll 8  "}} 
 Recived From Player 2 20:19:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Carrion Queen is going to hurt The Lost"} 
 Recived From Player 2 20:19:11 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":8,"creatorCardId":327,"numberRolled":2,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":232}} 
 Recived From Player 2 20:19:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Response Remove After Resolve AttackRoll 8"},"childOfId":79} 
 Recived From Player 2 20:19:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 
 Recived From Player 2 20:19:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:11 $ACTION_MASSAGE_REMOVE:  

 {"id":81} 
 Recived From Player 2 20:19:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 
 Recived From Player 2 20:19:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:19:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:19:11 $ACTION_MASSAGE_REMOVE:  

 {"id":82} 
 Recived From Player 2 20:19:11 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Recived From Player 2 20:19:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Resolve CombatDamage 10 "}} 
 Recived From Player 2 20:19:11 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":10,"creatorCardId":327,"entityToDoDamageCardId":232,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}]} 
 Recived From Player 2 20:19:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Carrion Queen Is Going To Hurt The Lost For 1 DMG "} 
 Recived From Player 2 20:19:11 $UPDATE_STACK_VIS:  

 {"stackId":10,"text":"Carrion Queen will deal 1 combat damage to The Lost"} 
 Recived From Player 2 20:19:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Carrion Queen will deal 1 combat damage to The Lost"} 
 Recived From Player 2 20:19:11 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":1,"damageDealerId":232} 
 Recived From Player 2 20:19:11 $NEXT_STACK_ID:  
 Recived From Player 2 20:19:11 $CLEAR_SE_VIS:  
 Recived From Player 2 20:19:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Carrion Queen will deal 1 combat damage to The Lost \n2:Player 2 Is About To Die"} 
 Recived From Player 2 20:19:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":327,"entityToDoDamageCardId":232,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Recived From Player 2 20:19:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232}} 
 Recived From Player 2 20:19:11 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":327,"entityToDoDamageCardId":232,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232}]} 
 Recived From Player 2 20:19:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232}} 
 Recived From Player 2 20:19:11 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:19:11 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Recived From Player 2 20:19:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 
 Recived From Player 2 20:19:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":232}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":14,"originStackId":10},"isAfterActivation":true,"index":14} 
 Recived From Player 2 20:19:14 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:19:14 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:19:14 $SHOW_STACK_EFFECT:  

 {"effectId":10} 
 Recived From Player 2 20:19:17 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":10} 
 Recived From Player 2 20:19:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Remove After Resolve CombatDamage 10  "}} 
 Recived From Player 2 20:19:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Is About To Die"} 
 Recived From Player 2 20:19:17 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":327,"entityToDoDamageCardId":232,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Recived From Player 2 20:19:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Response Remove After Resolve CombatDamage 10"},"childOfId":84} 
 Recived From Player 2 20:19:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":84} 
 Recived From Player 2 20:19:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:17 $ACTION_MASSAGE_REMOVE:  

 {"id":86} 
 Recived From Player 2 20:19:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":84} 
 Recived From Player 2 20:19:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:19:17 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:19:17 $ACTION_MASSAGE_REMOVE:  

 {"id":87} 
 Recived From Player 2 20:19:17 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Recived From Player 2 20:19:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Resolve PlayerDeath 11 "}} 
 Recived From Player 2 20:19:17 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232}]} 
 Recived From Player 2 20:19:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died"} 
 Recived From Player 2 20:19:18 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":232,"particleType":5} 
 Recived From Player 2 20:19:18 $CANCEL_ATTACK:  
 Recived From Player 2 20:19:18 $NEXT_STACK_ID:  
 Recived From Player 2 20:19:18 $CLEAR_SE_VIS:  
 Recived From Player 2 20:19:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Recived From Player 2 20:19:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232}} 
 Recived From Player 2 20:19:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 
 Recived From Player 2 20:19:18 $REPLACE_STACK:  

 {"currentStack":[{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232},{"entityId":12,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}]} 
 Recived From Player 2 20:19:18 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16}} 
 Recived From Player 2 20:19:18 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:19:18 $SHOW_STACK_EFFECT:  

 {"effectId":12} 
 Recived From Player 2 20:19:20 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":1,"originStackId":12},"isAfterActivation":false,"index":1} 
 Recived From Player 2 20:19:20 $NEXT_STACK_ID:  
 Recived From Player 2 20:19:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties"} 
 Recived From Player 2 20:19:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties \n3:Activate HolyMantle Effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Recived From Player 2 20:19:20 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":328,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":328,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Recived From Player 2 20:19:21 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":328,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":328,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Recived From Player 2 20:19:21 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Recived From Player 2 20:19:21 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Recived From Player 2 20:19:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Add ActivatePassiveEffect 13 "}} 
 Recived From Player 2 20:19:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Player 2 Is About To Pay Death Penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 
 Recived From Player 2 20:19:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":328,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":328,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Recived From Player 2 20:19:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Response Adding ActivatePassiveEffect 13"},"childOfId":89} 
 Recived From Player 2 20:19:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":89} 
 Recived From Player 2 20:19:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:19:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:19:24 $ACTION_MASSAGE_REMOVE:  

 {"id":91} 
 Recived From Player 2 20:19:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":89} 
 Recived From Player 2 20:19:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:24 $ACTION_MASSAGE_REMOVE:  

 {"id":92} 
 Recived From Player 2 20:19:24 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Recived From Player 2 20:19:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Resolve ActivatePassiveEffect 13 "}} 
 Recived From Player 2 20:19:24 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232},{"effectCollectedData":null,"entityId":13,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":328,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":2,"cardId":328,"effctType":3},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Recived From Player 2 20:19:24 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":328,"particleType":6} 
 Recived From Player 2 20:19:26 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":328,"particleType":6} 
 Recived From Player 2 20:19:26 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":12} 
 Recived From Player 2 20:19:26 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Fizzle PlayerDeathPenalties 12"}} 
 Recived From Player 2 20:19:26 $FIZZLE_STACK_EFFECT:  

 {"entityId":12} 
 Recived From Player 2 20:19:26 $PLAYER_HEAL:  

 {"playerId":2,"hpToHeal":1,"healDown":true} 
 Recived From Player 2 20:19:26 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":327,"scopeIsPlayer":true,"index":1,"originStackId":12},"isAfterActivation":false,"index":1} 
 Recived From Player 2 20:19:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died \n2:Activated HolyMantle Effect"} 
 Recived From Player 2 20:19:26 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":328,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Recived From Player 2 20:19:26 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232}]} 
 Recived From Player 2 20:19:26 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:19:26 $SHOW_STACK_EFFECT:  

 {"effectId":13} 
 Recived From Player 2 20:19:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":13} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Remove After Resolve ActivatePassiveEffect 13  "}} 
 Recived From Player 2 20:19:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died"} 
 Recived From Player 2 20:19:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":13,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":328,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Response Remove After Resolve ActivatePassiveEffect 13"},"childOfId":95} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Wait For Response From Player 2 "},"childOfId":95} 
 Recived From Player 2 20:19:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_REMOVE:  

 {"id":97} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":95} 
 Recived From Player 2 20:19:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:19:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_REMOVE:  

 {"id":96} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Resolve PlayerDeath 11 "}} 
 Recived From Player 2 20:19:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":12} 
 Recived From Player 2 20:19:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Fizzle PlayerDeathPenalties 12"}} 
 Recived From Player 2 20:19:29 $FIZZLE_STACK_EFFECT:  

 {"entityId":12} 
 Recived From Player 2 20:19:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 Has Died"} 
 Recived From Player 2 20:19:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232}} 
 Recived From Player 2 20:19:29 $UPDATE_RESOLVING_STACK_EFFECTS:  

 {"stackEffects":[]} 
 Recived From Player 2 20:19:29 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Recived From Player 2 20:19:29 $SHOW_STACK_EFFECT:  

 {"effectId":11} 
 Recived From Player 2 20:19:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":11} 
 Recived From Player 2 20:19:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Remove After Resolve PlayerDeath 11  "}} 
 Recived From Player 2 20:19:32 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:19:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":11,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":232}} 
 Recived From Player 2 20:19:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Response Remove After Resolve PlayerDeath 11"},"childOfId":101} 
 Recived From Player 2 20:19:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Wait For Response From Player 1 "},"childOfId":101} 
 Recived From Player 2 20:19:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Recived From Player 2 20:19:32 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Recived From Player 2 20:19:32 $ACTION_MASSAGE_REMOVE:  

 {"id":103} 
 Recived From Player 2 20:19:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Wait For Response From Player 2 "},"childOfId":101} 
 Recived From Player 2 20:19:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:32 $ACTION_MASSAGE_REMOVE:  

 {"id":104} 
 Recived From Player 2 20:19:32 $ACTION_MASSAGE_REMOVE:  

 {"id":102} 
 Recived From Player 2 20:19:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Stack Was Emptied "}} 
 Recived From Player 2 20:19:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:19:33 $CLEAR_SE_VIS:  
 Recived From Player 2 20:19:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Recived From Player 2 20:19:33 $CLEAR_SE_VIS:  
 Recived From Player 2 20:19:33 $REPLACE_STACK:  

 {"currentStack":[]} 
 Recived From Player 2 20:19:33 $CLEAR_SE_VIS:  
 Recived From Player 2 20:19:33 $END_TURN:  
 Recived From Player 2 20:19:33 $SET_TURN:  

 {"playerId":1} 
 Recived From Player 2 20:19:33 $START_TURN:  

 {"playerId":1} 
 Recived From Player 2 20:19:33 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Recived From Player 2 20:19:33 $ACTION_MASSAGE_REMOVE:  

 {"id":66} 
 Recived From Player 2 20:19:33 $STACK_EMPTIED:  

 {"playerId":1} 
 Recived From Player 2 20:19:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:19:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Recived From Player 2 20:19:36 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:19:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:19:37 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":94,"flipIfFlipped":false,"playerId":1} 
 Recived From Player 2 20:19:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Recived From Player 2 20:19:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Loot For Start Turn"} 
 Recived From Player 2 20:19:40 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:19:40 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:19:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:19:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Credit Card "} 
 Recived From Player 2 20:19:52 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":94,"flipIfFlipped":true,"playerId":1} 
 Recived From Player 2 20:19:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Credit Card "} 
 Recived From Player 2 20:19:52 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:19:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:19:55 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":94,"flipIfFlipped":true,"playerId":1} 
 Recived From Player 2 20:19:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Credit Card "} 
 Recived From Player 2 20:19:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is Going To Play Credit Card "} 
 Recived From Player 2 20:19:58 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:19:58 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:20:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Recived From Player 2 20:20:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10"} 
 Recived From Player 2 20:20:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10"} 
 Recived From Player 2 20:20:17 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:20:17 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:20:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10"} 
 Recived From Player 2 20:20:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10 \n2:Refill Store slot"} 
 Recived From Player 2 20:20:20 $MOVE_CARD_END:  

 {"moveIndex":17,"cardId":163,"flipIfFlipped":true,"playerId":1} 
 Recived From Player 2 20:20:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10 \n2:Refill Store slot"} 
 Recived From Player 2 20:20:23 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:20:23 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:20:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10"} 
 Recived From Player 2 20:20:24 $LOG_ERROR:  

 "no stack effect to show" 
//////Error From Player 2////
 [object Object]
////// 
 Recived From Player 2 20:20:24 $SHOW_ANNOUNCEMENT:  

 {"text":"no stack effect to show"} 
 Recived From Player 2 20:20:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10"} 
 Recived From Player 2 20:20:27 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:20:27 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:20:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10"} 
 Recived From Player 2 20:20:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10 \n2:Player 1 declared attack on Monster Deck"} 
 Recived From Player 2 20:20:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10 \n2:Player 1 declared attack on Monster Deck"} 
 Recived From Player 2 20:20:48 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:20:48 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:21:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 Is About To Buy Eye Of Greed For 10 \n2:Player 1 declared attack on Monster Deck"} 
 Recived From Player 2 20:21:05 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[]} 
 Recived From Player 2 20:21:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Recived From Player 2 20:46:42 $MATCH: 