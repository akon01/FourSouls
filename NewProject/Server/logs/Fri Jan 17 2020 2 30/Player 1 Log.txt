Start Log 
 Player 1 02:30:43 $START_GAME:  
 Player 1 02:30:43 $MOVE_TO_TABLE:  
 Player 1 02:30:52 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 02:30:53 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":288}],"result":true,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 02:30:54 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":133,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:54 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":50,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:55 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":64,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:55 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":11,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:56 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":85,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:56 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":120,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:57 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:30:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:57 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:30:57 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":76,"flipIfFlipped":false,"playerId":2} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 02:30:58 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:30:59 $MOVE_CARD:  

 {"moveIndex":8,"cardId":161,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 02:31:00 $REGISTER_PASSIVE_ITEM:  

 {"cardId":161} 
 Player 1 02:31:00 $MOVE_CARD:  

 {"moveIndex":9,"cardId":161,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 02:31:00 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":161,"isReward":true} 
 Player 1 02:31:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":287,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:08 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Conjoined Fatty"} 
 Player 1 02:31:09 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 02:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:12 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:12 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[281],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:31:13 $END_PUT_ON_STACK:  

 {"playerId":2} 
 Player 1 02:31:13 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:13 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 1 02:31:15 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":161,"particleType":6} 
 Player 1 02:31:29 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":76} 
 Player 1 02:31:29 $MOVE_CARD:  

 {"moveIndex":10,"cardId":76,"placeID":1,"flipIfFlipped":false,"playerId":1,"placeType":"Hand"} 
 Player 1 02:31:29 $FLIP_CARD:  

 {"cardId":76} 
 Player 1 02:31:29 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":76} 
 Player 1 02:31:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":3}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":3}}],"result":null,"preventMethod":false,"methodScopeId":281,"scopeIsPlayer":false,"index":1},"isAfterActivation":false,"index":1} 
 Player 1 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[281],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 1 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:29 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":3,"creatorCardId":281,"numberRolled":6,"rollingPlayerCardId":281,"stackEffectType":2,"attackedMonsterCardId":232},{"effectCollectedData":{"effectTargets":[281],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":287,"effectCardPlayer":287},"entityId":4,"creatorCardId":287,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster> \n2:Activate Dead Bird "} 
 Player 1 02:31:30 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty \n2:Player 2 is rolling against Conjoined Fatty<Monster>"} 
 Player 1 02:31:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Conjoined Fatty"} 
 Player 1 02:31:32 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}