Start Log 
 Player 2 01:57:37 $MOVE_TO_TABLE:  
 Player 2 01:57:45 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 01:57:45 $CHOOSE_FOR_EDEN:  

 {"playerId":1,"originPlayerId":2} 
 Player 2 01:57:48 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[156,168,192,225,157,185,184,221,175,213,191,219,176,152,169,215,203,218,208,200,159,146,174,209,195,177,179,224,150,167,183,189,211,198,154,151,186,196,155,172,197,212,188,171,202,181,214,216,178,190,210,201,223,206,164,180,149,205,199,187,204,161,222,147,158,193,170,163,145,162,194,160,165,217,173,153,207,220,148,166]} 
 Player 2 01:57:49 $FLIP_CARD:  

 {"cardId":182} 
 Player 2 01:57:49 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":1,"charCardId":288,"itemCardId":182} 
 Player 2 01:57:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 01:57:49 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":296,"itemCardId":297} 
 Player 2 01:57:49 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[40,21,31,59,57,23,14,32,81,104,133,140,94,77,25,36,55,113,29,129,126,27,68,139,114,24,49,62,47,91,101,53,111,128,16,107,117,97,95,37,137,44,88,61,30,131,92,112,85,12,52,96,72,9,10,74,20,45,64,78,136,110,58,87,102,116,28,108,54,109,118,99,7,33,120,76,130,105,75,121,135,134,15,123,67,127,89,66,34,142,11,51,26,39,115,125,48,42,35,124,13,100,141,65,122,138,63,80,98,79,71,83,106,103,18,43,132,119,60,46,50,38,82,70,19,84,69,22,93,8,90,41,17,86,73,56]} 
 Player 2 01:57:49 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[276,260,248,271,237,263,281,269,275,235,262,236,280,242,240,247,244,256,234,239,255,273,238,228,258,264,254,233,265,278,272,268,251,250,252,266,270,232,261,241,259,246,229,230,279,249,277,267,274,245,257,253,231,243]} 
 Player 2 01:57:49 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[149,173,192,155,159,172,217,189,167,178,166,152,147,190,164,191,201,211,168,158,148,199,220,203,165,193,202,170,183,204,187,214,215,209,163,177,185,219,180,176,151,175,184,186,160,216,150,207,218,195,179,157,169,224,174,200,145,194,212,213,156,223,205,206,221,222,198,197,225,208,162,154,181,171,196,153,188,210,146,161]} 
 Player 2 01:57:49 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:57:49 $FLIP_CARD:  

 {"cardId":161} 
 Player 2 01:57:49 $ADD_STORE_CARD:  

 {"cardId":161} 
 Player 2 01:57:49 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 01:57:49 $FLIP_CARD:  

 {"cardId":146} 
 Player 2 01:57:49 $ADD_STORE_CARD:  

 {"cardId":146} 
 Player 2 01:57:49 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:57:49 $FLIP_CARD:  

 {"cardId":243} 
 Player 2 01:57:49 $REGISTER_PASSIVE_ITEM:  

 {"cardId":243} 
 Player 2 01:57:49 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":243} 
 Player 2 01:57:49 $NEW_MONSTER_ON_PLACE:  

 {"cardId":243,"monsterPlaceId":1} 
 Player 2 01:57:49 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 01:57:49 $FLIP_CARD:  

 {"cardId":231} 
 Player 2 01:57:49 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":231} 
 Player 2 01:57:49 $NEW_MONSTER_ON_PLACE:  

 {"cardId":231,"monsterPlaceId":2} 
 Player 2 01:57:49 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 01:57:49 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":288,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 01:57:49 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:49 $MOVE_CARD:  

 {"moveIndex":1,"cardId":56,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:50 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":56} 
 Player 2 01:57:50 $FLIP_CARD:  

 {"cardId":56} 
 Player 2 01:57:50 $FLIP_CARD:  

 {"cardId":56} 
 Player 2 01:57:50 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":56} 
 Player 2 01:57:50 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:50 $MOVE_CARD:  

 {"moveIndex":2,"cardId":73,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:50 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":73} 
 Player 2 01:57:50 $FLIP_CARD:  

 {"cardId":73} 
 Player 2 01:57:50 $FLIP_CARD:  

 {"cardId":73} 
 Player 2 01:57:50 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":73} 
 Player 2 01:57:50 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:50 $MOVE_CARD:  

 {"moveIndex":3,"cardId":86,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:51 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":86} 
 Player 2 01:57:51 $FLIP_CARD:  

 {"cardId":86} 
 Player 2 01:57:51 $FLIP_CARD:  

 {"cardId":86} 
 Player 2 01:57:51 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":86} 
 Player 2 01:57:51 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 01:57:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 01:57:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:51 $MOVE_CARD:  

 {"moveIndex":4,"cardId":17,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:51 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":17} 
 Player 2 01:57:51 $FLIP_CARD:  

 {"cardId":17} 
 Player 2 01:57:51 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":17} 
 Player 2 01:57:51 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:51 $MOVE_CARD:  

 {"moveIndex":5,"cardId":41,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:52 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":41} 
 Player 2 01:57:52 $FLIP_CARD:  

 {"cardId":41} 
 Player 2 01:57:52 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":41} 
 Player 2 01:57:52 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:52 $MOVE_CARD:  

 {"moveIndex":6,"cardId":90,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:52 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":90} 
 Player 2 01:57:52 $FLIP_CARD:  

 {"cardId":90} 
 Player 2 01:57:52 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":90} 
 Player 2 01:57:52 $GAME_HAS_STARTED:  
 Player 2 01:57:52 $SET_TURN:  

 {"playerId":2} 
 Player 2 01:57:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:57:52 $NEXT_STACK_ID:  
 Player 2 01:57:52 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:57:52 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 01:57:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:57:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 01:57:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 01:57:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:57:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:57:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 01:57:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 01:57:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 01:57:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:57:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 01:57:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:57:52 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:57:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 01:57:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 01:57:53 $MOVE_CARD:  

 {"moveIndex":7,"cardId":8,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 01:57:53 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":8} 
 Player 2 01:57:53 $FLIP_CARD:  

 {"cardId":8} 
 Player 2 01:57:53 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":8} 
 Player 2 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 01:57:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 01:57:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 01:57:53 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:53 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 01:57:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 01:57:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 01:57:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:57:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:57:53 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 01:57:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 01:57:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:57:54 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 01:57:54 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 01:57:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 01:57:54 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:57:54 $UPDATE_ACTIONS:  
 Player 2 01:58:16 $SHOW_DECISION:  

 {"startCardId":41,"endCardId":41,"flipEndCard":true} 
 Player 2 01:58:19 $NEXT_STACK_ID:  
 Player 2 01:58:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 2 01:58:19 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3) "} 
 Player 2 01:58:20 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 01:58:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 
 Player 2 01:58:20 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":41} 
 Player 2 01:58:20 $MOVE_CARD:  

 {"moveIndex":8,"cardId":41,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:58:20 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":41} 
 Player 2 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3): addMoney"} 
 Player 2 01:58:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3): addMoney"} 
 Player 2 01:58:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":41,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 
 Player 2 01:58:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 01:58:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:20 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 01:58:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 01:58:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:58:20 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:58:20 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 01:58:20 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 01:58:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 
 Player 2 01:58:20 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3): addMoney"} 
 Player 2 01:58:20 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":41,"particleType":6} 
 Player 2 01:58:22 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":41,"particleType":6} 
 Player 2 01:58:22 $SET_MONEY:  

 {"playerId":2,"numOfCoins":6} 
 Player 2 01:58:22 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 
 Player 2 01:58:22 $REMOVE_FROM_PILE:  

 {"cardId":41} 
 Player 2 01:58:22 $MOVE_CARD:  

 {"moveIndex":9,"cardId":41,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:58:23 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":41} 
 Player 2 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 3 Cents(3): addMoney"} 
 Player 2 01:58:23 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:23 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 
 Player 2 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:23 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":41,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 
 Player 2 01:58:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 01:58:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:58:23 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:58:23 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 01:58:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 01:58:23 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:23 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 01:58:23 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 01:58:23 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 01:58:23 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:27 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":296} 
 Player 2 01:58:30 $NEXT_STACK_ID:  
 Player 2 01:58:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 2 01:58:30 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 01:58:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 2 01:58:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 01:58:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 
 Player 2 01:58:33 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":17,"flipEndCard":true} 
 Player 2 01:58:36 $USE_ITEM:  

 {"cardId":296} 
 Player 2 01:58:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 2 01:58:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:58:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 
 Player 2 01:58:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 01:58:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:36 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 01:58:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 01:58:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:58:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:58:36 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 01:58:36 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 01:58:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 
 Player 2 01:58:36 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":296,"particleType":6} 
 Player 2 01:58:38 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":296,"particleType":6} 
 Player 2 01:58:38 $NEXT_STACK_ID:  
 Player 2 01:58:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 2 01:58:38 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":17} 
 Player 2 01:58:38 $MOVE_CARD:  

 {"moveIndex":10,"cardId":17,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:58:38 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":17} 
 Player 2 01:58:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney \n2:Player 2 activated Samson"} 
 Player 2 01:58:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney \n2:Player 2 activated Samson"} 
 Player 2 01:58:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":17,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney \n2:Player 2 activated Samson"} 
 Player 2 01:58:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney \n2:Player 2 activated Samson"} 
 Player 2 01:58:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":17,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney \n2:Player 2 activated Samson"} 
 Player 2 01:58:39 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney \n2:Player 2 activated Samson"} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney \n2:Player 2 activated Samson"} 
 Player 2 01:58:39 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":17,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney \n2:Player 2 activated Samson"} 
 Player 2 01:58:39 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney"} 
 Player 2 01:58:39 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:58:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 
 Player 2 01:58:39 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney"} 
 Player 2 01:58:39 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 01:58:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 
 Player 2 01:58:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 
 Player 2 01:58:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:39 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 01:58:39 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 
 Player 2 01:58:39 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:58:39 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:58:40 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 01:58:40 $ACTION_MASSAGE_REMOVE:  

 {"id":26} 
 Player 2 01:58:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 
 Player 2 01:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney"} 
 Player 2 01:58:40 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":17,"particleType":6} 
 Player 2 01:58:42 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":17,"particleType":6} 
 Player 2 01:58:42 $SET_MONEY:  

 {"playerId":2,"numOfCoins":7} 
 Player 2 01:58:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 
 Player 2 01:58:42 $REMOVE_FROM_PILE:  

 {"cardId":17} 
 Player 2 01:58:42 $MOVE_CARD:  

 {"moveIndex":11,"cardId":17,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:58:42 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":17} 
 Player 2 01:58:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 1 Penny(9): addMoney"} 
 Player 2 01:58:42 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:42 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 
 Player 2 01:58:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:42 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":17,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 01:58:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 
 Player 2 01:58:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 
 Player 2 01:58:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:58:42 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:58:43 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 01:58:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 
 Player 2 01:58:43 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:43 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 01:58:43 $ACTION_MASSAGE_REMOVE:  

 {"id":31} 
 Player 2 01:58:43 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Stack Was Emptied "}} 
 Player 2 01:58:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:45 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":243} 
 Player 2 01:58:48 $NEXT_STACK_ID:  
 Player 2 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:58:48 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 2 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:58:48 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 2 01:58:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Add DeclareAttack 5 "}} 
 Player 2 01:58:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:58:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 2 01:58:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":36,"_text":"Response Adding DeclareAttack 5"},"childOfId":35} 
 Player 2 01:58:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 
 Player 2 01:58:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:48 $ACTION_MASSAGE_REMOVE:  

 {"id":37} 
 Player 2 01:58:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 
 Player 2 01:58:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:58:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:58:48 $ACTION_MASSAGE_REMOVE:  

 {"id":38} 
 Player 2 01:58:48 $ACTION_MASSAGE_REMOVE:  

 {"id":36} 
 Player 2 01:58:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":39,"_text":"Resolve DeclareAttack 5 "}} 
 Player 2 01:58:48 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":5} 
 Player 2 01:58:48 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 
 Player 2 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Dark One"} 
 Player 2 01:58:48 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":5,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 2 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:48 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":5,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 2 01:58:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":40,"_text":"Remove After Resolve DeclareAttack 5  "}} 
 Player 2 01:58:48 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:48 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":5,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":243,"stackEffectType":4}} 
 Player 2 01:58:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":41,"_text":"Response Remove After Resolve DeclareAttack 5"},"childOfId":40} 
 Player 2 01:58:48 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 
 Player 2 01:58:48 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:58:48 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:58:49 $ACTION_MASSAGE_REMOVE:  

 {"id":42} 
 Player 2 01:58:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 
 Player 2 01:58:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:58:49 $ACTION_MASSAGE_REMOVE:  

 {"id":43} 
 Player 2 01:58:49 $ACTION_MASSAGE_REMOVE:  

 {"id":41} 
 Player 2 01:58:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":44,"_text":"Stack Was Emptied "}} 
 Player 2 01:58:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:58 $NEXT_STACK_ID:  
 Player 2 01:58:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:58:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:58:58 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:58:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:58:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:58:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":45,"_text":"Add AttackRoll 6 "}} 
 Player 2 01:58:58 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 01:59:00 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 01:59:00 $UPDATE_STACK_VIS:  

 {"stackId":6,"text":"player rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:00 $SHOW_DICE_ROLL:  

 {"stackId":6} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":46,"_text":"Response Adding AttackRoll 6"},"childOfId":45} 
 Player 2 01:59:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 
 Player 2 01:59:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:03 $ACTION_MASSAGE_REMOVE:  

 {"id":47} 
 Player 2 01:59:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 
 Player 2 01:59:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:03 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:03 $ACTION_MASSAGE_REMOVE:  

 {"id":48} 
 Player 2 01:59:03 $ACTION_MASSAGE_REMOVE:  

 {"id":46} 
 Player 2 01:59:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":49,"_text":"Resolve AttackRoll 6 "}} 
 Player 2 01:59:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":50,"_text":"Added 0 to original roll"}} 
 Player 2 01:59:03 $NEXT_STACK_ID:  
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $REPLACE_STACK:  

 {"currentStack":[{"entityId":7,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}]} 
 Player 2 01:59:03 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 3 vs Dark One<Monster>"} 
 Player 2 01:59:03 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":6,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:03 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":6,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":51,"_text":"Remove After Resolve AttackRoll 6  "}} 
 Player 2 01:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":6,"creatorCardId":296,"numberRolled":3,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":52,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":51} 
 Player 2 01:59:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 
 Player 2 01:59:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:04 $ACTION_MASSAGE_REMOVE:  

 {"id":53} 
 Player 2 01:59:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 
 Player 2 01:59:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:04 $ACTION_MASSAGE_REMOVE:  

 {"id":54} 
 Player 2 01:59:04 $ACTION_MASSAGE_REMOVE:  

 {"id":52} 
 Player 2 01:59:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":55,"_text":"Resolve CombatDamage 7 "}} 
 Player 2 01:59:04 $UPDATE_STACK_VIS:  

 {"stackId":7,"text":"Samson will deal 1 combat damage to Dark One"} 
 Player 2 01:59:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 01:59:04 $NEXT_STACK_ID:  
 Player 2 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:04 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:04 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":8,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:59:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":56,"_text":"Add ActivatePassiveEffect 8 "}} 
 Player 2 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:05 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":8,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:59:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":57,"_text":"Response Adding ActivatePassiveEffect 8"},"childOfId":56} 
 Player 2 01:59:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 
 Player 2 01:59:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:05 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:05 $ACTION_MASSAGE_REMOVE:  

 {"id":58} 
 Player 2 01:59:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 
 Player 2 01:59:05 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:05 $ACTION_MASSAGE_REMOVE:  

 {"id":59} 
 Player 2 01:59:05 $ACTION_MASSAGE_REMOVE:  

 {"id":57} 
 Player 2 01:59:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":60,"_text":"Resolve ActivatePassiveEffect 8 "}} 
 Player 2 01:59:05 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":6} 
 Player 2 01:59:07 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":6} 
 Player 2 01:59:07 $MONSTER_GAIN_DMG:  

 {"cardId":243,"DMGToGain":1} 
 Player 2 01:59:07 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:07 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":8,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:07 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":8,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:59:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":61,"_text":"Remove After Resolve ActivatePassiveEffect 8  "}} 
 Player 2 01:59:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:07 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":8,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:59:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":62,"_text":"Response Remove After Resolve ActivatePassiveEffect 8"},"childOfId":61} 
 Player 2 01:59:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":63,"_text":"Wait For Response From Player 2 "},"childOfId":61} 
 Player 2 01:59:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:07 $ACTION_MASSAGE_REMOVE:  

 {"id":63} 
 Player 2 01:59:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":64,"_text":"Wait For Response From Player 1 "},"childOfId":61} 
 Player 2 01:59:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:07 $ACTION_MASSAGE_REMOVE:  

 {"id":64} 
 Player 2 01:59:07 $ACTION_MASSAGE_REMOVE:  

 {"id":62} 
 Player 2 01:59:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":65,"_text":"Resolve CombatDamage 7 "}} 
 Player 2 01:59:07 $MONSTER_GET_DAMAGED:  

 {"cardId":243,"hpLeft":2,"damageDealerId":296} 
 Player 2 01:59:08 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 01:59:08 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":296},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":8,"originStackId":7},"isAfterActivation":true,"index":8} 
 Player 2 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":7,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:08 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":7,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":66,"_text":"Remove After Resolve CombatDamage 7  "}} 
 Player 2 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:08 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":7,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":67,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":66} 
 Player 2 01:59:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":68,"_text":"Wait For Response From Player 1 "},"childOfId":66} 
 Player 2 01:59:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:08 $ACTION_MASSAGE_REMOVE:  

 {"id":68} 
 Player 2 01:59:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":69,"_text":"Wait For Response From Player 2 "},"childOfId":66} 
 Player 2 01:59:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:08 $ACTION_MASSAGE_REMOVE:  

 {"id":69} 
 Player 2 01:59:08 $ACTION_MASSAGE_REMOVE:  

 {"id":67} 
 Player 2 01:59:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":70,"_text":"Stack Was Emptied "}} 
 Player 2 01:59:08 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:09 $NEXT_STACK_ID:  
 Player 2 01:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:59:09 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:09 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:59:09 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":71,"_text":"Add AttackRoll 9 "}} 
 Player 2 01:59:09 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 01:59:10 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 01:59:10 $UPDATE_STACK_VIS:  

 {"stackId":9,"text":"player rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:10 $SHOW_DICE_ROLL:  

 {"stackId":9} 
 Player 2 01:59:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:13 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":72,"_text":"Response Adding AttackRoll 9"},"childOfId":71} 
 Player 2 01:59:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":73,"_text":"Wait For Response From Player 2 "},"childOfId":71} 
 Player 2 01:59:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:13 $ACTION_MASSAGE_REMOVE:  

 {"id":73} 
 Player 2 01:59:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":71} 
 Player 2 01:59:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:14 $ACTION_MASSAGE_REMOVE:  

 {"id":74} 
 Player 2 01:59:14 $ACTION_MASSAGE_REMOVE:  

 {"id":72} 
 Player 2 01:59:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":75,"_text":"Resolve AttackRoll 9 "}} 
 Player 2 01:59:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":76,"_text":"Added 0 to original roll"}} 
 Player 2 01:59:14 $NEXT_STACK_ID:  
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:14 $REPLACE_STACK:  

 {"currentStack":[{"entityId":10,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":9,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}]} 
 Player 2 01:59:14 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":9,"originStackId":9},"isAfterActivation":true,"index":9} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Player 2 rolled 6 vs Dark One<Monster>"} 
 Player 2 01:59:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":9,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":9,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":77,"_text":"Remove After Resolve AttackRoll 9  "}} 
 Player 2 01:59:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":9,"creatorCardId":296,"numberRolled":6,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":78,"_text":"Response Remove After Resolve AttackRoll 9"},"childOfId":77} 
 Player 2 01:59:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 
 Player 2 01:59:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:14 $ACTION_MASSAGE_REMOVE:  

 {"id":79} 
 Player 2 01:59:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 
 Player 2 01:59:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:15 $ACTION_MASSAGE_REMOVE:  

 {"id":80} 
 Player 2 01:59:15 $ACTION_MASSAGE_REMOVE:  

 {"id":78} 
 Player 2 01:59:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":81,"_text":"Resolve CombatDamage 10 "}} 
 Player 2 01:59:15 $UPDATE_STACK_VIS:  

 {"stackId":10,"text":"Samson will deal 1 combat damage to Dark One"} 
 Player 2 01:59:15 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 01:59:15 $NEXT_STACK_ID:  
 Player 2 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:15 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":11,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 01:59:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":82,"_text":"Add ActivatePassiveEffect 11 "}} 
 Player 2 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":11,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":243,"cardId":243,"effctType":0},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:59:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":83,"_text":"Response Adding ActivatePassiveEffect 11"},"childOfId":82} 
 Player 2 01:59:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":82} 
 Player 2 01:59:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:16 $ACTION_MASSAGE_REMOVE:  

 {"id":84} 
 Player 2 01:59:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":82} 
 Player 2 01:59:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:16 $ACTION_MASSAGE_REMOVE:  

 {"id":85} 
 Player 2 01:59:16 $ACTION_MASSAGE_REMOVE:  

 {"id":83} 
 Player 2 01:59:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":86,"_text":"Resolve ActivatePassiveEffect 11 "}} 
 Player 2 01:59:16 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":6} 
 Player 2 01:59:18 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":6} 
 Player 2 01:59:18 $MONSTER_GAIN_DMG:  

 {"cardId":243,"DMGToGain":1} 
 Player 2 01:59:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":false,"index":2} 
 Player 2 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One \n2:Activate Dark One effect GainStats<GainStats>"} 
 Player 2 01:59:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":11,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":11,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:59:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":87,"_text":"Remove After Resolve ActivatePassiveEffect 11  "}} 
 Player 2 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[243],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":243,"effectCardPlayer":243},"entityId":11,"creatorCardId":296,"hasLockingStackEffect":false,"cardActivatorId":243,"cardWithEffectId":243,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 01:59:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":88,"_text":"Response Remove After Resolve ActivatePassiveEffect 11"},"childOfId":87} 
 Player 2 01:59:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":89,"_text":"Wait For Response From Player 2 "},"childOfId":87} 
 Player 2 01:59:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:18 $ACTION_MASSAGE_REMOVE:  

 {"id":89} 
 Player 2 01:59:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":87} 
 Player 2 01:59:18 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:18 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:18 $ACTION_MASSAGE_REMOVE:  

 {"id":90} 
 Player 2 01:59:18 $ACTION_MASSAGE_REMOVE:  

 {"id":88} 
 Player 2 01:59:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":91,"_text":"Resolve CombatDamage 10 "}} 
 Player 2 01:59:18 $MONSTER_GET_DAMAGED:  

 {"cardId":243,"hpLeft":1,"damageDealerId":296} 
 Player 2 01:59:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":243,"scopeIsPlayer":false,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 01:59:18 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":296},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":10,"originStackId":10},"isAfterActivation":true,"index":10} 
 Player 2 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Dark One"} 
 Player 2 01:59:18 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":10,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:18 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":10,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":92,"_text":"Remove After Resolve CombatDamage 10  "}} 
 Player 2 01:59:18 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:18 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":10,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":243,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:18 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":93,"_text":"Response Remove After Resolve CombatDamage 10"},"childOfId":92} 
 Player 2 01:59:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":94,"_text":"Wait For Response From Player 1 "},"childOfId":92} 
 Player 2 01:59:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:19 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:19 $ACTION_MASSAGE_REMOVE:  

 {"id":94} 
 Player 2 01:59:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":95,"_text":"Wait For Response From Player 2 "},"childOfId":92} 
 Player 2 01:59:19 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:19 $ACTION_MASSAGE_REMOVE:  

 {"id":95} 
 Player 2 01:59:19 $ACTION_MASSAGE_REMOVE:  

 {"id":93} 
 Player 2 01:59:19 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":96,"_text":"Stack Was Emptied "}} 
 Player 2 01:59:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:24 $NEXT_STACK_ID:  
 Player 2 01:59:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:59:24 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Dark One<Monster>"} 
 Player 2 01:59:24 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":97,"_text":"Add AttackRoll 12 "}} 
 Player 2 01:59:24 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 01:59:26 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 01:59:26 $UPDATE_STACK_VIS:  

 {"stackId":12,"text":"player rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:26 $SHOW_DICE_ROLL:  

 {"stackId":12} 
 Player 2 01:59:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":98,"_text":"Response Adding AttackRoll 12"},"childOfId":97} 
 Player 2 01:59:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":97} 
 Player 2 01:59:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:29 $ACTION_MASSAGE_REMOVE:  

 {"id":99} 
 Player 2 01:59:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":100,"_text":"Wait For Response From Player 1 "},"childOfId":97} 
 Player 2 01:59:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:29 $ACTION_MASSAGE_REMOVE:  

 {"id":100} 
 Player 2 01:59:29 $ACTION_MASSAGE_REMOVE:  

 {"id":98} 
 Player 2 01:59:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":101,"_text":"Resolve AttackRoll 12 "}} 
 Player 2 01:59:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":102,"_text":"Added 0 to original roll"}} 
 Player 2 01:59:29 $NEXT_STACK_ID:  
 Player 2 01:59:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":13,"creatorCardId":296,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":296,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:30 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:30 $REPLACE_STACK:  

 {"currentStack":[{"entityId":13,"creatorCardId":296,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}]} 
 Player 2 01:59:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":11,"originStackId":12},"isAfterActivation":true,"index":11} 
 Player 2 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson \n2:Player 2 rolled 5 vs Dark One<Monster>"} 
 Player 2 01:59:30 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":12,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 2 01:59:30 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":12,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":103,"_text":"Remove After Resolve AttackRoll 12  "}} 
 Player 2 01:59:30 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Samson"} 
 Player 2 01:59:30 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":12,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":243}} 
 Player 2 01:59:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":104,"_text":"Response Remove After Resolve AttackRoll 12"},"childOfId":103} 
 Player 2 01:59:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":105,"_text":"Wait For Response From Player 2 "},"childOfId":103} 
 Player 2 01:59:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:30 $ACTION_MASSAGE_REMOVE:  

 {"id":105} 
 Player 2 01:59:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":103} 
 Player 2 01:59:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:30 $ACTION_MASSAGE_REMOVE:  

 {"id":106} 
 Player 2 01:59:30 $ACTION_MASSAGE_REMOVE:  

 {"id":104} 
 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":107,"_text":"Resolve CombatDamage 13 "}} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson"} 
 Player 2 01:59:31 $UPDATE_STACK_VIS:  

 {"stackId":13,"text":"Dark One will deal 3 combat damage to Samson"} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson"} 
 Player 2 01:59:31 $PLAYER_GET_HIT:  

 {"playerId":2,"damage":3,"damageDealerId":243} 
 Player 2 01:59:31 $NEXT_STACK_ID:  
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson"} 
 Player 2 01:59:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson \n2:Player 2 is about to die"} 
 Player 2 01:59:31 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243}} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson \n2:Player 2 is about to die"} 
 Player 2 01:59:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":296,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson \n2:Player 2 is about to die"} 
 Player 2 01:59:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":296,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson \n2:Player 2 is about to die"} 
 Player 2 01:59:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243}} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson \n2:Player 2 is about to die"} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One 3 combat damage to Samson \n2:Player 2 is about to die"} 
 Player 2 01:59:31 $REPLACE_STACK:  

 {"currentStack":[{"entityId":13,"creatorCardId":296,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243}]} 
 Player 2 01:59:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":3},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 
 Player 2 01:59:31 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":3},{"type":2,"number":1},{"type":0,"number":243}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":13,"originStackId":13},"isAfterActivation":true,"index":13} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:59:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":13,"creatorCardId":296,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":108,"_text":"Remove After Resolve CombatDamage 13  "}} 
 Player 2 01:59:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:59:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":13,"creatorCardId":296,"entityToDoDamageCardId":243,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":109,"_text":"Response Remove After Resolve CombatDamage 13"},"childOfId":108} 
 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":108} 
 Player 2 01:59:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:31 $ACTION_MASSAGE_REMOVE:  

 {"id":110} 
 Player 2 01:59:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":108} 
 Player 2 01:59:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:31 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:32 $ACTION_MASSAGE_REMOVE:  

 {"id":111} 
 Player 2 01:59:32 $ACTION_MASSAGE_REMOVE:  

 {"id":109} 
 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":112,"_text":"Resolve PlayerDeath 14 "}} 
 Player 2 01:59:32 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":243,"particleType":5} 
 Player 2 01:59:32 $CANCEL_ATTACK:  
 Player 2 01:59:32 $NEXT_STACK_ID:  
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die"} 
 Player 2 01:59:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243}} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243}} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $REPLACE_STACK:  

 {"currentStack":[{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243},{"entityId":15,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}]} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to die \n2:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243}} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243}} 
 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":113,"_text":"Remove After Resolve PlayerDeath 14  "}} 
 Player 2 01:59:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 01:59:32 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":14,"creatorCardId":296,"playerToDieCardId":296,"stackEffectType":15,"killerId":243}} 
 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":114,"_text":"Response Remove After Resolve PlayerDeath 14"},"childOfId":113} 
 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Wait For Response From Player 2 "},"childOfId":113} 
 Player 2 01:59:32 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:32 $ACTION_MASSAGE_REMOVE:  

 {"id":115} 
 Player 2 01:59:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Wait For Response From Player 1 "},"childOfId":113} 
 Player 2 01:59:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:33 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:33 $ACTION_MASSAGE_REMOVE:  

 {"id":116} 
 Player 2 01:59:33 $ACTION_MASSAGE_REMOVE:  

 {"id":114} 
 Player 2 01:59:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Resolve PlayerDeathPenalties 15 "}} 
 Player 2 01:59:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Player 2 pays Penalties"}} 
 Player 2 01:59:33 $SET_MONEY:  

 {"playerId":2,"numOfCoins":6} 
 Player 2 01:59:33 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":14,"originStackId":-1},"isAfterActivation":true,"index":14} 
 Player 2 01:59:35 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":8} 
 Player 2 01:59:35 $MOVE_CARD:  

 {"moveIndex":12,"cardId":8,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 01:59:36 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":8} 
 Player 2 01:59:36 $USE_ITEM:  

 {"cardId":296} 
 Player 2 01:59:36 $USE_ITEM:  

 {"cardId":297} 
 Player 2 01:59:36 $PLAYER_DIED:  

 {"playerId":2} 
 Player 2 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to pay death penalties"} 
 Player 2 01:59:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 
 Player 2 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 
 Player 2 01:59:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":119,"_text":"Remove After Resolve PlayerDeathPenalties 15  "}} 
 Player 2 01:59:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":296,"playerToPayCardId":296,"stackEffectType":16}} 
 Player 2 01:59:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":120,"_text":"Response Remove After Resolve PlayerDeathPenalties 15"},"childOfId":119} 
 Player 2 01:59:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":121,"_text":"Wait For Response From Player 1 "},"childOfId":119} 
 Player 2 01:59:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 01:59:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 01:59:36 $ACTION_MASSAGE_REMOVE:  

 {"id":121} 
 Player 2 01:59:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":122,"_text":"Wait For Response From Player 2 "},"childOfId":119} 
 Player 2 01:59:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:36 $ACTION_MASSAGE_REMOVE:  

 {"id":122} 
 Player 2 01:59:37 $ACTION_MASSAGE_REMOVE:  

 {"id":120} 
 Player 2 01:59:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":123,"_text":"Stack Was Emptied "}} 
 Player 2 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:37 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 01:59:37 $END_TURN:  
 Player 2 01:59:37 $SET_TURN:  

 {"playerId":1} 
 Player 2 01:59:37 $START_TURN:  

 {"playerId":1} 
 Player 2 01:59:37 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:37 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:38 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":93,"flipIfFlipped":false,"playerId":1} 
 Player 2 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 01:59:38 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on Dark One"} 
 Player 2 01:59:44 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:47 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:52 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 01:59:54 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 01:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 01:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 01:59:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:03 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is rolling against Dark One<Monster>"} 
 Player 2 02:00:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden"} 
 Player 2 02:00:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is about to die"} 
 Player 2 02:00:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Dark One combat damage to Eden \n2:Player 1 is about to die"} 
 Player 2 02:00:06 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 
 Player 2 02:00:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:00:13 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":93,"flipIfFlipped":true,"playerId":1} 
 Player 2 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is about to pay death penalties"} 
 Player 2 02:00:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 02:00:14 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:14 $RECHARGE_ITEM:  

 {"cardId":296} 
 Player 2 02:00:14 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":296} 
 Player 2 02:00:14 $RECHARGE_ITEM:  

 {"cardId":297} 
 Player 2 02:00:14 $PLAYER_RECHARGE_ITEM:  

 {"playerId":2,"cardId":297} 
 Player 2 02:00:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:14 $NEXT_STACK_ID:  
 Player 2 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:00:14 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":24,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:00:14 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":24,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 02:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":187,"_text":"Add StartTurnLoot 24 "}} 
 Player 2 02:00:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:00:14 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":24,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 02:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":188,"_text":"Response Adding StartTurnLoot 24"},"childOfId":187} 
 Player 2 02:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":189,"_text":"Wait For Response From Player 2 "},"childOfId":187} 
 Player 2 02:00:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:14 $ACTION_MASSAGE_REMOVE:  

 {"id":189} 
 Player 2 02:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":190,"_text":"Wait For Response From Player 1 "},"childOfId":187} 
 Player 2 02:00:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:00:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:00:14 $ACTION_MASSAGE_REMOVE:  

 {"id":190} 
 Player 2 02:00:14 $ACTION_MASSAGE_REMOVE:  

 {"id":188} 
 Player 2 02:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":191,"_text":"Resolve StartTurnLoot 24 "}} 
 Player 2 02:00:14 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 02:00:14 $MOVE_CARD:  

 {"moveIndex":15,"cardId":22,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 02:00:15 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":22} 
 Player 2 02:00:15 $FLIP_CARD:  

 {"cardId":22} 
 Player 2 02:00:15 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":22} 
 Player 2 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 02:00:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":24,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:15 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":24,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 02:00:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":192,"_text":"Remove After Resolve StartTurnLoot 24  "}} 
 Player 2 02:00:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:15 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":24,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 
 Player 2 02:00:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":193,"_text":"Response Remove After Resolve StartTurnLoot 24"},"childOfId":192} 
 Player 2 02:00:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":194,"_text":"Wait For Response From Player 1 "},"childOfId":192} 
 Player 2 02:00:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:00:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:00:15 $ACTION_MASSAGE_REMOVE:  

 {"id":194} 
 Player 2 02:00:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":195,"_text":"Wait For Response From Player 2 "},"childOfId":192} 
 Player 2 02:00:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:15 $ACTION_MASSAGE_REMOVE:  

 {"id":195} 
 Player 2 02:00:16 $ACTION_MASSAGE_REMOVE:  

 {"id":193} 
 Player 2 02:00:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":196,"_text":"Stack Was Emptied "}} 
 Player 2 02:00:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:30 $SHOW_DECISION:  

 {"startCardId":22,"endCardId":22,"flipEndCard":true} 
 Player 2 02:00:33 $NEXT_STACK_ID:  
 Player 2 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 2 02:00:33 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":25,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2) "} 
 Player 2 02:00:33 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 
 Player 2 02:00:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":197,"_text":"Add PlayLootCardStackEffect 25 "}} 
 Player 2 02:00:33 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":22} 
 Player 2 02:00:33 $MOVE_CARD:  

 {"moveIndex":16,"cardId":22,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 02:00:33 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":22} 
 Player 2 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2): addMoney"} 
 Player 2 02:00:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:33 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2): addMoney"} 
 Player 2 02:00:33 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":22,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":198,"_text":"Response Adding PlayLootCardStackEffect 25"},"childOfId":197} 
 Player 2 02:00:33 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":199,"_text":"Wait For Response From Player 2 "},"childOfId":197} 
 Player 2 02:00:33 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:34 $ACTION_MASSAGE_REMOVE:  

 {"id":199} 
 Player 2 02:00:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":200,"_text":"Wait For Response From Player 1 "},"childOfId":197} 
 Player 2 02:00:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:00:34 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:00:34 $ACTION_MASSAGE_REMOVE:  

 {"id":200} 
 Player 2 02:00:34 $ACTION_MASSAGE_REMOVE:  

 {"id":198} 
 Player 2 02:00:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":201,"_text":"Resolve PlayLootCardStackEffect 25 "}} 
 Player 2 02:00:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2): addMoney"} 
 Player 2 02:00:34 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":22,"particleType":6} 
 Player 2 02:00:36 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":22,"particleType":6} 
 Player 2 02:00:36 $SET_MONEY:  

 {"playerId":2,"numOfCoins":8} 
 Player 2 02:00:36 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 
 Player 2 02:00:36 $REMOVE_FROM_PILE:  

 {"cardId":22} 
 Player 2 02:00:36 $MOVE_CARD:  

 {"moveIndex":17,"cardId":22,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 02:00:36 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":22} 
 Player 2 02:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play 2 Cents(2): addMoney"} 
 Player 2 02:00:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":25,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:36 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":25,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":202,"_text":"Remove After Resolve PlayLootCardStackEffect 25  "}} 
 Player 2 02:00:36 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:36 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":25,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":22,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":203,"_text":"Response Remove After Resolve PlayLootCardStackEffect 25"},"childOfId":202} 
 Player 2 02:00:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":204,"_text":"Wait For Response From Player 1 "},"childOfId":202} 
 Player 2 02:00:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:00:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:00:37 $ACTION_MASSAGE_REMOVE:  

 {"id":204} 
 Player 2 02:00:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":205,"_text":"Wait For Response From Player 2 "},"childOfId":202} 
 Player 2 02:00:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:37 $ACTION_MASSAGE_REMOVE:  

 {"id":205} 
 Player 2 02:00:37 $ACTION_MASSAGE_REMOVE:  

 {"id":203} 
 Player 2 02:00:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":206,"_text":"Stack Was Emptied "}} 
 Player 2 02:00:37 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:39 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":296} 
 Player 2 02:00:42 $NEXT_STACK_ID:  
 Player 2 02:00:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:00:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 2 02:00:42 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:00:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 2 02:00:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:00:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":207,"_text":"Add ActivateItem 26 "}} 
 Player 2 02:00:43 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":90,"flipEndCard":true} 
 Player 2 02:00:46 $USE_ITEM:  

 {"cardId":296} 
 Player 2 02:00:46 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:46 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 2 02:00:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:00:46 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":208,"_text":"Response Adding ActivateItem 26"},"childOfId":207} 
 Player 2 02:00:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":209,"_text":"Wait For Response From Player 2 "},"childOfId":207} 
 Player 2 02:00:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:47 $ACTION_MASSAGE_REMOVE:  

 {"id":209} 
 Player 2 02:00:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":210,"_text":"Wait For Response From Player 1 "},"childOfId":207} 
 Player 2 02:00:47 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:00:47 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:00:47 $ACTION_MASSAGE_REMOVE:  

 {"id":210} 
 Player 2 02:00:47 $ACTION_MASSAGE_REMOVE:  

 {"id":208} 
 Player 2 02:00:47 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":211,"_text":"Resolve ActivateItem 26 "}} 
 Player 2 02:00:47 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":296,"particleType":6} 
 Player 2 02:00:49 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":296,"particleType":6} 
 Player 2 02:00:49 $NEXT_STACK_ID:  
 Player 2 02:00:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 activated Samson"} 
 Player 2 02:00:49 $PLAYER_LOSE_LOOT:  

 {"playerId":2,"cardId":90} 
 Player 2 02:00:49 $MOVE_CARD:  

 {"moveIndex":18,"cardId":90,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 02:00:49 $MOVE_CARD_TO_PILE:  

 {"type":7,"cardId":90} 
 Player 2 02:00:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:Player 2 activated Samson"} 
 Player 2 02:00:51 $SHOW_DECISION:  

 {"startCardId":90,"endCardId":231} 
 Player 2 02:00:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:Player 2 activated Samson"} 
 Player 2 02:00:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:Player 2 activated Samson"} 
 Player 2 02:00:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:Player 2 activated Samson"} 
 Player 2 02:00:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:Player 2 activated Samson"} 
 Player 2 02:00:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:Player 2 activated Samson"} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:Player 2 activated Samson"} 
 Player 2 02:00:54 $REPLACE_STACK:  

 {"currentStack":[{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:Player 2 activated Samson"} 
 Player 2 02:00:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage"} 
 Player 2 02:00:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:00:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":212,"_text":"Remove After Resolve ActivateItem 26  "}} 
 Player 2 02:00:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage"} 
 Player 2 02:00:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":26,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":296,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:00:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":213,"_text":"Response Remove After Resolve ActivateItem 26"},"childOfId":212} 
 Player 2 02:00:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":214,"_text":"Wait For Response From Player 2 "},"childOfId":212} 
 Player 2 02:00:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:54 $ACTION_MASSAGE_REMOVE:  

 {"id":214} 
 Player 2 02:00:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":215,"_text":"Wait For Response From Player 1 "},"childOfId":212} 
 Player 2 02:00:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:00:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:00:55 $ACTION_MASSAGE_REMOVE:  

 {"id":215} 
 Player 2 02:00:55 $ACTION_MASSAGE_REMOVE:  

 {"id":213} 
 Player 2 02:00:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":216,"_text":"Resolve PlayLootCardStackEffect 27 "}} 
 Player 2 02:00:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage"} 
 Player 2 02:00:55 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":90,"particleType":6} 
 Player 2 02:00:57 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":90,"particleType":6} 
 Player 2 02:00:57 $MONSTER_GET_DAMAGED:  

 {"cardId":231,"hpLeft":0,"damageDealerId":296} 
 Player 2 02:00:57 $NEXT_STACK_ID:  
 Player 2 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage"} 
 Player 2 02:00:57 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 
 Player 2 02:00:57 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}} 
 Player 2 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 
 Player 2 02:00:57 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 
 Player 2 02:00:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 
 Player 2 02:00:57 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}} 
 Player 2 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 
 Player 2 02:00:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 
 Player 2 02:00:57 $REPLACE_STACK:  

 {"currentStack":[{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":90,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}]} 
 Player 2 02:00:57 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":231,"scopeIsPlayer":false,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 
 Player 2 02:00:57 $REMOVE_FROM_PILE:  

 {"cardId":90} 
 Player 2 02:00:57 $MOVE_CARD:  

 {"moveIndex":19,"cardId":90,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 02:00:58 $MOVE_CARD_TO_PILE:  

 {"type":1,"cardId":90} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play Bomb(3): DealDamage \n2:[object Object] killed by Samson"} 
 Player 2 02:00:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 02:00:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":217,"_text":"Remove After Resolve PlayLootCardStackEffect 27  "}} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 02:00:58 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":27,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":90,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 
 Player 2 02:00:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":218,"_text":"Response Remove After Resolve PlayLootCardStackEffect 27"},"childOfId":217} 
 Player 2 02:00:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":219,"_text":"Wait For Response From Player 2 "},"childOfId":217} 
 Player 2 02:00:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:58 $ACTION_MASSAGE_REMOVE:  

 {"id":219} 
 Player 2 02:00:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":220,"_text":"Wait For Response From Player 1 "},"childOfId":217} 
 Player 2 02:00:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:00:58 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:00:58 $ACTION_MASSAGE_REMOVE:  

 {"id":220} 
 Player 2 02:00:58 $ACTION_MASSAGE_REMOVE:  

 {"id":218} 
 Player 2 02:00:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":221,"_text":"Resolve MonsterDeath 28 "}} 
 Player 2 02:00:58 $NEXT_STACK_ID:  
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 02:00:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:00:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":29,"creatorCardId":296,"monsterCardWithRewardId":231,"playerCardIdToReward":296,"stackEffectType":7}} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:00:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:00:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":29,"creatorCardId":296,"monsterCardWithRewardId":231,"playerCardIdToReward":296,"stackEffectType":7}} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:00:58 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:00:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:00:58 $REPLACE_STACK:  

 {"currentStack":[{"entityId":29,"creatorCardId":296,"monsterCardWithRewardId":231,"playerCardIdToReward":296,"stackEffectType":7},{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}]} 
 Player 2 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:00:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}} 
 Player 2 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 2 02:00:59 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}} 
 Player 2 02:00:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":222,"_text":"Remove After Resolve MonsterDeath 28  "}} 
 Player 2 02:00:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Charger<Monster> reward"} 
 Player 2 02:00:59 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":28,"creatorCardId":296,"monsterToDieCardId":231,"stackEffectType":5,"killerId":296}} 
 Player 2 02:00:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":223,"_text":"Response Remove After Resolve MonsterDeath 28"},"childOfId":222} 
 Player 2 02:00:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":224,"_text":"Wait For Response From Player 2 "},"childOfId":222} 
 Player 2 02:00:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:00:59 $ACTION_MASSAGE_REMOVE:  

 {"id":224} 
 Player 2 02:00:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":225,"_text":"Wait For Response From Player 1 "},"childOfId":222} 
 Player 2 02:00:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:00:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:00:59 $ACTION_MASSAGE_REMOVE:  

 {"id":225} 
 Player 2 02:00:59 $ACTION_MASSAGE_REMOVE:  

 {"id":223} 
 Player 2 02:00:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":226,"_text":"Resolve MonsterRewardStackEffect 29 "}} 
 Player 2 02:00:59 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":231,"scopeIsPlayer":false,"index":17,"originStackId":29},"isAfterActivation":true,"index":17} 
 Player 2 02:00:59 $SET_MONEY:  

 {"playerId":2,"numOfCoins":11} 
 Player 2 02:01:00 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 
 Player 2 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:00 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":29,"creatorCardId":296,"monsterCardWithRewardId":231,"playerCardIdToReward":296,"stackEffectType":7}} 
 Player 2 02:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":227,"_text":"Fizzle MonsterRewardStackEffect 29"}} 
 Player 2 02:01:00 $FIZZLE_STACK_EFFECT:  

 {"entityId":29} 
 Player 2 02:01:00 $MOVE_CARD:  

 {"moveIndex":20,"cardId":231,"placeID":303,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 
 Player 2 02:01:00 $MOVE_CARD_TO_PILE:  

 {"type":2,"cardId":231} 
 Player 2 02:01:00 $REMOVE_MONSTER:  

 {"holderId":2,"monsterId":231} 
 Player 2 02:01:00 $NEXT_STACK_ID:  
 Player 2 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 02:01:00 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":30,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 02:01:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":30,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":228,"_text":"Add RefillEmptySlot 30 "}} 
 Player 2 02:01:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Refill holder2 slot"} 
 Player 2 02:01:00 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":30,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":229,"_text":"Response Adding RefillEmptySlot 30"},"childOfId":228} 
 Player 2 02:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":230,"_text":"Wait For Response From Player 2 "},"childOfId":228} 
 Player 2 02:01:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:00 $ACTION_MASSAGE_REMOVE:  

 {"id":230} 
 Player 2 02:01:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":231,"_text":"Wait For Response From Player 1 "},"childOfId":228} 
 Player 2 02:01:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":231} 
 Player 2 02:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":229} 
 Player 2 02:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":232,"_text":"Resolve RefillEmptySlot 30 "}} 
 Player 2 02:01:01 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 02:01:01 $FLIP_CARD:  

 {"cardId":253} 
 Player 2 02:01:01 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":253} 
 Player 2 02:01:01 $NEW_MONSTER_ON_PLACE:  

 {"cardId":253,"monsterPlaceId":2} 
 Player 2 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:01 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":30,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":233,"_text":"Remove After Resolve RefillEmptySlot 30  "}} 
 Player 2 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:01 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":30,"creatorCardId":296,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 
 Player 2 02:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":234,"_text":"Response Remove After Resolve RefillEmptySlot 30"},"childOfId":233} 
 Player 2 02:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":235,"_text":"Wait For Response From Player 1 "},"childOfId":233} 
 Player 2 02:01:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:01 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":235} 
 Player 2 02:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":236,"_text":"Wait For Response From Player 2 "},"childOfId":233} 
 Player 2 02:01:01 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":236} 
 Player 2 02:01:01 $ACTION_MASSAGE_REMOVE:  

 {"id":234} 
 Player 2 02:01:01 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":237,"_text":"Stack Was Emptied "}} 
 Player 2 02:01:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":238,"_text":"Stack Was Emptied "}} 
 Player 2 02:01:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:12 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":144} 
 Player 2 02:01:15 $NEXT_STACK_ID:  
 Player 2 02:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 2 02:01:15 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":31,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 
 Player 2 02:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 2 02:01:15 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":31,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 
 Player 2 02:01:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":239,"_text":"Add PurchaseItem 31 "}} 
 Player 2 02:01:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:15 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is about to buy Treasure Deck for 10"} 
 Player 2 02:01:15 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":31,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 
 Player 2 02:01:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":240,"_text":"Response Adding PurchaseItem 31"},"childOfId":239} 
 Player 2 02:01:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":241,"_text":"Wait For Response From Player 2 "},"childOfId":239} 
 Player 2 02:01:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:15 $ACTION_MASSAGE_REMOVE:  

 {"id":241} 
 Player 2 02:01:15 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":242,"_text":"Wait For Response From Player 1 "},"childOfId":239} 
 Player 2 02:01:15 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:15 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:16 $ACTION_MASSAGE_REMOVE:  

 {"id":242} 
 Player 2 02:01:16 $ACTION_MASSAGE_REMOVE:  

 {"id":240} 
 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":243,"_text":"Resolve PurchaseItem 31 "}} 
 Player 2 02:01:16 $SET_MONEY:  

 {"playerId":2,"numOfCoins":1} 
 Player 2 02:01:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-10}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 
 Player 2 02:01:16 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 02:01:16 $MOVE_CARD:  

 {"moveIndex":21,"cardId":210,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 
 Player 2 02:01:16 $ADD_AN_ITEM:  

 {"playerId":2,"cardId":210,"isReward":false} 
 Player 2 02:01:16 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":210}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":20,"originStackId":-1},"isAfterActivation":true,"index":20} 
 Player 2 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:16 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":31,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 
 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":244,"_text":"Remove After Resolve PurchaseItem 31  "}} 
 Player 2 02:01:16 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:16 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":31,"creatorCardId":296,"itemToPurchaseCardId":144,"playerWhoBuysCardId":296,"cost":10,"stackEffectType":9}} 
 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":245,"_text":"Response Remove After Resolve PurchaseItem 31"},"childOfId":244} 
 Player 2 02:01:16 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":246,"_text":"Wait For Response From Player 1 "},"childOfId":244} 
 Player 2 02:01:16 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:16 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:17 $ACTION_MASSAGE_REMOVE:  

 {"id":246} 
 Player 2 02:01:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":247,"_text":"Wait For Response From Player 2 "},"childOfId":244} 
 Player 2 02:01:17 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:17 $ACTION_MASSAGE_REMOVE:  

 {"id":247} 
 Player 2 02:01:17 $ACTION_MASSAGE_REMOVE:  

 {"id":245} 
 Player 2 02:01:17 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":248,"_text":"Stack Was Emptied "}} 
 Player 2 02:01:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:25 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":253} 
 Player 2 02:01:28 $NEXT_STACK_ID:  
 Player 2 02:01:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 2 02:01:28 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":32,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 2 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 2 02:01:29 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":32,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 2 02:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":249,"_text":"Add DeclareAttack 32 "}} 
 Player 2 02:01:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 2 02:01:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 2 02:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":250,"_text":"Response Adding DeclareAttack 32"},"childOfId":249} 
 Player 2 02:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":251,"_text":"Wait For Response From Player 2 "},"childOfId":249} 
 Player 2 02:01:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:29 $ACTION_MASSAGE_REMOVE:  

 {"id":251} 
 Player 2 02:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":252,"_text":"Wait For Response From Player 1 "},"childOfId":249} 
 Player 2 02:01:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:29 $ACTION_MASSAGE_REMOVE:  

 {"id":252} 
 Player 2 02:01:29 $ACTION_MASSAGE_REMOVE:  

 {"id":250} 
 Player 2 02:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":253,"_text":"Resolve DeclareAttack 32 "}} 
 Player 2 02:01:29 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":253,"particleType":5} 
 Player 2 02:01:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":21,"originStackId":32},"isAfterActivation":true,"index":21} 
 Player 2 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 2 02:01:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":32,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 2 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":32,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 2 02:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":254,"_text":"Remove After Resolve DeclareAttack 32  "}} 
 Player 2 02:01:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":32,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":253,"stackEffectType":4}} 
 Player 2 02:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":255,"_text":"Response Remove After Resolve DeclareAttack 32"},"childOfId":254} 
 Player 2 02:01:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":256,"_text":"Wait For Response From Player 1 "},"childOfId":254} 
 Player 2 02:01:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":256} 
 Player 2 02:01:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":257,"_text":"Wait For Response From Player 2 "},"childOfId":254} 
 Player 2 02:01:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":257} 
 Player 2 02:01:30 $ACTION_MASSAGE_REMOVE:  

 {"id":255} 
 Player 2 02:01:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":258,"_text":"Stack Was Emptied "}} 
 Player 2 02:01:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:31 $NEXT_STACK_ID:  
 Player 2 02:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:01:31 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":33,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:01:31 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":259,"_text":"Add AttackRoll 33 "}} 
 Player 2 02:01:31 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:01:33 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 02:01:33 $UPDATE_STACK_VIS:  

 {"stackId":33,"text":"player rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:33 $SHOW_DICE_ROLL:  

 {"stackId":33} 
 Player 2 02:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:36 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":33,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":260,"_text":"Response Adding AttackRoll 33"},"childOfId":259} 
 Player 2 02:01:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":261,"_text":"Wait For Response From Player 2 "},"childOfId":259} 
 Player 2 02:01:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:36 $ACTION_MASSAGE_REMOVE:  

 {"id":261} 
 Player 2 02:01:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":262,"_text":"Wait For Response From Player 1 "},"childOfId":259} 
 Player 2 02:01:36 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:36 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:36 $ACTION_MASSAGE_REMOVE:  

 {"id":262} 
 Player 2 02:01:36 $ACTION_MASSAGE_REMOVE:  

 {"id":260} 
 Player 2 02:01:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":263,"_text":"Resolve AttackRoll 33 "}} 
 Player 2 02:01:36 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":264,"_text":"Added 0 to original roll"}} 
 Player 2 02:01:36 $NEXT_STACK_ID:  
 Player 2 02:01:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":34,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:37 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:37 $REPLACE_STACK:  

 {"currentStack":[{"entityId":34,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":33,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}]} 
 Player 2 02:01:37 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":22,"originStackId":33},"isAfterActivation":true,"index":22} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:01:37 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":33,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:01:37 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":33,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":265,"_text":"Remove After Resolve AttackRoll 33  "}} 
 Player 2 02:01:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:01:37 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":33,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":266,"_text":"Response Remove After Resolve AttackRoll 33"},"childOfId":265} 
 Player 2 02:01:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":267,"_text":"Wait For Response From Player 2 "},"childOfId":265} 
 Player 2 02:01:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:37 $ACTION_MASSAGE_REMOVE:  

 {"id":267} 
 Player 2 02:01:37 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":268,"_text":"Wait For Response From Player 1 "},"childOfId":265} 
 Player 2 02:01:37 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:37 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":268} 
 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":266} 
 Player 2 02:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":269,"_text":"Resolve CombatDamage 34 "}} 
 Player 2 02:01:38 $UPDATE_STACK_VIS:  

 {"stackId":34,"text":"Samson will deal 1 combat damage to Holy Dinga"} 
 Player 2 02:01:38 $MONSTER_GET_DAMAGED:  

 {"cardId":253,"hpLeft":2,"damageDealerId":296} 
 Player 2 02:01:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":253,"scopeIsPlayer":false,"index":23,"originStackId":-1},"isAfterActivation":true,"index":23} 
 Player 2 02:01:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":296},{"type":0,"number":253}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":24,"originStackId":34},"isAfterActivation":true,"index":24} 
 Player 2 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:01:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":34,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:38 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":34,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":270,"_text":"Remove After Resolve CombatDamage 34  "}} 
 Player 2 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:38 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":34,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":271,"_text":"Response Remove After Resolve CombatDamage 34"},"childOfId":270} 
 Player 2 02:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":272,"_text":"Wait For Response From Player 1 "},"childOfId":270} 
 Player 2 02:01:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:38 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":272} 
 Player 2 02:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":273,"_text":"Wait For Response From Player 2 "},"childOfId":270} 
 Player 2 02:01:38 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":273} 
 Player 2 02:01:38 $ACTION_MASSAGE_REMOVE:  

 {"id":271} 
 Player 2 02:01:38 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":274,"_text":"Stack Was Emptied "}} 
 Player 2 02:01:38 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:40 $NEXT_STACK_ID:  
 Player 2 02:01:40 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:01:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:01:40 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":35,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:01:40 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":35,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:40 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":275,"_text":"Add AttackRoll 35 "}} 
 Player 2 02:01:40 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:01:42 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":1} 
 Player 2 02:01:42 $UPDATE_STACK_VIS:  

 {"stackId":35,"text":"player rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:01:42 $SHOW_DICE_ROLL:  

 {"stackId":35} 
 Player 2 02:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:01:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:01:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":35,"creatorCardId":296,"numberRolled":1,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:01:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":276,"_text":"Response Adding AttackRoll 35"},"childOfId":275} 
 Player 2 02:01:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":277,"_text":"Wait For Response From Player 2 "},"childOfId":275} 
 Player 2 02:01:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:51 $SHOW_DECISION:  

 {"startCardId":296,"endCardId":210} 
 Player 2 02:01:54 $NEXT_STACK_ID:  
 Player 2 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 2 02:01:54 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":36,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 2 02:01:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 
 Player 2 02:01:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":278,"_text":"Add ActivateItem 36 "}} 
 Player 2 02:01:54 $USE_ITEM:  

 {"cardId":210} 
 Player 2 02:01:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 2 02:01:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:01:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":279,"_text":"Response Adding ActivateItem 36"},"childOfId":278} 
 Player 2 02:01:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":280,"_text":"Wait For Response From Player 2 "},"childOfId":278} 
 Player 2 02:01:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:01:56 $ACTION_MASSAGE_REMOVE:  

 {"id":280} 
 Player 2 02:01:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":281,"_text":"Wait For Response From Player 1 "},"childOfId":278} 
 Player 2 02:01:56 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:56 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:56 $ACTION_MASSAGE_REMOVE:  

 {"id":281} 
 Player 2 02:01:56 $ACTION_MASSAGE_REMOVE:  

 {"id":279} 
 Player 2 02:01:56 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":282,"_text":"Resolve ActivateItem 36 "}} 
 Player 2 02:01:56 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":210,"particleType":6} 
 Player 2 02:01:58 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":210,"particleType":6} 
 Player 2 02:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster> \n2:Player 2 activated Spoon Bender"} 
 Player 2 02:01:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":36,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:01:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":36,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:01:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":283,"_text":"Remove After Resolve ActivateItem 36  "}} 
 Player 2 02:01:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:01:58 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":36,"creatorCardId":296,"hasLockingStackEffect":false,"itemToPlayCardId":210,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 
 Player 2 02:01:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":284,"_text":"Response Remove After Resolve ActivateItem 36"},"childOfId":283} 
 Player 2 02:01:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":285,"_text":"Wait For Response From Player 1 "},"childOfId":283} 
 Player 2 02:01:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:01:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:01:59 $ACTION_MASSAGE_REMOVE:  

 {"id":285} 
 Player 2 02:01:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":286,"_text":"Wait For Response From Player 2 "},"childOfId":283} 
 Player 2 02:01:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:02 $ACTION_MASSAGE_REMOVE:  

 {"id":286} 
 Player 2 02:02:02 $ACTION_MASSAGE_REMOVE:  

 {"id":284} 
 Player 2 02:02:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":287,"_text":"Resolve AttackRoll 35 "}} 
 Player 2 02:02:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":288,"_text":"Added 0 to original roll"}} 
 Player 2 02:02:02 $NEXT_STACK_ID:  
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:02:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:02:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":296,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:02:02 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":35,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:02:02 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":296,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:02:02 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":35,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:02:02 $REPLACE_STACK:  

 {"currentStack":[{"entityId":37,"creatorCardId":296,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":35,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}]} 
 Player 2 02:02:02 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":25,"originStackId":35},"isAfterActivation":true,"index":25} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson \n2:Player 2 rolled 1 vs Holy Dinga<Monster>"} 
 Player 2 02:02:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":35,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 2 02:02:02 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":35,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":289,"_text":"Remove After Resolve AttackRoll 35  "}} 
 Player 2 02:02:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga combat damage to Samson"} 
 Player 2 02:02:02 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":35,"creatorCardId":296,"numberRolled":2,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":290,"_text":"Response Remove After Resolve AttackRoll 35"},"childOfId":289} 
 Player 2 02:02:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":291,"_text":"Wait For Response From Player 2 "},"childOfId":289} 
 Player 2 02:02:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":291} 
 Player 2 02:02:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":292,"_text":"Wait For Response From Player 1 "},"childOfId":289} 
 Player 2 02:02:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":292} 
 Player 2 02:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":290} 
 Player 2 02:02:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":293,"_text":"Resolve CombatDamage 37 "}} 
 Player 2 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga 0 combat damage to Samson"} 
 Player 2 02:02:04 $UPDATE_STACK_VIS:  

 {"stackId":37,"text":"Holy Dinga will deal 0 combat damage to Samson"} 
 Player 2 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga 0 combat damage to Samson"} 
 Player 2 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Holy Dinga 0 combat damage to Samson"} 
 Player 2 02:02:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":37,"creatorCardId":296,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:02:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":37,"creatorCardId":296,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":294,"_text":"Remove After Resolve CombatDamage 37  "}} 
 Player 2 02:02:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:02:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":37,"creatorCardId":296,"entityToDoDamageCardId":253,"entityToTakeDamageCardId":296,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":295,"_text":"Response Remove After Resolve CombatDamage 37"},"childOfId":294} 
 Player 2 02:02:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":296,"_text":"Wait For Response From Player 1 "},"childOfId":294} 
 Player 2 02:02:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:04 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:04 $ACTION_MASSAGE_REMOVE:  

 {"id":296} 
 Player 2 02:02:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":297,"_text":"Wait For Response From Player 2 "},"childOfId":294} 
 Player 2 02:02:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:05 $ACTION_MASSAGE_REMOVE:  

 {"id":297} 
 Player 2 02:02:05 $ACTION_MASSAGE_REMOVE:  

 {"id":295} 
 Player 2 02:02:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":298,"_text":"Stack Was Emptied "}} 
 Player 2 02:02:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:02:05 $ACTION_MASSAGE_REMOVE:  

 {"id":277} 
 Player 2 02:02:05 $ACTION_MASSAGE_REMOVE:  

 {"id":276} 
 Player 2 02:02:22 $NEXT_STACK_ID:  
 Player 2 02:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:02:22 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":38,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:22 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:02:22 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:22 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":299,"_text":"Add AttackRoll 38 "}} 
 Player 2 02:02:22 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:02:24 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 02:02:24 $UPDATE_STACK_VIS:  

 {"stackId":38,"text":"player rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:24 $SHOW_DICE_ROLL:  

 {"stackId":38} 
 Player 2 02:02:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:27 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:27 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":38,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":300,"_text":"Response Adding AttackRoll 38"},"childOfId":299} 
 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":301,"_text":"Wait For Response From Player 2 "},"childOfId":299} 
 Player 2 02:02:27 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:27 $ACTION_MASSAGE_REMOVE:  

 {"id":301} 
 Player 2 02:02:27 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":302,"_text":"Wait For Response From Player 1 "},"childOfId":299} 
 Player 2 02:02:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:28 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:28 $ACTION_MASSAGE_REMOVE:  

 {"id":302} 
 Player 2 02:02:28 $ACTION_MASSAGE_REMOVE:  

 {"id":300} 
 Player 2 02:02:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":303,"_text":"Resolve AttackRoll 38 "}} 
 Player 2 02:02:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":304,"_text":"Added 0 to original roll"}} 
 Player 2 02:02:28 $NEXT_STACK_ID:  
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":39,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":39,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:28 $REPLACE_STACK:  

 {"currentStack":[{"entityId":39,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":38,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}]} 
 Player 2 02:02:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":26,"originStackId":38},"isAfterActivation":true,"index":26} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":38,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:02:28 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":38,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":305,"_text":"Remove After Resolve AttackRoll 38  "}} 
 Player 2 02:02:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:02:28 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":38,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":306,"_text":"Response Remove After Resolve AttackRoll 38"},"childOfId":305} 
 Player 2 02:02:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":307,"_text":"Wait For Response From Player 2 "},"childOfId":305} 
 Player 2 02:02:28 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:28 $ACTION_MASSAGE_REMOVE:  

 {"id":307} 
 Player 2 02:02:28 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":308,"_text":"Wait For Response From Player 1 "},"childOfId":305} 
 Player 2 02:02:29 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:29 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:29 $ACTION_MASSAGE_REMOVE:  

 {"id":308} 
 Player 2 02:02:29 $ACTION_MASSAGE_REMOVE:  

 {"id":306} 
 Player 2 02:02:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":309,"_text":"Resolve CombatDamage 39 "}} 
 Player 2 02:02:29 $UPDATE_STACK_VIS:  

 {"stackId":39,"text":"Samson will deal 1 combat damage to Holy Dinga"} 
 Player 2 02:02:29 $MONSTER_GET_DAMAGED:  

 {"cardId":253,"hpLeft":1,"damageDealerId":296} 
 Player 2 02:02:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":253,"scopeIsPlayer":false,"index":27,"originStackId":-1},"isAfterActivation":true,"index":27} 
 Player 2 02:02:29 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":296},{"type":0,"number":253}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":28,"originStackId":39},"isAfterActivation":true,"index":28} 
 Player 2 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:02:29 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":39,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:02:29 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":39,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":310,"_text":"Remove After Resolve CombatDamage 39  "}} 
 Player 2 02:02:29 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:02:29 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":39,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":311,"_text":"Response Remove After Resolve CombatDamage 39"},"childOfId":310} 
 Player 2 02:02:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":312,"_text":"Wait For Response From Player 1 "},"childOfId":310} 
 Player 2 02:02:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:30 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  

 {"id":312} 
 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":313,"_text":"Wait For Response From Player 2 "},"childOfId":310} 
 Player 2 02:02:30 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  

 {"id":313} 
 Player 2 02:02:30 $ACTION_MASSAGE_REMOVE:  

 {"id":311} 
 Player 2 02:02:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":314,"_text":"Stack Was Emptied "}} 
 Player 2 02:02:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:02:45 $NEXT_STACK_ID:  
 Player 2 02:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:02:45 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":40,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 02:02:45 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":40,"creatorCardId":296,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":315,"_text":"Add AttackRoll 40 "}} 
 Player 2 02:02:45 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:02:47 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":5} 
 Player 2 02:02:47 $UPDATE_STACK_VIS:  

 {"stackId":40,"text":"player rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:47 $SHOW_DICE_ROLL:  

 {"stackId":40} 
 Player 2 02:02:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:50 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":40,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":316,"_text":"Response Adding AttackRoll 40"},"childOfId":315} 
 Player 2 02:02:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":317,"_text":"Wait For Response From Player 2 "},"childOfId":315} 
 Player 2 02:02:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:50 $ACTION_MASSAGE_REMOVE:  

 {"id":317} 
 Player 2 02:02:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":318,"_text":"Wait For Response From Player 1 "},"childOfId":315} 
 Player 2 02:02:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:50 $ACTION_MASSAGE_REMOVE:  

 {"id":318} 
 Player 2 02:02:50 $ACTION_MASSAGE_REMOVE:  

 {"id":316} 
 Player 2 02:02:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":319,"_text":"Resolve AttackRoll 40 "}} 
 Player 2 02:02:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":320,"_text":"Added 0 to original roll"}} 
 Player 2 02:02:50 $NEXT_STACK_ID:  
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":40,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:51 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":40,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:51 $REPLACE_STACK:  

 {"currentStack":[{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":40,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}]} 
 Player 2 02:02:51 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":29,"originStackId":40},"isAfterActivation":true,"index":29} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:Player 2 rolled 5 vs Holy Dinga<Monster>"} 
 Player 2 02:02:51 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":40,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:02:51 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":40,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":321,"_text":"Remove After Resolve AttackRoll 40  "}} 
 Player 2 02:02:51 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:02:51 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":40,"creatorCardId":296,"numberRolled":5,"rollingPlayerCardId":296,"stackEffectType":2,"attackedMonsterCardId":253}} 
 Player 2 02:02:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":322,"_text":"Response Remove After Resolve AttackRoll 40"},"childOfId":321} 
 Player 2 02:02:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":323,"_text":"Wait For Response From Player 2 "},"childOfId":321} 
 Player 2 02:02:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:51 $ACTION_MASSAGE_REMOVE:  

 {"id":323} 
 Player 2 02:02:51 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":324,"_text":"Wait For Response From Player 1 "},"childOfId":321} 
 Player 2 02:02:51 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:51 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:52 $ACTION_MASSAGE_REMOVE:  

 {"id":324} 
 Player 2 02:02:52 $ACTION_MASSAGE_REMOVE:  

 {"id":322} 
 Player 2 02:02:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":325,"_text":"Resolve CombatDamage 41 "}} 
 Player 2 02:02:52 $UPDATE_STACK_VIS:  

 {"stackId":41,"text":"Samson will deal 1 combat damage to Holy Dinga"} 
 Player 2 02:02:52 $MONSTER_GET_DAMAGED:  

 {"cardId":253,"hpLeft":0,"damageDealerId":296} 
 Player 2 02:02:52 $NEXT_STACK_ID:  
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga"} 
 Player 2 02:02:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 2 02:02:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 2 02:02:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 2 02:02:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 2 02:02:52 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 2 02:02:52 $REPLACE_STACK:  

 {"currentStack":[{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}]} 
 Player 2 02:02:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":296}],"result":null,"preventMethod":false,"methodScopeId":253,"scopeIsPlayer":false,"index":30,"originStackId":-1},"isAfterActivation":true,"index":30} 
 Player 2 02:02:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":5},{"type":0,"number":296},{"type":0,"number":253}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":31,"originStackId":41},"isAfterActivation":true,"index":31} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to Holy Dinga \n2:[object Object] killed by Samson"} 
 Player 2 02:02:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 02:02:52 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":326,"_text":"Remove After Resolve CombatDamage 41  "}} 
 Player 2 02:02:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 02:02:52 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":41,"creatorCardId":296,"entityToDoDamageCardId":296,"entityToTakeDamageCardId":253,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 
 Player 2 02:02:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":327,"_text":"Response Remove After Resolve CombatDamage 41"},"childOfId":326} 
 Player 2 02:02:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":328,"_text":"Wait For Response From Player 2 "},"childOfId":326} 
 Player 2 02:02:52 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  

 {"id":328} 
 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":329,"_text":"Wait For Response From Player 1 "},"childOfId":326} 
 Player 2 02:02:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:53 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  

 {"id":329} 
 Player 2 02:02:53 $ACTION_MASSAGE_REMOVE:  

 {"id":327} 
 Player 2 02:02:53 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":330,"_text":"Resolve MonsterDeath 42 "}} 
 Player 2 02:02:53 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":253,"particleType":5} 
 Player 2 02:02:53 $CANCEL_ATTACK:  
 Player 2 02:02:53 $NEXT_STACK_ID:  
 Player 2 02:02:53 $NEXT_STACK_ID:  
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:[object Object] killed by Samson"} 
 Player 2 02:02:53 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:53 $NEXT_STACK_ID:  
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:53 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7}} 
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:53 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}} 
 Player 2 02:02:53 $NEXT_STACK_ID:  
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7}} 
 Player 2 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:54 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}} 
 Player 2 02:02:54 $NEXT_STACK_ID:  
 Player 2 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:54 $REPLACE_STACK:  

 {"currentStack":[{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7},{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}]} 
 Player 2 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 02:02:54 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}} 
 Player 2 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 2 02:02:54 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}} 
 Player 2 02:02:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":331,"_text":"Remove After Resolve MonsterDeath 42  "}} 
 Player 2 02:02:54 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward"} 
 Player 2 02:02:54 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":42,"creatorCardId":296,"monsterToDieCardId":253,"stackEffectType":5,"killerId":296}} 
 Player 2 02:02:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":332,"_text":"Response Remove After Resolve MonsterDeath 42"},"childOfId":331} 
 Player 2 02:02:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":333,"_text":"Wait For Response From Player 2 "},"childOfId":331} 
 Player 2 02:02:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:02:54 $ACTION_MASSAGE_REMOVE:  

 {"id":333} 
 Player 2 02:02:54 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":334,"_text":"Wait For Response From Player 1 "},"childOfId":331} 
 Player 2 02:02:54 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:54 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:02:55 $ACTION_MASSAGE_REMOVE:  

 {"id":334} 
 Player 2 02:02:55 $ACTION_MASSAGE_REMOVE:  

 {"id":332} 
 Player 2 02:02:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":335,"_text":"Resolve MonsterRewardStackEffect 43 "}} 
 Player 2 02:02:55 $NEXT_STACK_ID:  
 Player 2 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 2 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 2 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 2 02:02:55 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":44,"creatorCardId":296,"stackEffectToLock":{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 02:02:55 $NEXT_STACK_ID:  
 Player 2 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 2 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 2 02:02:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 get Holy Dinga<Monster> reward \n2:Player 2 roll a dice"} 
 Player 2 02:02:55 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":44,"creatorCardId":296,"stackEffectToLock":{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7},"hasLockingStackEffect":false,"stackEffectType":11}} 
 Player 2 02:02:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":336,"_text":"Add RollDiceStackEffect 44 "}} 
 Player 2 02:02:55 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 02:02:56 $RECHARGE_ITEM:  

 {"cardId":296} 
 Player 2 02:02:56 $RECHARGE_ITEM:  

 {"cardId":297} 
 Player 2 02:02:56 $RECHARGE_ITEM:  

 {"cardId":210} 
 Player 2 02:02:57 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 02:02:57 $UPDATE_STACK_VIS:  

 {"stackId":44,"text":"player 2 rolled 3"} 
 Player 2 02:02:57 $LOG_ERROR:  

 "error while resolving stack effect 43" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 02:02:57 $LOG_ERROR:  

 {"message":"\"Cannot read property 'parent' of undefined\"","stack":"\"TypeError: Cannot read property 'parent' of undefined\\n    at DecisionMarker.movePreviewByEndCard (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:232:21)\\n    at DecisionMarker.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:140:30)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at DecisionMarker.showDiceRoll (http://localhost:7456/preview-scripts/assets/Script/Entites/Decision%20Marker.js:112:16)\\n    at RollDiceStackEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Roll%20DIce.js:68:74)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\""} 
 Player 2 02:02:58 $NEXT_STACK_ID:  
 Player 2 02:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 2 02:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 2 02:02:58 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7}} 
 Player 2 02:02:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":337,"_text":"Remove After Resolve MonsterRewardStackEffect 43  "}} 
 Player 2 02:02:58 $NEXT_STACK_ID:  
 Player 2 02:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 2 02:02:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 roll a dice"} 
 Player 2 02:02:58 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7}} 
 Player 2 02:02:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":338,"_text":"Response Remove After Resolve MonsterRewardStackEffect 43"},"childOfId":337} 
 Player 2 02:02:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":339,"_text":"Wait For Response From Player 1 "},"childOfId":337} 
 Player 2 02:02:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:02:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:03:00 $ACTION_MASSAGE_REMOVE:  

 {"id":339} 
 Player 2 02:03:00 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":340,"_text":"Wait For Response From Player 2 "},"childOfId":337} 
 Player 2 02:03:00 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:04:30 $ACTION_MASSAGE_REMOVE:  

 {"id":340} 
 Player 2 02:04:30 $ACTION_MASSAGE_REMOVE:  

 {"id":338} 
 Player 2 02:04:30 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":341,"_text":"Resolve RollDiceStackEffect 44 "}} 
 Player 2 02:04:30 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":32,"originStackId":44},"isAfterActivation":true,"index":32} 
 Player 2 02:04:30 $NEXT_STACK_ID:  
 Player 2 02:04:30 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:04:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"entityId":44,"creatorCardId":296,"stackEffectToLock":{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 02:04:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":342,"_text":"Remove After Resolve RollDiceStackEffect 44  "}} 
 Player 2 02:04:31 $NEXT_STACK_ID:  
 Player 2 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:04:31 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:04:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":44,"creatorCardId":296,"stackEffectToLock":{"entityId":43,"creatorCardId":296,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"monsterCardWithRewardId":253,"playerCardIdToReward":296,"stackEffectType":7},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 
 Player 2 02:04:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":343,"_text":"Response Remove After Resolve RollDiceStackEffect 44"},"childOfId":342} 
 Player 2 02:04:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":344,"_text":"Wait For Response From Player 2 "},"childOfId":342} 
 Player 2 02:04:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 02:05:11 $ACTION_MASSAGE_REMOVE:  

 {"id":344} 
 Player 2 02:05:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":345,"_text":"Wait For Response From Player 1 "},"childOfId":342} 
 Player 2 02:05:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 02:05:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 02:05:11 $ACTION_MASSAGE_REMOVE:  

 {"id":345} 
 Player 2 02:05:11 $ACTION_MASSAGE_REMOVE:  

 {"id":343} 
 Player 2 02:05:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":346,"_text":"Stack Was Emptied "}} 
 Player 2 02:05:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 02:05:37 $MATCH: 