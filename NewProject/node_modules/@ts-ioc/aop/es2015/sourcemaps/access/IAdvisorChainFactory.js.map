{"version":3,"sources":["access/IAdvisorChainFactory.ts"],"names":[],"mappings":";;AAEA,uCAA2C;AAG3C;;;GAGG;AACU,QAAA,wBAAwB,GAAG,IAAI,kBAAW,CAAuB,yBAAyB,CAAC,CAAC","file":"../../access/IAdvisorChainFactory.js","sourcesContent":["import { Joinpoint, JoinpointState } from '../joinpoints';\r\nimport { Advicer } from '../advices';\r\nimport { InjectToken } from '@ts-ioc/core';\r\n\r\n\r\n/**\r\n * Aop IAdvisorChainFactory interface token.\r\n * it is a token id, you can register yourself IAdvisorChainFactory for this.\r\n */\r\nexport const AdvisorChainFactoryToken = new InjectToken<IAdvisorChainFactory>('DI_IAdvisorChainFactory');\r\n\r\n/**\r\n * advice advisor chain factory for proxy method invoke.\r\n *\r\n * @export\r\n * @interface IAdvisorChainFactory\r\n */\r\nexport interface IAdvisorChainFactory {\r\n\r\n    /**\r\n     * get advices config.\r\n     *\r\n     * @param {string} adviceType\r\n     * @returns {Advicer[]}\r\n     * @memberof IAdvisorChainFactory\r\n     */\r\n    getAdvicers(adviceType: string): Advicer[];\r\n\r\n    /**\r\n     * invoke advives via state.\r\n     *\r\n     * @param {Joinpoint} joinPoint\r\n     * @param {JoinpointState} state\r\n     * @param {*} [valueOrthrowing]\r\n     * @memberof IAdvisorChainFactory\r\n     */\r\n    invoaction(joinPoint: Joinpoint, state: JoinpointState, valueOrthrowing?: any): void;\r\n\r\n    /**\r\n     * invoke before advices.\r\n     *\r\n     * @param {Joinpoint} joinPoint\r\n     * @memberof IAdvisorChainFactory\r\n     */\r\n    before(joinPoint: Joinpoint): void;\r\n\r\n    /**\r\n     * invoke pointcut advives.\r\n     *\r\n     * @param {Joinpoint} joinPoint\r\n     * @memberof IAdvisorChainFactory\r\n     */\r\n    pointcut(joinPoint: Joinpoint): void;\r\n\r\n    /**\r\n     * invoke after advives.\r\n     *\r\n     * @param {Joinpoint} joinPoint\r\n     * @memberof IAdvisorChainFactory\r\n     */\r\n    after(joinPoint: Joinpoint): void;\r\n\r\n    /**\r\n     * invoke throwing advives.\r\n     *\r\n     * @param {Joinpoint} joinPoint\r\n     * @memberof IAdvisorChainFactory\r\n     */\r\n    afterThrowing(joinPoint: Joinpoint): void;\r\n\r\n    /**\r\n     * invoke returning advives.\r\n     *\r\n     * @param {Joinpoint} joinPoint\r\n     * @memberof IAdvisorChainFactory\r\n     */\r\n    afterReturning(joinPoint: Joinpoint): void;\r\n}\r\n"]}