Start Log 
 Player 1 09:54:24 $START_GAME:  
 Player 1 09:54:24 $MOVE_TO_TABLE:  
 Player 1 09:54:32 $FINISH_LOAD:  

 {"id":1,"turnPlayerId":2} 
 Player 1 09:54:32 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[200,169,174,190,151,186,178,161,163,168,175,172,146,194,176,192,184,154,156,165,149,199,181,173,198,158,187,167,197,162,157,170,196,164,159,201,195,155,160,148,188,150,171,189,153,182,185,183,193,177,179,147,152,202,180,166,191]} 
 Player 1 09:54:38 $EDEN_CHOSEN:  

 {"cardId":174,"playerId":2} 
 Player 1 09:54:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":174}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 1 09:54:39 $MOVE_CARD_END:  

 {"moveIndex":1,"cardId":89,"flipIfFlipped":false,"playerId":2} 
 Player 1 09:54:39 $MOVE_CARD_END:  

 {"moveIndex":2,"cardId":101,"flipIfFlipped":false,"playerId":2} 
 Player 1 09:54:40 $MOVE_CARD_END:  

 {"moveIndex":3,"cardId":137,"flipIfFlipped":false,"playerId":2} 
 Player 1 09:54:40 $MOVE_CARD_END:  

 {"moveIndex":4,"cardId":63,"flipIfFlipped":false,"playerId":2} 
 Player 1 09:54:41 $MOVE_CARD_END:  

 {"moveIndex":5,"cardId":8,"flipIfFlipped":false,"playerId":2} 
 Player 1 09:54:41 $MOVE_CARD_END:  

 {"moveIndex":6,"cardId":70,"flipIfFlipped":false,"playerId":2} 
 Player 1 09:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 09:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 09:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:42 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 09:54:43 $MOVE_CARD_END:  

 {"moveIndex":7,"cardId":75,"flipIfFlipped":false,"playerId":2} 
 Player 1 09:54:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:43 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 1 09:54:43 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 09:55:00 $MOVE_CARD:  

 {"moveIndex":8,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 
 Player 1 09:55:01 $REGISTER_PASSIVE_ITEM:  

 {"cardId":184} 
 Player 1 09:55:01 $MOVE_CARD:  

 {"moveIndex":9,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 
 Player 1 09:55:01 $ADD_AN_ITEM:  

 {"playerId":1,"cardId":184,"isReward":true} 
 Player 1 09:55:01 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 09:55:01 $NEXT_STACK_ID:  
 Player 1 09:55:01 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 09:55:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 09:55:01 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 09:55:01 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 09:55:01 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 09:55:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add ActivatePassiveEffect 2 "}} 
 Player 1 09:55:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 09:55:02 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 09:55:02 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 09:55:02 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 09:55:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding ActivatePassiveEffect 2"},"childOfId":10} 
 Player 1 09:55:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 1 09:55:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 09:55:02 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 09:55:02 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 1 09:55:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 1 09:55:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 09:55:02 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 1 09:55:02 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 1 09:55:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve ActivatePassiveEffect 2 "}} 
 Player 1 09:55:02 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 09:55:04 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":184,"particleType":6} 
 Player 1 09:55:04 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 1 09:55:04 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 
 Player 1 09:55:04 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 09:55:04 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 09:55:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 09:55:04 $REMOVE_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 09:55:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve ActivatePassiveEffect 2  "}} 
 Player 1 09:55:04 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 09:55:04 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 1 09:55:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve ActivatePassiveEffect 2"},"childOfId":15} 
 Player 1 09:55:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 1 09:55:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 1 09:55:04 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 1 09:55:04 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 1 09:55:04 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 1 09:55:04 $GET_REACTION:  

 {"playerId":2,"activePlayerId":1} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 1 09:55:05 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 1 09:55:05 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":0} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":1} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":2} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":3} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":4} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":5} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":9} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":10} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":14} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 09:55:05 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 09:55:05 $TURN_PLAYER_DO_STACK_EFFECT:  

 {"playerId":2} 
 Player 1 09:55:06 $ACTION_MASSAGE_REMOVE:  

 {"id":19} 
 Player 1 09:55:07 $ACTION_MASSAGE_REMOVE:  

 {"id":15} 
 Player 1 09:55:11 $MOVE_CARD_END:  

 {"moveIndex":10,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 09:55:20 $MOVE_CARD_END:  

 {"moveIndex":11,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 09:55:21 $MOVE_CARD_END:  

 {"moveIndex":12,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 09:55:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 09:55:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 1 09:55:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:24 $MOVE_CARD_END:  

 {"moveIndex":13,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 09:55:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:45 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 09:55:47 $MOVE_CARD_END:  

 {"moveIndex":14,"cardId":194,"flipIfFlipped":true,"playerId":2} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:48 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:48 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:49 $LOG_ERROR:  

 "error while resolving stack effect 4" 
//////Error From Player 1////
 [object Object]
////// 
 Player 1 09:55:49 $LOG_ERROR:  

 {"message":"\"Cannot read property 'node' of null\"","stack":"\"TypeError: Cannot read property 'node' of null\\n    at ActivatePassiveEffect.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:218:77)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\\n    at http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89804:71\\n    at new Promise (<anonymous>)\\n    at 418.window.__awaiter (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89784:14)\\n    at ActivatePassiveEffect.resolve (http://localhost:7456/preview-scripts/assets/Script/StackEffects/Activate%20Passive%20Effect.js:175:16)\\n    at Function.<anonymous> (http://localhost:7456/preview-scripts/assets/Script/Entites/Stack.js:117:58)\\n    at step (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89882:21)\\n    at Object.next (http://localhost:7456/app/engine/bin/cocos2d-js-for-preview.js:89826:18)\""} 
 Player 1 09:55:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:49 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:49 $FINISH_DO_STACK_EFFECT:  

 {"playerId":2,"newStack":[{"entityId":3,"creatorCardId":261,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":2,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":2,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":265,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectPassiveMeta":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":265,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil  \n2:Activate Polydactyly "} 
 Player 1 09:55:50 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false} 
 Player 1 09:55:51 $MOVE_CARD_END:  

 {"moveIndex":15,"cardId":184,"flipIfFlipped":true,"playerId":2} 
 Player 1 09:55:51 $MOVE_CARD_END:  

 {"moveIndex":16,"cardId":131,"flipIfFlipped":true,"playerId":2} 
 Player 1 09:55:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 play The Devil "} 
 Player 1 09:55:52 $RESPOND_TO:  

 {"playerId":2,"stackEffectResponse":false}