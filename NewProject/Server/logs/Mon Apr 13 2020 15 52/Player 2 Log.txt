Start Log 
 Player 2 15:52:24 $MOVE_TO_TABLE:  
 Player 2 15:52:37 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 15:52:37 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":323,"itemCardId":324} 
 Player 2 15:52:37 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":319,"itemCardId":320} 
 Player 2 15:52:38 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[57,4,32,85,62,113,40,51,58,126,137,31,111,15,112,65,98,69,136,135,29,87,5,72,97,70,83,54,9,133,78,76,110,77,134,80,50,102,43,17,125,138,115,42,7,101,93,22,18,23,86,94,100,46,26,91,27,107,117,21,11,6,82,99,34,68,12,89,48,73,116,74,108,38,96,106,28,119,8,127,56,59,10,49,123,114,131,122,88,66,55,95,30,60,67,41,121,45,105,139,53,124,132,130,19,35,90,92,120,25,13,84,37,118,33,71,39,109,129,14,81,44,75,64,63,16,52,103,79,36,104,20,128,47,24,61]} 
 Player 2 15:52:38 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[301,287,235,267,288,262,278,241,260,297,222,299,284,292,225,247,256,272,246,249,254,290,281,293,257,295,244,227,286,303,243,237,265,233,259,234,296,276,228,250,289,242,258,285,261,300,263,304,279,302,255,270,308,273,283,239,248,223,266,291,280,268,240,245,224,294,238,229,274,252,307,298,271,226,230,282,277,269,253,231,251,236,275,306,232,305,264]} 
 Player 2 15:52:38 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[219,205,161,187,185,217,199,208,184,202,150,193,210,188,183,198,211,149,143,206,158,168,191,194,204,142,209,189,167,186,179,190,159,178,141,152,153,212,176,148,177,174,213,146,162,156,145,214,157,197,172,216,196,180,192,220,201,173,182,195,215,155,164,171,181,160,203,165,151,166,163,147,144,207,169,154,175,170,200,218]} 
 Player 2 15:52:38 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 15:52:38 $FLIP_CARD:  

 {"cardId":218} 
 Player 2 15:52:38 $ADD_STORE_CARD:  

 {"cardId":218} 
 Player 2 15:52:38 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 15:52:38 $FLIP_CARD:  

 {"cardId":200} 
 Player 2 15:52:38 $ADD_STORE_CARD:  

 {"cardId":200} 
 Player 2 15:52:38 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:52:38 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":264} 
 Player 2 15:52:38 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:52:38 $DECK_ADD_TO_BOTTOM:  

 {"deckType":2,"cardId":305} 
 Player 2 15:52:38 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:52:38 $FLIP_CARD:  

 {"cardId":232} 
 Player 2 15:52:38 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":232} 
 Player 2 15:52:38 $NEW_MONSTER_ON_PLACE:  

 {"cardId":232,"monsterPlaceId":1} 
 Player 2 15:52:38 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:52:38 $FLIP_CARD:  

 {"cardId":306} 
 Player 2 15:52:38 $REGISTER_PASSIVE_ITEM:  

 {"cardId":306} 
 Player 2 15:52:38 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":306} 
 Player 2 15:52:38 $NEW_MONSTER_ON_PLACE:  

 {"cardId":306,"monsterPlaceId":2} 
 Player 2 15:52:39 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 15:52:39 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":323,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:52:39 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:52:39 $MOVE_CARD:  

 {"moveIndex":1,"cardId":61,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:52:39 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":61} 
 Player 2 15:52:39 $FLIP_CARD:  

 {"cardId":61} 
 Player 2 15:52:39 $FLIP_CARD:  

 {"cardId":61} 
 Player 2 15:52:39 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":61} 
 Player 2 15:52:39 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:52:39 $MOVE_CARD:  

 {"moveIndex":2,"cardId":24,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:52:40 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":24} 
 Player 2 15:52:40 $FLIP_CARD:  

 {"cardId":24} 
 Player 2 15:52:40 $FLIP_CARD:  

 {"cardId":24} 
 Player 2 15:52:40 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":24} 
 Player 2 15:52:40 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:52:40 $MOVE_CARD:  

 {"moveIndex":3,"cardId":47,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:52:40 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":47} 
 Player 2 15:52:40 $FLIP_CARD:  

 {"cardId":47} 
 Player 2 15:52:40 $FLIP_CARD:  

 {"cardId":47} 
 Player 2 15:52:40 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":47} 
 Player 2 15:52:40 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 15:52:40 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 15:52:40 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:52:40 $MOVE_CARD:  

 {"moveIndex":4,"cardId":128,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:52:41 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":128} 
 Player 2 15:52:41 $FLIP_CARD:  

 {"cardId":128} 
 Player 2 15:52:41 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":128} 
 Player 2 15:52:41 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:52:41 $MOVE_CARD:  

 {"moveIndex":5,"cardId":20,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:52:41 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":20} 
 Player 2 15:52:41 $FLIP_CARD:  

 {"cardId":20} 
 Player 2 15:52:41 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":20} 
 Player 2 15:52:41 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:52:41 $MOVE_CARD:  

 {"moveIndex":6,"cardId":104,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:52:42 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":104} 
 Player 2 15:52:42 $FLIP_CARD:  

 {"cardId":104} 
 Player 2 15:52:42 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":104} 
 Player 2 15:52:42 $GAME_HAS_STARTED:  
 Player 2 15:52:42 $SET_TURN:  

 {"playerId":2} 
 Player 2 15:52:42 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:52:42 $NEXT_STACK_ID:  
 Player 2 15:52:42 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:52:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:52:42 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:52:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:52:42 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:52:42 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 15:52:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 15:52:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:52:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:52:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 15:52:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 15:52:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:52:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 15:52:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:52:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:52:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 15:52:45 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:52:45 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:52:45 $MOVE_CARD:  

 {"moveIndex":7,"cardId":36,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:52:46 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":36} 
 Player 2 15:52:46 $FLIP_CARD:  

 {"cardId":36} 
 Player 2 15:52:46 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":36} 
 Player 2 15:52:46 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:52:46 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 2 15:52:46 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:52:46 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 15:52:49 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 2 15:52:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 15:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:52:49 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:52:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 15:52:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 15:52:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:52:49 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:52:49 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 15:52:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 15:52:49 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:52:49 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 15:52:49 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 15:52:49 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 15:52:49 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:52:49 $CLEAR_SE_VIS:  
 Player 2 15:52:49 $UPDATE_ACTIONS:  
 Player 2 15:53:10 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:53:10 $CLEAR_SE_VIS:  
 Player 2 15:53:10 $REPLACE_STACK:  

 {"currentStack":[]} 
 Player 2 15:53:10 $CLEAR_SE_VIS:  
 Player 2 15:53:10 $END_TURN:  
 Player 2 15:53:10 $SET_TURN:  

 {"playerId":1} 
 Player 2 15:53:10 $START_TURN:  

 {"playerId":1} 
 Player 2 15:53:10 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 15:53:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:53:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:53:13 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:53:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:53:13 $MOVE_CARD_END:  

 {"moveIndex":8,"cardId":79,"flipIfFlipped":false,"playerId":1} 
 Player 2 15:53:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 start turn loot"} 
 Player 2 15:53:17 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:53:17 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:53:19 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:53:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on War"} 
 Player 2 15:53:22 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:53:22 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:53:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1  declared attack on War"} 
 Player 2 15:53:26 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:53:26 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:53:28 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:53:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:53:36 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:53:36 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:53:36 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:53:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:54:55 $LOG_ERROR:  

 "no stack effect to show" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 15:54:55 $SHOW_ANNOUNCEMENT:  

 {"text":"no stack effect to show"} 
 Player 2 15:54:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:54:58 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 is rolling against War<Monster>"} 
 Player 2 15:55:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 is rolling against War<Monster>"} 
 Player 2 15:55:41 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:55:41 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:55:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:55:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:55:50 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:55:50 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:55:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:55:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:55:57 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:55:57 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:55:57 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:56:05 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:56:05 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:56:05 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:56:10 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:56:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:56:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:56:19 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:56:19 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:56:19 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:57:36 $LOG_ERROR:  

 "no stack effect to show" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 15:57:36 $SHOW_ANNOUNCEMENT:  

 {"text":"no stack effect to show"} 
 Player 2 15:57:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:57:55 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 is rolling against War<Monster>"} 
 Player 2 15:57:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 is rolling against War<Monster>"} 
 Player 2 15:57:59 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:57:59 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:57:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:57:59 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:07 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:07 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:10 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:13 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:13 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:13 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:16 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:58:16 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:16 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:17 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:58:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:58:24 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:58:24 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:24 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:58:25 $LOG_ERROR:  

 "no stack effect to show" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 15:58:25 $SHOW_ANNOUNCEMENT:  

 {"text":"no stack effect to show"} 
 Player 2 15:58:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 is rolling against War<Monster>"} 
 Player 2 15:58:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 is rolling against War<Monster>"} 
 Player 2 15:58:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Player 1 is rolling against War<Monster>"} 
 Player 2 15:58:31 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:31 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:58:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:34 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:34 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:37 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:Activate War "} 
 Player 2 15:58:40 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:40 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:40 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:58:40 $LOG_ERROR:  

 "no stack effect to show" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 15:58:40 $SHOW_ANNOUNCEMENT:  

 {"text":"no stack effect to show"} 
 Player 2 15:58:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:58:44 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:[object Object] killed by Samson"} 
 Player 2 15:58:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War \n2:[object Object] killed by Samson"} 
 Player 2 15:58:47 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:47 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:58:47 $LOG_ERROR:  

 "no stack effect to show" 
//////Error From Player 2////
 [object Object]
////// 
 Player 2 15:58:47 $SHOW_ANNOUNCEMENT:  

 {"text":"no stack effect to show"} 
 Player 2 15:58:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Samson combat damage to War"} 
 Player 2 15:58:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get War<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 15:58:53 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 1 get War<Monster> reward \n2:[object Object] killed by Samson"} 
 Player 2 15:58:53 $HIDE_REACTIONS:  

 {"playerId":2,"cardsIds":[319,320]} 
 Player 2 15:58:53 $RESPOND_TO:  

 {"playerId":1,"stackEffectResponse":false} 
 Player 2 15:58:54 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 15:59:03 $STACK_EMPTIED:  

 {"playerId":1} 
 Player 2 15:59:03 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:03 $NEXT_STACK_ID:  
 Player 2 15:59:03 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:59:03 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:59:03 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":15,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:59:03 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:59:04 $SHOW_STACK_EFFECT:  

 {"effectId":15} 
 Player 2 15:59:04 $CLEAR_SE_VIS:  
 Player 2 15:59:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":115,"_text":"Add StartTurnLoot 15 "}} 
 Player 2 15:59:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:06 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:59:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":116,"_text":"Response Adding StartTurnLoot 15"},"childOfId":115} 
 Player 2 15:59:06 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":117,"_text":"Wait For Response From Player 2 "},"childOfId":115} 
 Player 2 15:59:06 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:06 $ACTION_MASSAGE_REMOVE:  

 {"id":117} 
 Player 2 15:59:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":118,"_text":"Wait For Response From Player 1 "},"childOfId":115} 
 Player 2 15:59:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:07 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:07 $ACTION_MASSAGE_REMOVE:  

 {"id":118} 
 Player 2 15:59:07 $ACTION_MASSAGE_REMOVE:  

 {"id":116} 
 Player 2 15:59:07 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":119,"_text":"Resolve StartTurnLoot 15 "}} 
 Player 2 15:59:07 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:59:07 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:59:07 $MOVE_CARD:  

 {"moveIndex":9,"cardId":103,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:59:08 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":103} 
 Player 2 15:59:08 $FLIP_CARD:  

 {"cardId":103} 
 Player 2 15:59:08 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":103} 
 Player 2 15:59:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":15,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:59:08 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":15} 
 Player 2 15:59:08 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:59:08 $SHOW_STACK_EFFECT:  

 {"effectId":15} 
 Player 2 15:59:11 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":15} 
 Player 2 15:59:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":120,"_text":"Remove After Resolve StartTurnLoot 15  "}} 
 Player 2 15:59:11 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:59:11 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":15,"creatorCardId":319,"turnPlayerCardId":319,"stackEffectType":13}} 
 Player 2 15:59:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":121,"_text":"Response Remove After Resolve StartTurnLoot 15"},"childOfId":120} 
 Player 2 15:59:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":122,"_text":"Wait For Response From Player 1 "},"childOfId":120} 
 Player 2 15:59:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:11 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:11 $ACTION_MASSAGE_REMOVE:  

 {"id":122} 
 Player 2 15:59:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":123,"_text":"Wait For Response From Player 2 "},"childOfId":120} 
 Player 2 15:59:11 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:11 $ACTION_MASSAGE_REMOVE:  

 {"id":123} 
 Player 2 15:59:11 $ACTION_MASSAGE_REMOVE:  

 {"id":121} 
 Player 2 15:59:11 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":124,"_text":"Stack Was Emptied "}} 
 Player 2 15:59:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:59:12 $CLEAR_SE_VIS:  
 Player 2 15:59:17 $NEXT_STACK_ID:  
 Player 2 15:59:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on War"} 
 Player 2 15:59:17 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 2 15:59:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":16,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 2 15:59:17 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:59:17 $SHOW_STACK_EFFECT:  

 {"effectId":16} 
 Player 2 15:59:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":125,"_text":"Add DeclareAttack 16 "}} 
 Player 2 15:59:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:20 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 2 15:59:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":126,"_text":"Response Adding DeclareAttack 16"},"childOfId":125} 
 Player 2 15:59:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":127,"_text":"Wait For Response From Player 2 "},"childOfId":125} 
 Player 2 15:59:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:20 $ACTION_MASSAGE_REMOVE:  

 {"id":127} 
 Player 2 15:59:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":128,"_text":"Wait For Response From Player 1 "},"childOfId":125} 
 Player 2 15:59:20 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:21 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:21 $ACTION_MASSAGE_REMOVE:  

 {"id":128} 
 Player 2 15:59:21 $ACTION_MASSAGE_REMOVE:  

 {"id":126} 
 Player 2 15:59:21 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":129,"_text":"Resolve DeclareAttack 16 "}} 
 Player 2 15:59:21 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 2 15:59:21 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":5} 
 Player 2 15:59:21 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":3,"originStackId":16},"isAfterActivation":true,"index":3} 
 Player 2 15:59:21 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":16,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 2 15:59:21 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":16} 
 Player 2 15:59:21 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:59:21 $SHOW_STACK_EFFECT:  

 {"effectId":16} 
 Player 2 15:59:24 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":16} 
 Player 2 15:59:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":130,"_text":"Remove After Resolve DeclareAttack 16  "}} 
 Player 2 15:59:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:59:24 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":16,"creatorCardId":319,"attackingPlayerCardId":319,"idOfCardBeingAttacked":306,"stackEffectType":4}} 
 Player 2 15:59:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":131,"_text":"Response Remove After Resolve DeclareAttack 16"},"childOfId":130} 
 Player 2 15:59:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":132,"_text":"Wait For Response From Player 1 "},"childOfId":130} 
 Player 2 15:59:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:24 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:24 $ACTION_MASSAGE_REMOVE:  

 {"id":132} 
 Player 2 15:59:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":133,"_text":"Wait For Response From Player 2 "},"childOfId":130} 
 Player 2 15:59:24 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:24 $ACTION_MASSAGE_REMOVE:  

 {"id":133} 
 Player 2 15:59:24 $ACTION_MASSAGE_REMOVE:  

 {"id":131} 
 Player 2 15:59:24 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":134,"_text":"Stack Was Emptied "}} 
 Player 2 15:59:24 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:59:24 $CLEAR_SE_VIS:  
 Player 2 15:59:26 $NEXT_STACK_ID:  
 Player 2 15:59:26 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 15:59:26 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":17,"creatorCardId":319,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 15:59:26 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":319,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 15:59:26 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:59:26 $SHOW_STACK_EFFECT:  

 {"effectId":17} 
 Player 2 15:59:29 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":135,"_text":"Add AttackRoll 17 "}} 
 Player 2 15:59:29 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 15:59:31 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":3} 
 Player 2 15:59:31 $UPDATE_STACK_VIS:  

 {"stackId":17,"text":"player rolled 3 vs War<Monster>"} 
 Player 2 15:59:31 $SHOW_DICE_ROLL:  

 {"stackId":17} 
 Player 2 15:59:34 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 15:59:34 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:34 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":319,"numberRolled":3,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 15:59:34 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":136,"_text":"Response Adding AttackRoll 17"},"childOfId":135} 
 Player 2 15:59:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":137,"_text":"Wait For Response From Player 2 "},"childOfId":135} 
 Player 2 15:59:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:35 $ACTION_MASSAGE_REMOVE:  

 {"id":137} 
 Player 2 15:59:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":138,"_text":"Wait For Response From Player 1 "},"childOfId":135} 
 Player 2 15:59:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:35 $ACTION_MASSAGE_REMOVE:  

 {"id":138} 
 Player 2 15:59:35 $ACTION_MASSAGE_REMOVE:  

 {"id":136} 
 Player 2 15:59:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":139,"_text":"Resolve AttackRoll 17 "}} 
 Player 2 15:59:35 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 15:59:35 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":319,"numberRolled":3,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 15:59:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":140,"_text":"Added 0 to original roll"}} 
 Player 2 15:59:35 $NEXT_STACK_ID:  
 Player 2 15:59:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:35 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:59:35 $SHOW_STACK_EFFECT:  

 {"effectId":18} 
 Player 2 15:59:38 $CLEAR_SE_VIS:  
 Player 2 15:59:38 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Player 2 rolled 3 vs War<Monster>"} 
 Player 2 15:59:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":18,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 15:59:38 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":17,"creatorCardId":319,"numberRolled":3,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 15:59:38 $REPLACE_STACK:  

 {"currentStack":[{"entityId":18,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3},{"entityId":17,"creatorCardId":319,"numberRolled":3,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}]} 
 Player 2 15:59:38 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":4,"originStackId":17},"isAfterActivation":true,"index":4} 
 Player 2 15:59:38 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":17,"creatorCardId":319,"numberRolled":3,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 15:59:38 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":17} 
 Player 2 15:59:38 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:59:38 $SHOW_STACK_EFFECT:  

 {"effectId":17} 
 Player 2 15:59:41 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":17} 
 Player 2 15:59:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":141,"_text":"Remove After Resolve AttackRoll 17  "}} 
 Player 2 15:59:41 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War"} 
 Player 2 15:59:41 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":17,"creatorCardId":319,"numberRolled":3,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 15:59:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":142,"_text":"Response Remove After Resolve AttackRoll 17"},"childOfId":141} 
 Player 2 15:59:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":143,"_text":"Wait For Response From Player 2 "},"childOfId":141} 
 Player 2 15:59:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:41 $ACTION_MASSAGE_REMOVE:  

 {"id":143} 
 Player 2 15:59:41 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":144,"_text":"Wait For Response From Player 1 "},"childOfId":141} 
 Player 2 15:59:41 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:41 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:42 $ACTION_MASSAGE_REMOVE:  

 {"id":144} 
 Player 2 15:59:42 $ACTION_MASSAGE_REMOVE:  

 {"id":142} 
 Player 2 15:59:42 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":145,"_text":"Resolve CombatDamage 18 "}} 
 Player 2 15:59:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War"} 
 Player 2 15:59:42 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 15:59:42 $UPDATE_STACK_VIS:  

 {"stackId":18,"text":"Lilith will deal 1 combat damage to War"} 
 Player 2 15:59:42 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":319},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 15:59:42 $NEXT_STACK_ID:  
 Player 2 15:59:42 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 15:59:42 $ADD_TO_STACK:  

 {"stackEffect":{"effectCollectedData":null,"entityId":19,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":306,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 15:59:42 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"effectCollectedData":null,"entityId":19,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":306,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 
 Player 2 15:59:42 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:59:42 $SHOW_STACK_EFFECT:  

 {"effectId":19} 
 Player 2 15:59:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":146,"_text":"Add ActivatePassiveEffect 19 "}} 
 Player 2 15:59:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 15:59:45 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":19,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":306,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 15:59:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":147,"_text":"Response Adding ActivatePassiveEffect 19"},"childOfId":146} 
 Player 2 15:59:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":148,"_text":"Wait For Response From Player 1 "},"childOfId":146} 
 Player 2 15:59:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:45 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:45 $ACTION_MASSAGE_REMOVE:  

 {"id":148} 
 Player 2 15:59:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":149,"_text":"Wait For Response From Player 2 "},"childOfId":146} 
 Player 2 15:59:45 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:45 $ACTION_MASSAGE_REMOVE:  

 {"id":149} 
 Player 2 15:59:45 $ACTION_MASSAGE_REMOVE:  

 {"id":147} 
 Player 2 15:59:45 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":150,"_text":"Resolve ActivatePassiveEffect 19 "}} 
 Player 2 15:59:45 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 15:59:45 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":19,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":306,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":306,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 15:59:45 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 2 15:59:47 $DISABLE_PARTICLE_EFFECT:  

 {"cardId":306,"particleType":6} 
 Player 2 15:59:47 $MONSTER_GAIN_DMG:  

 {"cardId":306,"DMGToGain":1} 
 Player 2 15:59:47 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":319},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 
 Player 2 15:59:47 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War \n2:Activate War effect GainStats<GainStats>"} 
 Player 2 15:59:47 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":19,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":306,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 15:59:47 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":19} 
 Player 2 15:59:47 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:59:47 $SHOW_STACK_EFFECT:  

 {"effectId":19} 
 Player 2 15:59:50 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":19} 
 Player 2 15:59:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":151,"_text":"Remove After Resolve ActivatePassiveEffect 19  "}} 
 Player 2 15:59:50 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War"} 
 Player 2 15:59:50 $REMOVE_FROM_STACK:  

 {"stackEffect":{"effectCollectedData":{"effectTargets":[306],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":306,"effectCardPlayer":306},"entityId":19,"creatorCardId":319,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":306,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 
 Player 2 15:59:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":152,"_text":"Response Remove After Resolve ActivatePassiveEffect 19"},"childOfId":151} 
 Player 2 15:59:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":153,"_text":"Wait For Response From Player 2 "},"childOfId":151} 
 Player 2 15:59:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:50 $ACTION_MASSAGE_REMOVE:  

 {"id":153} 
 Player 2 15:59:50 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":154,"_text":"Wait For Response From Player 1 "},"childOfId":151} 
 Player 2 15:59:50 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:50 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:52 $ACTION_MASSAGE_REMOVE:  

 {"id":154} 
 Player 2 15:59:52 $ACTION_MASSAGE_REMOVE:  

 {"id":152} 
 Player 2 15:59:52 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":155,"_text":"Resolve CombatDamage 18 "}} 
 Player 2 15:59:52 $MONSTER_GET_DAMAGED:  

 {"cardId":306,"hpLeft":2,"damageDealerId":319} 
 Player 2 15:59:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":319},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":306,"scopeIsPlayer":false,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:59:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":3},{"type":0,"number":319},{"type":0,"number":306}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":5,"originStackId":18},"isAfterActivation":true,"index":5} 
 Player 2 15:59:52 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Lilith combat damage to War"} 
 Player 2 15:59:52 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":18,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 15:59:52 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":18} 
 Player 2 15:59:52 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:59:52 $SHOW_STACK_EFFECT:  

 {"effectId":18} 
 Player 2 15:59:55 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":18} 
 Player 2 15:59:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":156,"_text":"Remove After Resolve CombatDamage 18  "}} 
 Player 2 15:59:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:59:55 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":18,"creatorCardId":319,"entityToDoDamageCardId":319,"entityToTakeDamageCardId":306,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":3}} 
 Player 2 15:59:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":157,"_text":"Response Remove After Resolve CombatDamage 18"},"childOfId":156} 
 Player 2 15:59:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":158,"_text":"Wait For Response From Player 1 "},"childOfId":156} 
 Player 2 15:59:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:59:55 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:59:55 $ACTION_MASSAGE_REMOVE:  

 {"id":158} 
 Player 2 15:59:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":159,"_text":"Wait For Response From Player 2 "},"childOfId":156} 
 Player 2 15:59:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:59:55 $ACTION_MASSAGE_REMOVE:  

 {"id":159} 
 Player 2 15:59:55 $ACTION_MASSAGE_REMOVE:  

 {"id":157} 
 Player 2 15:59:55 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":160,"_text":"Stack Was Emptied "}} 
 Player 2 15:59:55 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:59:55 $CLEAR_SE_VIS:  
 Player 2 16:00:00 $NEXT_STACK_ID:  
 Player 2 16:00:00 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against War<Monster>"} 
 Player 2 16:00:00 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":319,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 16:00:00 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":319,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 16:00:00 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 16:00:00 $SHOW_STACK_EFFECT:  

 {"effectId":20} 
 Player 2 16:00:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":161,"_text":"Add AttackRoll 20 "}} 
 Player 2 16:00:03 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 16:00:04 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":2} 
 Player 2 16:00:04 $UPDATE_STACK_VIS:  

 {"stackId":20,"text":"player rolled 2 vs War<Monster>"} 
 Player 2 16:00:05 $SHOW_DICE_ROLL:  

 {"stackId":20} 
 Player 2 16:00:07 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 16:00:07 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:00:08 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":319,"numberRolled":2,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 16:00:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":162,"_text":"Response Adding AttackRoll 20"},"childOfId":161} 
 Player 2 16:00:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":163,"_text":"Wait For Response From Player 2 "},"childOfId":161} 
 Player 2 16:00:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:00:08 $ACTION_MASSAGE_REMOVE:  

 {"id":163} 
 Player 2 16:00:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":164,"_text":"Wait For Response From Player 1 "},"childOfId":161} 
 Player 2 16:00:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:00:08 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:00:08 $ACTION_MASSAGE_REMOVE:  

 {"id":164} 
 Player 2 16:00:08 $ACTION_MASSAGE_REMOVE:  

 {"id":162} 
 Player 2 16:00:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":165,"_text":"Resolve AttackRoll 20 "}} 
 Player 2 16:00:08 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 16:00:08 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":319,"numberRolled":2,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 16:00:08 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":166,"_text":"Added 0 to original roll"}} 
 Player 2 16:00:08 $NEXT_STACK_ID:  
 Player 2 16:00:08 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:00:08 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 16:00:08 $SHOW_STACK_EFFECT:  

 {"effectId":21} 
 Player 2 16:00:11 $CLEAR_SE_VIS:  
 Player 2 16:00:11 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Lilith \n2:Player 2 rolled 2 vs War<Monster>"} 
 Player 2 16:00:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":21,"creatorCardId":319,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":319,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2}} 
 Player 2 16:00:11 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":20,"creatorCardId":319,"numberRolled":2,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 16:00:11 $REPLACE_STACK:  

 {"currentStack":[{"entityId":21,"creatorCardId":319,"entityToDoDamageCardId":306,"entityToTakeDamageCardId":319,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2},{"entityId":20,"creatorCardId":319,"numberRolled":2,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}]} 
 Player 2 16:00:11 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":319,"scopeIsPlayer":true,"index":6,"originStackId":20},"isAfterActivation":true,"index":6} 
 Player 2 16:00:11 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":20,"creatorCardId":319,"numberRolled":2,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 16:00:11 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":20} 
 Player 2 16:00:11 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 16:00:11 $SHOW_STACK_EFFECT:  

 {"effectId":20} 
 Player 2 16:00:14 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":20} 
 Player 2 16:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":167,"_text":"Remove After Resolve AttackRoll 20  "}} 
 Player 2 16:00:14 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:War combat damage to Lilith"} 
 Player 2 16:00:14 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":20,"creatorCardId":319,"numberRolled":2,"rollingPlayerCardId":319,"stackEffectType":2,"attackedMonsterCardId":306}} 
 Player 2 16:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":168,"_text":"Response Remove After Resolve AttackRoll 20"},"childOfId":167} 
 Player 2 16:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":169,"_text":"Wait For Response From Player 2 "},"childOfId":167} 
 Player 2 16:00:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 16:00:14 $ACTION_MASSAGE_REMOVE:  

 {"id":169} 
 Player 2 16:00:14 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":170,"_text":"Wait For Response From Player 1 "},"childOfId":167} 
 Player 2 16:00:14 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 16:00:14 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 16:01:20 $MATCH: 