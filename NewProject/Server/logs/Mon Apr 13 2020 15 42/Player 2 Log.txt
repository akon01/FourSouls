Start Log 
 Player 2 15:42:39 $MOVE_TO_TABLE:  
 Player 2 15:42:48 $FINISH_LOAD:  

 {"id":2,"turnPlayerId":2} 
 Player 2 15:42:48 $CHOOSE_FOR_EDEN:  

 {"playerId":1,"originPlayerId":2} 
 Player 2 15:42:52 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[152,205,213,195,151,153,176,162,175,169,172,146,187,216,194,210,220,191,163,212,182,192,215,186,158,155,148,198,154,168,184,171,174,159,206,177,179,202,160,150,161,208,219,157,144,196,197,188,170,173,149,218,190,156,189,199,164,185,166,181,217,211,141,209,167,180,203,204,214,193,201,207,145,147,183,200,165,178,142]} 
 Player 2 15:42:52 $FLIP_CARD:  

 {"cardId":143} 
 Player 2 15:42:52 $SET_CHAR:  

 {"originPlayerId":2,"playerId":1,"charCardId":315,"itemCardId":143} 
 Player 2 15:42:52 $ASSIGN_CHAR_TO_PLAYER:  

 {"playerId":2,"charCardId":313,"itemCardId":316} 
 Player 2 15:42:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":316}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 
 Player 2 15:42:52 $DECK_ARRAGMENT:  

 {"deckType":1,"arrangement":[131,20,72,86,112,103,82,126,61,36,138,109,104,21,50,22,83,66,49,45,40,129,39,42,101,52,11,15,120,54,26,80,53,25,59,60,139,128,27,136,51,32,10,99,35,62,111,43,78,67,48,69,90,73,117,123,102,8,74,23,6,56,5,113,125,14,115,105,19,7,12,98,132,110,44,16,41,91,127,81,134,118,107,84,30,137,88,75,77,95,100,24,38,121,17,37,71,18,64,33,63,29,31,47,28,93,79,13,96,55,76,135,85,116,94,108,122,9,70,68,4,133,119,58,106,57,65,34,87,89,92,97,114,124,46,130]} 
 Player 2 15:42:52 $DECK_ARRAGMENT:  

 {"deckType":2,"arrangement":[295,282,260,296,237,227,223,230,300,279,273,284,308,244,294,286,305,268,235,259,265,301,263,239,243,250,241,238,229,257,262,288,291,267,226,274,248,224,245,255,256,287,247,261,231,289,270,277,280,307,252,290,225,251,275,303,222,292,264,266,249,240,299,278,283,302,246,233,304,271,281,253,306,232,258,285,236,298,242,234,276,297,254,269,293,272,228]} 
 Player 2 15:42:52 $DECK_ARRAGMENT:  

 {"deckType":5,"arrangement":[205,141,195,151,142,186,148,171,212,209,193,220,174,165,158,172,154,206,219,194,182,196,164,184,149,159,216,213,187,217,167,180,208,181,163,147,207,192,175,155,179,144,200,202,178,150,191,197,214,166,201,146,161,183,170,145,157,185,152,211,190,199,153,210,177,169,173,168,204,160,218,189,198,156,176,215,162,203,188]} 
 Player 2 15:42:52 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 15:42:52 $FLIP_CARD:  

 {"cardId":188} 
 Player 2 15:42:52 $ADD_STORE_CARD:  

 {"cardId":188} 
 Player 2 15:42:52 $DRAW_CARD:  

 {"deckType":5} 
 Player 2 15:42:52 $FLIP_CARD:  

 {"cardId":203} 
 Player 2 15:42:52 $ADD_STORE_CARD:  

 {"cardId":203} 
 Player 2 15:42:52 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:42:52 $FLIP_CARD:  

 {"cardId":228} 
 Player 2 15:42:52 $REGISTER_PASSIVE_ITEM:  

 {"cardId":228} 
 Player 2 15:42:52 $ADD_MONSTER:  

 {"monsterPlaceId":1,"monsterId":228} 
 Player 2 15:42:52 $NEW_MONSTER_ON_PLACE:  

 {"cardId":228,"monsterPlaceId":1} 
 Player 2 15:42:52 $DRAW_CARD:  

 {"deckType":2} 
 Player 2 15:42:52 $FLIP_CARD:  

 {"cardId":272} 
 Player 2 15:42:52 $ADD_MONSTER:  

 {"monsterPlaceId":2,"monsterId":272} 
 Player 2 15:42:52 $NEW_MONSTER_ON_PLACE:  

 {"cardId":272,"monsterPlaceId":2} 
 Player 2 15:42:52 $SET_MONEY:  

 {"playerId":1,"numOfCoins":3} 
 Player 2 15:42:52 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 
 Player 2 15:42:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:42:53 $MOVE_CARD:  

 {"moveIndex":1,"cardId":130,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:42:53 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":130} 
 Player 2 15:42:53 $FLIP_CARD:  

 {"cardId":130} 
 Player 2 15:42:53 $FLIP_CARD:  

 {"cardId":130} 
 Player 2 15:42:53 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":130} 
 Player 2 15:42:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:42:53 $MOVE_CARD:  

 {"moveIndex":2,"cardId":46,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:42:53 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":46} 
 Player 2 15:42:53 $FLIP_CARD:  

 {"cardId":46} 
 Player 2 15:42:53 $FLIP_CARD:  

 {"cardId":46} 
 Player 2 15:42:53 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":46} 
 Player 2 15:42:53 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:42:54 $MOVE_CARD:  

 {"moveIndex":3,"cardId":124,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:42:54 $CARD_DRAWN:  

 {"playerId":1,"deckType":1,"drawnCardId":124} 
 Player 2 15:42:54 $FLIP_CARD:  

 {"cardId":124} 
 Player 2 15:42:54 $FLIP_CARD:  

 {"cardId":124} 
 Player 2 15:42:54 $PLAYER_GET_LOOT:  

 {"playerId":1,"cardId":124} 
 Player 2 15:42:54 $SET_MONEY:  

 {"playerId":2,"numOfCoins":3} 
 Player 2 15:42:54 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 
 Player 2 15:42:54 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:42:54 $MOVE_CARD:  

 {"moveIndex":4,"cardId":114,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:42:54 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":114} 
 Player 2 15:42:54 $FLIP_CARD:  

 {"cardId":114} 
 Player 2 15:42:54 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":114} 
 Player 2 15:42:54 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:42:55 $MOVE_CARD:  

 {"moveIndex":5,"cardId":97,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:42:55 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":97} 
 Player 2 15:42:55 $FLIP_CARD:  

 {"cardId":97} 
 Player 2 15:42:55 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":97} 
 Player 2 15:42:55 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:42:55 $MOVE_CARD:  

 {"moveIndex":6,"cardId":92,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:42:55 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":92} 
 Player 2 15:42:55 $FLIP_CARD:  

 {"cardId":92} 
 Player 2 15:42:55 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":92} 
 Player 2 15:42:55 $GAME_HAS_STARTED:  
 Player 2 15:42:55 $SET_TURN:  

 {"playerId":2} 
 Player 2 15:42:55 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:42:56 $NEXT_STACK_ID:  
 Player 2 15:42:56 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:42:56 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 start turn loot"} 
 Player 2 15:42:56 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 
 Player 2 15:42:56 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 
 Player 2 15:42:56 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:42:56 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 15:42:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 
 Player 2 15:42:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:42:58 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 
 Player 2 15:42:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 
 Player 2 15:42:58 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 
 Player 2 15:42:58 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:42:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 
 Player 2 15:42:59 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:42:59 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:42:59 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 
 Player 2 15:42:59 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 
 Player 2 15:42:59 $DRAW_CARD:  

 {"deckType":1} 
 Player 2 15:42:59 $MOVE_CARD:  

 {"moveIndex":7,"cardId":89,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 
 Player 2 15:42:59 $CARD_DRAWN:  

 {"playerId":2,"deckType":1,"drawnCardId":89} 
 Player 2 15:42:59 $FLIP_CARD:  

 {"cardId":89} 
 Player 2 15:42:59 $PLAYER_GET_LOOT:  

 {"playerId":2,"cardId":89} 
 Player 2 15:42:59 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 
 Player 2 15:42:59 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":1} 
 Player 2 15:42:59 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:42:59 $SHOW_STACK_EFFECT:  

 {"effectId":1} 
 Player 2 15:43:02 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":1} 
 Player 2 15:43:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 
 Player 2 15:43:02 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:43:02 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":1,"creatorCardId":313,"turnPlayerCardId":313,"stackEffectType":13}} 
 Player 2 15:43:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 
 Player 2 15:43:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 
 Player 2 15:43:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:43:02 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:43:02 $ACTION_MASSAGE_REMOVE:  

 {"id":7} 
 Player 2 15:43:02 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 
 Player 2 15:43:02 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:03 $ACTION_MASSAGE_REMOVE:  

 {"id":8} 
 Player 2 15:43:03 $ACTION_MASSAGE_REMOVE:  

 {"id":6} 
 Player 2 15:43:03 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":9,"_text":"Stack Was Emptied "}} 
 Player 2 15:43:03 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:43:03 $CLEAR_SE_VIS:  
 Player 2 15:43:03 $UPDATE_ACTIONS:  
 Player 2 15:43:06 $NEXT_STACK_ID:  
 Player 2 15:43:06 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2  declared attack on Holy Dinga"} 
 Player 2 15:43:06 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":272,"stackEffectType":4}} 
 Player 2 15:43:06 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":272,"stackEffectType":4}} 
 Player 2 15:43:06 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:43:06 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 15:43:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 
 Player 2 15:43:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":272,"stackEffectType":4}} 
 Player 2 15:43:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 
 Player 2 15:43:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 
 Player 2 15:43:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:09 $ACTION_MASSAGE_REMOVE:  

 {"id":12} 
 Player 2 15:43:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 
 Player 2 15:43:09 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:43:09 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:43:09 $ACTION_MASSAGE_REMOVE:  

 {"id":13} 
 Player 2 15:43:09 $ACTION_MASSAGE_REMOVE:  

 {"id":11} 
 Player 2 15:43:09 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 
 Player 2 15:43:09 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":272,"stackEffectType":4}} 
 Player 2 15:43:09 $ACTIVATE_PARTICLE_EFFECT:  

 {"cardId":272,"particleType":5} 
 Player 2 15:43:09 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 
 Player 2 15:43:09 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":272,"stackEffectType":4}} 
 Player 2 15:43:09 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":2} 
 Player 2 15:43:10 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:43:10 $SHOW_STACK_EFFECT:  

 {"effectId":2} 
 Player 2 15:43:12 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":2} 
 Player 2 15:43:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 
 Player 2 15:43:12 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:43:12 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":2,"creatorCardId":313,"attackingPlayerCardId":313,"idOfCardBeingAttacked":272,"stackEffectType":4}} 
 Player 2 15:43:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 
 Player 2 15:43:12 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 
 Player 2 15:43:12 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:43:13 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:43:13 $ACTION_MASSAGE_REMOVE:  

 {"id":17} 
 Player 2 15:43:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 
 Player 2 15:43:13 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:13 $ACTION_MASSAGE_REMOVE:  

 {"id":18} 
 Player 2 15:43:13 $ACTION_MASSAGE_REMOVE:  

 {"id":16} 
 Player 2 15:43:13 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":19,"_text":"Stack Was Emptied "}} 
 Player 2 15:43:13 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:43:13 $CLEAR_SE_VIS:  
 Player 2 15:43:17 $NEXT_STACK_ID:  
 Player 2 15:43:17 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 is rolling against Holy Dinga<Monster>"} 
 Player 2 15:43:17 $ADD_TO_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":272}} 
 Player 2 15:43:17 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":313,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":272}} 
 Player 2 15:43:17 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:43:17 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 15:43:20 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 
 Player 2 15:43:20 $ROLL_DICE:  

 {"playerId":2} 
 Player 2 15:43:22 $ROLL_DICE_ENDED:  

 {"playerId":2,"numberRolled":6} 
 Player 2 15:43:22 $UPDATE_STACK_VIS:  

 {"stackId":3,"text":"player rolled 6 vs Holy Dinga<Monster>"} 
 Player 2 15:43:22 $SHOW_DICE_ROLL:  

 {"stackId":3} 
 Player 2 15:43:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Holy Dinga<Monster>"} 
 Player 2 15:43:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:25 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":272}} 
 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 
 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 
 Player 2 15:43:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:25 $ACTION_MASSAGE_REMOVE:  

 {"id":22} 
 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 
 Player 2 15:43:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:43:25 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:43:25 $ACTION_MASSAGE_REMOVE:  

 {"id":23} 
 Player 2 15:43:25 $ACTION_MASSAGE_REMOVE:  

 {"id":21} 
 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 
 Player 2 15:43:25 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Player 2 rolled 6 vs Holy Dinga<Monster>"} 
 Player 2 15:43:25 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":272}} 
 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":25,"_text":"Added 0 to original roll"}} 
 Player 2 15:43:25 $NEXT_STACK_ID:  
 Player 2 15:43:25 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:25 $SET_STACK_ICON:  

 {"iconIndex":0} 
 Player 2 15:43:25 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 15:43:28 $CLEAR_SE_VIS:  
 Player 2 15:43:28 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Holy Dinga \n2:Player 2 rolled 6 vs Holy Dinga<Monster>"} 
 Player 2 15:43:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":272,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 
 Player 2 15:43:28 $ADD_SE_VIS_PREV:  

 {"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":272}} 
 Player 2 15:43:28 $REPLACE_STACK:  

 {"currentStack":[{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":272,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":3,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":272}]} 
 Player 2 15:43:28 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 
 Player 2 15:43:28 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":272}} 
 Player 2 15:43:28 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":3} 
 Player 2 15:43:28 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:43:28 $SHOW_STACK_EFFECT:  

 {"effectId":3} 
 Player 2 15:43:31 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":3} 
 Player 2 15:43:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 
 Player 2 15:43:31 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Holy Dinga"} 
 Player 2 15:43:31 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":3,"creatorCardId":313,"numberRolled":6,"rollingPlayerCardId":313,"stackEffectType":2,"attackedMonsterCardId":272}} 
 Player 2 15:43:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 
 Player 2 15:43:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 
 Player 2 15:43:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:31 $ACTION_MASSAGE_REMOVE:  

 {"id":28} 
 Player 2 15:43:31 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 
 Player 2 15:43:31 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:43:31 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:43:32 $ACTION_MASSAGE_REMOVE:  

 {"id":29} 
 Player 2 15:43:32 $ACTION_MASSAGE_REMOVE:  

 {"id":27} 
 Player 2 15:43:32 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 
 Player 2 15:43:32 $UPDATE_STACK_LABLE:  

 {"stackText":" \n1:Cain combat damage to Holy Dinga"} 
 Player 2 15:43:32 $ADD_RESOLVING_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":272,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 
 Player 2 15:43:32 $UPDATE_STACK_VIS:  

 {"stackId":4,"text":"Cain will deal 1 combat damage to Holy Dinga"} 
 Player 2 15:43:32 $MONSTER_GET_DAMAGED:  

 {"cardId":272,"hpLeft":2,"damageDealerId":313} 
 Player 2 15:43:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":313},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":272,"scopeIsPlayer":false,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 
 Player 2 15:43:32 $UPDATE_PASSIVE_DATA:  

 {"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":313},{"type":0,"number":272}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":7,"originStackId":4},"isAfterActivation":true,"index":7} 
 Player 2 15:43:32 $UPDATE_STACK_EFFECT:  

 {"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":272,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 
 Player 2 15:43:32 $REMOVE_RESOLVING_STACK_EFFECT:  

 {"stackEffectId":4} 
 Player 2 15:43:32 $SET_STACK_ICON:  

 {"iconIndex":1} 
 Player 2 15:43:32 $SHOW_STACK_EFFECT:  

 {"effectId":4} 
 Player 2 15:43:35 $REMOVE_SE_VIS_PREV:  

 {"stackEffectId":4} 
 Player 2 15:43:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 
 Player 2 15:43:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:43:35 $REMOVE_FROM_STACK:  

 {"stackEffect":{"entityId":4,"creatorCardId":313,"entityToDoDamageCardId":313,"entityToTakeDamageCardId":272,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 
 Player 2 15:43:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 
 Player 2 15:43:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 
 Player 2 15:43:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":1} 
 Player 2 15:43:35 $GET_REACTION:  

 {"playerId":1,"activePlayerId":2} 
 Player 2 15:43:35 $ACTION_MASSAGE_REMOVE:  

 {"id":33} 
 Player 2 15:43:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 
 Player 2 15:43:35 $GIVE_PLAYER_PRIORITY:  

 {"playerId":2} 
 Player 2 15:43:35 $ACTION_MASSAGE_REMOVE:  

 {"id":34} 
 Player 2 15:43:35 $ACTION_MASSAGE_REMOVE:  

 {"id":32} 
 Player 2 15:43:35 $ACTION_MASSAGE_ADD:  

 {"massage":{"_id":35,"_text":"Stack Was Emptied "}} 
 Player 2 15:43:35 $UPDATE_STACK_LABLE:  

 {"stackText":"Empty Stack"} 
 Player 2 15:43:35 $CLEAR_SE_VIS:  
 Player 2 15:44:32 $MATCH: 