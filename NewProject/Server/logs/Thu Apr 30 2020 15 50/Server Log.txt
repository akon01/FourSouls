Start Log 

 Player 1 15:50:53 $MATCH:  

 Player 1 15:50:54 $START_GAME:  

 Player 2 15:50:54 $MOVE_TO_TABLE:  

 Player 1 15:50:54 $MOVE_TO_TABLE:  

 Player 1 15:51:01 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:51:02 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 15:51:02 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 15:51:02 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":313,"itemCardId":314} 

 Player 1 15:51:02 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 15:51:02 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":315,"itemCardId":318} 

 Player 2 15:51:02 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[96,42,49,115,7,69,66,138,121,62,114,52,26,67,24,130,63,92,48,74,119,31,4,116,106,129,107,101,82,10,90,100,109,76,102,99,98,80,50,128,81,27,70,133,110,14,11,79,65,93,34,104,68,94,124,25,85,77,135,59,95,75,12,112,108,122,53,123,136,73,71,21,89,61,39,134,83,91,139,15,88,32,45,46,37,8,54,16,86,29,56,43,72,5,87,97,64,84,6,78,126,117,105,125,60,120,103,57,137,23,28,55,17,20,131,44,38,127,22,33,51,113,13,36,118,58,19,9,18,35,40,111,132,47,41,30]} 

 Player 2 15:51:02 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[236,264,245,248,238,262,302,304,254,252,276,243,288,265,295,293,256,255,307,274,223,244,299,292,266,234,250,303,235,269,231,285,229,296,309,275,273,260,226,240,306,261,246,305,268,281,308,287,239,272,298,301,283,247,258,227,230,279,233,271,242,286,253,251,277,259,294,278,232,284,300,270,257,263,289,228,291,280,237,241,267,282,290,225,297,249,224,310]} 

 Player 2 15:51:02 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[169,210,188,211,208,212,190,209,221,214,179,218,187,171,206,186,202,172,181,204,217,170,166,153,162,176,158,182,161,191,148,198,160,157,220,150,152,154,205,142,144,143,175,196,163,219,201,207,146,194,193,145,168,189,213,165,216,151,141,167,147,199,159,164,174,200,184,215,156,185,183,203,192,155,149,177,178,173,195,180,197]} 

 Player 2 15:51:02 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:51:02 $FLIP_CARD:  
{"cardId":197} 

 Player 2 15:51:02 $ADD_STORE_CARD:  
{"cardId":197} 

 Player 2 15:51:02 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:51:02 $FLIP_CARD:  
{"cardId":180} 

 Player 2 15:51:02 $ADD_STORE_CARD:  
{"cardId":180} 

 Player 2 15:51:02 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:51:02 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":310} 

 Player 2 15:51:02 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:51:02 $FLIP_CARD:  
{"cardId":224} 

 Player 2 15:51:03 $REGISTER_PASSIVE_ITEM:  
{"cardId":224} 

 Player 2 15:51:03 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":224} 

 Player 2 15:51:03 $NEW_MONSTER_ON_PLACE:  
{"cardId":224,"monsterPlaceId":1} 

 Player 2 15:51:03 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:51:03 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":249} 

 Player 2 15:51:03 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:51:03 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":297} 

 Player 2 15:51:03 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:51:03 $FLIP_CARD:  
{"cardId":225} 

 Player 2 15:51:03 $REGISTER_PASSIVE_ITEM:  
{"cardId":225} 

 Player 2 15:51:03 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":225} 

 Player 2 15:51:03 $NEW_MONSTER_ON_PLACE:  
{"cardId":225,"monsterPlaceId":2} 

 Player 2 15:51:03 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:51:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:51:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:51:03 $MOVE_CARD:  
{"moveIndex":1,"cardId":30,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:03 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":30,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:51:03 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":30} 

 Player 2 15:51:03 $FLIP_CARD:  
{"cardId":30} 

 Player 2 15:51:03 $FLIP_CARD:  
{"cardId":30} 

 Player 2 15:51:03 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":30} 

 Player 2 15:51:03 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:51:03 $MOVE_CARD:  
{"moveIndex":2,"cardId":41,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:04 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":41,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:51:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":41} 

 Player 2 15:51:04 $FLIP_CARD:  
{"cardId":41} 

 Player 2 15:51:04 $FLIP_CARD:  
{"cardId":41} 

 Player 2 15:51:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":41} 

 Player 2 15:51:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:51:04 $MOVE_CARD:  
{"moveIndex":3,"cardId":47,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:04 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":47,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:51:04 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":47} 

 Player 2 15:51:04 $FLIP_CARD:  
{"cardId":47} 

 Player 2 15:51:04 $FLIP_CARD:  
{"cardId":47} 

 Player 2 15:51:04 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":47} 

 Player 2 15:51:04 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:51:04 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:51:04 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:51:04 $MOVE_CARD:  
{"moveIndex":4,"cardId":132,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:05 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":132,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:51:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":132} 

 Player 2 15:51:05 $FLIP_CARD:  
{"cardId":132} 

 Player 2 15:51:05 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":132} 

 Player 2 15:51:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:51:05 $MOVE_CARD:  
{"moveIndex":5,"cardId":111,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:05 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":111,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:51:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":111} 

 Player 2 15:51:05 $FLIP_CARD:  
{"cardId":111} 

 Player 2 15:51:05 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":111} 

 Player 2 15:51:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:51:05 $MOVE_CARD:  
{"moveIndex":6,"cardId":40,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:06 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":40,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:51:06 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":40} 

 Player 2 15:51:06 $FLIP_CARD:  
{"cardId":40} 

 Player 2 15:51:06 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":40} 

 Player 2 15:51:06 $GAME_HAS_STARTED:  

 Player 2 15:51:06 $SET_TURN:  
{"playerId":2} 

 Player 2 15:51:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:51:06 $NEXT_STACK_ID:  

 Player 2 15:51:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 15:51:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 15:51:06 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:51:06 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 15:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 15:51:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:51:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 15:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 15:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 15:51:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 15:51:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:51:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:51:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:51:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:51:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 15:51:09 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 15:51:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:51:09 $MOVE_CARD:  
{"moveIndex":7,"cardId":35,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:10 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:51:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":35} 

 Player 2 15:51:10 $FLIP_CARD:  
{"cardId":35} 

 Player 2 15:51:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":35} 

 Player 2 15:51:10 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 15:51:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 15:51:10 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:51:10 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:51:10 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 15:51:13 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 15:51:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 15:51:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":315,"turnPlayerCardId":315,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 15:51:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 15:51:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 15:51:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:51:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:51:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:51:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:51:13 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 15:51:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 15:51:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:51:13 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 15:51:13 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 15:51:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 15:51:13 $CLEAR_SE_VIS:  

 Player 2 15:51:13 $UPDATE_ACTIONS:  

 Player 2 15:51:39 $MOVE_CARD:  
{"moveIndex":8,"cardId":133,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:39 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":133,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:51:39 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[96,42,49,115,7,69,66,138,121,62,114,52,26,67,24,130,63,92,48,74,119,31,4,116,106,129,107,101,82,10,90,100,109,76,102,99,98,80,50,128,81,27,70,110,14,11,79,65,93,34,104,68,94,124,25,85,77,135,59,95,75,12,112,108,122,53,123,136,73,71,21,89,61,39,134,83,91,139,15,88,32,45,46,37,8,54,16,86,29,56,43,72,5,87,97,64,84,6,78,126,117,105,125,60,120,103,57,137,23,28,55,17,20,131,44,38,127,22,33,51,113,13,36,118,58,19,9,18]} 

 Player 2 15:51:39 $FLIP_CARD:  
{"cardId":133} 

 Player 2 15:51:39 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":133} 

 Player 2 15:51:48 $MOVE_CARD:  
{"moveIndex":9,"cardId":302,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 15:51:49 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":302,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:51:49 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[297,249,310,236,264,245,248,238,262,304,254,252,276,243,288,265,295,293,256,255,307,274,223,244,299,292,266,234,250,303,235,269,231,285,229,296,309,275,273,260,226,240,306,261,246,305,268,281,308,287,239,272,298,301,283,247,258,227,230,279,233,271,242,286,253,251,277,259,294,278,232,284,300,270,257,263,289,228,291,280,237,241,267,282,290]} 

 Player 2 15:51:49 $FLIP_CARD:  
{"cardId":302} 

 Player 2 15:51:49 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":224} 

 Player 2 15:51:49 $REGISTER_PASSIVE_ITEM:  
{"cardId":302} 

 Player 2 15:51:49 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":302} 

 Player 2 15:51:49 $NEW_MONSTER_ON_PLACE:  
{"cardId":302,"monsterPlaceId":1} 

 Player 2 15:51:58 $NEXT_STACK_ID:  

 Player 2 15:51:58 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":133,"lootPlayerId":2,"lable":"Player 2 Is Going To Play The Lovers ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 15:51:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":133,"lootPlayerId":2,"lable":"Player 2 Is Going To Play The Lovers ","hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 15:51:58 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:51:58 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 15:52:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Play Loot Card 2 "}} 

 Player 2 15:52:01 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":133} 

 Player 2 15:52:01 $MOVE_CARD:  
{"moveIndex":10,"cardId":133,"placeID":329,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 15:52:01 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":133,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:52:01 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":133} 

 Player 2 15:52:01 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Is Going To Play The Lovers: GainStats"} 

 Player 2 15:52:01 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 is Choosing Target"} 

 Player 2 15:52:06 $HIDE_ANNOUNCEMENT:  

 Player 2 15:52:06 $SHOW_DECISION:  
{"startCardId":133,"endCardId":315} 

 Player 2 15:52:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":133,"lootPlayerId":2,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":133,"effctType":1},"lable":"Player 2 Is Going To Play The Lovers: GainStats","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 15:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Play Loot Card 2"},"childOfId":10} 

 Player 2 15:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 15:52:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:09 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 15:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 15:52:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:09 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 15:52:09 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 15:52:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Play Loot Card 2 "}} 

 Player 2 15:52:09 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":315,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":133,"lootPlayerId":2,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":133,"effctType":1},"lable":"Player 2 Is Going To Play The Lovers: GainStats","hasDataBeenCollectedYet":true,"stackEffectType":8}]} 

 Player 2 15:52:09 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Plays The Lovers: GainStats"} 

 Player 2 15:52:09 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":133,"particleType":6} 

 Player 2 15:52:11 $DISABLE_PARTICLE_EFFECT:  
{"cardId":133,"particleType":6} 

 Player 2 15:52:11 $PLAYER_GAIN_HP:  
{"playerId":2,"hpToGain":2,"isTemp":true} 

 Player 2 15:52:11 $REMOVE_FROM_PILE:  
{"cardId":133} 

 Player 2 15:52:11 $MOVE_CARD:  
{"moveIndex":11,"cardId":133,"placeID":330,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 15:52:12 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":133,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:52:12 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":133} 

 Player 2 15:52:12 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":133,"lootPlayerId":2,"lable":"Player 2 Plays The Lovers: GainStats","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 15:52:12 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:52:12 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:52:12 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 15:52:15 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 15:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Play Loot Card 2  "}} 

 Player 2 15:52:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":315,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":133,"lootPlayerId":2,"lable":"Player 2 Plays The Lovers: GainStats","hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 15:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Play Loot Card 2"},"childOfId":15} 

 Player 2 15:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 15:52:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:15 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:15 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 15:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 15:52:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:15 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 15:52:15 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 15:52:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 15:52:15 $CLEAR_SE_VIS:  

 Player 2 15:52:19 $NEXT_STACK_ID:  

 Player 2 15:52:19 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":302,"stackEffectType":4,"lable":"Player 2 declared attack on The Bloat"}} 

 Player 2 15:52:19 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":302,"stackEffectType":4,"lable":"Player 2 declared attack on The Bloat"}} 

 Player 2 15:52:19 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:52:19 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Declare Attack On Monster 3 "}} 

 Player 2 15:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:22 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":302,"stackEffectType":4,"lable":"Player 2 declared attack on The Bloat"}} 

 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Declare Attack On Monster 3"},"childOfId":20} 

 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 15:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 15:52:22 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:22 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:22 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:22 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 15:52:22 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 15:52:22 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Declare Attack On Monster 3 "}} 

 Player 2 15:52:22 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":302,"stackEffectType":4,"lable":"Player 2 declared attack on The Bloat"}]} 

 Player 2 15:52:22 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":302,"particleType":5} 

 Player 2 15:52:23 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Has Entered Battle with The Bloat"} 

 Player 2 15:52:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 2 15:52:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":302,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with The Bloat"}} 

 Player 2 15:52:23 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:52:23 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:52:23 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 15:52:25 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 15:52:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Player Declare Attack On Monster 3  "}} 

 Player 2 15:52:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":315,"attackingPlayerCardId":315,"idOfCardBeingAttacked":302,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with The Bloat"}} 

 Player 2 15:52:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Player Declare Attack On Monster 3"},"childOfId":25} 

 Player 2 15:52:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 15:52:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:26 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:26 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 15:52:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 15:52:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:26 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 15:52:26 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:52:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 15:52:26 $CLEAR_SE_VIS:  

 Player 2 15:52:32 $NEXT_STACK_ID:  

 Player 2 15:52:32 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":302,"lable":"Player 2 is rolling against The Bloat<Monster>"}} 

 Player 2 15:52:32 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":302,"lable":"Player 2 is rolling against The Bloat<Monster>"}} 

 Player 2 15:52:32 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:52:32 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 15:52:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 2 15:52:35 $ROLL_DICE:  
{"playerId":2} 

 Player 2 15:52:38 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 15:52:38 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 3 vs The Bloat<Monster>"} 

 Player 2 15:52:38 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 15:52:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 rolled 3 vs The Bloat<Monster>"} 

 Player 2 15:52:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:41 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":302,"lable":"Player 2 rolled 3 vs The Bloat<Monster>"}} 

 Player 2 15:52:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":30} 

 Player 2 15:52:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 15:52:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:41 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 15:52:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 15:52:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:41 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:41 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 15:52:41 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:52:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 2 15:52:41 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":302,"lable":"Player 2 rolled 3 vs The Bloat<Monster>"}]} 

 Player 2 15:52:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 2 15:52:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Rolled 1 Against The Bloat<Monster> 4"} 

 Player 2 15:52:41 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Roll Miss"} 

 Player 2 15:52:41 $NEXT_STACK_ID:  

 Player 2 15:52:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:41 $CLEAR_SE_VIS:  

 Player 2 15:52:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"entityToDoDamageCardId":302,"entityToTakeDamageCardId":315,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat is going to hurt Cain"}} 

 Player 2 15:52:41 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":302,"lable":"Player 2 Roll Miss"}} 

 Player 2 15:52:41 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":315,"entityToDoDamageCardId":302,"entityToTakeDamageCardId":315,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat is going to hurt Cain"},{"entityId":4,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":302,"lable":"Player 2 Roll Miss"}]} 

 Player 2 15:52:41 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:52:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 2 15:52:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":302,"lable":"Player 2 Roll Miss"}} 

 Player 2 15:52:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:52:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:52:42 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 15:52:44 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 15:52:44 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 15:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 2 15:52:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":315,"numberRolled":3,"rollingPlayerCardId":315,"stackEffectType":2,"attackedMonsterCardId":302,"lable":"Player 2 Roll Miss"}} 

 Player 2 15:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":36} 

 Player 2 15:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 15:52:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 15:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 15:52:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:47 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 15:52:47 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 15:52:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 15:52:48 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":315,"entityToDoDamageCardId":302,"entityToTakeDamageCardId":315,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat is going to hurt Cain"}]} 

 Player 2 15:52:48 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"The Bloat Is Going To Hurt Cain For 2 DMG "} 

 Player 2 15:52:48 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"The Bloat will deal 2 combat damage to Cain"} 

 Player 2 15:52:48 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"The Bloat will deal 2 combat damage to Cain"} 

 Player 2 15:52:48 $PLAYER_GET_HIT:  
{"playerId":2,"damage":2,"damageDealerId":302} 

 Player 2 15:52:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":2},{"type":0,"number":302}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 15:52:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":0,"number":302}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 

 Player 2 15:52:48 $NEXT_STACK_ID:  

 Player 2 15:52:48 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":302,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":302,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate The Bloat Effect DealDamage<DealDamage>"}} 

 Player 2 15:52:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":302,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":302,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate The Bloat Effect DealDamage<DealDamage>"}} 

 Player 2 15:52:48 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:52:48 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 15:52:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Add Activate Passive Effect 6 "}} 

 Player 2 15:52:50 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Activate The Bloat effect DealDamage<DealDamage>"} 

 Player 2 15:52:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":302,"effectCardPlayer":302},"entityId":6,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":302,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":302,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate The Bloat effect DealDamage<DealDamage>"}} 

 Player 2 15:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Adding Activate Passive Effect 6"},"childOfId":41} 

 Player 2 15:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 15:52:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:51 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:51 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 15:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 15:52:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:51 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 15:52:51 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:52:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve Activate Passive Effect 6 "}} 

 Player 2 15:52:51 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":315,"entityToDoDamageCardId":302,"entityToTakeDamageCardId":315,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Cain"},{"effectCollectedData":{"effectTargets":[313,315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":302,"effectCardPlayer":302},"entityId":6,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":302,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":302,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate The Bloat effect DealDamage<DealDamage>"}]} 

 Player 2 15:52:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":302,"particleType":6} 

 Player 2 15:52:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":302,"particleType":6} 

 Player 2 15:52:53 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":302} 

 Player 2 15:52:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":302}],"result":null,"preventMethod":false,"methodScopeId":313,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 15:52:53 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":302} 

 Player 2 15:52:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":302}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 15:52:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":2},{"type":2,"number":1},{"type":0,"number":302}],"result":null,"preventMethod":false,"methodScopeId":315,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 

 Player 2 15:52:53 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Activated The Bloat Effect"} 

 Player 2 15:52:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":302,"effectCardPlayer":302},"entityId":6,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":302,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated The Bloat Effect"}} 

 Player 2 15:52:53 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":315,"entityToDoDamageCardId":302,"entityToTakeDamageCardId":315,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Cain"}]} 

 Player 2 15:52:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:52:53 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 15:52:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 15:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve Activate Passive Effect 6  "}} 

 Player 2 15:52:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[313,315],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":302,"effectCardPlayer":302},"entityId":6,"creatorCardId":315,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":302,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated The Bloat Effect"}} 

 Player 2 15:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve Activate Passive Effect 6"},"childOfId":46} 

 Player 2 15:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 15:52:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:56 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 15:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 15:52:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:56 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 15:52:56 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:52:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 15:52:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"entityToDoDamageCardId":302,"entityToTakeDamageCardId":315,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Cain"}} 

 Player 2 15:52:56 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:52:56 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:52:56 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 15:52:59 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 15:52:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 2 15:52:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":315,"entityToDoDamageCardId":302,"entityToTakeDamageCardId":315,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"The Bloat will deal 2 combat damage to Cain"}} 

 Player 2 15:52:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":51} 

 Player 2 15:52:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 15:52:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:52:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:52:59 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[313,314]} 

 Player 1 15:52:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:52:59 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 15:52:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 15:52:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:52:59 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 15:53:00 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:53:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Stack Was Emptied "}} 

 Player 2 15:53:00 $CLEAR_SE_VIS:  

 Player 2 15:56:44 $MATCH: 