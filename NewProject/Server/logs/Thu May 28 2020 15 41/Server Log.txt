Start Log 

 Player 1 15:41:58 $MATCH:  

 Player 1 15:41:58 $START_GAME:  

 Player 2 15:41:58 $MOVE_TO_TABLE:  

 Player 1 15:41:58 $MOVE_TO_TABLE:  

 Player 1 15:42:08 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:42:08 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 15:42:08 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":337,"itemCardId":338} 

 Player 1 15:42:08 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":337,"itemCardId":338} 

 Player 1 15:42:09 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 15:42:09 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":327,"itemCardId":328} 

 Player 2 15:42:09 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[61,7,88,68,97,100,132,103,98,124,8,69,108,130,33,138,121,49,81,40,109,23,133,139,83,34,5,14,85,16,71,67,56,78,136,90,52,59,25,30,94,120,37,6,123,110,74,22,122,70,11,107,116,127,76,57,15,113,29,48,39,119,128,91,27,9,111,105,45,44,50,112,118,62,115,21,92,125,18,66,28,131,31,64,36,134,75,46,93,102,89,101,13,65,126,80,4,38,106,82,99,47,87,41,86,72,19,26,32,43,35,42,54,58,117,24,79,135,51,77,73,129,10,114,53,17,95,20,137,84,55,12,63,60,96,104]} 

 Player 2 15:42:09 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[263,319,282,274,317,300,272,290,262,284,240,231,295,232,299,285,253,241,254,314,256,287,311,228,269,255,292,286,289,250,310,233,268,278,271,242,239,247,245,298,302,251,303,246,315,312,229,306,276,238,237,280,296,243,266,265,313,318,244,235,258,293,261,275,288,304,227,248,257,305,279,297,281,252,307,309,267,236,308,270,291,230,273,260,259,294,234,277,316,320,283,264,249,301]} 

 Player 2 15:42:09 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[151,148,163,199,159,141,224,191,211,168,194,147,209,183,190,165,142,187,161,157,181,169,197,173,204,176,186,166,206,177,174,171,188,155,175,150,182,205,158,202,216,178,218,172,208,217,225,223,220,144,145,149,162,210,180,193,212,201,219,185,207,184,153,160,195,143,200,146,189,215,196,179,221,170,192,164,213,152,167,214,198,154,156,203,222]} 

 Player 2 15:42:09 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:42:09 $FLIP_CARD:  
{"cardId":222} 

 Player 2 15:42:09 $ADD_STORE_CARD:  
{"cardId":222} 

 Player 2 15:42:09 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:42:09 $FLIP_CARD:  
{"cardId":203} 

 Player 2 15:42:09 $ADD_STORE_CARD:  
{"cardId":203} 

 Player 2 15:42:09 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:42:09 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":301} 

 Player 2 15:42:09 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:42:09 $FLIP_CARD:  
{"cardId":249} 

 Player 2 15:42:09 $REGISTER_PASSIVE_ITEM:  
{"cardId":249} 

 Player 2 15:42:09 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":249} 

 Player 2 15:42:09 $NEW_MONSTER_ON_PLACE:  
{"cardId":249,"monsterPlaceId":1} 

 Player 2 15:42:09 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:42:09 $FLIP_CARD:  
{"cardId":264} 

 Player 2 15:42:09 $REGISTER_PASSIVE_ITEM:  
{"cardId":264} 

 Player 2 15:42:09 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":264} 

 Player 2 15:42:09 $NEW_MONSTER_ON_PLACE:  
{"cardId":264,"monsterPlaceId":2} 

 Player 2 15:42:09 $REGISTER_PASSIVE_ITEM:  
{"cardId":322} 

 Player 2 15:42:09 $REGISTER_PASSIVE_ITEM:  
{"cardId":323} 

 Player 2 15:42:09 $REGISTER_PASSIVE_ITEM:  
{"cardId":324} 

 Player 2 15:42:09 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:42:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:42:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:42:10 $MOVE_CARD:  
{"moveIndex":1,"cardId":104,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:42:10 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":104,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:42:10 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":104} 

 Player 2 15:42:10 $FLIP_CARD:  
{"cardId":104} 

 Player 2 15:42:10 $FLIP_CARD:  
{"cardId":104} 

 Player 2 15:42:10 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":104} 

 Player 2 15:42:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":104}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:42:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:42:10 $MOVE_CARD:  
{"moveIndex":2,"cardId":96,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:42:10 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":96,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:42:11 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":96} 

 Player 2 15:42:11 $FLIP_CARD:  
{"cardId":96} 

 Player 2 15:42:11 $FLIP_CARD:  
{"cardId":96} 

 Player 2 15:42:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":96} 

 Player 2 15:42:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":96}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 15:42:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:42:11 $MOVE_CARD:  
{"moveIndex":3,"cardId":60,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:42:11 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:42:11 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":60} 

 Player 2 15:42:11 $FLIP_CARD:  
{"cardId":60} 

 Player 2 15:42:11 $FLIP_CARD:  
{"cardId":60} 

 Player 2 15:42:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":60} 

 Player 2 15:42:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":60}],"result":null,"preventMethod":false,"methodScopeId":337,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 15:42:11 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:42:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 15:42:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:42:11 $MOVE_CARD:  
{"moveIndex":4,"cardId":63,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:42:12 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":63,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:42:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":63} 

 Player 2 15:42:12 $FLIP_CARD:  
{"cardId":63} 

 Player 2 15:42:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":63} 

 Player 2 15:42:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":63}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 15:42:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:42:12 $MOVE_CARD:  
{"moveIndex":5,"cardId":12,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:42:12 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":12,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:42:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":12} 

 Player 2 15:42:12 $FLIP_CARD:  
{"cardId":12} 

 Player 2 15:42:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":12} 

 Player 2 15:42:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":12}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 15:42:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:42:12 $MOVE_CARD:  
{"moveIndex":6,"cardId":55,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:42:13 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":55,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:42:13 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":55} 

 Player 2 15:42:13 $FLIP_CARD:  
{"cardId":55} 

 Player 2 15:42:13 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":55} 

 Player 2 15:42:13 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":55}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 15:42:13 $GAME_HAS_STARTED:  

 Player 2 15:42:13 $SET_TURN:  
{"playerId":2} 

 Player 2 15:42:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:42:13 $NEXT_STACK_ID:  

 Player 2 15:42:13 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 15:42:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 15:42:13 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:42:13 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 15:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 15:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:42:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 15:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 15:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 15:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 15:42:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:42:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:42:16 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:42:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:42:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 15:42:16 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 15:42:16 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:42:16 $MOVE_CARD:  
{"moveIndex":7,"cardId":84,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:42:17 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":84,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:42:17 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":84} 

 Player 2 15:42:17 $FLIP_CARD:  
{"cardId":84} 

 Player 2 15:42:17 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":84} 

 Player 2 15:42:17 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":84}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 15:42:17 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 15:42:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 15:42:17 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:42:17 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:42:17 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 15:42:20 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 15:42:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 15:42:20 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":327,"turnPlayerCardId":327,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 15:42:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 15:42:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 15:42:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:42:20 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:42:20 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:42:20 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:42:20 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 15:42:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 15:42:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:42:20 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 15:42:20 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 15:42:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 15:42:20 $CLEAR_SE_VIS:  

 Player 2 15:42:20 $UPDATE_ACTIONS:  

 Player 2 15:42:33 $NEXT_STACK_ID:  

 Player 2 15:42:33 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":226,"stackEffectType":4,"lable":"Player 2 declared attack on Monster Deck"}} 

 Player 2 15:42:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":226,"stackEffectType":4,"lable":"Player 2 declared attack on Monster Deck"}} 

 Player 2 15:42:33 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:42:33 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 15:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Player Declare Attack On Monster 2 "}} 

 Player 2 15:42:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:42:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":226,"stackEffectType":4,"lable":"Player 2 declared attack on Monster Deck"}} 

 Player 2 15:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Player Declare Attack On Monster 2"},"childOfId":10} 

 Player 2 15:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 15:42:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:42:36 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 15:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 15:42:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:42:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:42:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:42:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:42:36 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 15:42:36 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 15:42:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Player Declare Attack On Monster 2 "}} 

 Player 2 15:42:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":2,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":226,"stackEffectType":4,"lable":"Player 2 declared attack on Monster Deck"}]} 

 Player 2 15:42:36 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:42:36 $SHOW_CARD_PREVIEW:  
{"cardToShowId":283,"playerId":2} 

 Player 2 15:42:36 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 is Choosing Target"} 

 Player 2 15:42:46 $HIDE_ANNOUNCEMENT:  

 Player 2 15:42:46 $FLIP_CARD:  
{"cardId":283} 

 Player 2 15:42:46 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":249} 

 Player 2 15:42:46 $REGISTER_PASSIVE_ITEM:  
{"cardId":283} 

 Player 2 15:42:46 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":283} 

 Player 2 15:42:46 $NEW_MONSTER_ON_PLACE:  
{"cardId":283,"monsterPlaceId":1} 

 Player 2 15:42:46 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":283,"particleType":5} 

 Player 2 15:42:46 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Player 2 Has Entered Battle with Horf"} 

 Player 2 15:42:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":10,"originStackId":2},"isAfterActivation":true,"index":10} 

 Player 2 15:42:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":283,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Horf"}} 

 Player 2 15:42:46 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:42:46 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:42:46 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 15:42:49 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 15:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Player Declare Attack On Monster 2  "}} 

 Player 2 15:42:49 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":327,"attackingPlayerCardId":327,"idOfCardBeingAttacked":283,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Horf"}} 

 Player 2 15:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Player Declare Attack On Monster 2"},"childOfId":15} 

 Player 2 15:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 15:42:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:42:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:42:49 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:42:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 15:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 15:42:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 15:42:49 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 15:42:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 15:42:49 $CLEAR_SE_VIS:  

 Player 2 15:43:05 $NEXT_STACK_ID:  

 Player 2 15:43:05 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":327,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 is rolling against Horf<Monster>"}} 

 Player 2 15:43:05 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":327,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 is rolling against Horf<Monster>"}} 

 Player 2 15:43:05 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:43:05 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 15:43:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Attack Roll On Monster 3 "}} 

 Player 2 15:43:08 $ROLL_DICE:  
{"playerId":2} 

 Player 2 15:43:10 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 15:43:10 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 6 vs Horf<Monster>"} 

 Player 2 15:43:10 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 2 15:43:13 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 rolled 6 vs Horf<Monster>"} 

 Player 2 15:43:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":327,"numberRolled":6,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 rolled 6 vs Horf<Monster>"}} 

 Player 2 15:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Attack Roll On Monster 3"},"childOfId":20} 

 Player 2 15:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 15:43:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:13 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 15:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 15:43:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:43:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:43:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:43:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:43:13 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 15:43:13 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 15:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 2 15:43:13 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":327,"numberRolled":6,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 rolled 6 vs Horf<Monster>"}]} 

 Player 2 15:43:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 15:43:13 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Rolled 2 Against Horf<Monster> 4"} 

 Player 2 15:43:13 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Roll Miss"} 

 Player 2 15:43:13 $NEXT_STACK_ID:  

 Player 2 15:43:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:13 $CLEAR_SE_VIS:  

 Player 2 15:43:13 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":327,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Horf is going to hurt Blue Baby"}} 

 Player 2 15:43:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":327,"numberRolled":6,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 Roll Miss"}} 

 Player 2 15:43:14 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":327,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Horf is going to hurt Blue Baby"},{"entityId":3,"creatorCardId":327,"numberRolled":6,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 Roll Miss"}]} 

 Player 2 15:43:14 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:43:14 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":11,"originStackId":3},"isAfterActivation":true,"index":11} 

 Player 2 15:43:14 $NEXT_STACK_ID:  

 Player 2 15:43:14 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":283,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":283,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Horf Effect DealDamage<DealDamage>"}} 

 Player 2 15:43:14 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":283,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":283,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Horf Effect DealDamage<DealDamage>"}} 

 Player 2 15:43:14 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:43:14 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 15:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add Activate Passive Effect 5 "}} 

 Player 2 15:43:16 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Activate Horf effect DealDamage<DealDamage>"} 

 Player 2 15:43:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":5,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":283,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":283,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Horf effect DealDamage<DealDamage>"}} 

 Player 2 15:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding Activate Passive Effect 5"},"childOfId":26} 

 Player 2 15:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 15:43:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:16 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 15:43:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 15:43:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:43:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:43:16 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:43:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:43:17 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 15:43:17 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 15:43:17 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve Activate Passive Effect 5 "}} 

 Player 2 15:43:17 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":327,"numberRolled":6,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 Roll Miss"},{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":5,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":283,"effectToDo":{"effectName":"DealDamage","cardEffectNum":0,"cardPlayerId":2,"cardId":283,"effctType":0},"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Horf effect DealDamage<DealDamage>"}]} 

 Player 2 15:43:17 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":283,"particleType":6} 

 Player 2 15:43:19 $DISABLE_PARTICLE_EFFECT:  
{"cardId":283,"particleType":6} 

 Player 2 15:43:19 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":283} 

 Player 2 15:43:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":283},{"type":2,"number":true}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":12,"originStackId":-1},"isAfterActivation":true,"index":12} 

 Player 2 15:43:19 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":2},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":false,"index":11,"originStackId":3},"isAfterActivation":true,"index":11} 

 Player 2 15:43:19 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Activated Horf Effect"} 

 Player 2 15:43:19 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":5,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":283,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Horf Effect"}} 

 Player 2 15:43:19 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":327,"numberRolled":6,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 Roll Miss"}]} 

 Player 2 15:43:19 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:43:19 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 15:43:22 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 15:43:22 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve Activate Passive Effect 5  "}} 

 Player 2 15:43:25 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[327],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":5,"creatorCardId":327,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":283,"isAfterActivation":true,"index":11,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Horf Effect"}} 

 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve Activate Passive Effect 5"},"childOfId":31} 

 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 15:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:43:25 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:43:25 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:43:25 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 15:43:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 15:43:25 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 15:43:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve Player Attack Roll On Monster 3 "}} 

 Player 2 15:43:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":327,"numberRolled":6,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 Roll Miss"}} 

 Player 2 15:43:25 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:43:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:43:25 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 15:43:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 15:43:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 3  "}} 

 Player 2 15:43:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":327,"numberRolled":6,"rollingPlayerCardId":327,"stackEffectType":2,"attackedMonsterCardId":283,"lable":"Player 2 Roll Miss"}} 

 Player 2 15:43:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 3"},"childOfId":36} 

 Player 2 15:43:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 15:43:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:28 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 15:43:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 15:43:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:43:28 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:43:28 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:43:28 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:43:28 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 15:43:28 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 15:43:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 4 "}} 

 Player 2 15:43:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":327,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Horf is going to hurt Blue Baby"}]} 

 Player 2 15:43:28 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Horf Is Going To Hurt Blue Baby For 1 DMG "} 

 Player 2 15:43:28 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Horf will deal 1 combat damage to Blue Baby"} 

 Player 2 15:43:28 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Horf will deal 1 combat damage to Blue Baby"} 

 Player 2 15:43:28 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":283} 

 Player 2 15:43:28 $NEXT_STACK_ID:  

 Player 2 15:43:28 $CLEAR_SE_VIS:  

 Player 2 15:43:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":327,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Horf will deal 1 combat damage to Blue Baby"}} 

 Player 2 15:43:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":283,"lable":"Player 2 Is About To Die"}} 

 Player 2 15:43:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":327,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Horf will deal 1 combat damage to Blue Baby"},{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":283,"lable":"Player 2 Is About To Die"}]} 

 Player 2 15:43:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":283,"lable":"Player 2 Is About To Die"}} 

 Player 2 15:43:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:43:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":283},{"type":2,"number":false}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 15:43:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":0,"number":283}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":14,"originStackId":4},"isAfterActivation":true,"index":14} 

 Player 2 15:43:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:43:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:43:29 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 15:43:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 15:43:31 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 15:43:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve Monster Combat Damage To A Player 4  "}} 

 Player 2 15:43:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":327,"entityToDoDamageCardId":283,"entityToTakeDamageCardId":327,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":2,"lable":"Horf will deal 1 combat damage to Blue Baby"}} 

 Player 2 15:43:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 4"},"childOfId":41} 

 Player 2 15:43:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 15:43:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:34 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 15:43:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 15:43:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:43:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:43:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:43:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:43:35 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 15:43:35 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:43:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve Player Death 6 "}} 

 Player 2 15:43:35 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":283,"lable":"Player 2 Is About To Die"}]} 

 Player 2 15:43:35 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Has Died"} 

 Player 2 15:43:35 $DISABLE_PARTICLE_EFFECT:  
{"cardId":283,"particleType":5} 

 Player 2 15:43:35 $CANCEL_ATTACK:  

 Player 2 15:43:35 $NEXT_STACK_ID:  

 Player 2 15:43:35 $CLEAR_SE_VIS:  

 Player 2 15:43:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":283,"lable":"Player 2 Has Died"}} 

 Player 2 15:43:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}} 

 Player 2 15:43:35 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":283,"lable":"Player 2 Has Died"},{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}]} 

 Player 2 15:43:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}} 

 Player 2 15:43:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 15:43:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":283,"lable":"Player 2 Has Died"}} 

 Player 2 15:43:35 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 15:43:35 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 15:43:35 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 15:43:38 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 15:43:38 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 15:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve Player Death 6  "}} 

 Player 2 15:43:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":327,"playerToDieCardId":327,"stackEffectType":15,"killerId":283,"lable":"Player 2 Has Died"}} 

 Player 2 15:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve Player Death 6"},"childOfId":46} 

 Player 2 15:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 15:43:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 15:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 15:43:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:43:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:43:41 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[337,338]} 

 Player 1 15:43:41 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 15:43:41 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve Player Death Penalties 7 "}} 

 Player 2 15:43:41 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":327,"playerToPayCardId":327,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}]} 

 Player 2 15:43:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Player 2 pays Penalties"}} 

 Player 2 15:43:41 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 15:43:41 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":327,"scopeIsPlayer":true,"index":15,"originStackId":-1},"isAfterActivation":true,"index":15} 

 Player 2 15:43:41 $SHOW_ANNOUNCEMENT:  
{"text":"Player undefined is Choosing Target"} 

 Player 2 15:47:17 $MATCH: 