Start Log 

 Player 1 11:17:13 $MATCH:  

 Player 1 11:17:14 $START_GAME:  

 Player 2 11:17:14 $MOVE_TO_TABLE:  

 Player 1 11:17:14 $MOVE_TO_TABLE:  

 Player 1 11:17:24 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 11:17:24 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 11:17:24 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":314,"itemCardId":317} 

 Player 1 11:17:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":314,"itemCardId":317} 

 Player 1 11:17:24 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 11:17:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":322,"itemCardId":323} 

 Player 2 11:17:24 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[8,98,29,69,39,75,111,77,57,63,104,40,53,103,48,126,134,85,133,84,28,27,15,123,131,80,46,67,49,44,16,35,92,41,128,102,56,105,62,138,124,42,10,121,130,55,96,100,72,86,97,36,113,99,118,34,95,89,68,74,11,106,33,76,116,38,94,73,87,22,31,139,18,54,82,132,47,64,50,24,30,58,136,141,119,26,52,66,107,101,9,88,13,112,60,32,93,20,79,122,21,81,51,83,137,61,7,70,117,25,125,12,59,45,23,110,43,140,14,115,120,129,19,91,65,109,114,6,17,90,127,78,108,135,37,71]} 

 Player 2 11:17:24 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[236,256,274,299,225,306,290,284,249,281,266,292,244,287,248,228,301,240,237,227,305,289,250,270,279,288,264,303,262,275,245,293,243,235,285,309,231,258,234,241,233,276,226,247,307,253,260,268,252,277,271,238,272,278,304,239,273,263,300,297,232,298,296,286,267,257,230,291,280,261,294,254,224,251,242,282,302,265,259,269,283,229,295,246,255,308]} 

 Player 2 11:17:25 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[208,187,217,216,199,202,175,162,172,191,169,222,143,154,189,148,205,179,168,160,178,209,155,215,200,219,149,164,210,177,203,192,190,159,182,193,188,158,145,150,167,153,201,157,174,207,185,184,170,176,213,198,165,161,173,204,214,147,156,151,211,206,163,166,180,221,220,171,212,144,218,195,181,146,152,196,197,186,183,194]} 

 Player 2 11:17:25 $DRAW_CARD:  
{"deckType":5} 

 Player 2 11:17:25 $FLIP_CARD:  
{"cardId":194} 

 Player 2 11:17:25 $ADD_STORE_CARD:  
{"cardId":194} 

 Player 2 11:17:25 $DRAW_CARD:  
{"deckType":5} 

 Player 2 11:17:25 $FLIP_CARD:  
{"cardId":183} 

 Player 2 11:17:25 $ADD_STORE_CARD:  
{"cardId":183} 

 Player 2 11:17:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 11:17:25 $FLIP_CARD:  
{"cardId":308} 

 Player 2 11:17:25 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":308} 

 Player 2 11:17:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":308,"monsterPlaceId":1} 

 Player 2 11:17:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 11:17:25 $FLIP_CARD:  
{"cardId":255} 

 Player 2 11:17:25 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":255} 

 Player 2 11:17:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":255,"monsterPlaceId":2} 

 Player 2 11:17:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 11:17:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 11:17:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:17:26 $MOVE_CARD:  
{"moveIndex":1,"cardId":71,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:17:26 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:17:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":71} 

 Player 2 11:17:26 $FLIP_CARD:  
{"cardId":71} 

 Player 2 11:17:26 $FLIP_CARD:  
{"cardId":71} 

 Player 2 11:17:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":71} 

 Player 2 11:17:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:17:26 $MOVE_CARD:  
{"moveIndex":2,"cardId":37,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:17:27 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":37,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:17:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":37} 

 Player 2 11:17:27 $FLIP_CARD:  
{"cardId":37} 

 Player 2 11:17:27 $FLIP_CARD:  
{"cardId":37} 

 Player 2 11:17:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":37} 

 Player 2 11:17:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:17:27 $MOVE_CARD:  
{"moveIndex":3,"cardId":135,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:17:27 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":135,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:17:27 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":135} 

 Player 2 11:17:27 $FLIP_CARD:  
{"cardId":135} 

 Player 2 11:17:27 $FLIP_CARD:  
{"cardId":135} 

 Player 2 11:17:27 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":135} 

 Player 2 11:17:27 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 11:17:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":322,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 11:17:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:17:28 $MOVE_CARD:  
{"moveIndex":4,"cardId":108,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:17:28 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:17:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":108} 

 Player 2 11:17:28 $FLIP_CARD:  
{"cardId":108} 

 Player 2 11:17:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":108} 

 Player 2 11:17:28 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:17:28 $MOVE_CARD:  
{"moveIndex":5,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:17:29 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":78,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:17:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":78} 

 Player 2 11:17:29 $FLIP_CARD:  
{"cardId":78} 

 Player 2 11:17:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":78} 

 Player 2 11:17:29 $DRAW_CARD:  
{"deckType":1} 

 Player 2 11:17:29 $MOVE_CARD:  
{"moveIndex":6,"cardId":127,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 11:17:29 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 11:17:29 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":127} 

 Player 2 11:17:29 $FLIP_CARD:  
{"cardId":127} 

 Player 2 11:17:29 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":127} 

 Player 2 11:17:30 $GAME_HAS_STARTED:  

 Player 2 11:17:30 $SET_TURN:  
{"playerId":1} 

 Player 2 11:17:30 $START_TURN:  
{"playerId":1} 

 Player 2 11:17:30 $UPDATE_ACTIONS:  

 Player 1 11:17:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:17:30 $NEXT_STACK_ID:  

 Player 1 11:17:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:17:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 11:17:30 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:17:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:17:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:17:30 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 11:17:30 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 11:17:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 11:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 11:17:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:17:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 11:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 11:17:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 11:17:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:17:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:17:33 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:17:33 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:17:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 11:17:33 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:17:33 $DRAW_CARD:  
{"deckType":1} 

 Player 1 11:17:33 $MOVE_CARD:  
{"moveIndex":7,"cardId":90,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 11:17:34 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":90,"flipIfFlipped":false,"playerId":1} 

 Player 1 11:17:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":90} 

 Player 1 11:17:34 $FLIP_CARD:  
{"cardId":90} 

 Player 1 11:17:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":90} 

 Player 1 11:17:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:17:34 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":1} 

 Player 1 11:17:34 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:17:34 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 1 11:17:37 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 1 11:17:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 11:17:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:17:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":314,"turnPlayerCardId":314,"stackEffectType":13}} 

 Player 1 11:17:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 11:17:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 11:17:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:17:37 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:17:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 11:17:37 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:17:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:17:37 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 11:17:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 11:17:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:17:37 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 11:17:38 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 11:17:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 11:17:38 $CLEAR_SE_VIS:  

 Player 1 11:17:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:20:14 $MOVE_CARD:  
{"moveIndex":8,"cardId":277,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 11:20:15 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":277,"flipIfFlipped":true,"playerId":1} 

 Player 1 11:20:15 $REGISTER_PASSIVE_ITEM:  
{"cardId":277} 

 Player 1 11:20:15 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":277} 

 Player 1 11:20:15 $NEW_MONSTER_ON_PLACE:  
{"cardId":277,"monsterPlaceId":1} 

 Player 1 11:20:17 $NEXT_STACK_ID:  

 Player 1 11:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Mulligan"} 

 Player 1 11:20:17 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:20:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:20:17 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:20:17 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 11:20:17 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 11:20:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Mulligan"} 

 Player 1 11:20:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 1 11:20:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:20:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 1 11:20:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 11:20:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:20 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 11:20:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 11:20:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:20:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:20:21 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:20:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:20:21 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 11:20:21 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 11:20:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 1 11:20:21 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:20:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 1 11:20:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":1,"originStackId":2},"isAfterActivation":true,"index":1} 

 Player 1 11:20:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:20:21 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":2} 

 Player 1 11:20:21 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:20:21 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 1 11:20:24 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 1 11:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 1 11:20:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:20:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":314,"attackingPlayerCardId":314,"idOfCardBeingAttacked":277,"stackEffectType":4}} 

 Player 1 11:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 1 11:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 11:20:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:20:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:20:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Holy Mulligan"} 

 Player 2 11:20:24 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:20:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 11:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 11:20:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 11:20:24 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 11:20:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 11:20:24 $CLEAR_SE_VIS:  

 Player 1 11:20:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:20:26 $NEXT_STACK_ID:  

 Player 1 11:20:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 1 11:20:26 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:20:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:20:26 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:20:26 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 11:20:26 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 11:20:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 1 11:20:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 1 11:20:29 $ROLL_DICE:  
{"playerId":1} 

 Player 1 11:20:31 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":6} 

 Player 1 11:20:31 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:20:31 $SHOW_DICE_ROLL:  
{"stackId":3} 

 Player 1 11:20:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:20:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:20:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 1 11:20:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 11:20:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:34 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 11:20:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 11:20:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:20:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 2 11:20:35 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:20:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 11:20:35 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 11:20:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 1 11:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:20:35 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:20:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 1 11:20:35 $NEXT_STACK_ID:  

 Player 1 11:20:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Player 1 rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:20:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:20:35 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:20:35 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 11:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 2 11:20:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 1 11:20:38 $CLEAR_SE_VIS:  

 Player 1 11:20:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Player 1 rolled 6 vs Holy Mulligan<Monster>"} 

 Player 1 11:20:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:20:38 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:20:38 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}]} 

 Player 1 11:20:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":2,"originStackId":3},"isAfterActivation":true,"index":2} 

 Player 1 11:20:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:20:38 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":3} 

 Player 1 11:20:38 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:20:38 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 11:20:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 2 11:20:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 1 11:20:41 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 1 11:20:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 1 11:20:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 1 11:20:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":314,"numberRolled":6,"rollingPlayerCardId":314,"stackEffectType":2,"attackedMonsterCardId":277}} 

 Player 1 11:20:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":26} 

 Player 1 11:20:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 1 11:20:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:41 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 11:20:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 1 11:20:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:20:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:20:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Player 1 is rolling against Holy Mulligan<Monster>"} 

 Player 2 11:20:41 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:20:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:20:41 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 11:20:41 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 11:20:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve CombatDamage 4 "}} 

 Player 1 11:20:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 1 11:20:41 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:20:42 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"Cain will deal 1 combat damage to Holy Mulligan"} 

 Player 1 11:20:42 $MONSTER_GET_DAMAGED:  
{"cardId":277,"hpLeft":0,"damageDealerId":314} 

 Player 1 11:20:42 $NEXT_STACK_ID:  

 Player 1 11:20:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:[object Object] killed by Cain"} 

 Player 1 11:20:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:20:42 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:20:42 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 11:20:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 1 11:20:44 $CLEAR_SE_VIS:  

 Player 1 11:20:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:[object Object] killed by Cain"} 

 Player 1 11:20:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:20:44 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:20:44 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6},{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}]} 

 Player 1 11:20:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":314},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 11:20:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":314},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 11:20:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:20:45 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":4} 

 Player 1 11:20:45 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:20:45 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 11:20:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 2 11:20:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:[object Object] killed by Cain"} 

 Player 1 11:20:47 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 1 11:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 1 11:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 11:20:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":314,"entityToDoDamageCardId":314,"entityToTakeDamageCardId":277,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6}} 

 Player 1 11:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":31} 

 Player 1 11:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 1 11:20:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 11:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 1 11:20:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:20:48 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:[object Object] killed by Cain"} 

 Player 2 11:20:48 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:20:48 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 11:20:48 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 11:20:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve MonsterDeath 5 "}} 

 Player 1 11:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 11:20:48 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:20:48 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":5} 

 Player 1 11:20:48 $CANCEL_ATTACK:  

 Player 1 11:20:48 $NEXT_STACK_ID:  

 Player 1 11:20:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1,"originStackId":6},"isAfterActivation":false,"index":1} 

 Player 1 11:20:48 $NEXT_STACK_ID:  

 Player 1 11:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:20:48 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 11:20:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 11:20:48 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:20:48 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 11:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 2 11:20:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 2 11:20:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 11:20:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add ActivatePassiveEffect 7 "}} 

 Player 1 11:20:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:20:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 11:20:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding ActivatePassiveEffect 7"},"childOfId":36} 

 Player 1 11:20:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 11:20:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:20:51 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:20:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 11:20:51 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:20:51 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 11:20:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 11:20:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:51 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 11:20:52 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 11:20:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 11:20:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:20:52 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":277,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 11:20:52 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":6} 

 Player 2 11:20:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 11:20:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":277,"particleType":6} 

 Player 1 11:20:53 $NEW_MONSTER_PLACE:  

 Player 1 11:20:53 $NEXT_STACK_ID:  

 Player 1 11:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:20:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 1 11:20:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:20:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:20:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:20:54 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 11:20:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 11:20:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 11:20:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Add RefillEmptySlot 8 "}} 

 Player 1 11:20:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 1 11:20:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:20:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Adding RefillEmptySlot 8"},"childOfId":41} 

 Player 1 11:20:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 11:20:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:20:57 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 11:20:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 11:20:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:20:57 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:20:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 2 11:20:57 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:20:57 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:20:57 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 11:20:57 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 11:20:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve RefillEmptySlot 8 "}} 

 Player 1 11:20:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder3 slot"} 

 Player 1 11:20:57 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:20:57 $DRAW_CARD:  
{"deckType":2} 

 Player 1 11:20:57 $FLIP_CARD:  
{"cardId":246} 

 Player 1 11:20:57 $REGISTER_PASSIVE_ITEM:  
{"cardId":246} 

 Player 1 11:20:57 $ADD_MONSTER:  
{"monsterPlaceId":3,"monsterId":246} 

 Player 1 11:20:57 $NEW_MONSTER_ON_PLACE:  
{"cardId":246,"monsterPlaceId":3} 

 Player 1 11:20:57 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":8} 

 Player 1 11:20:57 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:20:57 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 11:20:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 1 11:21:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 1 11:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Remove After Resolve RefillEmptySlot 8  "}} 

 Player 1 11:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:21:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":314,"slotType":2,"slotToFillId":3,"stackEffectType":10}} 

 Player 1 11:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Remove After Resolve RefillEmptySlot 8"},"childOfId":46} 

 Player 1 11:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 1 11:21:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder3 slot"} 

 Player 2 11:21:00 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 11:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 1 11:21:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 11:21:00 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 11:21:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 11:21:01 $NEW_MONSTER_PLACE:  

 Player 1 11:21:01 $NEXT_STACK_ID:  

 Player 1 11:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot"} 

 Player 1 11:21:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:21:01 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 11:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 11:21:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot"} 

 Player 1 11:21:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Add RefillEmptySlot 9 "}} 

 Player 1 11:21:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot"} 

 Player 1 11:21:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Adding RefillEmptySlot 9"},"childOfId":51} 

 Player 1 11:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 1 11:21:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:04 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 11:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 1 11:21:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot"} 

 Player 2 11:21:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:04 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 11:21:04 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 11:21:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve RefillEmptySlot 9 "}} 

 Player 1 11:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot"} 

 Player 1 11:21:04 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:04 $DRAW_CARD:  
{"deckType":2} 

 Player 1 11:21:04 $FLIP_CARD:  
{"cardId":295} 

 Player 1 11:21:04 $ADD_MONSTER:  
{"monsterPlaceId":4,"monsterId":295} 

 Player 1 11:21:04 $NEW_MONSTER_ON_PLACE:  
{"cardId":295,"monsterPlaceId":4} 

 Player 1 11:21:04 $NEXT_STACK_ID:  

 Player 1 11:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room!"} 

 Player 1 11:21:04 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 11:21:04 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 11:21:04 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:21:04 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 11:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot"} 

 Player 2 11:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot"} 

 Player 2 11:21:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room!"} 

 Player 1 11:21:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Add ActivateItem 10 "}} 

 Player 1 11:21:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room!"} 

 Player 1 11:21:07 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 11:21:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Adding ActivateItem 10"},"childOfId":56} 

 Player 1 11:21:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 1 11:21:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 11:21:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 1 11:21:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:07 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room!"} 

 Player 2 11:21:07 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 11:21:07 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 11:21:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Resolve ActivateItem 10 "}} 

 Player 1 11:21:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room!"} 

 Player 1 11:21:07 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 11:21:08 $NEXT_STACK_ID:  

 Player 1 11:21:08 $NEXT_STACK_ID:  

 Player 1 11:21:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room! \n6:Player 1 roll a dice"} 

 Player 1 11:21:08 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":314,"stackEffectToLock":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 11:21:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":314,"stackEffectToLock":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"stackEffectType":11}} 

 Player 1 11:21:08 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:21:08 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 11:21:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room!"} 

 Player 2 11:21:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room!"} 

 Player 2 11:21:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room! \n5:Player 1 roll a dice"} 

 Player 1 11:21:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Add RollDiceStackEffect 12 "}} 

 Player 1 11:21:10 $ROLL_DICE:  
{"playerId":1} 

 Player 1 11:21:12 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":3} 

 Player 1 11:21:12 $UPDATE_STACK_VIS:  
{"stackId":12,"text":"player 1 rolled 3"} 

 Player 1 11:21:12 $SHOW_DICE_ROLL:  
{"stackId":12} 

 Player 1 11:21:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room! \n6:Player 1 rolled 3"} 

 Player 1 11:21:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":314,"stackEffectToLock":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 1 11:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Response Adding RollDiceStackEffect 12"},"childOfId":61} 

 Player 1 11:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Wait For Response From Player 1 "},"childOfId":61} 

 Player 1 11:21:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 11:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":61} 

 Player 1 11:21:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:15 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room! \n5:Player 1 roll a dice"} 

 Player 2 11:21:15 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:15 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 11:21:15 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 11:21:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Resolve RollDiceStackEffect 12 "}} 

 Player 1 11:21:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room! \n6:Player 1 rolled 3"} 

 Player 1 11:21:16 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":314,"stackEffectToLock":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":false,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 1 11:21:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":5,"originStackId":12},"isAfterActivation":true,"index":5} 

 Player 1 11:21:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":314,"stackEffectToLock":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 1 11:21:16 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":12} 

 Player 1 11:21:16 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:21:16 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 11:21:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room! \n5:Player 1 roll a dice"} 

 Player 1 11:21:18 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 1 11:21:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Remove After Resolve RollDiceStackEffect 12  "}} 

 Player 1 11:21:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room!"} 

 Player 1 11:21:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":314,"stackEffectToLock":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1},"hasLockingStackEffect":false,"numberRolled":3,"stackEffectType":11}} 

 Player 1 11:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Response Remove After Resolve RollDiceStackEffect 12"},"childOfId":66} 

 Player 1 11:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Wait For Response From Player 2 "},"childOfId":66} 

 Player 1 11:21:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:19 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room! \n5:Player 1 roll a dice"} 

 Player 2 11:21:19 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:19 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:19 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 11:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":66} 

 Player 1 11:21:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:19 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 11:21:19 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 11:21:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Resolve ActivateItem 10 "}} 

 Player 1 11:21:19 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":295,"particleType":6} 

 Player 1 11:21:21 $DISABLE_PARTICLE_EFFECT:  
{"cardId":295,"particleType":6} 

 Player 1 11:21:21 $MOVE_CARD:  
{"moveIndex":9,"cardId":295,"placeID":331,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 11:21:21 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":295,"flipIfFlipped":true,"playerId":1} 

 Player 1 11:21:21 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":295} 

 Player 1 11:21:21 $REMOVE_MONSTER:  
{"holderId":4,"monsterId":295} 

 Player 1 11:21:21 $NEXT_STACK_ID:  

 Player 1 11:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room!"} 

 Player 1 11:21:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room! \n6:Refill holder4 slot"} 

 Player 1 11:21:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:21:21 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 11:21:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room!"} 

 Player 2 11:21:22 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room! \n5:Refill holder4 slot"} 

 Player 1 11:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Add RefillEmptySlot 13 "}} 

 Player 1 11:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room! \n6:Refill holder4 slot"} 

 Player 1 11:21:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Response Adding RefillEmptySlot 13"},"childOfId":71} 

 Player 1 11:21:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Wait For Response From Player 1 "},"childOfId":71} 

 Player 1 11:21:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:24 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 11:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 2 "},"childOfId":71} 

 Player 1 11:21:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room! \n5:Refill holder4 slot"} 

 Player 2 11:21:25 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 11:21:25 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 11:21:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Resolve RefillEmptySlot 13 "}} 

 Player 1 11:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room! \n6:Refill holder4 slot"} 

 Player 1 11:21:25 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:25 $DRAW_CARD:  
{"deckType":2} 

 Player 1 11:21:25 $FLIP_CARD:  
{"cardId":229} 

 Player 1 11:21:25 $REGISTER_PASSIVE_ITEM:  
{"cardId":229} 

 Player 1 11:21:25 $ADD_MONSTER:  
{"monsterPlaceId":4,"monsterId":229} 

 Player 1 11:21:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":229,"monsterPlaceId":4} 

 Player 1 11:21:25 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":13} 

 Player 1 11:21:25 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:21:25 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 11:21:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room! \n5:Refill holder4 slot"} 

 Player 1 11:21:28 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 1 11:21:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Remove After Resolve RefillEmptySlot 13  "}} 

 Player 1 11:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room!"} 

 Player 1 11:21:28 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Response Remove After Resolve RefillEmptySlot 13"},"childOfId":76} 

 Player 1 11:21:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Wait For Response From Player 2 "},"childOfId":76} 

 Player 1 11:21:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:28 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room! \n5:Refill holder4 slot"} 

 Player 2 11:21:28 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:28 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:28 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 1 11:21:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 1 "},"childOfId":76} 

 Player 1 11:21:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:28 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 1 11:21:28 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 11:21:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Resolve ActivateItem 10 "}} 

 Player 1 11:21:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot \n5:Player 1 activated Secret Room!"} 

 Player 1 11:21:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 11:21:28 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":10} 

 Player 1 11:21:28 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:21:29 $SHOW_STACK_EFFECT:  
{"effectId":10} 

 Player 2 11:21:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room!"} 

 Player 1 11:21:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":10} 

 Player 1 11:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Remove After Resolve ActivateItem 10  "}} 

 Player 1 11:21:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects> \n4:Refill holder4 slot"} 

 Player 1 11:21:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":314,"hasLockingStackEffect":true,"hasLockingStackEffectResolved":true,"itemToPlayCardId":295,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 11:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Response Remove After Resolve ActivateItem 10"},"childOfId":81} 

 Player 1 11:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Wait For Response From Player 1 "},"childOfId":81} 

 Player 1 11:21:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:31 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 1 11:21:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 2 "},"childOfId":81} 

 Player 1 11:21:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot \n4:Player 1 activated Secret Room!"} 

 Player 2 11:21:32 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:32 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 1 11:21:32 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 11:21:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Resolve RefillEmptySlot 9 "}} 

 Player 1 11:21:32 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":9} 

 Player 1 11:21:32 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:21:32 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 1 11:21:35 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 1 11:21:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Remove After Resolve RefillEmptySlot 9  "}} 

 Player 1 11:21:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:21:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":314,"slotType":2,"slotToFillId":4,"stackEffectType":10}} 

 Player 1 11:21:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Response Remove After Resolve RefillEmptySlot 9"},"childOfId":86} 

 Player 1 11:21:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Wait For Response From Player 2 "},"childOfId":86} 

 Player 1 11:21:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:35 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan  \n3:Refill holder4 slot"} 

 Player 2 11:21:35 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:35 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:35 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 11:21:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Wait For Response From Player 1 "},"childOfId":86} 

 Player 1 11:21:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:35 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 1 11:21:35 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 11:21:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Resolve ActivatePassiveEffect 7 "}} 

 Player 1 11:21:35 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[{"type":2}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1,"originStackId":6},"isAfterActivation":false,"index":1} 

 Player 1 11:21:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain \n3:Activate Holy Mulligan effect ChainEffects<ChainEffects>"} 

 Player 1 11:21:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 11:21:36 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":7} 

 Player 1 11:21:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:21:36 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 11:21:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 1 11:21:38 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 1 11:21:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Remove After Resolve ActivatePassiveEffect 7  "}} 

 Player 1 11:21:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:21:38 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":277,"effectCardPlayer":277},"entityId":7,"creatorCardId":314,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":277,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 11:21:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Response Remove After Resolve ActivatePassiveEffect 7"},"childOfId":91} 

 Player 1 11:21:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Wait For Response From Player 1 "},"childOfId":91} 

 Player 1 11:21:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:38 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 11:21:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Wait For Response From Player 2 "},"childOfId":91} 

 Player 1 11:21:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:39 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan \n2:Activate Holy Mulligan "} 

 Player 2 11:21:39 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:39 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:39 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 1 11:21:39 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 1 11:21:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Resolve MonsterDeath 5 "}} 

 Player 1 11:21:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:21:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":314,"monsterCardWithRewardId":277,"playerCardIdToReward":314,"stackEffectType":7}} 

 Player 1 11:21:39 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:21:39 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 11:21:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 1 11:21:42 $CLEAR_SE_VIS:  

 Player 1 11:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:21:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":314,"monsterCardWithRewardId":277,"playerCardIdToReward":314,"stackEffectType":7}} 

 Player 1 11:21:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:21:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":6,"creatorCardId":314,"monsterCardWithRewardId":277,"playerCardIdToReward":314,"stackEffectType":7},{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}]} 

 Player 1 11:21:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:21:42 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":5} 

 Player 1 11:21:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:21:42 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 11:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to Holy Mulligan"} 

 Player 2 11:21:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 11:21:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 1 11:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Remove After Resolve MonsterDeath 5  "}} 

 Player 1 11:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward"} 

 Player 1 11:21:45 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":314,"monsterToDieCardId":277,"stackEffectType":5,"killerId":314}} 

 Player 1 11:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Response Remove After Resolve MonsterDeath 5"},"childOfId":96} 

 Player 1 11:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Wait For Response From Player 1 "},"childOfId":96} 

 Player 1 11:21:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 11:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Wait For Response From Player 2 "},"childOfId":96} 

 Player 1 11:21:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:21:45 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 11:21:45 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:21:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 11:21:45 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 1 11:21:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Resolve MonsterRewardStackEffect 6 "}} 

 Player 1 11:21:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get Holy Mulligan<Monster> reward"} 

 Player 1 11:21:45 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":314,"monsterCardWithRewardId":277,"playerCardIdToReward":314,"stackEffectType":7}} 

 Player 1 11:21:46 $SET_MONEY:  
{"playerId":1,"numOfCoins":6} 

 Player 1 11:21:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":314,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 11:21:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 

 Player 1 11:21:46 $CLEAR_SE_VIS:  

 Player 1 11:21:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:21:46 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 11:21:46 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 1 11:21:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Fizzle MonsterRewardStackEffect 6"}} 

 Player 1 11:21:46 $FIZZLE_STACK_EFFECT:  
{"entityId":6} 

 Player 1 11:21:46 $MOVE_CARD:  
{"moveIndex":10,"cardId":277,"placeID":331,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 11:21:46 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 11:21:46 $CLEAR_SE_VIS:  

 Player 2 11:21:46 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":277,"flipIfFlipped":true,"playerId":1} 

 Player 1 11:21:46 $MOVE_CARD_TO_PILE:  
{"type":2,"cardId":277} 

 Player 1 11:21:46 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":277} 

 Player 1 11:21:46 $REMOVE_MONSTER:  
{"holderId":1,"monsterId":277} 

 Player 1 11:21:46 $GET_NEXT_MONSTER:  
{"monsterPlaceId":1} 

 Player 1 11:21:46 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":6} 

 Player 1 11:21:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Stack Was Emptied "}} 

 Player 1 11:21:46 $CLEAR_SE_VIS:  

 Player 1 11:25:15 $NEXT_STACK_ID:  

 Player 1 11:25:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 11:25:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 11:25:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 11:25:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 11:25:15 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 11:25:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 11:25:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 11:25:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Add ActivateItem 14 "}} 

 Player 1 11:25:21 $SHOW_DECISION:  
{"startCardId":317,"endCardId":223} 

 Player 1 11:25:24 $USE_ITEM:  
{"cardId":317} 

 Player 1 11:25:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:25:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 11:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Response Adding ActivateItem 14"},"childOfId":103} 

 Player 1 11:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Wait For Response From Player 1 "},"childOfId":103} 

 Player 1 11:25:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:25:24 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 1 11:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 2 "},"childOfId":103} 

 Player 1 11:25:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:25:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:25:24 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:25:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:25:24 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 11:25:24 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 1 11:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Resolve ActivateItem 14 "}} 

 Player 1 11:25:24 $ADD_RESOLVING_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 11:25:24 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":317,"particleType":6} 

 Player 1 11:25:26 $DISABLE_PARTICLE_EFFECT:  
{"cardId":317,"particleType":6} 

 Player 1 11:25:38 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":283} 

 Player 1 11:25:38 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":269} 

 Player 1 11:25:38 $DECK_ADD_TO_TOP:  
{"deckType":2,"cardId":259} 

 Player 1 11:25:38 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 11:25:38 $REMOVE_RESOLVING_STACK_EFFECT:  
{"stackEffectId":14} 

 Player 1 11:25:38 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 11:25:38 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 1 11:25:41 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":14} 

 Player 1 11:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Remove After Resolve ActivateItem 14  "}} 

 Player 1 11:25:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 11:25:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":314,"hasLockingStackEffect":false,"itemToPlayCardId":317,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 11:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Response Remove After Resolve ActivateItem 14"},"childOfId":108} 

 Player 1 11:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Wait For Response From Player 2 "},"childOfId":108} 

 Player 1 11:25:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 11:25:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 11:25:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 11:25:41 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[322,323]} 

 Player 2 11:25:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 11:25:41 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 1 11:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 1 "},"childOfId":108} 

 Player 1 11:25:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 11:25:41 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 1 11:25:41 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 1 11:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Stack Was Emptied "}} 

 Player 1 11:25:41 $CLEAR_SE_VIS:  

 Player 1 11:25:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 11:37:22 $MATCH: 