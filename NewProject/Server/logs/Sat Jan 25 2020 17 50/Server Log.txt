Start Log 

 Player 1 17:50:15 $MATCH:  

 Player 1 17:50:16 $START_GAME:  

 Player 1 17:50:16 $MOVE_TO_TABLE:  

 Player 2 17:50:16 $MOVE_TO_TABLE:  

 Player 2 17:50:24 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 17:50:24 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:50:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":284,"itemCardId":285} 

 Player 2 17:50:24 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:50:24 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":296,"itemCardId":297} 

 Player 2 17:50:24 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[77,91,32,117,124,72,21,94,104,26,103,76,47,130,24,107,55,100,108,114,69,128,133,118,134,99,23,81,142,132,139,28,37,19,75,49,78,35,14,38,122,88,66,111,44,126,86,30,90,63,48,79,82,58,27,57,65,16,60,110,116,97,22,15,73,129,53,13,109,17,42,98,141,61,10,80,119,113,105,101,93,138,50,33,36,12,8,43,18,92,74,84,95,40,131,136,102,62,83,52,137,7,31,71,87,51,68,34,41,9,67,20,120,59,127,123,39,89,121,140,45,115,135,96,125,29,70,54,64,46,56,11,106,112,25,85]} 

 Player 2 17:50:24 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[237,258,264,259,243,246,266,268,250,247,240,229,265,235,269,279,245,275,281,254,233,271,280,248,232,242,238,256,231,228,230,263,272,273,234,257,278,251,239,262,267,255,241,261,236,276,244,260,249,253,274,277,252,270]} 

 Player 2 17:50:24 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[153,207,155,173,211,167,192,219,210,170,215,194,202,163,209,162,188,147,151,190,157,191,150,225,166,199,154,176,168,149,195,201,193,158,159,183,197,189,145,171,160,204,221,205,206,175,196,224,146,222,187,164,179,213,174,218,198,184,223,212,148,200,217,177,185,165,152,161,172,180,182,178,220,169,214,156,181,203,216,186,208]} 

 Player 2 17:50:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:50:24 $FLIP_CARD:  
{"cardId":208} 

 Player 2 17:50:24 $ADD_STORE_CARD:  
{"cardId":208} 

 Player 2 17:50:24 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:50:24 $FLIP_CARD:  
{"cardId":186} 

 Player 2 17:50:24 $ADD_STORE_CARD:  
{"cardId":186} 

 Player 2 17:50:24 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:50:24 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":270} 

 Player 2 17:50:24 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:50:24 $FLIP_CARD:  
{"cardId":252} 

 Player 2 17:50:24 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":252} 

 Player 2 17:50:24 $NEW_MONSTER_ON_PLACE:  
{"cardId":252,"monsterPlaceId":1} 

 Player 2 17:50:24 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:50:25 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":277} 

 Player 2 17:50:25 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:50:25 $FLIP_CARD:  
{"cardId":274} 

 Player 2 17:50:25 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":274} 

 Player 2 17:50:25 $NEW_MONSTER_ON_PLACE:  
{"cardId":274,"monsterPlaceId":2} 

 Player 2 17:50:25 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:50:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:50:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:25 $MOVE_CARD:  
{"moveIndex":1,"cardId":85,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:50:25 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":85,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:25 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":85} 

 Player 2 17:50:25 $FLIP_CARD:  
{"cardId":85} 

 Player 2 17:50:25 $FLIP_CARD:  
{"cardId":85} 

 Player 2 17:50:25 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":85} 

 Player 2 17:50:25 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:25 $MOVE_CARD:  
{"moveIndex":2,"cardId":25,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:26 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":25,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":25} 

 Player 2 17:50:26 $FLIP_CARD:  
{"cardId":25} 

 Player 2 17:50:26 $FLIP_CARD:  
{"cardId":25} 

 Player 2 17:50:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":25} 

 Player 2 17:50:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:26 $MOVE_CARD:  
{"moveIndex":3,"cardId":112,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:26 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":112,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:26 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":112} 

 Player 2 17:50:26 $FLIP_CARD:  
{"cardId":112} 

 Player 2 17:50:26 $FLIP_CARD:  
{"cardId":112} 

 Player 2 17:50:26 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":112} 

 Player 2 17:50:26 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:50:26 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 17:50:26 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:26 $MOVE_CARD:  
{"moveIndex":4,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:27 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":106,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":106} 

 Player 2 17:50:27 $FLIP_CARD:  
{"cardId":106} 

 Player 2 17:50:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 17:50:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:27 $MOVE_CARD:  
{"moveIndex":5,"cardId":11,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:27 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":11,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:27 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":11} 

 Player 2 17:50:27 $FLIP_CARD:  
{"cardId":11} 

 Player 2 17:50:27 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":11} 

 Player 2 17:50:27 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:27 $MOVE_CARD:  
{"moveIndex":6,"cardId":56,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:28 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":56,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:28 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":56} 

 Player 2 17:50:28 $FLIP_CARD:  
{"cardId":56} 

 Player 2 17:50:28 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":56} 

 Player 2 17:50:28 $GAME_HAS_STARTED:  

 Player 2 17:50:28 $SET_TURN:  
{"playerId":2} 

 Player 2 17:50:28 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:28 $NEXT_STACK_ID:  

 Player 2 17:50:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:50:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 2 17:50:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:50:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 1 17:50:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:50:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 17:50:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:50:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 2 17:50:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 17:50:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 17:50:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 17:50:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:50:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:50:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:50:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 17:50:31 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:50:31 $MOVE_CARD:  
{"moveIndex":7,"cardId":46,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:50:31 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":46,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:50:31 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":46} 

 Player 2 17:50:31 $FLIP_CARD:  
{"cardId":46} 

 Player 2 17:50:31 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":46} 

 Player 2 17:50:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 17:50:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 2 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:32 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 2 17:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:32 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":296,"turnPlayerCardId":296,"stackEffectType":13}} 

 Player 2 17:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 17:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 17:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:50:32 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 17:50:32 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 17:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 17:50:32 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 17:50:32 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 17:50:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 17:50:32 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:32 $UPDATE_ACTIONS:  

 Player 2 17:50:38 $SHOW_DECISION:  
{"startCardId":56,"endCardId":56,"flipEndCard":true} 

 Player 2 17:50:41 $NEXT_STACK_ID:  

 Player 2 17:50:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 2 17:50:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":56,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 17:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 2 17:50:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":56,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 17:50:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 2 17:50:44 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 17:50:44 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":56} 

 Player 2 17:50:45 $MOVE_CARD:  
{"moveIndex":8,"cardId":56,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 17:50:45 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":56,"flipIfFlipped":true,"playerId":2} 

 Player 2 17:50:45 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":56} 

 Player 2 17:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18): addMoney"} 

 Player 2 17:50:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18): addMoney"} 

 Player 2 17:50:45 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":56,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":56,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 17:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 17:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 17:50:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 17:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 17:50:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:50:45 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:45 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 17:50:45 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 17:50:45 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 17:50:45 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18): addMoney"} 

 Player 2 17:50:45 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":56,"particleType":6} 

 Player 2 17:50:47 $DISABLE_PARTICLE_EFFECT:  
{"cardId":56,"particleType":6} 

 Player 2 17:50:47 $SET_MONEY:  
{"playerId":2,"numOfCoins":6} 

 Player 2 17:50:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 17:50:47 $REMOVE_FROM_PILE:  
{"cardId":56} 

 Player 2 17:50:47 $MOVE_CARD:  
{"moveIndex":9,"cardId":56,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 17:50:48 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":56,"flipIfFlipped":true,"playerId":2} 

 Player 2 17:50:48 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":56} 

 Player 2 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18): addMoney"} 

 Player 2 17:50:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":56,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:48 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":56,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 17:50:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":296,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":56,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 17:50:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 17:50:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 17:50:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:50:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 3 Cents(18) "} 

 Player 1 17:50:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 17:50:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 17:50:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 17:50:48 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 17:50:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 17:50:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:52 $SHOW_DECISION:  
{"startCardId":296,"endCardId":252} 

 Player 2 17:50:55 $NEXT_STACK_ID:  

 Player 2 17:50:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 2 17:50:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":252,"stackEffectType":4}} 

 Player 2 17:50:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 2 17:50:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":252,"stackEffectType":4}} 

 Player 1 17:50:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 17:50:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 2 17:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 2 17:50:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 2 17:50:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":252,"stackEffectType":4}} 

 Player 2 17:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 2 17:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 17:50:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:58 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 17:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 17:50:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:50:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:58 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:50:58 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 17:50:58 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 17:50:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 2 17:50:58 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":252,"particleType":5} 

 Player 2 17:50:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":5,"originStackId":3},"isAfterActivation":true,"index":5} 

 Player 2 17:50:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 2 17:50:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":252,"stackEffectType":4}} 

 Player 2 17:50:58 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:59 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":252,"stackEffectType":4}} 

 Player 2 17:50:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 2 17:50:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:50:59 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":296,"attackingPlayerCardId":296,"idOfCardBeingAttacked":252,"stackEffectType":4}} 

 Player 2 17:50:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 2 17:50:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 17:50:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:50:59 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Gurdy"} 

 Player 1 17:50:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:50:59 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 17:50:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 17:50:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:50:59 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 17:50:59 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 17:50:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 17:50:59 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 17:51:33 $MATCH: 