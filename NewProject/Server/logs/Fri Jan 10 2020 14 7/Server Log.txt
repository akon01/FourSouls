Start Log 

 Player 1 14:07:59 $MATCH:  

 Player 1 14:08:00 $START_GAME:  

 Player 2 14:08:00 $MOVE_TO_TABLE:  

 Player 1 14:08:00 $MOVE_TO_TABLE:  

 Player 2 14:08:08 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 14:08:08 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 14:08:08 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":275,"itemCardId":276} 

 Player 2 14:08:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":260}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 14:08:08 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":259,"itemCardId":260} 

 Player 2 14:08:08 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[44,74,129,38,15,136,51,98,55,42,36,10,102,87,96,65,52,142,104,28,105,95,56,85,17,68,73,86,80,40,118,27,91,123,54,138,66,77,35,139,30,31,127,22,132,63,61,92,89,16,47,76,110,11,100,131,72,18,90,60,8,25,116,106,79,108,59,20,58,41,12,107,19,67,141,64,34,49,111,103,130,137,119,114,70,69,21,83,109,71,46,75,94,133,122,117,112,120,126,23,78,50,32,84,128,88,48,135,7,81,124,115,97,14,140,13,82,101,9,43,53,62,33,134,24,143,99,39,45,57,121,125,29,93,37,26,113]} 

 Player 2 14:08:08 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[257,255,254,256,238,218,252,214,239,228,207,246,251,237,205,206,248,233,219,231,212,249,240,209,253,242,216,221,223,247,210,220,245,235,229,222,232,241,244,215,225,213,208,243,250,234,211,224,226,258,230,217,227,236]} 

 Player 2 14:08:08 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[201,171,186,155,181,178,190,183,175,179,191,159,147,169,197,154,200,172,150,176,173,158,163,187,202,174,196,194,168,156,180,177,153,146,188,167,149,185,151,162,161,199,148,198,160,184,166,189,164,192,182,157,193,165,152,195,170]} 

 Player 2 14:08:08 $DRAW_CARD:  
{"deckType":5} 

 Player 2 14:08:08 $FLIP_CARD:  
{"cardId":170} 

 Player 2 14:08:08 $ADD_STORE_CARD:  
{"cardId":170} 

 Player 2 14:08:08 $DRAW_CARD:  
{"deckType":5} 

 Player 2 14:08:08 $FLIP_CARD:  
{"cardId":195} 

 Player 2 14:08:09 $ADD_STORE_CARD:  
{"cardId":195} 

 Player 2 14:08:09 $DRAW_CARD:  
{"deckType":2} 

 Player 2 14:08:09 $FLIP_CARD:  
{"cardId":236} 

 Player 2 14:08:09 $REGISTER_PASSIVE_ITEM:  
{"cardId":236} 

 Player 2 14:08:09 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":236} 

 Player 2 14:08:09 $NEW_MONSTER_ON_PLACE:  
{"cardId":236,"monsterPlaceId":1} 

 Player 2 14:08:09 $DRAW_CARD:  
{"deckType":2} 

 Player 2 14:08:09 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":227} 

 Player 2 14:08:09 $DRAW_CARD:  
{"deckType":2} 

 Player 2 14:08:09 $FLIP_CARD:  
{"cardId":217} 

 Player 2 14:08:09 $REGISTER_PASSIVE_ITEM:  
{"cardId":217} 

 Player 2 14:08:09 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":217} 

 Player 2 14:08:09 $NEW_MONSTER_ON_PLACE:  
{"cardId":217,"monsterPlaceId":2} 

 Player 2 14:08:09 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 14:08:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 14:08:09 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:08:09 $MOVE_CARD:  
{"moveIndex":1,"cardId":113,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:08:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":276}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 14:08:09 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":113,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:08:09 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":113} 

 Player 2 14:08:10 $FLIP_CARD:  
{"cardId":113} 

 Player 2 14:08:10 $FLIP_CARD:  
{"cardId":113} 

 Player 2 14:08:10 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":113} 

 Player 2 14:08:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:08:10 $MOVE_CARD:  
{"moveIndex":2,"cardId":26,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:08:10 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":26,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:08:10 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":26} 

 Player 2 14:08:10 $FLIP_CARD:  
{"cardId":26} 

 Player 2 14:08:10 $FLIP_CARD:  
{"cardId":26} 

 Player 2 14:08:10 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":26} 

 Player 2 14:08:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:08:10 $MOVE_CARD:  
{"moveIndex":3,"cardId":37,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:08:11 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":37,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:08:11 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":37} 

 Player 2 14:08:11 $FLIP_CARD:  
{"cardId":37} 

 Player 2 14:08:11 $FLIP_CARD:  
{"cardId":37} 

 Player 2 14:08:11 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":37} 

 Player 2 14:08:11 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 14:08:11 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 14:08:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:08:11 $MOVE_CARD:  
{"moveIndex":4,"cardId":93,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:08:11 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":93,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:08:11 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":93} 

 Player 2 14:08:11 $FLIP_CARD:  
{"cardId":93} 

 Player 2 14:08:11 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":93} 

 Player 2 14:08:11 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:08:11 $MOVE_CARD:  
{"moveIndex":5,"cardId":29,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:08:12 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":29,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:08:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":29} 

 Player 2 14:08:12 $FLIP_CARD:  
{"cardId":29} 

 Player 2 14:08:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":29} 

 Player 2 14:08:12 $DRAW_CARD:  
{"deckType":1} 

 Player 2 14:08:12 $MOVE_CARD:  
{"moveIndex":6,"cardId":125,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 14:08:12 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":125,"flipIfFlipped":false,"playerId":2} 

 Player 2 14:08:12 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":125} 

 Player 2 14:08:12 $FLIP_CARD:  
{"cardId":125} 

 Player 2 14:08:12 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":125} 

 Player 2 14:08:12 $GAME_HAS_STARTED:  

 Player 2 14:08:12 $SET_TURN:  
{"playerId":1} 

 Player 2 14:08:12 $START_TURN:  
{"playerId":1} 

 Player 2 14:08:12 $UPDATE_ACTIONS:  

 Player 1 14:08:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:08:12 $NEXT_STACK_ID:  

 Player 1 14:08:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 14:08:12 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 1 14:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 14:08:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 1 14:08:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 14:08:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:08:12 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 14:08:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 14:08:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 1 14:08:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 14:08:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 14:08:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:08:13 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 14:08:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 14:08:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:08:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:08:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:08:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:08:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:08:13 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 14:08:13 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 14:08:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 14:08:13 $DRAW_CARD:  
{"deckType":1} 

 Player 1 14:08:13 $MOVE_CARD:  
{"moveIndex":7,"cardId":121,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 14:08:13 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":121,"flipIfFlipped":false,"playerId":1} 

 Player 1 14:08:13 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":121} 

 Player 1 14:08:13 $FLIP_CARD:  
{"cardId":121} 

 Player 1 14:08:13 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":121} 

 Player 1 14:08:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 14:08:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 1 14:08:13 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:08:14 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 1 14:08:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:08:14 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":275,"turnPlayerCardId":275,"stackEffectType":13}} 

 Player 1 14:08:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 14:08:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 14:08:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:08:14 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 14:08:14 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 14:08:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 14:08:14 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 14:08:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 14:08:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 14:08:14 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 14:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 14:08:15 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 14:08:16 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 14:08:22 $MOVE_CARD:  
{"moveIndex":8,"cardId":131,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 14:08:22 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":131,"flipIfFlipped":true,"playerId":1} 

 Player 1 14:08:22 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":131} 

 Player 1 14:08:26 $MOVE_CARD:  
{"moveIndex":9,"cardId":194,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 14:08:26 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":194,"flipIfFlipped":true,"playerId":1} 

 Player 1 14:08:26 $MOVE_CARD:  
{"moveIndex":10,"cardId":194,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 14:08:27 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":194,"flipIfFlipped":true,"playerId":1} 

 Player 1 14:08:27 $ADD_AN_ITEM:  
{"playerId":1,"cardId":194,"isReward":true} 

 Player 1 14:08:27 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":194}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 14:08:33 $MOVE_CARD:  
{"moveIndex":11,"cardId":184,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 14:08:34 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":184,"flipIfFlipped":true,"playerId":2} 

 Player 2 14:08:34 $REGISTER_PASSIVE_ITEM:  
{"cardId":184} 

 Player 2 14:08:34 $MOVE_CARD:  
{"moveIndex":12,"cardId":184,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 14:08:34 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":184,"flipIfFlipped":true,"playerId":2} 

 Player 2 14:08:34 $ADD_AN_ITEM:  
{"playerId":2,"cardId":184,"isReward":true} 

 Player 2 14:08:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 14:08:34 $NEXT_STACK_ID:  

 Player 2 14:08:34 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 14:08:34 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 14:08:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 14:08:34 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 14:08:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivatePassiveEffect 2 "}} 

 Player 2 14:08:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 14:08:35 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 14:08:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 14:08:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 14:08:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivatePassiveEffect 2"},"childOfId":10} 

 Player 2 14:08:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 14:08:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:08:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:08:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:08:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:08:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:08:35 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 14:08:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 14:08:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:08:35 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 14:08:35 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 14:08:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivatePassiveEffect 2 "}} 

 Player 2 14:08:35 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 2 14:08:37 $DISABLE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 2 14:08:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 14:08:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 2 14:08:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 14:08:37 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 14:08:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:08:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 14:08:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivatePassiveEffect 2  "}} 

 Player 2 14:08:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:08:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 14:08:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivatePassiveEffect 2"},"childOfId":15} 

 Player 2 14:08:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 14:08:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:08:37 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 14:08:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 14:08:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:08:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:08:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Activate Polydactyly "} 

 Player 1 14:08:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 14:08:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 14:08:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 14:08:38 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 14:08:38 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 14:08:39 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 14:08:40 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 14:08:54 $NEXT_STACK_ID:  

 Player 1 14:08:54 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 14:08:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 14:08:54 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 14:08:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 1 14:08:54 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add PlayLootCardStackEffect 3 "}} 

 Player 1 14:08:55 $PLAYER_LOSE_LOOT:  
{"playerId":1,"cardId":131} 

 Player 1 14:08:55 $MOVE_CARD:  
{"moveIndex":13,"cardId":131,"placeID":277,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 14:08:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:08:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:08:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:08:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:08:55 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":131,"flipIfFlipped":true,"playerId":1} 

 Player 1 14:08:55 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":131} 

 Player 1 14:08:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 

 Player 1 14:08:57 $SHOW_DECISION:  
{"startCardId":131,"endCardId":184} 

 Player 1 14:09:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:00 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 14:09:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 

 Player 1 14:09:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 14:09:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding PlayLootCardStackEffect 3"},"childOfId":20} 

 Player 1 14:09:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 14:09:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:00 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 14:09:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 14:09:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:09:00 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 14:09:00 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 14:09:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 1 14:09:00 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 

 Player 1 14:09:00 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 1 14:09:02 $DISABLE_PARTICLE_EFFECT:  
{"cardId":131,"particleType":6} 

 Player 1 14:09:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":194}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 1 14:09:02 $MOVE_CARD:  
{"moveIndex":14,"cardId":194,"placeID":280,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 14:09:03 $MOVE_CARD_END:  
{"moveIndex":14,"cardId":194,"flipIfFlipped":true,"playerId":1} 

 Player 1 14:09:03 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":194} 

 Player 1 14:09:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 1 14:09:03 $NEXT_STACK_ID:  

 Player 1 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects"} 

 Player 1 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:03 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:03 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 1 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:03 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":25} 

 Player 1 14:09:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 14:09:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:03 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:03 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:09:03 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 14:09:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 14:09:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:03 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 14:09:03 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 14:09:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve ActivatePassiveEffect 4 "}} 

 Player 1 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:03 $DO_STACK_EFFECT:  
{"originPlayerId":1,"playerId":2,"currentStack":[{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":1,"cardPlayerId":2,"cardId":184,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 2 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:04 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 2 14:09:05 $DISABLE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 2 14:09:06 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1},"isAfterActivation":false,"index":1} 

 Player 2 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:06 $FINISH_DO_STACK_EFFECT:  
{"playerId":1,"newStack":[{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil: ChainEffects \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 1 14:09:06 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}]} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 14:09:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 

 Player 1 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 14:09:06 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":259,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":184,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":30} 

 Player 1 14:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 14:09:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:06 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 14:09:06 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 14:09:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:06 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:07 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:09:07 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 14:09:07 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 14:09:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 1 14:09:07 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":184} 

 Player 1 14:09:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":184}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 14:09:07 $REGISTER_PASSIVE_ITEM:  
{"cardId":184} 

 Player 1 14:09:07 $MOVE_CARD:  
{"moveIndex":15,"cardId":184,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 14:09:07 $MOVE_CARD_END:  
{"moveIndex":15,"cardId":184,"flipIfFlipped":true,"playerId":1} 

 Player 1 14:09:07 $ADD_AN_ITEM:  
{"playerId":1,"cardId":184,"isReward":true} 

 Player 1 14:09:07 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 14:09:07 $NEXT_STACK_ID:  

 Player 1 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 14:09:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:08 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 1 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:08 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"effectToDo":{"effectName":"AddPlayLootOpportunity","cardEffectNum":0,"cardPlayerId":1,"cardId":184,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":35} 

 Player 1 14:09:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 1 14:09:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:08 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:08 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:09:08 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 14:09:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 1 14:09:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:08 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 14:09:08 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 14:09:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 1 14:09:08 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 1 14:09:09 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 14:09:10 $DISABLE_PARTICLE_EFFECT:  
{"cardId":184,"particleType":6} 

 Player 1 14:09:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":184}],"result":true,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 1 14:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly effect AddPlayLootOpportunity<AddPlayLootOpportunity>"} 

 Player 1 14:09:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:10 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 14:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 14:09:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 1 14:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 14:09:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":184,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":40} 

 Player 1 14:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 1 14:09:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:10 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 14:09:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 1 14:09:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:10 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil  \n2:Activate Polydactyly "} 

 Player 2 14:09:11 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:09:11 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 14:09:11 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 14:09:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Resolve PlayLootCardStackEffect 3 "}} 

 Player 1 14:09:11 $REMOVE_FROM_PILE:  
{"cardId":131} 

 Player 1 14:09:11 $MOVE_CARD:  
{"moveIndex":16,"cardId":131,"placeID":278,"flipIfFlipped":true,"playerId":1,"placeType":"Card"} 

 Player 2 14:09:11 $MOVE_CARD_END:  
{"moveIndex":16,"cardId":131,"flipIfFlipped":true,"playerId":1} 

 Player 1 14:09:11 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":131} 

 Player 1 14:09:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 1 14:09:11 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 14:09:11 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 14:09:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:09:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 14:09:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Remove After Resolve PlayLootCardStackEffect 3  "}} 

 Player 1 14:09:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:09:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":275,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":131,"lootPlayerId":1,"effectToDo":{"effectName":"ChainEffects","cardEffectNum":0,"cardPlayerId":1,"cardId":131,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 1 14:09:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Remove After Resolve PlayLootCardStackEffect 3"},"childOfId":45} 

 Player 1 14:09:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 1 14:09:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:11 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 play The Devil "} 

 Player 2 14:09:12 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 14:09:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 1 14:09:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 14:09:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Stack Was Emptied "}} 

 Player 1 14:09:12 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 14:09:12 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 14:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 14:09:13 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 14:09:14 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 14:09:20 $SHOW_DECISION:  
{"startCardId":275,"endCardId":217} 

 Player 1 14:09:23 $NEXT_STACK_ID:  

 Player 1 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 1 14:09:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":217,"stackEffectType":4}} 

 Player 1 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 1 14:09:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":217,"stackEffectType":4}} 

 Player 1 14:09:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Add DeclareAttack 6 "}} 

 Player 1 14:09:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:23 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 1 14:09:23 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":217,"stackEffectType":4}} 

 Player 1 14:09:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Response Adding DeclareAttack 6"},"childOfId":50} 

 Player 1 14:09:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Wait For Response From Player 1 "},"childOfId":50} 

 Player 1 14:09:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:23 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 14:09:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":50} 

 Player 1 14:09:23 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:23 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:23 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:09:23 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 14:09:23 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 14:09:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Resolve DeclareAttack 6 "}} 

 Player 1 14:09:23 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":217,"particleType":5} 

 Player 1 14:09:23 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":5,"originStackId":6},"isAfterActivation":true,"index":5} 

 Player 1 14:09:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 1 14:09:24 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":217,"stackEffectType":4}} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:09:24 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":217,"stackEffectType":4}} 

 Player 1 14:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Remove After Resolve DeclareAttack 6  "}} 

 Player 1 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:09:24 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":275,"attackingPlayerCardId":275,"idOfCardBeingAttacked":217,"stackEffectType":4}} 

 Player 1 14:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Response Remove After Resolve DeclareAttack 6"},"childOfId":55} 

 Player 1 14:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Wait For Response From Player 2 "},"childOfId":55} 

 Player 1 14:09:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:24 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on Daddy Long Legs"} 

 Player 2 14:09:24 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 14:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":55} 

 Player 1 14:09:24 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 14:09:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Stack Was Emptied "}} 

 Player 1 14:09:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 14:09:24 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 14:09:25 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 14:09:26 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 14:09:26 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 14:09:27 $NEXT_STACK_ID:  

 Player 1 14:09:27 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 14:09:27 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:09:28 $ADD_TO_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 1 14:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:09:28 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 1 14:09:28 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Add AttackRoll 7 "}} 

 Player 1 14:09:28 $ROLL_DICE:  
{"playerId":1} 

 Player 2 14:09:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:09:28 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:09:28 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:09:30 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 14:09:30 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"player rolled 4 vs Daddy Long Legs<Monster>"} 

 Player 1 14:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster>"} 

 Player 1 14:09:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:30 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 14:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster>"} 

 Player 1 14:09:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 1 14:09:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Response Adding AttackRoll 7"},"childOfId":60} 

 Player 1 14:09:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Wait For Response From Player 1 "},"childOfId":60} 

 Player 1 14:09:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:09:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:09:32 $SHOW_DECISION:  
{"startCardId":275,"endCardId":276} 

 Player 1 14:09:35 $NEXT_STACK_ID:  

 Player 1 14:09:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster>"} 

 Player 1 14:09:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:09:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 14:09:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:09:35 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 14:09:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Add ActivateItem 8 "}} 

 Player 2 14:09:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:09:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:09:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:09:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:09:37 $SHOW_DECISION:  
{"startCardId":276,"endCardId":275} 

 Player 1 14:09:40 $USE_ITEM:  
{"cardId":276} 

 Player 1 14:09:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:09:40 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 14:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:09:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 14:09:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Response Adding ActivateItem 8"},"childOfId":63} 

 Player 1 14:09:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":63} 

 Player 1 14:09:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:09:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:09:42 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 14:09:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 2 "},"childOfId":63} 

 Player 1 14:09:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:09:42 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:09:45 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":true} 

 Player 2 14:09:45 $SHOW_DECISION:  
{"startCardId":259,"endCardId":259} 

 Player 1 14:09:45 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 14:09:45 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 14:09:45 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 14:09:45 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 2 14:09:48 $NEXT_STACK_ID:  

 Player 2 14:09:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:09:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 2 14:09:48 $ADD_TO_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 14:09:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 2 14:09:48 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 14:09:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Add ActivateItem 9 "}} 

 Player 1 14:09:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:09:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:09:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 1 14:09:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 2 14:09:50 $SHOW_DECISION:  
{"startCardId":259,"endCardId":29} 

 Player 2 14:09:53 $USE_ITEM:  
{"cardId":259} 

 Player 2 14:09:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:09:53 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 14:09:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 2 14:09:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:09:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Response Adding ActivateItem 9"},"childOfId":67} 

 Player 2 14:09:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Wait For Response From Player 1 "},"childOfId":67} 

 Player 2 14:09:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:09:53 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:09:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 1 14:09:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 1 14:09:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:09:53 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 14:09:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Wait For Response From Player 2 "},"childOfId":67} 

 Player 2 14:09:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:09:55 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 14:09:55 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 2 14:09:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Resolve ActivateItem 9 "}} 

 Player 2 14:09:55 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":259,"particleType":6} 

 Player 2 14:09:57 $DISABLE_PARTICLE_EFFECT:  
{"cardId":259,"particleType":6} 

 Player 2 14:09:57 $NEXT_STACK_ID:  

 Player 2 14:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 2 14:09:57 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":29} 

 Player 2 14:09:57 $MOVE_CARD:  
{"moveIndex":17,"cardId":29,"placeID":277,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 14:09:57 $MOVE_CARD_END:  
{"moveIndex":17,"cardId":29,"flipIfFlipped":true,"playerId":2} 

 Player 2 14:09:57 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":29} 

 Player 2 14:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:09:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":29,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":29,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":29,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":29,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217},{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1},{"entityId":10,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":29,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":29,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney \n4:Player 2 activated Azazel"} 

 Player 2 14:09:58 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:09:58 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney"} 

 Player 2 14:09:58 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:09:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Remove After Resolve ActivateItem 9  "}} 

 Player 2 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney"} 

 Player 2 14:09:58 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":259,"hasLockingStackEffect":false,"itemToPlayCardId":259,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:09:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Response Remove After Resolve ActivateItem 9"},"childOfId":72} 

 Player 2 14:09:58 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Wait For Response From Player 1 "},"childOfId":72} 

 Player 2 14:09:58 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:09:58 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 1 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 activated Azazel"} 

 Player 1 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9)  \n4:Player 2 activated Azazel"} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9)  \n4:Player 2 activated Azazel"} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9)  \n4:Player 2 activated Azazel"} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9)  \n4:Player 2 activated Azazel"} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9)  \n4:Player 2 activated Azazel"} 

 Player 1 14:09:59 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9)  \n4:Player 2 activated Azazel"} 

 Player 1 14:09:59 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:09:59 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 2 14:09:59 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Wait For Response From Player 2 "},"childOfId":72} 

 Player 2 14:09:59 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:10:00 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 14:10:01 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 2 14:10:01 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 2 14:10:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Resolve PlayLootCardStackEffect 10 "}} 

 Player 2 14:10:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney"} 

 Player 2 14:10:01 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":29,"particleType":6} 

 Player 2 14:10:03 $DISABLE_PARTICLE_EFFECT:  
{"cardId":29,"particleType":6} 

 Player 2 14:10:03 $SET_MONEY:  
{"playerId":2,"numOfCoins":5} 

 Player 2 14:10:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":259,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 14:10:03 $REMOVE_FROM_PILE:  
{"cardId":29} 

 Player 2 14:10:03 $MOVE_CARD:  
{"moveIndex":18,"cardId":29,"placeID":278,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 14:10:03 $MOVE_CARD_END:  
{"moveIndex":18,"cardId":29,"flipIfFlipped":true,"playerId":2} 

 Player 2 14:10:03 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":29} 

 Player 2 14:10:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9): addMoney"} 

 Player 2 14:10:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":29,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 14:10:03 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 14:10:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":29,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 14:10:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Remove After Resolve PlayLootCardStackEffect 10  "}} 

 Player 2 14:10:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":259,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":29,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 14:10:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Response Remove After Resolve PlayLootCardStackEffect 10"},"childOfId":77} 

 Player 2 14:10:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Wait For Response From Player 2 "},"childOfId":77} 

 Player 2 14:10:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:10:03 $ACTION_MASSAGE_REMOVE:  
{"id":79} 

 Player 2 14:10:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Wait For Response From Player 1 "},"childOfId":77} 

 Player 2 14:10:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:10:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle \n3:Player 2 play 2 Cents(9) "} 

 Player 1 14:10:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:10:04 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 2 14:10:04 $ACTION_MASSAGE_REMOVE:  
{"id":78} 

 Player 2 14:10:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Resolve ActivateItem 8 "}} 

 Player 2 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:04 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217},{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:04 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:04 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 1 14:10:06 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 1 14:10:06 $REGISTER_ONE_TURN_PASSIVE_EFFECT:  
{"cardId":276,"effectIndex":{"type":3,"index":0},"conditionData":[{"effectTargets":[275],"chainEffectsData":[],"methodArgs":[],"isPassive":false,"effectCard":276,"effectCardOwner":275,"effectCardPlayer":275}]} 

 Player 1 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:06 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:06 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217},{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:06 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:06 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:06 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 2 14:10:06 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:07 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 2 14:10:07 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217},{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:07 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Remove After Resolve ActivateItem 8  "}} 

 Player 2 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:07 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":275,"hasLockingStackEffect":false,"itemToPlayCardId":276,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 14:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Response Remove After Resolve ActivateItem 8"},"childOfId":82} 

 Player 2 14:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Wait For Response From Player 1 "},"childOfId":82} 

 Player 2 14:10:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:10:07 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster> \n2:Player 1 activated HolyMantle"} 

 Player 1 14:10:07 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:10:07 $ACTION_MASSAGE_REMOVE:  
{"id":84} 

 Player 2 14:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Wait For Response From Player 2 "},"childOfId":82} 

 Player 2 14:10:07 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:10:07 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 14:10:07 $ACTION_MASSAGE_REMOVE:  
{"id":83} 

 Player 2 14:10:07 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Resolve AttackRoll 7 "}} 

 Player 2 14:10:07 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:07 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}]} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Added 0 to original roll"}} 

 Player 1 14:10:08 $NEXT_STACK_ID:  

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}]} 

 Player 1 14:10:08 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":6,"originStackId":7},"isAfterActivation":true,"index":6} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:08 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}]} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:08 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 2 14:10:09 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}]} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:09 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 2 14:10:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Remove After Resolve AttackRoll 7  "}} 

 Player 2 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":275,"numberRolled":4,"rollingPlayerCardId":275,"stackEffectType":2,"attackedMonsterCardId":217}} 

 Player 2 14:10:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Response Remove After Resolve AttackRoll 7"},"childOfId":88} 

 Player 2 14:10:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Wait For Response From Player 1 "},"childOfId":88} 

 Player 2 14:10:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:10:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is rolling against Daddy Long Legs<Monster>"} 

 Player 1 14:10:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:10:10 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 14:10:10 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 14:10:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 2 "},"childOfId":88} 

 Player 2 14:10:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:10:10 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 14:10:10 $ACTION_MASSAGE_REMOVE:  
{"id":89} 

 Player 2 14:10:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Resolve CombatDamage 11 "}} 

 Player 2 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:10 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}]} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost"} 

 Player 1 14:10:10 $UPDATE_STACK_VIS:  
{"stackId":11,"text":"Daddy Long Legs will deal 1 combat damage to The Lost"} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost"} 

 Player 1 14:10:10 $PLAYER_GET_HIT:  
{"playerId":1,"damage":1,"damageDealerId":217} 

 Player 1 14:10:10 $NEXT_STACK_ID:  

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost"} 

 Player 1 14:10:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:10 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:10 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:10 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}]} 

 Player 1 14:10:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":217}],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:10 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}]} 

 Player 2 14:10:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:11 $REPLACE_STACK:  
{"currentStack":[{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}]} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 14:10:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Remove After Resolve CombatDamage 11  "}} 

 Player 2 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:11 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":275,"entityToDoDamageCardId":217,"entityToTakeDamageCardId":275,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 14:10:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Response Remove After Resolve CombatDamage 11"},"childOfId":93} 

 Player 2 14:10:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Wait For Response From Player 1 "},"childOfId":93} 

 Player 2 14:10:11 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:10:11 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:10:11 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 1 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:11 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs 1 combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Daddy Long Legs combat damage to The Lost \n2:Player 1 is about to die"} 

 Player 2 14:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 1 14:10:12 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 14:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":93} 

 Player 2 14:10:12 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 14:10:12 $ACTION_MASSAGE_REMOVE:  
{"id":94} 

 Player 2 14:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Resolve PlayerDeath 12 "}} 

 Player 2 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:12 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}]} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:12 $DISABLE_PARTICLE_EFFECT:  
{"cardId":217,"particleType":5} 

 Player 1 14:10:12 $CANCEL_ATTACK:  

 Player 1 14:10:12 $NEXT_STACK_ID:  

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:12 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":false,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":13},"isAfterActivation":false,"index":2} 

 Player 1 14:10:12 $NEXT_STACK_ID:  

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties"} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 14:10:12 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":276,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:10:12 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 14:10:12 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":276,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:10:12 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Add ActivatePassiveEffect 14 "}} 

 Player 1 14:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 14:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 1 14:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Player 1 is about to pay death penalties \n3:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 14:10:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"effectToDo":{"effectName":"PreventDeathPenalties","cardEffectNum":0,"cardPlayerId":1,"cardId":276,"effctType":3},"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Response Adding ActivatePassiveEffect 14"},"childOfId":98} 

 Player 1 14:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Wait For Response From Player 2 "},"childOfId":98} 

 Player 1 14:10:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 1 14:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":98} 

 Player 1 14:10:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 1 14:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":99} 

 Player 1 14:10:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Resolve ActivatePassiveEffect 14 "}} 

 Player 1 14:10:13 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 2 14:10:13 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 1 14:10:15 $DISABLE_PARTICLE_EFFECT:  
{"cardId":276,"particleType":6} 

 Player 1 14:10:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 14:10:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 

 Player 1 14:10:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Fizzle PlayerDeathPenalties 13"}} 

 Player 1 14:10:15 $FIZZLE_STACK_EFFECT:  
{"entityId":13} 

 Player 1 14:10:15 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_PAY_DEATH_PANELTIES","args":[],"result":null,"preventMethod":true,"methodScopeId":275,"scopeIsPlayer":true,"index":2,"originStackId":13},"isAfterActivation":false,"index":2} 

 Player 1 14:10:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle effect PreventDeathPanelties<PreventDeathPanelties>"} 

 Player 1 14:10:15 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:10:15 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 1 14:10:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:15 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:10:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Remove After Resolve ActivatePassiveEffect 14  "}} 

 Player 1 14:10:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":14,"creatorCardId":275,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":276,"isAfterActivation":false,"index":2,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 14:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Response Remove After Resolve ActivatePassiveEffect 14"},"childOfId":104} 

 Player 1 14:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 1 "},"childOfId":104} 

 Player 1 14:10:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 14:10:16 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 1 14:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Wait For Response From Player 2 "},"childOfId":104} 

 Player 1 14:10:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 14:10:16 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die \n2:Activate HolyMantle "} 

 Player 2 14:10:16 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 14:10:16 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 1 14:10:16 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 1 14:10:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Resolve PlayerDeath 12 "}} 

 Player 1 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":275,"playerToPayCardId":275,"stackEffectType":16}} 

 Player 1 14:10:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:17 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 1 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:17 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 1 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:17 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}]} 

 Player 1 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:17 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 1 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:17 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}]} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to pay death penalties"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:17 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 2 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:18 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 2 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 2 14:10:18 $REPLACE_STACK:  
{"currentStack":[{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}]} 

 Player 2 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 2 14:10:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Remove After Resolve PlayerDeath 12  "}} 

 Player 2 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":275,"playerToDieCardId":275,"stackEffectType":15,"killerId":217}} 

 Player 2 14:10:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Response Remove After Resolve PlayerDeath 12"},"childOfId":109} 

 Player 2 14:10:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Wait For Response From Player 2 "},"childOfId":109} 

 Player 2 14:10:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 14:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 14:10:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Wait For Response From Player 1 "},"childOfId":109} 

 Player 2 14:10:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 14:10:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 1 14:10:18 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 1 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is about to die"} 

 Player 1 14:10:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":110} 

 Player 2 14:10:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Stack Was Emptied "}} 

 Player 2 14:10:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 14:10:19 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":88} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":93} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":98} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":103} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":104} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":108} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 14:10:20 $TURN_PLAYER_DO_STACK_EFFECT:  
{"playerId":1} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":109} 

 Player 2 14:10:20 $ACTION_MASSAGE_REMOVE:  
{"id":113}