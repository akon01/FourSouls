Start Log 

 Player 1 15:28:30 $MATCH:  

 Player 1 15:28:30 $START_GAME:  

 Player 2 15:28:30 $MOVE_TO_TABLE:  

 Player 1 15:28:30 $MOVE_TO_TABLE:  

 Player 2 15:28:38 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 15:28:38 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:28:38 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":282,"itemCardId":285} 

 Player 2 15:28:38 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 2 15:28:38 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[216,195,160,145,156,209,147,213,169,187,167,191,181,159,212,152,189,188,214,150,200,168,192,146,183,202,174,158,186,170,210,178,177,190,175,165,205,219,201,203,193,163,164,185,220,155,204,157,148,149,208,182,162,179,173,207,153,184,194,198,199,154,166,151,180,161,171,206,221,218,197,196,172,176,211,215,217]} 

 Player 1 15:28:38 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":285}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:28:41 $EDEN_CHOSEN:  
{"cardId":145,"playerId":2} 

 Player 2 15:28:41 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[216,195,160,156,209,147,213,169,187,167,191,181,159,212,152,189,188,214,150,200,168,192,146,183,202,174,158,186,170,210,178,177,190,175,165,205,219,201,203,193,163,164,185,220,155,204,157,148,149,208,182,162,179,173,207,153,184,194,198,199,154,166,151,180,161,171,206,221,218,197,196,172,176,211,215,217]} 

 Player 2 15:28:42 $FLIP_CARD:  
{"cardId":145} 

 Player 2 15:28:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":145}],"result":true,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:28:42 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":284,"itemCardId":145} 

 Player 2 15:28:42 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[115,61,8,51,9,95,118,89,119,20,36,21,83,16,121,47,105,110,46,113,112,85,137,73,107,114,17,78,91,125,34,14,57,97,80,96,65,138,49,93,63,132,12,100,86,48,45,102,40,116,11,24,68,52,79,15,140,50,87,82,60,32,101,122,106,117,44,77,27,141,37,67,124,127,104,42,10,41,134,88,31,130,99,19,123,30,126,135,142,13,35,120,25,69,7,62,94,22,29,58,23,81,33,103,66,72,76,53,64,111,28,56,74,90,38,26,43,92,131,98,108,139,109,128,129,18,84,39,55,70,71,54,136,59,75,133]} 

 Player 2 15:28:42 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[234,275,228,255,254,241,235,229,248,240,242,225,250,274,226,277,224,276,260,252,257,268,236,269,259,247,266,244,243,253,239,256,237,245,232,263,265,258,249,238,233,264,273,246,261,272,267,271,231,262,251,230,270,227]} 

 Player 2 15:28:42 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[188,219,221,203,158,155,166,196,148,168,181,146,180,156,204,176,205,194,149,167,215,157,150,192,165,178,206,152,202,171,207,189,183,200,154,213,211,190,160,187,198,193,199,173,191,159,195,214,218,212,210,185,186,208,201,175,170,197,147,177,216,220,174,164,151,161,209,163,217,184,153,179,182,162,169,172]} 

 Player 2 15:28:42 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:28:42 $FLIP_CARD:  
{"cardId":172} 

 Player 2 15:28:42 $ADD_STORE_CARD:  
{"cardId":172} 

 Player 2 15:28:42 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:28:42 $FLIP_CARD:  
{"cardId":169} 

 Player 2 15:28:42 $ADD_STORE_CARD:  
{"cardId":169} 

 Player 2 15:28:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:28:42 $FLIP_CARD:  
{"cardId":227} 

 Player 2 15:28:42 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":227} 

 Player 2 15:28:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":227,"monsterPlaceId":1} 

 Player 2 15:28:42 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:28:42 $FLIP_CARD:  
{"cardId":270} 

 Player 2 15:28:42 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":270} 

 Player 2 15:28:42 $NEW_MONSTER_ON_PLACE:  
{"cardId":270,"monsterPlaceId":2} 

 Player 2 15:28:42 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:28:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:28:42 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:28:42 $MOVE_CARD:  
{"moveIndex":1,"cardId":133,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:28:43 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":133,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:28:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":133} 

 Player 2 15:28:43 $FLIP_CARD:  
{"cardId":133} 

 Player 2 15:28:43 $FLIP_CARD:  
{"cardId":133} 

 Player 2 15:28:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":133} 

 Player 2 15:28:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:28:43 $MOVE_CARD:  
{"moveIndex":2,"cardId":75,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:28:43 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":75,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:28:43 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":75} 

 Player 2 15:28:43 $FLIP_CARD:  
{"cardId":75} 

 Player 2 15:28:43 $FLIP_CARD:  
{"cardId":75} 

 Player 2 15:28:43 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":75} 

 Player 2 15:28:43 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:28:43 $MOVE_CARD:  
{"moveIndex":3,"cardId":59,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:28:44 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":59,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:28:44 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":59} 

 Player 2 15:28:44 $FLIP_CARD:  
{"cardId":59} 

 Player 2 15:28:44 $FLIP_CARD:  
{"cardId":59} 

 Player 2 15:28:44 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":59} 

 Player 2 15:28:44 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:28:44 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":284,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 15:28:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:28:44 $MOVE_CARD:  
{"moveIndex":4,"cardId":136,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:28:44 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":136,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:28:44 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":136} 

 Player 2 15:28:44 $FLIP_CARD:  
{"cardId":136} 

 Player 2 15:28:44 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":136} 

 Player 2 15:28:44 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:28:44 $MOVE_CARD:  
{"moveIndex":5,"cardId":54,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:28:45 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":54,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:28:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":54} 

 Player 2 15:28:45 $FLIP_CARD:  
{"cardId":54} 

 Player 2 15:28:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":54} 

 Player 2 15:28:45 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:28:45 $MOVE_CARD:  
{"moveIndex":6,"cardId":71,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:28:45 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:28:45 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":71} 

 Player 2 15:28:45 $FLIP_CARD:  
{"cardId":71} 

 Player 2 15:28:45 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":71} 

 Player 2 15:28:45 $GAME_HAS_STARTED:  

 Player 2 15:28:45 $SET_TURN:  
{"playerId":1} 

 Player 2 15:28:45 $START_TURN:  
{"playerId":1} 

 Player 2 15:28:45 $UPDATE_ACTIONS:  

 Player 1 15:28:45 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:28:45 $NEXT_STACK_ID:  

 Player 1 15:28:45 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:28:46 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:28:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 15:28:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 1 15:28:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:28:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 15:28:46 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:28:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 1 15:28:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 1 15:28:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:28:46 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:28:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 1 15:28:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:28:46 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:46 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:28:46 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:28:46 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:28:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 1 15:28:46 $DRAW_CARD:  
{"deckType":1} 

 Player 1 15:28:46 $MOVE_CARD:  
{"moveIndex":7,"cardId":70,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 15:28:47 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":70,"flipIfFlipped":false,"playerId":1} 

 Player 1 15:28:47 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":70} 

 Player 1 15:28:47 $FLIP_CARD:  
{"cardId":70} 

 Player 1 15:28:47 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":70} 

 Player 1 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 1 15:28:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 15:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:28:47 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 15:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 1 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:28:47 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 1 15:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 1 15:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 1 15:28:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:28:47 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 start turn loot"} 

 Player 2 15:28:47 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:28:47 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 1 15:28:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 1 15:28:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 1 15:28:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 1 15:28:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:28:48 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:28:49 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:28:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:28:51 $MOVE_CARD:  
{"moveIndex":8,"cardId":164,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 15:28:52 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":164,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:28:52 $REGISTER_PASSIVE_ITEM:  
{"cardId":164} 

 Player 1 15:28:52 $MOVE_CARD:  
{"moveIndex":9,"cardId":164,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 15:28:52 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":164,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:28:52 $ADD_AN_ITEM:  
{"playerId":1,"cardId":164,"isReward":true} 

 Player 1 15:28:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":164}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 1 15:28:54 $SHOW_DECISION:  
{"startCardId":282,"endCardId":285} 

 Player 1 15:28:57 $NEXT_STACK_ID:  

 Player 1 15:28:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:28:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:28:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 15:28:57 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:28:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 1 15:28:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add ActivateItem 2 "}} 

 Player 2 15:28:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:28:57 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:28:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:28:58 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:28:59 $SHOW_DECISION:  
{"startCardId":285,"endCardId":144} 

 Player 1 15:29:02 $USE_ITEM:  
{"cardId":285} 

 Player 1 15:29:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:29:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding ActivateItem 2"},"childOfId":10} 

 Player 1 15:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 1 15:29:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 1 15:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 1 15:29:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:02 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:29:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:29:02 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 1 15:29:02 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 1 15:29:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve ActivateItem 2 "}} 

 Player 1 15:29:02 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":285,"particleType":6} 

 Player 1 15:29:04 $DISABLE_PARTICLE_EFFECT:  
{"cardId":285,"particleType":6} 

 Player 1 15:29:13 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":179} 

 Player 1 15:29:13 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":182} 

 Player 1 15:29:13 $DECK_ADD_TO_TOP:  
{"deckType":5,"cardId":162} 

 Player 1 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 1 15:29:13 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:13 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve ActivateItem 2  "}} 

 Player 1 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":285,"itemPlayerId":1,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 1 15:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve ActivateItem 2"},"childOfId":15} 

 Player 1 15:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 1 15:29:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:13 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:29:13 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 activated Sleight Of Hand"} 

 Player 2 15:29:13 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:13 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 1 15:29:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 1 15:29:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 1 15:29:14 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 1 15:29:14 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:29:14 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:29:15 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:29:16 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:29:17 $SHOW_DECISION:  
{"startCardId":282,"endCardId":270} 

 Player 1 15:29:20 $NEXT_STACK_ID:  

 Player 1 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 1 15:29:20 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 1 15:29:20 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 15:29:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add DeclareAttack 3 "}} 

 Player 1 15:29:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 1 15:29:20 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 15:29:20 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:29:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding DeclareAttack 3"},"childOfId":20} 

 Player 1 15:29:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 1 15:29:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:20 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 1 15:29:20 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 1 15:29:20 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:20 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:20 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 1 15:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve DeclareAttack 3 "}} 

 Player 1 15:29:21 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":5} 

 Player 1 15:29:21 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":3,"originStackId":3},"isAfterActivation":true,"index":3} 

 Player 1 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 1 15:29:21 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:21 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 15:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve DeclareAttack 3  "}} 

 Player 1 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":270,"stackEffectType":4}} 

 Player 1 15:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve DeclareAttack 3"},"childOfId":25} 

 Player 1 15:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 1 15:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:21 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1  declared attack on The Cage"} 

 Player 2 15:29:21 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 1 15:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 1 15:29:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 1 15:29:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 1 15:29:21 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:29:21 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:29:22 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 15:29:23 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 15:29:23 $NEXT_STACK_ID:  

 Player 1 15:29:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 15:29:23 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 15:29:23 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 15:29:23 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 15:29:23 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add AttackRoll 4 "}} 

 Player 1 15:29:23 $ROLL_DICE:  
{"playerId":1} 

 Player 2 15:29:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:29:23 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:29:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 15:29:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 1 15:29:24 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:29:24 $ROLL_DICE_ENDED:  
{"playerId":1,"numberRolled":4} 

 Player 1 15:29:25 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 15:29:25 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:29:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding AttackRoll 4"},"childOfId":30} 

 Player 1 15:29:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 1 15:29:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:25 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 1 15:29:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 1 15:29:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:25 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 15:29:25 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:25 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 1 15:29:25 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 15:29:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve AttackRoll 4 "}} 

 Player 1 15:29:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added 0 to original roll"}} 

 Player 1 15:29:25 $NEXT_STACK_ID:  

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":270,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":270,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:25 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":270,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270}]} 

 Player 1 15:29:25 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 15:29:25 $NEXT_STACK_ID:  

 Player 1 15:29:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster>"} 

 Player 1 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 1 15:29:26 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 1 15:29:26 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 15:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Add ActivatePassiveEffect 6 "}} 

 Player 1 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 1 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 1 15:29:26 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Adding ActivatePassiveEffect 6"},"childOfId":36} 

 Player 1 15:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 1 15:29:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 1 15:29:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 1 15:29:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:26 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster>"} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia "} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia "} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia "} 

 Player 2 15:29:26 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia "} 

 Player 2 15:29:26 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:26 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 1 15:29:27 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 1 15:29:27 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve ActivatePassiveEffect 6 "}} 

 Player 1 15:29:27 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":164,"particleType":6} 

 Player 1 15:29:28 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:29:28 $DISABLE_PARTICLE_EFFECT:  
{"cardId":164,"particleType":6} 

 Player 1 15:29:29 $NEXT_STACK_ID:  

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity>"} 

 Player 1 15:29:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":270,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":270,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":270,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":4,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270},{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"effectToDo":{"effectName":"KillEntity","cardEffectNum":0,"cardPlayerId":1,"cardId":164,"effctType":0},"effectPassiveMeta":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14},{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}]} 

 Player 1 15:29:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":4},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":4},"isAfterActivation":true,"index":4} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:Activate Euthanasia effect KillEntity<KillEntity> \n4:[object Object] killed by Cain"} 

 Player 1 15:29:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:29 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 1 15:29:29 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve ActivatePassiveEffect 6  "}} 

 Player 1 15:29:29 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 rolled 4 vs The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 1 15:29:29 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[270],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":6,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":164,"isAfterActivation":true,"index":4,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve ActivatePassiveEffect 6"},"childOfId":41} 

 Player 1 15:29:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 1 15:29:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:29 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 1 15:29:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 1 15:29:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:30 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia "} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia "} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Cain"} 

 Player 2 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:Activate Euthanasia  \n4:[object Object] killed by Cain"} 

 Player 2 15:29:30 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:30 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 1 15:29:30 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 1 15:29:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Resolve MonsterDeath 7 "}} 

 Player 1 15:29:30 $DISABLE_PARTICLE_EFFECT:  
{"cardId":270,"particleType":5} 

 Player 1 15:29:30 $CANCEL_ATTACK:  

 Player 1 15:29:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 rolled 4 vs The Cage<Monster> \n2:[object Object] killed by Cain"} 

 Player 1 15:29:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":270,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 1 15:29:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Fizzle CombatDamage 5"}} 

 Player 1 15:29:31 $FIZZLE_STACK_EFFECT:  
{"entityId":5} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 15:29:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"numberRolled":4,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":270}} 

 Player 1 15:29:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Fizzle AttackRoll 4"}} 

 Player 1 15:29:31 $FIZZLE_STACK_EFFECT:  
{"entityId":4} 

 Player 1 15:29:31 $NEXT_STACK_ID:  

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 1 15:29:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:29:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"monsterCardWithRewardId":270,"playerCardIdToReward":282,"stackEffectType":7}} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:29:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:29:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"monsterCardWithRewardId":270,"playerCardIdToReward":282,"stackEffectType":7}} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:29:31 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:29:31 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":282,"monsterCardWithRewardId":270,"playerCardIdToReward":282,"stackEffectType":7},{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}]} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 1 15:29:31 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}} 

 Player 1 15:29:31 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 1 15:29:31 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}} 

 Player 1 15:29:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Remove After Resolve MonsterDeath 7  "}} 

 Player 1 15:29:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 1 15:29:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"monsterToDieCardId":270,"stackEffectType":5,"killerId":282}} 

 Player 1 15:29:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Response Remove After Resolve MonsterDeath 7"},"childOfId":48} 

 Player 1 15:29:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Wait For Response From Player 1 "},"childOfId":48} 

 Player 1 15:29:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:31 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 1 15:29:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Wait For Response From Player 2 "},"childOfId":48} 

 Player 1 15:29:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:32 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 15:29:32 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Cain combat damage to The Cage \n2:Player 1 is rolling against The Cage<Monster> \n3:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster> \n2:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 is rolling against The Cage<Monster> \n2:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:29:32 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:[object Object] killed by Cain"} 

 Player 2 15:29:32 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:32 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 1 15:29:32 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 1 15:29:32 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Resolve MonsterRewardStackEffect 8 "}} 

 Player 1 15:29:32 $DRAW_CARD:  
{"deckType":5} 

 Player 1 15:29:32 $REGISTER_PASSIVE_ITEM:  
{"cardId":162} 

 Player 1 15:29:32 $MOVE_CARD:  
{"moveIndex":10,"cardId":162,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 15:29:33 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":162,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:29:33 $ADD_AN_ITEM:  
{"playerId":1,"cardId":162,"isReward":true} 

 Player 1 15:29:33 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":162}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 15:29:33 $NEXT_STACK_ID:  

 Player 1 15:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 1 15:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner effect GainStats<GainStats>"} 

 Player 1 15:29:33 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":162,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":162,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 15:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner effect GainStats<GainStats>"} 

 Player 1 15:29:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":9,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":162,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":162,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 1 15:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Add ActivatePassiveEffect 9 "}} 

 Player 1 15:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner effect GainStats<GainStats>"} 

 Player 1 15:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner effect GainStats<GainStats>"} 

 Player 1 15:29:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":9,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":162,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":1,"cardId":162,"effctType":0},"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Response Adding ActivatePassiveEffect 9"},"childOfId":53} 

 Player 1 15:29:33 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 2 "},"childOfId":53} 

 Player 1 15:29:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:33 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 15:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:29:33 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 15:29:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:34 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 1 15:29:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Wait For Response From Player 1 "},"childOfId":53} 

 Player 1 15:29:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 1 15:29:34 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 1 15:29:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Resolve ActivatePassiveEffect 9 "}} 

 Player 1 15:29:34 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":162,"particleType":6} 

 Player 1 15:29:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":162,"particleType":6} 

 Player 1 15:29:36 $PLAYER_GAIN_HP:  
{"playerId":1,"hpToGain":1,"isTemp":false} 

 Player 1 15:29:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":162}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 1 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner effect GainStats<GainStats>"} 

 Player 1 15:29:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":9,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":162,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:36 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 1 15:29:36 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":9,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":162,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Remove After Resolve ActivatePassiveEffect 9  "}} 

 Player 1 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 1 15:29:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[282],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":282,"effectCardPlayer":282},"entityId":9,"creatorCardId":282,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":162,"isAfterActivation":true,"index":5,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 15:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Response Remove After Resolve ActivatePassiveEffect 9"},"childOfId":58} 

 Player 1 15:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":58} 

 Player 1 15:29:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:36 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 1 15:29:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Wait For Response From Player 2 "},"childOfId":58} 

 Player 1 15:29:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:36 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward \n2:Activate Dinner "} 

 Player 2 15:29:37 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":61} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 1 15:29:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Resolve MonsterRewardStackEffect 8 "}} 

 Player 1 15:29:37 $DRAW_CARD:  
{"deckType":5} 

 Player 1 15:29:37 $MOVE_CARD:  
{"moveIndex":11,"cardId":182,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 15:29:37 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":182,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:29:37 $ADD_AN_ITEM:  
{"playerId":1,"cardId":182,"isReward":true} 

 Player 1 15:29:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":182}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 1 15:29:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_IS_KILLED","args":[],"result":null,"preventMethod":false,"methodScopeId":270,"scopeIsPlayer":false,"index":7,"originStackId":8},"isAfterActivation":true,"index":7} 

 Player 1 15:29:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:29:37 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 15:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:38 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":282,"monsterCardWithRewardId":270,"playerCardIdToReward":282,"stackEffectType":7}} 

 Player 1 15:29:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Fizzle MonsterRewardStackEffect 8"}} 

 Player 1 15:29:38 $FIZZLE_STACK_EFFECT:  
{"entityId":8} 

 Player 1 15:29:38 $MOVE_CARD:  
{"moveIndex":12,"cardId":270,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"soulsLayout"} 

 Player 2 15:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 1 get The Cage<Monster> reward"} 

 Player 2 15:29:38 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 15:29:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:29:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 2 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 15:29:39 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":270,"flipIfFlipped":true,"playerId":1} 

 Player 1 15:29:39 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:29:39 $GET_SOUL:  
{"playerId":1,"cardId":270} 

 Player 1 15:29:39 $REMOVE_MONSTER:  
{"holderId":2,"monsterId":270} 

 Player 1 15:29:39 $NEXT_STACK_ID:  

 Player 1 15:29:39 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 15:29:39 $ADD_TO_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 15:29:39 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 15:29:39 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 15:29:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Add RefillEmptySlot 10 "}} 

 Player 1 15:29:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 1 15:29:40 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 15:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 15:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Response Adding RefillEmptySlot 10"},"childOfId":64} 

 Player 1 15:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Wait For Response From Player 1 "},"childOfId":64} 

 Player 1 15:29:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":66} 

 Player 1 15:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Wait For Response From Player 2 "},"childOfId":64} 

 Player 1 15:29:40 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:40 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:29:40 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":67} 

 Player 1 15:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 1 15:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Resolve RefillEmptySlot 10 "}} 

 Player 1 15:29:40 $DRAW_CARD:  
{"deckType":2} 

 Player 1 15:29:40 $FLIP_CARD:  
{"cardId":230} 

 Player 1 15:29:40 $REGISTER_PASSIVE_ITEM:  
{"cardId":230} 

 Player 1 15:29:40 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":230} 

 Player 1 15:29:40 $NEW_MONSTER_ON_PLACE:  
{"cardId":230,"monsterPlaceId":2} 

 Player 1 15:29:40 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:40 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 15:29:40 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Remove After Resolve RefillEmptySlot 10  "}} 

 Player 1 15:29:40 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":10,"creatorCardId":282,"slotType":2,"slotToFillId":2,"stackEffectType":10}} 

 Player 1 15:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Response Remove After Resolve RefillEmptySlot 10"},"childOfId":69} 

 Player 1 15:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 2 "},"childOfId":69} 

 Player 1 15:29:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 15:29:41 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 15:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:29:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Refill holder2 slot"} 

 Player 2 15:29:41 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 1 15:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 1 "},"childOfId":69} 

 Player 1 15:29:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 1 15:29:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Stack Was Emptied "}} 

 Player 1 15:29:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:29:41 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:29:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Stack Was Emptied "}} 

 Player 1 15:29:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:29:42 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 15:29:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Stack Was Emptied "}} 

 Player 1 15:29:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 1 15:29:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":62} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":68} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":73} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":74} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 15:29:44 $ACTION_MASSAGE_REMOVE:  
{"id":69} 

 Player 2 15:31:58 $MATCH: 