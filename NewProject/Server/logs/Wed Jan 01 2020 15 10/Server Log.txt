Start Log 

 Player 1 15:10:13 $MATCH:  

 Player 1 15:10:14 $START_GAME:  

 Player 2 15:10:14 $MOVE_TO_TABLE:  

 Player 1 15:10:14 $MOVE_TO_TABLE:  

 Player 2 15:10:22 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 15:10:22 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 15:10:22 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":262,"itemCardId":263} 

 Player 2 15:10:22 $CHOOSE_FOR_EDEN:  
{"playerId":2,"originPlayerId":2} 

 Player 1 15:10:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":263}],"result":true,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:10:22 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[201,155,187,156,147,181,166,164,161,185,146,176,170,179,175,165,183,190,192,149,174,197,198,153,173,202,191,158,194,152,182,159,186,203,171,148,195,168,151,177,200,162,154,167,178,189,169,188,184,199,180,193,150,157,196,163,172,160]} 

 Player 2 15:10:32 $EDEN_CHOSEN:  
{"cardId":187,"playerId":2} 

 Player 2 15:10:32 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[201,155,156,147,181,166,164,161,185,146,176,170,179,175,165,183,190,192,149,174,197,198,153,173,202,191,158,194,152,182,159,186,203,171,148,195,168,151,177,200,162,154,167,178,189,169,188,184,199,180,193,150,157,196,163,172,160]} 

 Player 2 15:10:32 $FLIP_CARD:  
{"cardId":187} 

 Player 2 15:10:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":187}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 15:10:32 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":266,"itemCardId":187} 

 Player 2 15:10:32 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[53,109,81,66,25,30,131,38,72,102,56,48,12,78,7,92,134,21,94,43,68,122,114,73,63,87,127,97,9,17,51,74,100,58,143,128,141,136,108,18,65,60,88,57,126,139,10,20,15,31,46,50,29,121,89,85,70,55,129,13,120,64,41,47,125,116,130,67,69,124,140,45,138,28,44,113,106,26,119,110,105,115,133,96,132,27,82,61,104,8,99,142,112,76,86,103,98,49,79,11,107,91,39,36,52,32,34,135,40,117,19,80,35,16,54,42,24,22,33,83,62,84,14,111,137,37,90,95,23,93,118,71,75,77,59,101,123]} 

 Player 2 15:10:32 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[206,246,214,220,256,223,217,235,208,252,231,250,229,233,226,216,254,212,241,237,207,227,215,245,211,253,213,210,222,248,249,221,219,234,259,209,218,257,242,224,255,251,232,225,238,236,247,243,239,244,230,228,240,258]} 

 Player 2 15:10:32 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[186,168,174,158,172,195,191,193,159,148,178,162,198,192,147,194,199,179,166,169,165,173,183,177,201,171,184,163,197,185,175,160,151,153,202,200,150,157,188,181,203,190,189,167,149,180,152,156,196,154,146,161,182,164,170,155,176]} 

 Player 2 15:10:32 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:10:32 $FLIP_CARD:  
{"cardId":176} 

 Player 2 15:10:32 $ADD_STORE_CARD:  
{"cardId":176} 

 Player 2 15:10:32 $DRAW_CARD:  
{"deckType":5} 

 Player 2 15:10:32 $FLIP_CARD:  
{"cardId":155} 

 Player 2 15:10:32 $ADD_STORE_CARD:  
{"cardId":155} 

 Player 2 15:10:32 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:10:32 $FLIP_CARD:  
{"cardId":258} 

 Player 2 15:10:32 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":258} 

 Player 2 15:10:32 $NEW_MONSTER_ON_PLACE:  
{"cardId":258,"monsterPlaceId":1} 

 Player 2 15:10:32 $DRAW_CARD:  
{"deckType":2} 

 Player 2 15:10:32 $FLIP_CARD:  
{"cardId":240} 

 Player 2 15:10:32 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":240} 

 Player 2 15:10:32 $NEW_MONSTER_ON_PLACE:  
{"cardId":240,"monsterPlaceId":2} 

 Player 2 15:10:32 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 15:10:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":262,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 15:10:32 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:10:32 $MOVE_CARD:  
{"moveIndex":1,"cardId":123,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:10:33 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":123,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:10:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":123} 

 Player 2 15:10:33 $FLIP_CARD:  
{"cardId":123} 

 Player 2 15:10:33 $FLIP_CARD:  
{"cardId":123} 

 Player 2 15:10:33 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":123} 

 Player 2 15:10:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:10:33 $MOVE_CARD:  
{"moveIndex":2,"cardId":101,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:10:33 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":101,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:10:33 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":101} 

 Player 2 15:10:33 $FLIP_CARD:  
{"cardId":101} 

 Player 2 15:10:33 $FLIP_CARD:  
{"cardId":101} 

 Player 2 15:10:33 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":101} 

 Player 2 15:10:33 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:10:33 $MOVE_CARD:  
{"moveIndex":3,"cardId":59,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:10:34 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":59,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:10:34 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":59} 

 Player 2 15:10:34 $FLIP_CARD:  
{"cardId":59} 

 Player 2 15:10:34 $FLIP_CARD:  
{"cardId":59} 

 Player 2 15:10:34 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":59} 

 Player 2 15:10:34 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 15:10:34 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 15:10:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:10:34 $MOVE_CARD:  
{"moveIndex":4,"cardId":77,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:10:34 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":77,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:10:34 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":77} 

 Player 2 15:10:34 $FLIP_CARD:  
{"cardId":77} 

 Player 2 15:10:34 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":77} 

 Player 2 15:10:34 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:10:34 $MOVE_CARD:  
{"moveIndex":5,"cardId":75,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:10:35 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":75,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:10:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":75} 

 Player 2 15:10:35 $FLIP_CARD:  
{"cardId":75} 

 Player 2 15:10:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":75} 

 Player 2 15:10:35 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:10:35 $MOVE_CARD:  
{"moveIndex":6,"cardId":71,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:10:35 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":71,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:10:35 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":71} 

 Player 2 15:10:35 $FLIP_CARD:  
{"cardId":71} 

 Player 2 15:10:35 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":71} 

 Player 2 15:10:35 $GAME_HAS_STARTED:  

 Player 2 15:10:35 $SET_TURN:  
{"playerId":2} 

 Player 2 15:10:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:35 $NEXT_STACK_ID:  

 Player 2 15:10:35 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:10:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:10:35 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 

 Player 2 15:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 15:10:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:35 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:10:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:10:35 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 

 Player 2 15:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 15:10:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 15:10:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:35 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 15:10:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:10:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:10:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:10:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:10:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:10:36 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:10:36 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 15:10:36 $DRAW_CARD:  
{"deckType":1} 

 Player 2 15:10:36 $MOVE_CARD:  
{"moveIndex":7,"cardId":118,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 15:10:36 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":118,"flipIfFlipped":false,"playerId":2} 

 Player 2 15:10:36 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":118} 

 Player 2 15:10:36 $FLIP_CARD:  
{"cardId":118} 

 Player 2 15:10:36 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":118} 

 Player 2 15:10:36 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 15:10:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 

 Player 2 15:10:36 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 15:10:36 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:10:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":266,"turnPlayerCardId":266,"stackEffectType":13}} 

 Player 2 15:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 15:10:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 15:10:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:10:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:10:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:10:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:10:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:10:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 15:10:37 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 15:10:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 15:10:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 15:10:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 15:10:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:10:37 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:10:37 $UPDATE_ACTIONS:  

 Player 2 15:10:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:10:39 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:10:44 $MOVE_CARD:  
{"moveIndex":8,"cardId":157,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 15:10:44 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":157,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:10:44 $REGISTER_PASSIVE_ITEM:  
{"cardId":157} 

 Player 2 15:10:44 $MOVE_CARD:  
{"moveIndex":9,"cardId":157,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 15:10:45 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":157,"flipIfFlipped":true,"playerId":2} 

 Player 2 15:10:45 $ADD_AN_ITEM:  
{"playerId":2,"cardId":157,"isReward":true} 

 Player 2 15:10:45 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":157}],"result":true,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 15:10:49 $NEXT_STACK_ID:  

 Player 2 15:10:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:10:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 2 15:10:49 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 2 15:10:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 15:10:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:10:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 2 15:10:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 2 15:10:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 15:10:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 15:10:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 15:10:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 15:10:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:10:49 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:10:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:10:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:10:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 15:10:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 15:10:49 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 15:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 15:10:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 15:10:49 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":240,"particleType":5} 

 Player 2 15:10:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":5,"originStackId":2},"isAfterActivation":true,"index":5} 

 Player 2 15:10:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 2 15:10:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 2 15:10:49 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:10:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 15:10:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:10:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":266,"attackingPlayerCardId":266,"idOfCardBeingAttacked":240,"stackEffectType":4}} 

 Player 2 15:10:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 15:10:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 15:10:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:10:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 15:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 15:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 15:10:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Nerve Ending"} 

 Player 1 15:10:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 15:10:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 15:10:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 15:10:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 15:10:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:10:50 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:10:51 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:10:52 $NEXT_STACK_ID:  

 Player 2 15:10:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:10:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 2 15:10:52 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":266,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 2 15:10:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 15:10:52 $ROLL_DICE:  
{"playerId":2} 

 Player 2 15:10:52 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 1 15:10:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 15:10:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:10:55 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":3} 

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:10:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:55 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:10:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":266,"numberRolled":3,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 2 15:10:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 15:10:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 15:10:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:55 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 15:10:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 15:10:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:10:55 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:10:55 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:10:55 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 15:10:55 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 15:10:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 15:10:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 15:10:55 $NEXT_STACK_ID:  

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:10:55 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:10:55 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":266,"entityToDoDamageCardId":240,"entityToTakeDamageCardId":266,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:10:55 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":266,"entityToDoDamageCardId":240,"entityToTakeDamageCardId":266,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":266,"numberRolled":3,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":240}]} 

 Player 2 15:10:55 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":6,"originStackId":3},"isAfterActivation":true,"index":6} 

 Player 2 15:10:55 $NEXT_STACK_ID:  

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster> \n3:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 15:10:55 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":5,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":2,"cardId":157,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 15:10:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 5 "}} 

 Player 2 15:10:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster> \n3:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 15:10:56 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster> \n3:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 15:10:56 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[266],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":5,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"effectToDo":{"effectName":"RerollDicePassive","cardEffectNum":0,"cardPlayerId":2,"cardId":157,"effctType":0},"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:10:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 5"},"childOfId":26} 

 Player 2 15:10:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 15:10:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:10:56 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 15:10:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 15:10:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:10:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster> \n3:Activate Dads Lost Coin "} 

 Player 1 15:10:56 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster> \n3:Activate Dads Lost Coin "} 

 Player 1 15:10:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:10:56 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 15:10:56 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 15:10:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 5 "}} 

 Player 2 15:10:56 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":157,"particleType":6} 

 Player 2 15:10:58 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:10:58 $DISABLE_PARTICLE_EFFECT:  
{"cardId":157,"particleType":6} 

 Player 2 15:11:06 $ROLL_DICE:  
{"playerId":2} 

 Player 2 15:11:09 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 15:11:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":5},{"type":2,"number":2},{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":false,"index":6,"originStackId":3},"isAfterActivation":true,"index":6} 

 Player 2 15:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster> \n3:Activate Dads Lost Coin effect Reroll Dice Passive<Reroll Dice Passive>"} 

 Player 2 15:11:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[266],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":5,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 5  "}} 

 Player 2 15:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:11:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[266],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":266,"effectCardPlayer":266},"entityId":5,"creatorCardId":266,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":157,"isAfterActivation":true,"index":6,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 15:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 5"},"childOfId":31} 

 Player 2 15:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 15:11:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:11:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster> \n3:Activate Dads Lost Coin "} 

 Player 1 15:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster> \n3:Activate Dads Lost Coin "} 

 Player 1 15:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster> \n3:Activate Dads Lost Coin "} 

 Player 1 15:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster> \n3:Activate Dads Lost Coin "} 

 Player 1 15:11:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 15:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 15:11:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 15:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 15:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 15:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 rolled 3 vs Nerve Ending<Monster>"} 

 Player 2 15:11:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":266,"numberRolled":3,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 2 15:11:09 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 15:11:09 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 2 15:11:09 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":266,"numberRolled":3,"rollingPlayerCardId":266,"stackEffectType":2,"attackedMonsterCardId":240}} 

 Player 2 15:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 

 Player 2 15:11:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 15:11:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:11:10 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 15:11:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 15:11:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:11:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden \n2:Player 2 is rolling against Nerve Ending<Monster>"} 

 Player 1 15:11:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:11:10 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 15:11:10 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 15:11:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 4 "}} 

 Player 2 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending 1 combat damage to Eden"} 

 Player 2 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending 1 combat damage to Eden"} 

 Player 2 15:11:10 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":240} 

 Player 2 15:11:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":240}],"result":null,"preventMethod":false,"methodScopeId":266,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending 1 combat damage to Eden"} 

 Player 2 15:11:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":266,"entityToDoDamageCardId":240,"entityToTakeDamageCardId":266,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:11:10 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:11:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 4  "}} 

 Player 2 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:11:10 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":266,"entityToDoDamageCardId":240,"entityToTakeDamageCardId":266,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 15:11:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 4"},"childOfId":41} 

 Player 2 15:11:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 15:11:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 15:11:10 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 1 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 1 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 1 15:11:10 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Nerve Ending combat damage to Eden"} 

 Player 1 15:11:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 15:11:10 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 15:11:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 15:11:10 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 15:11:10 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 15:11:11 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 15:11:11 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:11:11 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 15:11:12 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 15:11:12 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 15:11:12 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 15:11:13 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 15:12:28 $MATCH: 