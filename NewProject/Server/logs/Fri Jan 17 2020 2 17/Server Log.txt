Start Log 

 Player 1 02:17:33 $MATCH:  

 Player 1 02:17:34 $START_GAME:  

 Player 2 02:17:34 $MOVE_TO_TABLE:  

 Player 1 02:17:34 $MOVE_TO_TABLE:  

 Player 1 02:17:42 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 02:17:42 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 2 02:17:42 $CHOOSE_FOR_EDEN:  
{"playerId":1,"originPlayerId":2} 

 Player 1 02:17:42 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[186,187,172,167,208,188,206,216,220,147,218,215,148,154,213,150,194,164,198,146,149,195,162,156,202,190,183,159,214,155,161,212,203,210,204,165,199,197,207,174,180,209,177,184,196,171,205,169,193,217,158,201,211,152,153,175,191,185,176,166,182,160,189,178,219,163,181,179,200,157,170,145,173,168,192,151]} 

 Player 1 02:17:47 $EDEN_CHOSEN:  
{"cardId":172,"playerId":2} 

 Player 2 02:17:47 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[186,187,167,208,188,206,216,220,147,218,215,148,154,213,150,194,164,198,146,149,195,162,156,202,190,183,159,214,155,161,212,203,210,204,165,199,197,207,174,180,209,177,184,196,171,205,169,193,217,158,201,211,152,153,175,191,185,176,166,182,160,189,178,219,163,181,179,200,157,170,145,173,168,192,151]} 

 Player 2 02:17:47 $FLIP_CARD:  
{"cardId":172} 

 Player 2 02:17:47 $REGISTER_PASSIVE_ITEM:  
{"cardId":172} 

 Player 2 02:17:47 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":283,"itemCardId":172} 

 Player 2 02:17:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":278}],"result":true,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 02:17:47 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":277,"itemCardId":278} 

 Player 2 02:17:47 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[68,36,133,28,81,111,120,141,16,14,100,89,65,84,127,113,66,131,54,51,80,17,61,7,26,124,112,96,47,85,67,102,50,19,8,87,9,97,118,46,41,64,88,23,94,86,22,25,77,79,107,95,140,13,34,10,11,91,132,99,139,103,39,37,125,93,55,29,62,135,129,30,69,42,92,142,75,104,43,105,72,76,101,110,82,57,130,122,70,44,73,53,114,48,33,115,121,63,52,136,90,20,49,35,83,45,21,138,137,40,31,74,123,71,128,116,59,15,32,109,58,56,18,24,98,27,12,126,119,117,38,60,106,78,134,108]} 

 Player 2 02:17:47 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[268,236,261,270,253,264,238,241,232,266,251,244,275,229,226,267,259,276,223,243,235,233,257,248,272,262,271,230,263,242,254,240,255,269,246,273,274,234,227,249,256,225,231,237,245,252,228,265,224,258,239,247,260,250]} 

 Player 2 02:17:47 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[215,168,186,147,162,170,188,220,197,176,169,218,146,163,152,153,164,167,193,157,189,185,183,175,209,161,179,204,154,201,191,166,200,190,195,174,181,158,219,177,180,208,213,211,160,178,150,206,207,196,217,194,187,205,214,171,202,155,184,212,156,192,173,198,199,165,149,151,182,216,145,159,148,210,203]} 

 Player 2 02:17:47 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:17:47 $FLIP_CARD:  
{"cardId":203} 

 Player 2 02:17:47 $ADD_STORE_CARD:  
{"cardId":203} 

 Player 2 02:17:47 $DRAW_CARD:  
{"deckType":5} 

 Player 2 02:17:47 $FLIP_CARD:  
{"cardId":210} 

 Player 2 02:17:47 $ADD_STORE_CARD:  
{"cardId":210} 

 Player 2 02:17:47 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:17:47 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":250} 

 Player 2 02:17:47 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:17:47 $FLIP_CARD:  
{"cardId":260} 

 Player 2 02:17:47 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":260} 

 Player 2 02:17:47 $NEW_MONSTER_ON_PLACE:  
{"cardId":260,"monsterPlaceId":1} 

 Player 2 02:17:47 $DRAW_CARD:  
{"deckType":2} 

 Player 2 02:17:47 $FLIP_CARD:  
{"cardId":247} 

 Player 2 02:17:47 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":247} 

 Player 2 02:17:47 $NEW_MONSTER_ON_PLACE:  
{"cardId":247,"monsterPlaceId":2} 

 Player 2 02:17:47 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 02:17:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 02:17:47 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:47 $MOVE_CARD:  
{"moveIndex":1,"cardId":108,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:47 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":172}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 02:17:48 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":108,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":108} 

 Player 2 02:17:48 $FLIP_CARD:  
{"cardId":108} 

 Player 2 02:17:48 $FLIP_CARD:  
{"cardId":108} 

 Player 2 02:17:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":108} 

 Player 2 02:17:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:48 $MOVE_CARD:  
{"moveIndex":2,"cardId":134,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:48 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":134,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:48 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":134} 

 Player 2 02:17:48 $FLIP_CARD:  
{"cardId":134} 

 Player 2 02:17:48 $FLIP_CARD:  
{"cardId":134} 

 Player 2 02:17:48 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":134} 

 Player 2 02:17:48 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:48 $MOVE_CARD:  
{"moveIndex":3,"cardId":78,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:49 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":78,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:49 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":78} 

 Player 2 02:17:49 $FLIP_CARD:  
{"cardId":78} 

 Player 2 02:17:49 $FLIP_CARD:  
{"cardId":78} 

 Player 2 02:17:49 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":78} 

 Player 2 02:17:49 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 02:17:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 02:17:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:49 $MOVE_CARD:  
{"moveIndex":4,"cardId":106,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:49 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":106,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:49 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":106} 

 Player 2 02:17:49 $FLIP_CARD:  
{"cardId":106} 

 Player 2 02:17:49 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":106} 

 Player 2 02:17:49 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:49 $MOVE_CARD:  
{"moveIndex":5,"cardId":60,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:50 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":60,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:50 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":60} 

 Player 2 02:17:50 $FLIP_CARD:  
{"cardId":60} 

 Player 2 02:17:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":60} 

 Player 2 02:17:50 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:50 $MOVE_CARD:  
{"moveIndex":6,"cardId":38,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:50 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":38,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:50 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":38} 

 Player 2 02:17:50 $FLIP_CARD:  
{"cardId":38} 

 Player 2 02:17:50 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":38} 

 Player 2 02:17:50 $GAME_HAS_STARTED:  

 Player 2 02:17:50 $SET_TURN:  
{"playerId":2} 

 Player 2 02:17:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:50 $NEXT_STACK_ID:  

 Player 2 02:17:50 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:17:50 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 2 02:17:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:17:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 2 02:17:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 02:17:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:17:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 2 02:17:51 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 02:17:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 02:17:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 02:17:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:51 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 02:17:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 02:17:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:17:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:17:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:51 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:17:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:51 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:17:51 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 02:17:51 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 02:17:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 02:17:51 $DRAW_CARD:  
{"deckType":1} 

 Player 2 02:17:51 $MOVE_CARD:  
{"moveIndex":7,"cardId":117,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 02:17:51 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":117,"flipIfFlipped":false,"playerId":2} 

 Player 2 02:17:51 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":117} 

 Player 2 02:17:52 $FLIP_CARD:  
{"cardId":117} 

 Player 2 02:17:52 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":117} 

 Player 2 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 02:17:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 2 02:17:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":277,"turnPlayerCardId":277,"stackEffectType":13}} 

 Player 2 02:17:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 02:17:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 02:17:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:17:52 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 02:17:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 02:17:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 02:17:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 02:17:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 02:17:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 02:17:52 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 02:17:52 $UPDATE_ACTIONS:  

 Player 2 02:17:54 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 02:17:54 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 1 02:18:31 $MOVE_CARD:  
{"moveIndex":8,"cardId":161,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Hand"} 

 Player 2 02:18:31 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":161,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:18:31 $REGISTER_PASSIVE_ITEM:  
{"cardId":161} 

 Player 1 02:18:31 $MOVE_CARD:  
{"moveIndex":9,"cardId":161,"placeID":1,"flipIfFlipped":true,"playerId":1,"placeType":"Desk"} 

 Player 2 02:18:32 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":161,"flipIfFlipped":true,"playerId":1} 

 Player 1 02:18:32 $ADD_AN_ITEM:  
{"playerId":1,"cardId":161,"isReward":true} 

 Player 1 02:18:32 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":161}],"result":true,"preventMethod":false,"methodScopeId":283,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 02:18:38 $SHOW_DECISION:  
{"startCardId":277,"endCardId":260} 

 Player 2 02:18:41 $NEXT_STACK_ID:  

 Player 2 02:18:41 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:41 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 2 02:18:42 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":260,"stackEffectType":4}} 

 Player 2 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 2 02:18:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":260,"stackEffectType":4}} 

 Player 2 02:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add DeclareAttack 2 "}} 

 Player 2 02:18:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 2 02:18:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":260,"stackEffectType":4}} 

 Player 2 02:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 02:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding DeclareAttack 2"},"childOfId":10} 

 Player 2 02:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 02:18:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 02:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 02:18:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:18:42 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 02:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 02:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve DeclareAttack 2 "}} 

 Player 2 02:18:42 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":260,"particleType":5} 

 Player 2 02:18:42 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":4,"originStackId":2},"isAfterActivation":true,"index":4} 

 Player 2 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 2 02:18:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":260,"stackEffectType":4}} 

 Player 2 02:18:42 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:42 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":260,"stackEffectType":4}} 

 Player 2 02:18:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve DeclareAttack 2  "}} 

 Player 2 02:18:42 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:43 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":277,"attackingPlayerCardId":277,"idOfCardBeingAttacked":260,"stackEffectType":4}} 

 Player 2 02:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve DeclareAttack 2"},"childOfId":15} 

 Player 2 02:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 02:18:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:18:43 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Red Host"} 

 Player 1 02:18:43 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 02:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 02:18:43 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 02:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 02:18:43 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 02:18:43 $NEXT_STACK_ID:  

 Player 2 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:43 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:43 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:43 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:43 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add AttackRoll 3 "}} 

 Player 2 02:18:44 $ROLL_DICE:  
{"playerId":2} 

 Player 1 02:18:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:44 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 02:18:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:44 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:44 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 02:18:45 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 02:18:45 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":5} 

 Player 2 02:18:45 $UPDATE_STACK_VIS:  
{"stackId":3,"text":"player rolled 5 vs Red Host<Monster>"} 

 Player 2 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster>"} 

 Player 2 02:18:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster>"} 

 Player 2 02:18:46 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding AttackRoll 3"},"childOfId":20} 

 Player 2 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 02:18:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 02:18:46 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:18:46 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:46 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 02:18:46 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Added 0 to original roll"}} 

 Player 2 02:18:46 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":3},{"type":2,"number":2},{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":false,"index":1} 

 Player 2 02:18:46 $NEXT_STACK_ID:  

 Player 2 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster>"} 

 Player 2 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 

 Player 2 02:18:46 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 

 Player 2 02:18:46 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14}} 

 Player 2 02:18:46 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Add ActivatePassiveEffect 4 "}} 

 Player 2 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 

 Player 2 02:18:46 $PUT_ON_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":false,"stackEffectType":14},"playerId":1,"originPlayerId":2} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:46 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[277],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:18:47 $END_PUT_ON_STACK:  
{"playerId":2} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird effect LookAtPlayerHand<LookAtPlayerHand>"} 

 Player 2 02:18:47 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Response Adding ActivatePassiveEffect 4"},"childOfId":26} 

 Player 2 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":26} 

 Player 2 02:18:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:18:47 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:18:47 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:18:47 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Wait For Response From Player 2 "},"childOfId":26} 

 Player 2 02:18:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:47 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 02:18:47 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 02:18:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Resolve ActivatePassiveEffect 4 "}} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:47 $DO_STACK_EFFECT:  
{"originPlayerId":2,"playerId":1,"currentStack":[{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260},{"effectCollectedData":{"effectTargets":[277],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"effectToDo":{"effectName":"LookAtPlayerHand","cardEffectNum":0,"cardPlayerId":1,"cardId":161,"effctType":0},"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 1 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:47 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":161,"particleType":6} 

 Player 2 02:18:49 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 1 02:18:49 $DISABLE_PARTICLE_EFFECT:  
{"cardId":161,"particleType":6} 

 Player 1 02:18:49 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":3}},{"type":2,"number":{"type":2,"number":2}},{"type":2,"number":{"type":2,"number":3}}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":false,"index":1},"isAfterActivation":false,"index":1} 

 Player 1 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:49 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[277],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 1 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:49 $FINISH_DO_STACK_EFFECT:  
{"playerId":2,"newStack":[{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260},{"effectCollectedData":{"effectTargets":[277],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":283,"effectCardPlayer":283},"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:49 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 5 vs Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:49 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:50 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:50 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 2 02:18:50 $REPLACE_STACK:  
{"currentStack":[{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260},{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}]} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:50 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 02:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Remove After Resolve ActivatePassiveEffect 4  "}} 

 Player 2 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:50 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":4,"creatorCardId":283,"hasLockingStackEffect":false,"cardActivatorId":1,"cardWithEffectId":161,"isAfterActivation":false,"index":1,"hasDataBeenCollectedYet":true,"stackEffectType":14}} 

 Player 2 02:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Response Remove After Resolve ActivatePassiveEffect 4"},"childOfId":31} 

 Player 2 02:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":31} 

 Player 2 02:18:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 02:18:50 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Wait For Response From Player 1 "},"childOfId":31} 

 Player 2 02:18:50 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:18:50 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster> \n2:Activate Dead Bird "} 

 Player 1 02:18:50 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 02:18:50 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 02:18:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Resolve AttackRoll 3 "}} 

 Player 2 02:18:51 $NEXT_STACK_ID:  

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":260,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":260,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:51 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:51 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":260,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}]} 

 Player 2 02:18:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":2,"number":2},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":1,"originStackId":3},"isAfterActivation":true,"index":1} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 2 02:18:51 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:51 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 2 02:18:51 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve AttackRoll 3  "}} 

 Player 2 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 2 02:18:51 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":277,"numberRolled":5,"rollingPlayerCardId":277,"stackEffectType":2,"attackedMonsterCardId":260}} 

 Player 2 02:18:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve AttackRoll 3"},"childOfId":36} 

 Player 2 02:18:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 02:18:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:51 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 02:18:51 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 02:18:51 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:18:51 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:51 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host \n2:Player 2 is rolling against Red Host<Monster>"} 

 Player 1 02:18:52 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:18:52 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 02:18:52 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 02:18:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve CombatDamage 5 "}} 

 Player 2 02:18:52 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Azazel will deal 1 combat damage to Red Host"} 

 Player 2 02:18:52 $MONSTER_GET_DAMAGED:  
{"cardId":260,"hpLeft":1,"damageDealerId":277} 

 Player 2 02:18:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":277}],"result":null,"preventMethod":false,"methodScopeId":260,"scopeIsPlayer":false,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 02:18:52 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":{"type":2,"number":{"type":2,"number":3}}},{"type":0,"number":277},{"type":0,"number":260}],"result":null,"preventMethod":false,"methodScopeId":277,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 

 Player 2 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 2 02:18:52 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":260,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:18:52 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:52 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":260,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:18:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve CombatDamage 5  "}} 

 Player 2 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:52 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":277,"entityToDoDamageCardId":277,"entityToTakeDamageCardId":260,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 02:18:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve CombatDamage 5"},"childOfId":41} 

 Player 2 02:18:52 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 02:18:52 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 02:18:52 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 2 02:18:52 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 1 02:18:52 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Red Host"} 

 Player 1 02:18:53 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 02:18:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 02:18:53 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 02:18:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 02:18:53 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 02:18:53 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 02:18:54 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 02:18:55 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 02:20:21 $MATCH: 