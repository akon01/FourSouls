"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("@ts-ioc/core");
const IAdvisor_1 = require("../IAdvisor");
const AopActions_1 = require("./AopActions");
/**
 * regist aspect action.
 *
 * @export
 * @class RegistAspectAction
 * @extends {ActionComposite}
 */
class RegistAspectAction extends core_1.ActionComposite {
    constructor() {
        super(AopActions_1.AopActions.registAspect);
    }
    working(container, data) {
        let type = data.targetType;
        let lifeScope = container.getLifeScope();
        let matchs = lifeScope.getClassDecorators(type, surm => surm.actions.includes(AopActions_1.AopActions.registAspect) && core_1.hasOwnClassMetadata(surm.name, type));
        let aspectMgr = container.get(IAdvisor_1.AdvisorToken);
        let raiseContainer = data.raiseContainer || container;
        matchs.forEach(surm => {
            let metadata = core_1.getOwnTypeMetadata(surm.name, type);
            if (Array.isArray(metadata) && metadata.length > 0) {
                metadata.forEach(meta => {
                    if (core_1.isClass(meta.type)) {
                        aspectMgr.add(meta.type, raiseContainer);
                    }
                });
            }
        });
    }
    static getClassAnnations() {
        return { "name": "RegistAspectAction", "params": { "constructor": [], "working": ["container", "data"] } };
    }
}
exports.RegistAspectAction = RegistAspectAction;

//# sourceMappingURL=../sourcemaps/actions/RegistAspectAction.js.map
