Start Log 

 Player 1 17:23:49 $MATCH:  

 Player 1 17:23:49 $START_GAME:  

 Player 2 17:23:49 $MOVE_TO_TABLE:  

 Player 1 17:23:49 $MOVE_TO_TABLE:  

 Player 2 17:23:57 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 17:23:58 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 17:23:58 $SET_CHAR:  
{"originPlayerId":2,"playerId":1,"charCardId":336,"itemCardId":337} 

 Player 1 17:23:58 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":336,"itemCardId":337} 

 Player 1 17:23:58 $SET_CHAR_END:  
{"playerId":2} 

 Player 2 17:23:58 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":348,"itemCardId":349} 

 Player 2 17:23:58 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[80,75,38,115,110,65,68,135,40,41,30,122,117,79,60,47,85,45,4,33,67,51,28,62,120,34,23,136,44,46,19,54,90,118,112,134,7,10,58,20,55,5,72,108,104,81,105,131,111,127,26,37,32,24,25,126,73,133,27,93,77,114,100,99,119,15,71,39,52,53,83,61,12,139,86,76,21,89,6,70,59,16,124,48,66,49,107,56,57,92,132,31,130,63,129,137,43,18,106,8,64,11,102,101,98,88,17,109,74,94,97,138,125,36,42,29,82,14,22,113,123,95,87,103,91,13,9,78,121,35,84,50,69,96,128,116]} 

 Player 2 17:23:58 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[266,294,306,327,228,329,236,318,280,278,274,251,249,253,272,256,227,304,295,234,239,244,313,322,243,241,262,263,290,314,285,281,275,310,328,267,289,269,309,246,258,297,287,301,232,245,257,307,326,283,324,308,252,270,319,291,259,300,305,264,235,303,325,286,311,292,323,282,316,254,299,265,260,296,298,268,277,293,279,242,288,273,248,315,229,320,231,276,247,284,233,250,240,317,238,271,230,261,321,302,255,312,237]} 

 Player 2 17:23:58 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[153,181,191,198,156,205,213,203,170,164,142,210,177,145,190,202,169,215,167,223,158,175,212,204,165,179,224,209,163,172,194,155,195,168,185,193,149,183,182,218,176,188,152,146,162,208,171,211,178,160,154,225,189,157,148,150,151,184,200,201,186,196,207,174,144,216,219,217,199,147,161,143,192,173,206,166,222,221,159,220,197,187,141,180,214]} 

 Player 2 17:23:58 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:23:58 $FLIP_CARD:  
{"cardId":214} 

 Player 2 17:23:58 $ADD_STORE_CARD:  
{"cardId":214} 

 Player 2 17:23:58 $DRAW_CARD:  
{"deckType":5} 

 Player 2 17:23:58 $FLIP_CARD:  
{"cardId":180} 

 Player 2 17:23:58 $ADD_STORE_CARD:  
{"cardId":180} 

 Player 2 17:23:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:23:58 $FLIP_CARD:  
{"cardId":237} 

 Player 2 17:23:58 $REGISTER_PASSIVE_ITEM:  
{"cardId":237} 

 Player 2 17:23:58 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":237} 

 Player 2 17:23:58 $NEW_MONSTER_ON_PLACE:  
{"cardId":237,"monsterPlaceId":1} 

 Player 2 17:23:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:23:58 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":312} 

 Player 2 17:23:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 17:23:58 $FLIP_CARD:  
{"cardId":255} 

 Player 2 17:23:58 $REGISTER_PASSIVE_ITEM:  
{"cardId":255} 

 Player 2 17:23:58 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":255} 

 Player 2 17:23:58 $NEW_MONSTER_ON_PLACE:  
{"cardId":255,"monsterPlaceId":2} 

 Player 2 17:23:58 $REGISTER_PASSIVE_ITEM:  
{"cardId":331} 

 Player 2 17:23:58 $REGISTER_PASSIVE_ITEM:  
{"cardId":332} 

 Player 2 17:23:58 $REGISTER_PASSIVE_ITEM:  
{"cardId":333} 

 Player 2 17:23:58 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 17:23:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":336,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:23:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:58 $MOVE_CARD:  
{"moveIndex":1,"cardId":116,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:59 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":116,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":116} 

 Player 2 17:23:59 $FLIP_CARD:  
{"cardId":116} 

 Player 2 17:23:59 $FLIP_CARD:  
{"cardId":116} 

 Player 2 17:23:59 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":116} 

 Player 2 17:23:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":116}],"result":null,"preventMethod":false,"methodScopeId":336,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 17:23:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:59 $MOVE_CARD:  
{"moveIndex":2,"cardId":128,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:23:59 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":128,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:23:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":128} 

 Player 2 17:23:59 $FLIP_CARD:  
{"cardId":128} 

 Player 2 17:23:59 $FLIP_CARD:  
{"cardId":128} 

 Player 2 17:23:59 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":128} 

 Player 2 17:23:59 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":128}],"result":null,"preventMethod":false,"methodScopeId":336,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 17:23:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:23:59 $MOVE_CARD:  
{"moveIndex":3,"cardId":96,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:24:00 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":96,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:24:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":96} 

 Player 2 17:24:00 $FLIP_CARD:  
{"cardId":96} 

 Player 2 17:24:00 $FLIP_CARD:  
{"cardId":96} 

 Player 2 17:24:00 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":96} 

 Player 2 17:24:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":96}],"result":null,"preventMethod":false,"methodScopeId":336,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 17:24:00 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 17:24:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 17:24:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:24:00 $MOVE_CARD:  
{"moveIndex":4,"cardId":69,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:24:00 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":69,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:24:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":69} 

 Player 2 17:24:00 $FLIP_CARD:  
{"cardId":69} 

 Player 2 17:24:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":69} 

 Player 2 17:24:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":69}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":6,"originStackId":-1},"isAfterActivation":true,"index":6} 

 Player 2 17:24:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:24:00 $MOVE_CARD:  
{"moveIndex":5,"cardId":50,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:24:01 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":50,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:24:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":50} 

 Player 2 17:24:01 $FLIP_CARD:  
{"cardId":50} 

 Player 2 17:24:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":50} 

 Player 2 17:24:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":50}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":7,"originStackId":-1},"isAfterActivation":true,"index":7} 

 Player 2 17:24:01 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:24:01 $MOVE_CARD:  
{"moveIndex":6,"cardId":84,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:24:01 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":84,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:24:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":84} 

 Player 2 17:24:01 $FLIP_CARD:  
{"cardId":84} 

 Player 2 17:24:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":84} 

 Player 2 17:24:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":84}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 17:24:01 $GAME_HAS_STARTED:  

 Player 2 17:24:01 $SET_TURN:  
{"playerId":2} 

 Player 2 17:24:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:24:01 $NEXT_STACK_ID:  

 Player 2 17:24:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 17:24:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 17:24:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:24:01 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 17:24:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add Start Turn Loot Draw 1 "}} 

 Player 2 17:24:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:24:04 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 17:24:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding Start Turn Loot Draw 1"},"childOfId":0} 

 Player 2 17:24:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 17:24:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:24:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 17:24:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:24:04 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:24:04 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:24:04 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:24:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve Start Turn Loot Draw 1 "}} 

 Player 2 17:24:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":1,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 17:24:05 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:24:05 $MOVE_CARD:  
{"moveIndex":7,"cardId":35,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:24:05 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":35,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:24:05 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":35} 

 Player 2 17:24:05 $FLIP_CARD:  
{"cardId":35} 

 Player 2 17:24:05 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":35} 

 Player 2 17:24:05 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":35}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":9,"originStackId":-1},"isAfterActivation":true,"index":9} 

 Player 2 17:24:05 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":1,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 17:24:05 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 17:24:05 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:24:05 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:24:05 $SHOW_STACK_EFFECT:  
{"effectId":1} 

 Player 2 17:24:08 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":1} 

 Player 2 17:24:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve Start Turn Loot Draw 1  "}} 

 Player 2 17:24:08 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 17:24:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve Start Turn Loot Draw 1"},"childOfId":5} 

 Player 2 17:24:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 17:24:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:24:08 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:24:08 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:24:08 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:24:08 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 17:24:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 17:24:08 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:24:08 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 17:24:08 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 17:24:08 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 17:24:08 $CLEAR_SE_VIS:  

 Player 2 17:24:08 $UPDATE_ACTIONS:  

 Player 2 17:24:22 $MOVE_CARD:  
{"moveIndex":8,"cardId":197,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Hand"} 

 Player 1 17:24:22 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":197,"flipIfFlipped":true,"playerId":2} 

 Player 2 17:24:22 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[153,181,191,198,156,205,213,203,170,164,142,210,177,145,190,202,169,215,167,223,158,175,212,204,165,179,224,209,163,172,194,155,195,168,185,193,149,183,182,218,176,188,152,146,162,208,171,211,178,160,154,225,189,157,148,150,151,184,200,201,186,196,207,174,144,216,219,217,199,147,161,143,192,173,206,166,222,221,159,220,187,141]} 

 Player 2 17:24:22 $REGISTER_PASSIVE_ITEM:  
{"cardId":197} 

 Player 2 17:24:22 $MOVE_CARD:  
{"moveIndex":9,"cardId":197,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 17:24:22 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":197,"flipIfFlipped":true,"playerId":2} 

 Player 2 17:24:22 $ADD_AN_ITEM:  
{"playerId":2,"cardId":197,"isReward":true} 

 Player 2 17:24:22 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":197}],"result":true,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 17:24:22 $NEXT_STACK_ID:  

 Player 2 17:24:22 $ADD_TO_STACK:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":348,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":197,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":197,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Polyphemus Effect GainStats<GainStats>"}} 

 Player 2 17:24:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"effectCollectedData":null,"entityId":2,"creatorCardId":348,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":197,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":197,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":false,"stackEffectType":14,"lable":"Activate Polyphemus Effect GainStats<GainStats>"}} 

 Player 2 17:24:22 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:24:22 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 17:24:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add Activate Passive Effect 2 "}} 

 Player 2 17:24:25 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 17:24:25 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[348],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":348,"effectCardPlayer":348},"entityId":2,"creatorCardId":348,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":197,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":197,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Polyphemus effect GainStats<GainStats>"}} 

 Player 2 17:24:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding Activate Passive Effect 2"},"childOfId":10} 

 Player 2 17:24:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 17:24:25 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:24:26 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 17:24:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 17:24:26 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:24:26 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:24:26 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:24:26 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:24:26 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 17:24:26 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 17:24:26 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve Activate Passive Effect 2 "}} 

 Player 2 17:24:26 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"effectCollectedData":{"effectTargets":[348],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":348,"effectCardPlayer":348},"entityId":2,"creatorCardId":348,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":197,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":197,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activate Polyphemus effect GainStats<GainStats>"}]} 

 Player 2 17:24:26 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":197,"particleType":6} 

 Player 2 17:24:28 $DISABLE_PARTICLE_EFFECT:  
{"cardId":197,"particleType":6} 

 Player 2 17:24:28 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":2,"isTemp":false} 

 Player 2 17:24:28 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  
{"playerId":2,"bonusToGain":-1,"isTemp":false} 

 Player 2 17:24:28 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":197}],"result":true,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":10,"originStackId":-1},"isAfterActivation":true,"index":10} 

 Player 2 17:24:28 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":2,"text":"Activated Polyphemus Effect"} 

 Player 2 17:24:28 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[348],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":348,"effectCardPlayer":348},"entityId":2,"creatorCardId":348,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":197,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":197,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Polyphemus Effect"}} 

 Player 2 17:24:28 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:24:28 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:24:28 $SHOW_STACK_EFFECT:  
{"effectId":2} 

 Player 2 17:24:31 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":2} 

 Player 2 17:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve Activate Passive Effect 2  "}} 

 Player 2 17:24:31 $REMOVE_FROM_STACK:  
{"stackEffect":{"effectCollectedData":{"effectTargets":[348],"chainEffectsData":[],"methodArgs":[],"isPassive":true,"terminateOriginal":false,"effectCardOwner":348,"effectCardPlayer":348},"entityId":2,"creatorCardId":348,"hasLockingStackEffect":false,"cardActivatorId":2,"cardWithEffectId":197,"effectToDo":{"effectName":"GainStats","cardEffectNum":0,"cardPlayerId":2,"cardId":197,"effctType":0},"isAfterActivation":true,"index":10,"hasDataBeenCollectedYet":true,"stackEffectType":14,"lable":"Activated Polyphemus Effect"}} 

 Player 2 17:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve Activate Passive Effect 2"},"childOfId":15} 

 Player 2 17:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 17:24:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:24:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:24:31 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:24:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:24:31 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 17:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 17:24:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:24:31 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 17:24:31 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 17:24:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 17:24:31 $CLEAR_SE_VIS:  

 Player 2 17:24:54 $NEXT_STACK_ID:  

 Player 2 17:24:54 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 17:24:54 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 17:24:54 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:24:54 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 17:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add Player Declare Attack On Monster 3 "}} 

 Player 2 17:24:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:24:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 17:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding Player Declare Attack On Monster 3"},"childOfId":20} 

 Player 2 17:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 17:24:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:24:57 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 17:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 17:24:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:24:57 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:24:57 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:24:57 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:24:57 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 17:24:57 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 17:24:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve Player Declare Attack On Monster 3 "}} 

 Player 2 17:24:57 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":3,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}]} 

 Player 2 17:24:57 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":237,"particleType":5} 

 Player 2 17:24:57 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":3,"text":"Player 2 Has Entered Battle with Carrion Queen"} 

 Player 2 17:24:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":11,"originStackId":3},"isAfterActivation":true,"index":11} 

 Player 2 17:24:57 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Carrion Queen"}} 

 Player 2 17:24:57 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:24:58 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:24:58 $SHOW_STACK_EFFECT:  
{"effectId":3} 

 Player 2 17:25:00 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":3} 

 Player 2 17:25:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve Player Declare Attack On Monster 3  "}} 

 Player 2 17:25:00 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Carrion Queen"}} 

 Player 2 17:25:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve Player Declare Attack On Monster 3"},"childOfId":25} 

 Player 2 17:25:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 17:25:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:00 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:00 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:00 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:01 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 17:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 17:25:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:01 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 17:25:01 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 17:25:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Stack Was Emptied "}} 

 Player 2 17:25:01 $CLEAR_SE_VIS:  

 Player 2 17:25:01 $NEXT_STACK_ID:  

 Player 2 17:25:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":348,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 17:25:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":348,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 17:25:01 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:25:01 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 17:25:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Add Player Attack Roll On Monster 4 "}} 

 Player 2 17:25:04 $ROLL_DICE:  
{"playerId":2} 

 Player 2 17:25:06 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":1} 

 Player 2 17:25:06 $UPDATE_STACK_VIS:  
{"stackId":4,"text":"player rolled 1 vs Carrion Queen<Monster>"} 

 Player 2 17:25:06 $SHOW_DICE_ROLL:  
{"stackId":4} 

 Player 2 17:25:09 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 rolled 1 vs Carrion Queen<Monster>"} 

 Player 2 17:25:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":348,"numberRolled":1,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 rolled 1 vs Carrion Queen<Monster>"}} 

 Player 2 17:25:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Adding Player Attack Roll On Monster 4"},"childOfId":30} 

 Player 2 17:25:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 17:25:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:09 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 17:25:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 17:25:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:09 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:09 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 17:25:09 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 17:25:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Resolve Player Attack Roll On Monster 4 "}} 

 Player 2 17:25:09 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":4,"creatorCardId":348,"numberRolled":1,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 rolled 1 vs Carrion Queen<Monster>"}]} 

 Player 2 17:25:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Added -1 to original roll"}} 

 Player 2 17:25:09 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Rolled 1 Against Carrion Queen<Monster> 4"} 

 Player 2 17:25:09 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":4,"text":"Player 2 Roll Miss"} 

 Player 2 17:25:09 $NEXT_STACK_ID:  

 Player 2 17:25:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:09 $CLEAR_SE_VIS:  

 Player 2 17:25:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen is going to hurt Samson"}} 

 Player 2 17:25:09 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":348,"numberRolled":1,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Miss"}} 

 Player 2 17:25:09 $REPLACE_STACK:  
{"currentStack":[{"entityId":5,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen is going to hurt Samson"},{"entityId":4,"creatorCardId":348,"numberRolled":1,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Miss"}]} 

 Player 2 17:25:09 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:25:09 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":12,"originStackId":4},"isAfterActivation":true,"index":12} 

 Player 2 17:25:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":348,"numberRolled":1,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Miss"}} 

 Player 2 17:25:09 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:25:09 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:25:09 $SHOW_STACK_EFFECT:  
{"effectId":4} 

 Player 2 17:25:12 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":4} 

 Player 2 17:25:12 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 17:25:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Remove After Resolve Player Attack Roll On Monster 4  "}} 

 Player 2 17:25:15 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":348,"numberRolled":1,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Miss"}} 

 Player 2 17:25:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Response Remove After Resolve Player Attack Roll On Monster 4"},"childOfId":36} 

 Player 2 17:25:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 2 "},"childOfId":36} 

 Player 2 17:25:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:15 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 17:25:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Wait For Response From Player 1 "},"childOfId":36} 

 Player 2 17:25:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:15 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:15 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:15 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:15 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 17:25:15 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 17:25:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Resolve Monster Combat Damage To A Player 5 "}} 

 Player 2 17:25:15 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":5,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen is going to hurt Samson"}]} 

 Player 2 17:25:15 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Carrion Queen Is Going To Hurt Samson For 1 DMG "} 

 Player 2 17:25:15 $UPDATE_STACK_VIS:  
{"stackId":5,"text":"Carrion Queen will deal 1 combat damage to Samson"} 

 Player 2 17:25:15 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":5,"text":"Carrion Queen will deal 1 combat damage to Samson"} 

 Player 2 17:25:15 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":237} 

 Player 2 17:25:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":237},{"type":2,"number":true}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":13,"originStackId":-1},"isAfterActivation":true,"index":13} 

 Player 2 17:25:16 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":14,"originStackId":5},"isAfterActivation":true,"index":14} 

 Player 2 17:25:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen will deal 1 combat damage to Samson"}} 

 Player 2 17:25:16 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:25:16 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:25:16 $SHOW_STACK_EFFECT:  
{"effectId":5} 

 Player 2 17:25:18 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":5} 

 Player 2 17:25:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Remove After Resolve Monster Combat Damage To A Player 5  "}} 

 Player 2 17:25:18 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen will deal 1 combat damage to Samson"}} 

 Player 2 17:25:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 5"},"childOfId":41} 

 Player 2 17:25:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 1 "},"childOfId":41} 

 Player 2 17:25:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:19 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 17:25:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Wait For Response From Player 2 "},"childOfId":41} 

 Player 2 17:25:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:19 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 17:25:19 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 17:25:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Stack Was Emptied "}} 

 Player 2 17:25:19 $CLEAR_SE_VIS:  

 Player 2 17:25:21 $NEXT_STACK_ID:  

 Player 2 17:25:21 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":348,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 17:25:21 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":348,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 17:25:21 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:25:21 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 17:25:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Add Player Attack Roll On Monster 6 "}} 

 Player 2 17:25:24 $ROLL_DICE:  
{"playerId":2} 

 Player 2 17:25:26 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":4} 

 Player 2 17:25:26 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 4 vs Carrion Queen<Monster>"} 

 Player 2 17:25:26 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 17:25:29 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 rolled 4 vs Carrion Queen<Monster>"} 

 Player 2 17:25:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":348,"numberRolled":4,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 rolled 4 vs Carrion Queen<Monster>"}} 

 Player 2 17:25:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Response Adding Player Attack Roll On Monster 6"},"childOfId":46} 

 Player 2 17:25:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 2 "},"childOfId":46} 

 Player 2 17:25:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:29 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 17:25:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Wait For Response From Player 1 "},"childOfId":46} 

 Player 2 17:25:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:29 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:29 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:29 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:29 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 17:25:29 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 17:25:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Resolve Player Attack Roll On Monster 6 "}} 

 Player 2 17:25:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":6,"creatorCardId":348,"numberRolled":4,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 rolled 4 vs Carrion Queen<Monster>"}]} 

 Player 2 17:25:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Added -1 to original roll"}} 

 Player 2 17:25:29 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Rolled 1 Against Carrion Queen<Monster> 4"} 

 Player 2 17:25:29 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":6,"text":"Player 2 Roll Miss"} 

 Player 2 17:25:29 $NEXT_STACK_ID:  

 Player 2 17:25:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:29 $CLEAR_SE_VIS:  

 Player 2 17:25:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen is going to hurt Samson"}} 

 Player 2 17:25:29 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":348,"numberRolled":4,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Miss"}} 

 Player 2 17:25:29 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen is going to hurt Samson"},{"entityId":6,"creatorCardId":348,"numberRolled":4,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Miss"}]} 

 Player 2 17:25:29 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:25:29 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":15,"originStackId":6},"isAfterActivation":true,"index":15} 

 Player 2 17:25:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":348,"numberRolled":4,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Miss"}} 

 Player 2 17:25:29 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:25:29 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:25:29 $SHOW_STACK_EFFECT:  
{"effectId":6} 

 Player 2 17:25:32 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":6} 

 Player 2 17:25:32 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 17:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Remove After Resolve Player Attack Roll On Monster 6  "}} 

 Player 2 17:25:35 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":348,"numberRolled":4,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Miss"}} 

 Player 2 17:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Response Remove After Resolve Player Attack Roll On Monster 6"},"childOfId":52} 

 Player 2 17:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 2 "},"childOfId":52} 

 Player 2 17:25:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:35 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 17:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Wait For Response From Player 1 "},"childOfId":52} 

 Player 2 17:25:35 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:35 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:35 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:35 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:35 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 17:25:35 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 17:25:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Resolve Monster Combat Damage To A Player 7 "}} 

 Player 2 17:25:35 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":7,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen is going to hurt Samson"}]} 

 Player 2 17:25:35 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Carrion Queen Is Going To Hurt Samson For 1 DMG "} 

 Player 2 17:25:35 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Carrion Queen will deal 1 combat damage to Samson"} 

 Player 2 17:25:35 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":7,"text":"Carrion Queen will deal 1 combat damage to Samson"} 

 Player 2 17:25:35 $PLAYER_GET_HIT:  
{"playerId":2,"damage":1,"damageDealerId":237} 

 Player 2 17:25:36 $NEXT_STACK_ID:  

 Player 2 17:25:36 $CLEAR_SE_VIS:  

 Player 2 17:25:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen will deal 1 combat damage to Samson"}} 

 Player 2 17:25:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":348,"playerToDieCardId":348,"stackEffectType":15,"killerId":237,"lable":"Player 2 Is About To Die"}} 

 Player 2 17:25:36 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen will deal 1 combat damage to Samson"},{"entityId":8,"creatorCardId":348,"playerToDieCardId":348,"stackEffectType":15,"killerId":237,"lable":"Player 2 Is About To Die"}]} 

 Player 2 17:25:36 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":348,"playerToDieCardId":348,"stackEffectType":15,"killerId":237,"lable":"Player 2 Is About To Die"}} 

 Player 2 17:25:36 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:25:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":237},{"type":2,"number":false}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":16,"originStackId":-1},"isAfterActivation":true,"index":16} 

 Player 2 17:25:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_TAKEN","args":[{"type":2,"number":1},{"type":2,"number":1},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":17,"originStackId":7},"isAfterActivation":true,"index":17} 

 Player 2 17:25:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:25:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:25:36 $SHOW_STACK_EFFECT:  
{"effectId":7} 

 Player 2 17:25:38 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":7} 

 Player 2 17:25:38 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 17:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Remove After Resolve Monster Combat Damage To A Player 7  "}} 

 Player 2 17:25:41 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":348,"entityToDoDamageCardId":237,"entityToTakeDamageCardId":348,"isMonsterDoDamage":true,"isPlayerTakeDamage":true,"isMonsterTakeDamage":false,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":1,"lable":"Carrion Queen will deal 1 combat damage to Samson"}} 

 Player 2 17:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 7"},"childOfId":57} 

 Player 2 17:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":57} 

 Player 2 17:25:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:41 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 17:25:41 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Wait For Response From Player 1 "},"childOfId":57} 

 Player 2 17:25:41 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:41 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:42 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:42 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:42 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 17:25:42 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 17:25:42 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":61,"_text":"Resolve Player Death 8 "}} 

 Player 2 17:25:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":8,"creatorCardId":348,"playerToDieCardId":348,"stackEffectType":15,"killerId":237,"lable":"Player 2 Is About To Die"}]} 

 Player 2 17:25:42 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":8,"text":"Player 2 Has Died"} 

 Player 2 17:25:42 $DISABLE_PARTICLE_EFFECT:  
{"cardId":237,"particleType":5} 

 Player 2 17:25:42 $CANCEL_ATTACK:  

 Player 2 17:25:42 $NEXT_STACK_ID:  

 Player 2 17:25:42 $CLEAR_SE_VIS:  

 Player 2 17:25:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":8,"creatorCardId":348,"playerToDieCardId":348,"stackEffectType":15,"killerId":237,"lable":"Player 2 Has Died"}} 

 Player 2 17:25:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":348,"playerToPayCardId":348,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}} 

 Player 2 17:25:42 $REPLACE_STACK:  
{"currentStack":[{"entityId":8,"creatorCardId":348,"playerToDieCardId":348,"stackEffectType":15,"killerId":237,"lable":"Player 2 Has Died"},{"entityId":9,"creatorCardId":348,"playerToPayCardId":348,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}]} 

 Player 2 17:25:42 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":9,"creatorCardId":348,"playerToPayCardId":348,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}} 

 Player 2 17:25:42 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:25:42 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:42 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":8,"creatorCardId":348,"playerToDieCardId":348,"stackEffectType":15,"killerId":237,"lable":"Player 2 Has Died"}} 

 Player 2 17:25:42 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:25:42 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:25:42 $SHOW_STACK_EFFECT:  
{"effectId":8} 

 Player 2 17:25:45 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":8} 

 Player 2 17:25:45 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 17:25:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":62,"_text":"Remove After Resolve Player Death 8  "}} 

 Player 2 17:25:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":8,"creatorCardId":348,"playerToDieCardId":348,"stackEffectType":15,"killerId":237,"lable":"Player 2 Has Died"}} 

 Player 2 17:25:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":63,"_text":"Response Remove After Resolve Player Death 8"},"childOfId":62} 

 Player 2 17:25:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":64,"_text":"Wait For Response From Player 2 "},"childOfId":62} 

 Player 2 17:25:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:48 $ACTION_MASSAGE_REMOVE:  
{"id":64} 

 Player 2 17:25:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":65,"_text":"Wait For Response From Player 1 "},"childOfId":62} 

 Player 2 17:25:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:48 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:48 $ACTION_MASSAGE_REMOVE:  
{"id":65} 

 Player 2 17:25:48 $ACTION_MASSAGE_REMOVE:  
{"id":63} 

 Player 2 17:25:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":66,"_text":"Resolve Player Death Penalties 9 "}} 

 Player 2 17:25:48 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":9,"creatorCardId":348,"playerToPayCardId":348,"stackEffectType":16,"lable":"Player 2 Is About To Pay Death Penalties"}]} 

 Player 2 17:25:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":67,"_text":"Player 2 pays Penalties"}} 

 Player 2 17:25:48 $SET_MONEY:  
{"playerId":2,"numOfCoins":2} 

 Player 2 17:25:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":-1}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":18,"originStackId":-1},"isAfterActivation":true,"index":18} 

 Player 2 17:25:48 $SHOW_ANNOUNCEMENT:  
{"text":"Player 2 is Choosing Target"} 

 Player 2 17:25:50 $HIDE_ANNOUNCEMENT:  

 Player 2 17:25:50 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":35} 

 Player 2 17:25:50 $MOVE_CARD:  
{"moveIndex":10,"cardId":35,"placeID":353,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 17:25:51 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":35,"flipIfFlipped":true,"playerId":2} 

 Player 2 17:25:51 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":35} 

 Player 2 17:25:51 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":197}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 17:25:51 $NEXT_STACK_ID:  

 Player 2 17:25:51 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":10,"text":"Activate Polyphemus effect GainStats<GainStats>"} 

 Player 2 17:25:51 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":197,"particleType":6} 

 Player 2 17:25:53 $DISABLE_PARTICLE_EFFECT:  
{"cardId":197,"particleType":6} 

 Player 2 17:25:53 $PLAYER_GAIN_DMG:  
{"playerId":2,"DMGToGain":-2,"isTemp":false} 

 Player 2 17:25:53 $PLAYER_GAIN_ATTACK_ROLL_BONUS:  
{"playerId":2,"bonusToGain":1,"isTemp":false} 

 Player 2 17:25:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":197}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":false,"index":1} 

 Player 2 17:25:53 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":10,"text":"Activated Polyphemus Effect"} 

 Player 2 17:25:53 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":68,"_text":"Resolve Player Death Penalties 9 "}} 

 Player 2 17:25:53 $REMOVE_FROM_PASSIVE_MANAGER:  
{"cardId":197} 

 Player 2 17:25:53 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_LOSE_ITEM","args":[{"type":0,"number":197}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 17:25:53 $MOVE_CARD:  
{"moveIndex":11,"cardId":197,"placeID":355,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 17:25:53 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":197,"flipIfFlipped":true,"playerId":2} 

 Player 2 17:25:53 $MOVE_CARD_TO_PILE:  
{"type":5,"cardId":197} 

 Player 2 17:25:53 $USE_ITEM:  
{"cardId":348} 

 Player 2 17:25:53 $USE_ITEM:  
{"cardId":349} 

 Player 2 17:25:53 $PLAYER_DIED:  
{"playerId":2} 

 Player 2 17:25:53 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":9,"text":"Player 2 Paid Death Penalties"} 

 Player 2 17:25:53 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":9,"creatorCardId":348,"playerToPayCardId":348,"stackEffectType":16,"lable":"Player 2 Paid Death Penalties"}} 

 Player 2 17:25:53 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:25:53 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:25:53 $SHOW_STACK_EFFECT:  
{"effectId":9} 

 Player 2 17:25:56 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":9} 

 Player 2 17:25:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":69,"_text":"Remove After Resolve Player Death Penalties 9  "}} 

 Player 2 17:25:56 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":9,"creatorCardId":348,"playerToPayCardId":348,"stackEffectType":16,"lable":"Player 2 Paid Death Penalties"}} 

 Player 2 17:25:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":70,"_text":"Response Remove After Resolve Player Death Penalties 9"},"childOfId":69} 

 Player 2 17:25:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":71,"_text":"Wait For Response From Player 1 "},"childOfId":69} 

 Player 2 17:25:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:25:56 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:25:56 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:25:56 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:25:56 $ACTION_MASSAGE_REMOVE:  
{"id":71} 

 Player 2 17:25:56 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":72,"_text":"Wait For Response From Player 2 "},"childOfId":69} 

 Player 2 17:25:56 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:56 $ACTION_MASSAGE_REMOVE:  
{"id":72} 

 Player 2 17:25:57 $ACTION_MASSAGE_REMOVE:  
{"id":70} 

 Player 2 17:25:57 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":73,"_text":"Stack Was Emptied "}} 

 Player 2 17:25:57 $CLEAR_SE_VIS:  

 Player 2 17:25:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:25:57 $CLEAR_SE_VIS:  

 Player 2 17:25:57 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 2 17:25:57 $CLEAR_SE_VIS:  

 Player 2 17:25:57 $END_TURN:  

 Player 2 17:25:57 $SET_TURN:  
{"playerId":1} 

 Player 2 17:25:57 $START_TURN:  
{"playerId":1} 

 Player 1 17:25:57 $STACK_EMPTIED:  
{"playerId":2} 

 Player 1 17:25:57 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:25:57 $NEXT_STACK_ID:  

 Player 1 17:25:57 $ADD_TO_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":336,"turnPlayerCardId":336,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 17:25:57 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":11,"creatorCardId":336,"turnPlayerCardId":336,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 17:25:57 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 1 17:25:57 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 2 17:25:57 $STACK_EMPTIED:  
{"playerId":1} 

 Player 1 17:25:57 $CLEAR_SE_VIS:  

 Player 1 17:26:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":74,"_text":"Add Start Turn Loot Draw 11 "}} 

 Player 1 17:26:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:00 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":336,"turnPlayerCardId":336,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}} 

 Player 1 17:26:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":75,"_text":"Response Adding Start Turn Loot Draw 11"},"childOfId":74} 

 Player 1 17:26:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":76,"_text":"Wait For Response From Player 1 "},"childOfId":74} 

 Player 1 17:26:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:00 $ACTION_MASSAGE_REMOVE:  
{"id":76} 

 Player 1 17:26:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":77,"_text":"Wait For Response From Player 2 "},"childOfId":74} 

 Player 1 17:26:00 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:26:00 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:26:00 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 17:26:00 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:26:00 $ACTION_MASSAGE_REMOVE:  
{"id":77} 

 Player 1 17:26:00 $ACTION_MASSAGE_REMOVE:  
{"id":75} 

 Player 1 17:26:00 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":78,"_text":"Resolve Start Turn Loot Draw 11 "}} 

 Player 1 17:26:00 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":11,"creatorCardId":336,"turnPlayerCardId":336,"stackEffectType":13,"lable":"Player 1 Is About To Loot For Start Turn"}]} 

 Player 1 17:26:00 $DRAW_CARD:  
{"deckType":1} 

 Player 1 17:26:00 $MOVE_CARD:  
{"moveIndex":12,"cardId":121,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":1,"placeType":"Hand"} 

 Player 2 17:26:00 $MOVE_CARD_END:  
{"moveIndex":12,"cardId":121,"flipIfFlipped":false,"playerId":1} 

 Player 1 17:26:00 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":121} 

 Player 1 17:26:00 $FLIP_CARD:  
{"cardId":121} 

 Player 1 17:26:01 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":121} 

 Player 1 17:26:01 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":121}],"result":null,"preventMethod":false,"methodScopeId":336,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 17:26:01 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":11,"text":"Player 1 Has Drawn Loot For Start Turn"} 

 Player 1 17:26:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":11,"creatorCardId":336,"turnPlayerCardId":336,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 17:26:01 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 1 17:26:01 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 1 17:26:01 $SHOW_STACK_EFFECT:  
{"effectId":11} 

 Player 1 17:26:03 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":11} 

 Player 1 17:26:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":79,"_text":"Remove After Resolve Start Turn Loot Draw 11  "}} 

 Player 1 17:26:04 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":11,"creatorCardId":336,"turnPlayerCardId":336,"stackEffectType":13,"lable":"Player 1 Has Drawn Loot For Start Turn"}} 

 Player 1 17:26:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":80,"_text":"Response Remove After Resolve Start Turn Loot Draw 11"},"childOfId":79} 

 Player 1 17:26:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":81,"_text":"Wait For Response From Player 2 "},"childOfId":79} 

 Player 1 17:26:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 1 17:26:04 $GET_REACTION:  
{"playerId":2,"activePlayerId":1} 

 Player 2 17:26:04 $HIDE_REACTIONS:  
{"playerId":2,"cardsIds":[]} 

 Player 2 17:26:04 $RESPOND_TO:  
{"playerId":1,"stackEffectResponse":false} 

 Player 1 17:26:04 $ACTION_MASSAGE_REMOVE:  
{"id":81} 

 Player 1 17:26:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":82,"_text":"Wait For Response From Player 1 "},"childOfId":79} 

 Player 1 17:26:04 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:04 $ACTION_MASSAGE_REMOVE:  
{"id":82} 

 Player 1 17:26:04 $ACTION_MASSAGE_REMOVE:  
{"id":80} 

 Player 1 17:26:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":83,"_text":"Stack Was Emptied "}} 

 Player 1 17:26:04 $CLEAR_SE_VIS:  

 Player 1 17:26:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 1 17:26:06 $CLEAR_SE_VIS:  

 Player 1 17:26:06 $REPLACE_STACK:  
{"currentStack":[]} 

 Player 1 17:26:06 $CLEAR_SE_VIS:  

 Player 1 17:26:06 $END_TURN:  

 Player 1 17:26:06 $SET_TURN:  
{"playerId":2} 

 Player 1 17:26:06 $START_TURN:  
{"playerId":2} 

 Player 2 17:26:06 $STACK_EMPTIED:  
{"playerId":1} 

 Player 2 17:26:06 $RECHARGE_ITEM:  
{"cardId":348} 

 Player 2 17:26:06 $RECHARGE_ITEM:  
{"cardId":349} 

 Player 2 17:26:06 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:06 $NEXT_STACK_ID:  

 Player 2 17:26:06 $ADD_TO_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 17:26:06 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":12,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 17:26:06 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:26:06 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 1 17:26:06 $STACK_EMPTIED:  
{"playerId":2} 

 Player 2 17:26:06 $CLEAR_SE_VIS:  

 Player 2 17:26:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":84,"_text":"Add Start Turn Loot Draw 12 "}} 

 Player 2 17:26:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:09 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}} 

 Player 2 17:26:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":85,"_text":"Response Adding Start Turn Loot Draw 12"},"childOfId":84} 

 Player 2 17:26:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":86,"_text":"Wait For Response From Player 2 "},"childOfId":84} 

 Player 2 17:26:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:09 $ACTION_MASSAGE_REMOVE:  
{"id":86} 

 Player 2 17:26:09 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":87,"_text":"Wait For Response From Player 1 "},"childOfId":84} 

 Player 2 17:26:09 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:26:09 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:26:09 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:26:10 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:26:10 $ACTION_MASSAGE_REMOVE:  
{"id":87} 

 Player 2 17:26:10 $ACTION_MASSAGE_REMOVE:  
{"id":85} 

 Player 2 17:26:10 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":88,"_text":"Resolve Start Turn Loot Draw 12 "}} 

 Player 2 17:26:10 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":12,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Is About To Loot For Start Turn"}]} 

 Player 2 17:26:10 $DRAW_CARD:  
{"deckType":1} 

 Player 2 17:26:10 $MOVE_CARD:  
{"moveIndex":13,"cardId":78,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":-7.600000000000023,"y":-0.19999999999998863,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 17:26:10 $MOVE_CARD_END:  
{"moveIndex":13,"cardId":78,"flipIfFlipped":false,"playerId":2} 

 Player 2 17:26:10 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":78} 

 Player 2 17:26:10 $FLIP_CARD:  
{"cardId":78} 

 Player 2 17:26:10 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":78} 

 Player 2 17:26:10 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_GAIN_LOOT","args":[{"type":0,"number":78}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":19,"originStackId":-1},"isAfterActivation":true,"index":19} 

 Player 2 17:26:10 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":12,"text":"Player 2 Has Drawn Loot For Start Turn"} 

 Player 2 17:26:10 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":12,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 17:26:10 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:26:10 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:26:10 $SHOW_STACK_EFFECT:  
{"effectId":12} 

 Player 2 17:26:13 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":12} 

 Player 2 17:26:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":89,"_text":"Remove After Resolve Start Turn Loot Draw 12  "}} 

 Player 2 17:26:13 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":12,"creatorCardId":348,"turnPlayerCardId":348,"stackEffectType":13,"lable":"Player 2 Has Drawn Loot For Start Turn"}} 

 Player 2 17:26:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":90,"_text":"Response Remove After Resolve Start Turn Loot Draw 12"},"childOfId":89} 

 Player 2 17:26:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":91,"_text":"Wait For Response From Player 1 "},"childOfId":89} 

 Player 2 17:26:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:26:13 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:26:13 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:26:13 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":91} 

 Player 2 17:26:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":92,"_text":"Wait For Response From Player 2 "},"childOfId":89} 

 Player 2 17:26:13 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":92} 

 Player 2 17:26:13 $ACTION_MASSAGE_REMOVE:  
{"id":90} 

 Player 2 17:26:13 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":93,"_text":"Stack Was Emptied "}} 

 Player 2 17:26:13 $CLEAR_SE_VIS:  

 Player 2 17:26:15 $NEXT_STACK_ID:  

 Player 2 17:26:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 17:26:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":13,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 17:26:15 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:26:15 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 17:26:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":94,"_text":"Add Player Declare Attack On Monster 13 "}} 

 Player 2 17:26:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}} 

 Player 2 17:26:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":95,"_text":"Response Adding Player Declare Attack On Monster 13"},"childOfId":94} 

 Player 2 17:26:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":96,"_text":"Wait For Response From Player 2 "},"childOfId":94} 

 Player 2 17:26:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:18 $ACTION_MASSAGE_REMOVE:  
{"id":96} 

 Player 2 17:26:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":97,"_text":"Wait For Response From Player 1 "},"childOfId":94} 

 Player 2 17:26:18 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:26:18 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:26:18 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:26:18 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:26:18 $ACTION_MASSAGE_REMOVE:  
{"id":97} 

 Player 2 17:26:18 $ACTION_MASSAGE_REMOVE:  
{"id":95} 

 Player 2 17:26:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":98,"_text":"Resolve Player Declare Attack On Monster 13 "}} 

 Player 2 17:26:18 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":13,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 declared attack on Carrion Queen"}]} 

 Player 2 17:26:18 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":237,"particleType":5} 

 Player 2 17:26:18 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":13,"text":"Player 2 Has Entered Battle with Carrion Queen"} 

 Player 2 17:26:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":20,"originStackId":13},"isAfterActivation":true,"index":20} 

 Player 2 17:26:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":13,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Carrion Queen"}} 

 Player 2 17:26:18 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:26:18 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:26:18 $SHOW_STACK_EFFECT:  
{"effectId":13} 

 Player 2 17:26:21 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":13} 

 Player 2 17:26:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":99,"_text":"Remove After Resolve Player Declare Attack On Monster 13  "}} 

 Player 2 17:26:21 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":13,"creatorCardId":348,"attackingPlayerCardId":348,"idOfCardBeingAttacked":237,"stackEffectType":4,"lable":"Player 2 Has Entered Battle with Carrion Queen"}} 

 Player 2 17:26:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":100,"_text":"Response Remove After Resolve Player Declare Attack On Monster 13"},"childOfId":99} 

 Player 2 17:26:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":101,"_text":"Wait For Response From Player 1 "},"childOfId":99} 

 Player 2 17:26:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:26:21 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:26:21 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:26:21 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:26:21 $ACTION_MASSAGE_REMOVE:  
{"id":101} 

 Player 2 17:26:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":102,"_text":"Wait For Response From Player 2 "},"childOfId":99} 

 Player 2 17:26:21 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:21 $ACTION_MASSAGE_REMOVE:  
{"id":102} 

 Player 2 17:26:21 $ACTION_MASSAGE_REMOVE:  
{"id":100} 

 Player 2 17:26:21 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":103,"_text":"Stack Was Emptied "}} 

 Player 2 17:26:21 $CLEAR_SE_VIS:  

 Player 2 17:26:22 $NEXT_STACK_ID:  

 Player 2 17:26:22 $ADD_TO_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":348,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 17:26:22 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":348,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 is rolling against Carrion Queen<Monster>"}} 

 Player 2 17:26:22 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:26:22 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 17:26:25 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":104,"_text":"Add Player Attack Roll On Monster 14 "}} 

 Player 2 17:26:25 $ROLL_DICE:  
{"playerId":2} 

 Player 2 17:26:26 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 17:26:26 $UPDATE_STACK_VIS:  
{"stackId":14,"text":"player rolled 6 vs Carrion Queen<Monster>"} 

 Player 2 17:26:26 $SHOW_DICE_ROLL:  
{"stackId":14} 

 Player 2 17:26:29 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":14,"text":"Player 2 rolled 6 vs Carrion Queen<Monster>"} 

 Player 2 17:26:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:29 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":348,"numberRolled":6,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 rolled 6 vs Carrion Queen<Monster>"}} 

 Player 2 17:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":105,"_text":"Response Adding Player Attack Roll On Monster 14"},"childOfId":104} 

 Player 2 17:26:29 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":106,"_text":"Wait For Response From Player 2 "},"childOfId":104} 

 Player 2 17:26:29 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:29 $ACTION_MASSAGE_REMOVE:  
{"id":106} 

 Player 2 17:26:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":107,"_text":"Wait For Response From Player 1 "},"childOfId":104} 

 Player 2 17:26:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:26:30 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:26:30 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:26:30 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:26:30 $ACTION_MASSAGE_REMOVE:  
{"id":107} 

 Player 2 17:26:30 $ACTION_MASSAGE_REMOVE:  
{"id":105} 

 Player 2 17:26:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":108,"_text":"Resolve Player Attack Roll On Monster 14 "}} 

 Player 2 17:26:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":14,"creatorCardId":348,"numberRolled":6,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 rolled 6 vs Carrion Queen<Monster>"}]} 

 Player 2 17:26:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":109,"_text":"Added 0 to original roll"}} 

 Player 2 17:26:30 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":14,"text":"Player 2 Rolled 6 Against Carrion Queen<Monster> 4"} 

 Player 2 17:26:30 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":14,"text":"Player 2 Roll Hit"} 

 Player 2 17:26:30 $NEXT_STACK_ID:  

 Player 2 17:26:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:30 $CLEAR_SE_VIS:  

 Player 2 17:26:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":15,"creatorCardId":348,"entityToDoDamageCardId":348,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Samson is going to hurt Carrion Queen"}} 

 Player 2 17:26:30 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":14,"creatorCardId":348,"numberRolled":6,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Hit"}} 

 Player 2 17:26:30 $REPLACE_STACK:  
{"currentStack":[{"entityId":15,"creatorCardId":348,"entityToDoDamageCardId":348,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Samson is going to hurt Carrion Queen"},{"entityId":14,"creatorCardId":348,"numberRolled":6,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Hit"}]} 

 Player 2 17:26:30 $SET_STACK_ICON:  
{"iconIndex":0} 

 Player 2 17:26:30 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":4}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":21,"originStackId":14},"isAfterActivation":true,"index":21} 

 Player 2 17:26:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":14,"creatorCardId":348,"numberRolled":6,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Hit"}} 

 Player 2 17:26:30 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:26:30 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:26:30 $SHOW_STACK_EFFECT:  
{"effectId":14} 

 Player 2 17:26:33 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":14} 

 Player 2 17:26:33 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 17:26:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":110,"_text":"Remove After Resolve Player Attack Roll On Monster 14  "}} 

 Player 2 17:26:36 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":14,"creatorCardId":348,"numberRolled":6,"rollingPlayerCardId":348,"stackEffectType":2,"attackedMonsterCardId":237,"lable":"Player 2 Roll Hit"}} 

 Player 2 17:26:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":111,"_text":"Response Remove After Resolve Player Attack Roll On Monster 14"},"childOfId":110} 

 Player 2 17:26:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":112,"_text":"Wait For Response From Player 2 "},"childOfId":110} 

 Player 2 17:26:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:36 $ACTION_MASSAGE_REMOVE:  
{"id":112} 

 Player 2 17:26:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":113,"_text":"Wait For Response From Player 1 "},"childOfId":110} 

 Player 2 17:26:36 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:26:36 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:26:36 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:26:36 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:26:36 $ACTION_MASSAGE_REMOVE:  
{"id":113} 

 Player 2 17:26:36 $ACTION_MASSAGE_REMOVE:  
{"id":111} 

 Player 2 17:26:36 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":114,"_text":"Resolve Monster Combat Damage To A Player 15 "}} 

 Player 2 17:26:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[{"entityId":15,"creatorCardId":348,"entityToDoDamageCardId":348,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Samson is going to hurt Carrion Queen"}]} 

 Player 2 17:26:36 $STACK_EFFECT_LABLE_CHANGE:  
{"stackId":15,"text":"Samson will deal 1 combat damage to Carrion Queen "} 

 Player 2 17:26:36 $UPDATE_STACK_VIS:  
{"stackId":15,"text":"Samson will deal 1 combat damage to Carrion Queen"} 

 Player 2 17:26:36 $MONSTER_GET_DAMAGED:  
{"cardId":237,"hpLeft":2,"damageDealerId":348} 

 Player 2 17:26:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":348},{"type":2}],"result":null,"preventMethod":false,"methodScopeId":237,"scopeIsPlayer":false,"index":22,"originStackId":-1},"isAfterActivation":true,"index":22} 

 Player 2 17:26:36 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":348},{"type":0,"number":237}],"result":null,"preventMethod":false,"methodScopeId":348,"scopeIsPlayer":true,"index":23,"originStackId":15},"isAfterActivation":true,"index":23} 

 Player 2 17:26:36 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":15,"creatorCardId":348,"entityToDoDamageCardId":348,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Samson will deal 1 combat damage to Carrion Queen "}} 

 Player 2 17:26:36 $UPDATE_RESOLVING_STACK_EFFECTS:  
{"stackEffects":[]} 

 Player 2 17:26:36 $SET_STACK_ICON:  
{"iconIndex":1} 

 Player 2 17:26:36 $SHOW_STACK_EFFECT:  
{"effectId":15} 

 Player 2 17:26:39 $REMOVE_SE_VIS_PREV:  
{"stackEffectId":15} 

 Player 2 17:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":115,"_text":"Remove After Resolve Monster Combat Damage To A Player 15  "}} 

 Player 2 17:26:39 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":15,"creatorCardId":348,"entityToDoDamageCardId":348,"entityToTakeDamageCardId":237,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3,"numberRolled":6,"lable":"Samson will deal 1 combat damage to Carrion Queen "}} 

 Player 2 17:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":116,"_text":"Response Remove After Resolve Monster Combat Damage To A Player 15"},"childOfId":115} 

 Player 2 17:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":117,"_text":"Wait For Response From Player 1 "},"childOfId":115} 

 Player 2 17:26:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 17:26:39 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 17:26:39 $HIDE_REACTIONS:  
{"playerId":1,"cardsIds":[336,337]} 

 Player 1 17:26:39 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 17:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":117} 

 Player 2 17:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":118,"_text":"Wait For Response From Player 2 "},"childOfId":115} 

 Player 2 17:26:39 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 17:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":118} 

 Player 2 17:26:39 $ACTION_MASSAGE_REMOVE:  
{"id":116} 

 Player 2 17:26:39 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":119,"_text":"Stack Was Emptied "}} 

 Player 2 17:26:39 $CLEAR_SE_VIS:  

 Player 2 17:27:17 $MATCH: 