Start Log 

 Player 1 00:43:48 $MATCH:  

 Player 1 00:43:49 $START_GAME:  

 Player 2 00:43:49 $MOVE_TO_TABLE:  

 Player 1 00:43:49 $MOVE_TO_TABLE:  

 Player 2 00:43:57 $FINISH_LOAD:  
{"id":2,"turnPlayerId":2} 

 Player 1 00:43:57 $FINISH_LOAD:  
{"id":1,"turnPlayerId":2} 

 Player 2 00:43:57 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":1,"charCardId":296,"itemCardId":297} 

 Player 2 00:43:57 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":283}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 2 00:43:57 $ASSIGN_CHAR_TO_PLAYER:  
{"playerId":2,"charCardId":282,"itemCardId":283} 

 Player 2 00:43:57 $DECK_ARRAGMENT:  
{"deckType":1,"arrangement":[82,48,80,68,37,17,70,108,50,91,62,47,112,102,114,11,142,138,12,41,69,83,55,23,27,101,117,136,130,78,54,19,53,109,76,95,43,103,124,81,122,88,36,74,132,93,64,111,94,31,59,131,45,10,71,97,115,39,7,99,87,21,58,20,13,118,30,28,98,14,15,51,139,46,100,84,125,42,33,128,57,66,110,16,106,22,126,140,123,72,26,61,29,129,38,9,40,89,119,113,60,133,90,73,49,92,24,135,65,35,75,32,104,25,63,120,121,52,96,79,67,107,8,56,137,116,77,18,85,141,34,127,134,44,86,105]} 

 Player 2 00:43:57 $DECK_ARRAGMENT:  
{"deckType":2,"arrangement":[244,260,269,264,240,261,232,259,230,236,242,278,266,250,276,279,234,231,239,258,280,246,249,238,252,272,257,265,256,267,247,270,241,248,277,228,271,237,273,243,235,251,262,275,254,263,268,281,229,233,253,274,245,255]} 

 Player 2 00:43:57 $DECK_ARRAGMENT:  
{"deckType":5,"arrangement":[145,165,153,191,221,224,169,192,146,174,219,164,212,172,154,183,190,147,175,170,173,179,184,209,162,151,214,185,189,186,198,196,188,210,222,220,193,176,160,207,203,225,197,202,157,217,199,168,201,208,187,166,155,167,205,223,182,194,215,206,218,149,150,177,156,195,158,180,181,159,204,216,178,200,163,152,148,213,161,171,211]} 

 Player 2 00:43:58 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:43:58 $FLIP_CARD:  
{"cardId":211} 

 Player 2 00:43:58 $ADD_STORE_CARD:  
{"cardId":211} 

 Player 2 00:43:58 $DRAW_CARD:  
{"deckType":5} 

 Player 2 00:43:58 $FLIP_CARD:  
{"cardId":171} 

 Player 2 00:43:58 $ADD_STORE_CARD:  
{"cardId":171} 

 Player 2 00:43:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:43:58 $DECK_ADD_TO_BOTTOM:  
{"deckType":2,"cardId":255} 

 Player 2 00:43:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:43:58 $FLIP_CARD:  
{"cardId":245} 

 Player 2 00:43:58 $ADD_MONSTER:  
{"monsterPlaceId":1,"monsterId":245} 

 Player 2 00:43:58 $NEW_MONSTER_ON_PLACE:  
{"cardId":245,"monsterPlaceId":1} 

 Player 2 00:43:58 $DRAW_CARD:  
{"deckType":2} 

 Player 2 00:43:58 $FLIP_CARD:  
{"cardId":274} 

 Player 2 00:43:58 $ADD_MONSTER:  
{"monsterPlaceId":2,"monsterId":274} 

 Player 2 00:43:58 $NEW_MONSTER_ON_PLACE:  
{"cardId":274,"monsterPlaceId":2} 

 Player 2 00:43:58 $SET_MONEY:  
{"playerId":1,"numOfCoins":3} 

 Player 2 00:43:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":2,"originStackId":-1},"isAfterActivation":true,"index":2} 

 Player 2 00:43:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:43:58 $MOVE_CARD:  
{"moveIndex":1,"cardId":105,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:43:58 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":297}],"result":true,"preventMethod":false,"methodScopeId":296,"scopeIsPlayer":true,"index":1,"originStackId":-1},"isAfterActivation":true,"index":1} 

 Player 1 00:43:58 $MOVE_CARD_END:  
{"moveIndex":1,"cardId":105,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:43:58 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":105} 

 Player 2 00:43:58 $FLIP_CARD:  
{"cardId":105} 

 Player 2 00:43:58 $FLIP_CARD:  
{"cardId":105} 

 Player 2 00:43:58 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":105} 

 Player 2 00:43:58 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:43:59 $MOVE_CARD:  
{"moveIndex":2,"cardId":86,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:43:59 $MOVE_CARD_END:  
{"moveIndex":2,"cardId":86,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:43:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":86} 

 Player 2 00:43:59 $FLIP_CARD:  
{"cardId":86} 

 Player 2 00:43:59 $FLIP_CARD:  
{"cardId":86} 

 Player 2 00:43:59 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":86} 

 Player 2 00:43:59 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:43:59 $MOVE_CARD:  
{"moveIndex":3,"cardId":44,"placeID":1,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:43:59 $MOVE_CARD_END:  
{"moveIndex":3,"cardId":44,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:43:59 $CARD_DRAWN:  
{"playerId":1,"deckType":1,"drawnCardId":44} 

 Player 2 00:43:59 $FLIP_CARD:  
{"cardId":44} 

 Player 2 00:43:59 $FLIP_CARD:  
{"cardId":44} 

 Player 2 00:43:59 $PLAYER_GET_LOOT:  
{"playerId":1,"cardId":44} 

 Player 2 00:43:59 $SET_MONEY:  
{"playerId":2,"numOfCoins":3} 

 Player 2 00:44:00 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":3}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":3,"originStackId":-1},"isAfterActivation":true,"index":3} 

 Player 2 00:44:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:44:00 $MOVE_CARD:  
{"moveIndex":4,"cardId":134,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:44:00 $MOVE_CARD_END:  
{"moveIndex":4,"cardId":134,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:44:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":134} 

 Player 2 00:44:00 $FLIP_CARD:  
{"cardId":134} 

 Player 2 00:44:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":134} 

 Player 2 00:44:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:44:00 $MOVE_CARD:  
{"moveIndex":5,"cardId":127,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:44:00 $MOVE_CARD_END:  
{"moveIndex":5,"cardId":127,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:44:00 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":127} 

 Player 2 00:44:00 $FLIP_CARD:  
{"cardId":127} 

 Player 2 00:44:00 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":127} 

 Player 2 00:44:00 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:44:00 $MOVE_CARD:  
{"moveIndex":6,"cardId":34,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:44:01 $MOVE_CARD_END:  
{"moveIndex":6,"cardId":34,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:44:01 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":34} 

 Player 2 00:44:01 $FLIP_CARD:  
{"cardId":34} 

 Player 2 00:44:01 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":34} 

 Player 2 00:44:01 $GAME_HAS_STARTED:  

 Player 2 00:44:01 $SET_TURN:  
{"playerId":2} 

 Player 2 00:44:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:01 $NEXT_STACK_ID:  

 Player 2 00:44:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:44:01 $ADD_TO_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 00:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:44:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 00:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":0,"_text":"Add StartTurnLoot 1 "}} 

 Player 2 00:44:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:44:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 00:44:01 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":1,"_text":"Response Adding StartTurnLoot 1"},"childOfId":0} 

 Player 2 00:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":2,"_text":"Wait For Response From Player 2 "},"childOfId":0} 

 Player 2 00:44:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:01 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:44:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":3,"_text":"Wait For Response From Player 1 "},"childOfId":0} 

 Player 2 00:44:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:01 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:02 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:44:02 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:44:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":4,"_text":"Resolve StartTurnLoot 1 "}} 

 Player 2 00:44:02 $DRAW_CARD:  
{"deckType":1} 

 Player 2 00:44:02 $MOVE_CARD:  
{"moveIndex":7,"cardId":141,"placeID":2,"flipIfFlipped":false,"firstPos":{"x":1,"y":-5,"z":0},"playerId":2,"placeType":"Hand"} 

 Player 1 00:44:02 $MOVE_CARD_END:  
{"moveIndex":7,"cardId":141,"flipIfFlipped":false,"playerId":2} 

 Player 2 00:44:02 $CARD_DRAWN:  
{"playerId":2,"deckType":1,"drawnCardId":141} 

 Player 2 00:44:02 $FLIP_CARD:  
{"cardId":141} 

 Player 2 00:44:02 $PLAYER_GET_LOOT:  
{"playerId":2,"cardId":141} 

 Player 2 00:44:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 2 00:44:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 00:44:02 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:44:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:02 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 00:44:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":5,"_text":"Remove After Resolve StartTurnLoot 1  "}} 

 Player 2 00:44:02 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":1,"creatorCardId":282,"turnPlayerCardId":282,"stackEffectType":13}} 

 Player 2 00:44:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":6,"_text":"Response Remove After Resolve StartTurnLoot 1"},"childOfId":5} 

 Player 2 00:44:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":7,"_text":"Wait For Response From Player 1 "},"childOfId":5} 

 Player 2 00:44:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 start turn loot"} 

 Player 1 00:44:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":7} 

 Player 2 00:44:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":8,"_text":"Wait For Response From Player 2 "},"childOfId":5} 

 Player 2 00:44:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":8} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":6} 

 Player 2 00:44:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":9,"_text":"Stack Was Emptied "}} 

 Player 2 00:44:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:44:03 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:44:03 $UPDATE_ACTIONS:  

 Player 2 00:44:04 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:44:05 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:44:12 $SHOW_DECISION:  
{"startCardId":34,"endCardId":34,"flipEndCard":true} 

 Player 2 00:44:15 $NEXT_STACK_ID:  

 Player 2 00:44:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 2 00:44:15 $ADD_TO_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":34,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 2 00:44:15 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":34,"lootPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":8}} 

 Player 2 00:44:15 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":10,"_text":"Add PlayLootCardStackEffect 2 "}} 

 Player 2 00:44:15 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":34} 

 Player 2 00:44:15 $MOVE_CARD:  
{"moveIndex":8,"cardId":34,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:44:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:15 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:15 $MOVE_CARD_END:  
{"moveIndex":8,"cardId":34,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:44:15 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":34} 

 Player 2 00:44:15 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14): addMoney"} 

 Player 2 00:44:15 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14): addMoney"} 

 Player 2 00:44:16 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":34,"lootPlayerId":2,"effectToDo":{"effectName":"addMoney","cardEffectNum":0,"cardPlayerId":2,"cardId":34,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:16 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:44:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":11,"_text":"Response Adding PlayLootCardStackEffect 2"},"childOfId":10} 

 Player 2 00:44:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":12,"_text":"Wait For Response From Player 2 "},"childOfId":10} 

 Player 2 00:44:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:16 $ACTION_MASSAGE_REMOVE:  
{"id":12} 

 Player 2 00:44:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":13,"_text":"Wait For Response From Player 1 "},"childOfId":10} 

 Player 2 00:44:16 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:16 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:16 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:16 $ACTION_MASSAGE_REMOVE:  
{"id":13} 

 Player 2 00:44:16 $ACTION_MASSAGE_REMOVE:  
{"id":11} 

 Player 2 00:44:16 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":14,"_text":"Resolve PlayLootCardStackEffect 2 "}} 

 Player 2 00:44:16 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14): addMoney"} 

 Player 2 00:44:16 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":34,"particleType":6} 

 Player 2 00:44:18 $DISABLE_PARTICLE_EFFECT:  
{"cardId":34,"particleType":6} 

 Player 2 00:44:18 $SET_MONEY:  
{"playerId":2,"numOfCoins":5} 

 Player 2 00:44:18 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_CHANGE_MONEY","args":[{"type":2,"number":2}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":4,"originStackId":-1},"isAfterActivation":true,"index":4} 

 Player 2 00:44:18 $REMOVE_FROM_PILE:  
{"cardId":34} 

 Player 2 00:44:18 $MOVE_CARD:  
{"moveIndex":9,"cardId":34,"placeID":301,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:44:18 $MOVE_CARD_END:  
{"moveIndex":9,"cardId":34,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:44:18 $MOVE_CARD_TO_PILE:  
{"type":1,"cardId":34} 

 Player 2 00:44:18 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14): addMoney"} 

 Player 2 00:44:18 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":34,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:18 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:44:18 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:18 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":34,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:18 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":15,"_text":"Remove After Resolve PlayLootCardStackEffect 2  "}} 

 Player 2 00:44:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:19 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":2,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":34,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":16,"_text":"Response Remove After Resolve PlayLootCardStackEffect 2"},"childOfId":15} 

 Player 2 00:44:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":17,"_text":"Wait For Response From Player 1 "},"childOfId":15} 

 Player 2 00:44:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:19 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:19 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play 2 Cents(14) "} 

 Player 1 00:44:19 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":17} 

 Player 2 00:44:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":18,"_text":"Wait For Response From Player 2 "},"childOfId":15} 

 Player 2 00:44:19 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":18} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":16} 

 Player 2 00:44:19 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":19,"_text":"Stack Was Emptied "}} 

 Player 2 00:44:19 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:44:19 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:44:20 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:44:21 $SHOW_DECISION:  
{"startCardId":282,"endCardId":282} 

 Player 2 00:44:21 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:44:24 $NEXT_STACK_ID:  

 Player 2 00:44:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 2 00:44:24 $ADD_TO_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 00:44:24 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 2 00:44:24 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"hasDataBeenCollectedYet":false,"stackEffectType":1}} 

 Player 2 00:44:24 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":20,"_text":"Add ActivateItem 3 "}} 

 Player 1 00:44:24 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:25 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 1 00:44:25 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 2 00:44:27 $SHOW_DECISION:  
{"startCardId":282,"endCardId":127,"flipEndCard":true} 

 Player 2 00:44:30 $USE_ITEM:  
{"cardId":282} 

 Player 2 00:44:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:30 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 2 00:44:30 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":21,"_text":"Response Adding ActivateItem 3"},"childOfId":20} 

 Player 2 00:44:30 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":22,"_text":"Wait For Response From Player 2 "},"childOfId":20} 

 Player 2 00:44:30 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:30 $ACTION_MASSAGE_REMOVE:  
{"id":22} 

 Player 2 00:44:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":23,"_text":"Wait For Response From Player 1 "},"childOfId":20} 

 Player 2 00:44:31 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:31 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 1 00:44:31 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 1 00:44:31 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:31 $ACTION_MASSAGE_REMOVE:  
{"id":23} 

 Player 2 00:44:31 $ACTION_MASSAGE_REMOVE:  
{"id":21} 

 Player 2 00:44:31 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":24,"_text":"Resolve ActivateItem 3 "}} 

 Player 2 00:44:31 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":282,"particleType":6} 

 Player 2 00:44:33 $DISABLE_PARTICLE_EFFECT:  
{"cardId":282,"particleType":6} 

 Player 2 00:44:33 $NEXT_STACK_ID:  

 Player 2 00:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 2 00:44:33 $PLAYER_LOSE_LOOT:  
{"playerId":2,"cardId":127} 

 Player 2 00:44:33 $MOVE_CARD:  
{"moveIndex":10,"cardId":127,"placeID":300,"flipIfFlipped":true,"playerId":2,"placeType":"Card"} 

 Player 1 00:44:33 $MOVE_CARD_END:  
{"moveIndex":10,"cardId":127,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:44:33 $MOVE_CARD_TO_PILE:  
{"type":7,"cardId":127} 

 Player 2 00:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket \n2:Player 2 activated Azazel"} 

 Player 2 00:44:33 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket \n2:Player 2 activated Azazel"} 

 Player 2 00:44:33 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":127,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":127,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket \n2:Player 2 activated Azazel"} 

 Player 2 00:44:33 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket \n2:Player 2 activated Azazel"} 

 Player 2 00:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":127,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":127,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket \n2:Player 2 activated Azazel"} 

 Player 2 00:44:33 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:44:33 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket \n2:Player 2 activated Azazel"} 

 Player 2 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket \n2:Player 2 activated Azazel"} 

 Player 2 00:44:34 $REPLACE_STACK:  
{"currentStack":[{"entityId":4,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":127,"lootPlayerId":2,"effectToDo":{"effectName":"AddTrinket","cardEffectNum":0,"cardPlayerId":2,"cardId":127,"effctType":1},"hasDataBeenCollectedYet":true,"stackEffectType":8},{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"effectToDoData":{"type":1,"index":0},"hasDataBeenCollectedYet":true,"stackEffectType":1}]} 

 Player 2 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket \n2:Player 2 activated Azazel"} 

 Player 2 00:44:34 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:44:34 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket"} 

 Player 2 00:44:34 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:44:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":25,"_text":"Remove After Resolve ActivateItem 3  "}} 

 Player 2 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket"} 

 Player 2 00:44:34 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":3,"creatorCardId":282,"hasLockingStackEffect":false,"itemToPlayCardId":282,"itemPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":1}} 

 Player 2 00:44:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":26,"_text":"Response Remove After Resolve ActivateItem 3"},"childOfId":25} 

 Player 2 00:44:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":27,"_text":"Wait For Response From Player 2 "},"childOfId":25} 

 Player 2 00:44:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:34 $ACTION_MASSAGE_REMOVE:  
{"id":27} 

 Player 2 00:44:34 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":28,"_text":"Wait For Response From Player 1 "},"childOfId":25} 

 Player 2 00:44:34 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:34 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 activated Azazel"} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm  \n2:Player 2 activated Azazel"} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm  \n2:Player 2 activated Azazel"} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm  \n2:Player 2 activated Azazel"} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm  \n2:Player 2 activated Azazel"} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm  \n2:Player 2 activated Azazel"} 

 Player 1 00:44:34 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm  \n2:Player 2 activated Azazel"} 

 Player 1 00:44:34 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:34 $ACTION_MASSAGE_REMOVE:  
{"id":28} 

 Player 2 00:44:34 $ACTION_MASSAGE_REMOVE:  
{"id":26} 

 Player 2 00:44:35 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":29,"_text":"Resolve PlayLootCardStackEffect 4 "}} 

 Player 2 00:44:35 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket"} 

 Player 2 00:44:35 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":127,"particleType":6} 

 Player 2 00:44:36 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:44:36 $DISABLE_PARTICLE_EFFECT:  
{"cardId":127,"particleType":6} 

 Player 2 00:44:36 $CARD_ADD_TRINKET:  
{"cardId":127,"playerId":2,"addMuiliEffect":false} 

 Player 2 00:44:37 $REMOVE_FROM_PILE:  
{"cardId":127} 

 Player 2 00:44:37 $REGISTER_PASSIVE_ITEM:  
{"cardId":127} 

 Player 2 00:44:37 $MOVE_CARD:  
{"moveIndex":11,"cardId":127,"placeID":2,"flipIfFlipped":true,"playerId":2,"placeType":"Desk"} 

 Player 1 00:44:37 $MOVE_CARD_END:  
{"moveIndex":11,"cardId":127,"flipIfFlipped":true,"playerId":2} 

 Player 2 00:44:37 $ADD_AN_ITEM:  
{"playerId":2,"cardId":127,"isReward":true} 

 Player 2 00:44:37 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ADD_ITEM","args":[{"type":0,"number":127}],"result":true,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":5,"originStackId":-1},"isAfterActivation":true,"index":5} 

 Player 2 00:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm: AddTrinket"} 

 Player 2 00:44:37 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":127,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:37 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:44:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:37 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":127,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":30,"_text":"Remove After Resolve PlayLootCardStackEffect 4  "}} 

 Player 2 00:44:37 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:37 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":4,"creatorCardId":282,"hasLockingStackEffect":false,"hasLockingStackEffectResolved":false,"lootToPlayCardId":127,"lootPlayerId":2,"hasDataBeenCollectedYet":true,"stackEffectType":8}} 

 Player 2 00:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":31,"_text":"Response Remove After Resolve PlayLootCardStackEffect 4"},"childOfId":30} 

 Player 2 00:44:37 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":32,"_text":"Wait For Response From Player 1 "},"childOfId":30} 

 Player 2 00:44:37 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:37 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:37 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:38 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 play Tape Worm "} 

 Player 1 00:44:38 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":32} 

 Player 2 00:44:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":33,"_text":"Wait For Response From Player 2 "},"childOfId":30} 

 Player 2 00:44:38 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":33} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":31} 

 Player 2 00:44:38 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":34,"_text":"Stack Was Emptied "}} 

 Player 2 00:44:38 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:44:38 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:44:39 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:44:40 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:44:44 $SHOW_DECISION:  
{"startCardId":282,"endCardId":245} 

 Player 2 00:44:47 $NEXT_STACK_ID:  

 Player 2 00:44:47 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 2 00:44:47 $ADD_TO_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":245,"stackEffectType":4}} 

 Player 2 00:44:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 2 00:44:47 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":245,"stackEffectType":4}} 

 Player 2 00:44:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":35,"_text":"Add DeclareAttack 5 "}} 

 Player 2 00:44:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:47 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 2 00:44:47 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":245,"stackEffectType":4}} 

 Player 2 00:44:47 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:44:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":36,"_text":"Response Adding DeclareAttack 5"},"childOfId":35} 

 Player 2 00:44:47 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":37,"_text":"Wait For Response From Player 2 "},"childOfId":35} 

 Player 2 00:44:47 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:48 $ACTION_MASSAGE_REMOVE:  
{"id":37} 

 Player 2 00:44:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":38,"_text":"Wait For Response From Player 1 "},"childOfId":35} 

 Player 2 00:44:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:48 $ACTION_MASSAGE_REMOVE:  
{"id":38} 

 Player 2 00:44:48 $ACTION_MASSAGE_REMOVE:  
{"id":36} 

 Player 2 00:44:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":39,"_text":"Resolve DeclareAttack 5 "}} 

 Player 2 00:44:48 $ACTIVATE_PARTICLE_EFFECT:  
{"cardId":245,"particleType":5} 

 Player 2 00:44:48 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_DECLARE_ATTACK","args":[],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":6,"originStackId":5},"isAfterActivation":true,"index":6} 

 Player 2 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 2 00:44:48 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":245,"stackEffectType":4}} 

 Player 2 00:44:48 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:48 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":245,"stackEffectType":4}} 

 Player 2 00:44:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":40,"_text":"Remove After Resolve DeclareAttack 5  "}} 

 Player 2 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:48 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":5,"creatorCardId":282,"attackingPlayerCardId":282,"idOfCardBeingAttacked":245,"stackEffectType":4}} 

 Player 2 00:44:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":41,"_text":"Response Remove After Resolve DeclareAttack 5"},"childOfId":40} 

 Player 2 00:44:48 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":42,"_text":"Wait For Response From Player 1 "},"childOfId":40} 

 Player 2 00:44:48 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:44:48 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2  declared attack on Fat Bat"} 

 Player 1 00:44:48 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:44:48 $ACTION_MASSAGE_REMOVE:  
{"id":42} 

 Player 2 00:44:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":43,"_text":"Wait For Response From Player 2 "},"childOfId":40} 

 Player 2 00:44:49 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":43} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":41} 

 Player 2 00:44:49 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":44,"_text":"Stack Was Emptied "}} 

 Player 2 00:44:49 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:44:49 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:44:50 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:44:51 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:44:55 $NEXT_STACK_ID:  

 Player 2 00:44:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:44:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 2 00:44:55 $ADD_TO_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}} 

 Player 2 00:44:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 2 00:44:55 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}} 

 Player 2 00:44:55 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":45,"_text":"Add AttackRoll 6 "}} 

 Player 2 00:44:55 $ROLL_DICE:  
{"playerId":2} 

 Player 1 00:44:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:55 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 1 00:44:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:44:55 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 2 00:44:58 $ROLL_DICE_ENDED:  
{"playerId":2,"numberRolled":6} 

 Player 2 00:44:58 $UPDATE_STACK_VIS:  
{"stackId":6,"text":"player rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:44:58 $SHOW_DICE_ROLL:  
{"stackId":6} 

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":6,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}} 

 Player 2 00:45:01 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 00:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":46,"_text":"Response Adding AttackRoll 6"},"childOfId":45} 

 Player 2 00:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":47,"_text":"Wait For Response From Player 2 "},"childOfId":45} 

 Player 2 00:45:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:45:01 $ACTION_MASSAGE_REMOVE:  
{"id":47} 

 Player 2 00:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":48,"_text":"Wait For Response From Player 1 "},"childOfId":45} 

 Player 2 00:45:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:45:01 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:01 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:45:01 $ACTION_MASSAGE_REMOVE:  
{"id":48} 

 Player 2 00:45:01 $ACTION_MASSAGE_REMOVE:  
{"id":46} 

 Player 2 00:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":49,"_text":"Resolve AttackRoll 6 "}} 

 Player 2 00:45:01 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":50,"_text":"Added 0 to original roll"}} 

 Player 2 00:45:01 $NEXT_STACK_ID:  

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":245,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":6,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}} 

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":245,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $ADD_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":6,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}} 

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:01 $REPLACE_STACK:  
{"currentStack":[{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":245,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3},{"entityId":6,"creatorCardId":282,"numberRolled":6,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}]} 

 Player 2 00:45:02 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_ROLL_DICE","args":[{"type":2,"number":6},{"type":2,"number":2},{"type":2,"number":5}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":7,"originStackId":6},"isAfterActivation":true,"index":7} 

 Player 2 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 rolled 6 vs Fat Bat<Monster>"} 

 Player 2 00:45:02 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":6,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}} 

 Player 2 00:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 2 00:45:02 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":6,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}} 

 Player 2 00:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":51,"_text":"Remove After Resolve AttackRoll 6  "}} 

 Player 2 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 2 00:45:02 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":6,"creatorCardId":282,"numberRolled":6,"rollingPlayerCardId":282,"stackEffectType":2,"attackedMonsterCardId":245}} 

 Player 2 00:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":52,"_text":"Response Remove After Resolve AttackRoll 6"},"childOfId":51} 

 Player 2 00:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":53,"_text":"Wait For Response From Player 2 "},"childOfId":51} 

 Player 2 00:45:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:45:02 $ACTION_MASSAGE_REMOVE:  
{"id":53} 

 Player 2 00:45:02 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":54,"_text":"Wait For Response From Player 1 "},"childOfId":51} 

 Player 2 00:45:02 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:45:02 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:02 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat \n2:Player 2 is rolling against Fat Bat<Monster>"} 

 Player 1 00:45:02 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":54} 

 Player 2 00:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":52} 

 Player 2 00:45:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":55,"_text":"Resolve CombatDamage 7 "}} 

 Player 2 00:45:03 $UPDATE_STACK_VIS:  
{"stackId":7,"text":"Azazel will deal 1 combat damage to Fat Bat"} 

 Player 2 00:45:03 $MONSTER_GET_DAMAGED:  
{"cardId":245,"hpLeft":2,"damageDealerId":282} 

 Player 2 00:45:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"MONSTER_GET_HIT","args":[{"type":2,"number":1},{"type":0,"number":282}],"result":null,"preventMethod":false,"methodScopeId":245,"scopeIsPlayer":false,"index":8,"originStackId":-1},"isAfterActivation":true,"index":8} 

 Player 2 00:45:03 $UPDATE_PASSIVE_DATA:  
{"passiveData":{"passiveEvent":"PLAYER_COMBAT_DAMAGE_GIVEN","args":[{"type":2,"number":1},{"type":2,"number":6},{"type":0,"number":282},{"type":0,"number":245}],"result":null,"preventMethod":false,"methodScopeId":282,"scopeIsPlayer":true,"index":9,"originStackId":7},"isAfterActivation":true,"index":9} 

 Player 2 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 2 00:45:03 $UPDATE_STACK_EFFECT:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":245,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:45:03 $REMOVE_SE_VIS_PREV:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":245,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:45:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":56,"_text":"Remove After Resolve CombatDamage 7  "}} 

 Player 2 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:45:03 $REMOVE_FROM_STACK:  
{"stackEffect":{"entityId":7,"creatorCardId":282,"entityToDoDamageCardId":282,"entityToTakeDamageCardId":245,"isMonsterDoDamage":false,"isMonsterTakeDamage":true,"isPlayerDoDamage":false,"stackEffectType":3}} 

 Player 2 00:45:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":57,"_text":"Response Remove After Resolve CombatDamage 7"},"childOfId":56} 

 Player 2 00:45:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":58,"_text":"Wait For Response From Player 1 "},"childOfId":56} 

 Player 2 00:45:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":1} 

 Player 2 00:45:03 $GET_REACTION:  
{"playerId":1,"activePlayerId":2} 

 Player 1 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:03 $UPDATE_STACK_LABLE:  
{"stackText":" \n1:Azazel combat damage to Fat Bat"} 

 Player 1 00:45:03 $RESPOND_TO:  
{"playerId":2,"stackEffectResponse":false} 

 Player 2 00:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":58} 

 Player 2 00:45:03 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":59,"_text":"Wait For Response From Player 2 "},"childOfId":56} 

 Player 2 00:45:03 $GIVE_PLAYER_PRIORITY:  
{"playerId":2} 

 Player 2 00:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":59} 

 Player 2 00:45:03 $ACTION_MASSAGE_REMOVE:  
{"id":57} 

 Player 2 00:45:04 $ACTION_MASSAGE_ADD:  
{"massage":{"_id":60,"_text":"Stack Was Emptied "}} 

 Player 2 00:45:04 $UPDATE_STACK_LABLE:  
{"stackText":"Empty Stack"} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":0} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":1} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":2} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":3} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":4} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":5} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":9} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":10} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":14} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":15} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":19} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":20} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":24} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":25} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":29} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":30} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":34} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":35} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":39} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":40} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":44} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":45} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":49} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":55} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":50} 

 Player 2 00:45:04 $ACTION_MASSAGE_REMOVE:  
{"id":51} 

 Player 2 00:45:05 $ACTION_MASSAGE_REMOVE:  
{"id":60} 

 Player 2 00:45:06 $ACTION_MASSAGE_REMOVE:  
{"id":56} 

 Player 2 00:45:41 $MATCH: 